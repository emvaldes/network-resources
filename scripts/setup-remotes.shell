#!/usr/bin/env bash

# File: setup-remotes.shell
# Purpose: Configure Git remotes for pull-only and push-only workflows

set -euo pipefail;

PULL_ONLY_REPO="";
PUSH_ONLY_REPO="";

# Parse arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    --pull-only)
      PULL_ONLY_REPO="$2"; shift 2;;
    --push-only)
      PUSH_ONLY_REPO="$2"; shift 2;;
    --help|-h)
      echo "Usage: $0 [--pull-only <URL>] --push-only <URL>"; exit 0;;
    *)
      echo "Unknown argument: $1" >&2; exit 1;;
  esac;
done;

# Validate required push-only URL
if [[ -z "${PUSH_ONLY_REPO}" ]]; then
  echo "Error: --push-only <URL> is required." >&2;
  exit 1;
fi;

# Ensure inside a Git repository
if ! git rev-parse --is-inside-work-tree &>/dev/null; then
  echo "Error: Not inside a Git repository." >&2;
  exit 2;
fi;

# Fallback to existing pull-only remote if not provided
if [[ -z "${PULL_ONLY_REPO}" ]]; then
  if git remote get-url pull-only-remote &>/dev/null; then
    PULL_ONLY_REPO="$( git remote get-url pull-only-remote )";
    echo "Info: Using existing pull-only-remote: ${PULL_ONLY_REPO}";
  else
    echo "Error: No --pull-only URL provided and no existing pull-only-remote found." >&2;
    exit 3;
  fi;
fi;

# Configure pull-only remote
git remote remove pull-only-remote 2>/dev/null || true;
git remote add pull-only-remote "${PULL_ONLY_REPO}";
git remote set-url --push pull-only-remote DISABLE;

# Configure push-only remote
git remote remove push-only-remote 2>/dev/null || true;
git remote add push-only-remote DISABLE;
git remote set-url --push push-only-remote "${PUSH_ONLY_REPO}";

# Show configured remotes
echo "Remote configuration completed:";
git remote -v;
