#!/usr/bin/env bash

# File: setup-remotes.shell
# Purpose: Configure Git remotes with logical pull/push roles as 'public' (pull-only) and 'private' (push-only)

set -euo pipefail;

# Initialize
PULL_ONLY_REPO="";
PUSH_ONLY_REPO="";

# Parse named arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    --pull-only)
      PULL_ONLY_REPO="$2"; shift 2;;
    --push-only)
      PUSH_ONLY_REPO="$2"; shift 2;;
    *)
      echo "Unknown parameter: $1" >&2; exit 1;;
  esac
done

# Ensure in a Git repo
if ! git rev-parse --is-inside-work-tree &>/dev/null; then
  echo "Error: Not inside a Git repository." >&2; exit 2;
fi

# Set or fallback to existing 'origin' as pull-only
if [[ -z "${PULL_ONLY_REPO}" ]]; then
  if git remote get-url public &>/dev/null; then
    : # already exists
  elif git remote get-url origin &>/dev/null; then
    git remote rename origin public
  else
    echo "Error: No --pull-only URL provided and no existing remote to rename." >&2; exit 3;
  fi
else
  git remote remove public 2>/dev/null || true
  git remote add public "${PULL_ONLY_REPO}"
fi

# Disable pushing to pull-only remote
git remote set-url --push public DISABLE

# Configure push-only remote if given
if [[ -n "${PUSH_ONLY_REPO}" ]]; then
  git remote remove private 2>/dev/null || true
  git remote add private DISABLE
  git remote set-url --push private "${PUSH_ONLY_REPO}"
fi

# Done
echo "Remotes successfully configured:"
git remote -v
