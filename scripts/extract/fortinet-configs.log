$ bash -x scripts/network-configs.shell --ip-addr="192.168.1.10,203.0.113.25" \
                                        --config=./configs/fortinet/fg-lab-test-fw.cfg \
                                        --output=./fg-lab-test-fw.cfg --verbose ;

  + set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HlEd7iGMqj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HlEd7iGMqj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias detect-vendor=detect_vendor
+ alias parse-cisco=main
+ [[ -z '' ]]
+ export script_name=scripts/network-configs.shell
+ script_name=scripts/network-configs.shell
+ [[ 4 -ge 1 ]]
+ [[ --ip-addr=192.168.1.10,203.0.113.25 =~ ^-*(h|help)$ ]]
+ main --ip-addr=192.168.1.10,203.0.113.25 --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./fg-lab-test-fw.cfg --verbose
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=192.168.1.10,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ export search_pattern=192.168.1.10,203.0.113.25
+ search_pattern=192.168.1.10,203.0.113.25
+ [[ ip-addr =~ ^(config|c)$ ]]
+ [[ ip-addr =~ ^(output|o)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=./configs/fortinet/fg-lab-test-fw.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(ip-addr|i)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ export source_config=./configs/fortinet/fg-lab-test-fw.cfg
+ source_config=./configs/fortinet/fg-lab-test-fw.cfg
+ [[ config =~ ^(output|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --output=./fg-lab-test-fw.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ output =~ ^(ip-addr|i)$ ]]
+ [[ output =~ ^(config|c)$ ]]
+ [[ output =~ ^(output|o)$ ]]
+ export output_config=./fg-lab-test-fw.cfg
+ output_config=./fg-lab-test-fw.cfg
+ [[ output == \h\e\l\p ]]
+ [[ output == \d\e\b\u\g ]]
+ [[ output == \d\r\y\-\r\u\n ]]
+ [[ output == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS='
'
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ [[ -z 192.168.1.10,203.0.113.25 ]]
+ [[ -z ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ [[ ! -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ configs_listing=("${source_config}")
+ for source_config in "${configs_listing[@]}"
+ [[ ! -f ./configs/fortinet/fg-lab-test-fw.cfg ]]
+ set +e
+ detect_vendor ./configs/fortinet/fg-lab-test-fw.cfg
+ local config_file=./configs/fortinet/fg-lab-test-fw.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' ./configs/fortinet/fg-lab-test-fw.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ -n ./fg-lab-test-fw.cfg ]]
++ dirname ./fg-lab-test-fw.cfg
+ local output_dir=.
+ [[ ! -d . ]]
+ execute=('./scripts/extract-configs.shell' '--ip-addr=192.168.1.10,203.0.113.25' '--config=./configs/fortinet/fg-lab-test-fw.cfg' '--output=./fg-lab-test-fw.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ip-addr=192.168.1.10,203.0.113.25 --config=./configs/fortinet/fg-lab-test-fw.cfg --output=./fg-lab-test-fw.cfg --verbose
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n ./fg-lab-test-fw.cfg
     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3
     4	config firewall address
     5	 edit "Panther-Vault"
     6	  set subnet 192.168.1.10 255.255.255.255
     7	  set comment "Wakandan data store"
     8	 next
     9	 edit "Public-Test"
    10	  set subnet 203.0.113.25 255.255.255.255
    11	  set comment "Public NAT exposure for Red Skull trap"
    12	 next
    13	end+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ls -al ./fg-lab-test-fw.cfg
-rw-r--r--@ 1 emvaldes  staff  307 May 23 22:41 ./fg-lab-test-fw.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HlEd7iGMqj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HlEd7iGMqj
