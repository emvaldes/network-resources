$ rm -rf ./reports ./targets ./.cache ./.local ;
$ bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs ;
$ cat -n ./.local/jobs/10.0.0.1.job ;
# cat -n ./reports/json/10.0.0.1.json ;

Tue May 13 13:20:30 MST 2025

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RIAXTORUE7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RIAXTORUE7
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzE2NzYzMDE4OTA1MDAwMAo
++ divisor=MTc0NzE2NzYzMDE4OTA1MDAwMAo
++ print 'DEBUG: divisor = '\''MTc0NzE2NzYzMDE4OTA1MDAwMAo'\'''
++ [[ -n DEBUG: divisor = 'MTc0NzE2NzYzMDE4OTA1MDAwMAo' ]]
++ echo -en 'DEBUG: divisor = '\''MTc0NzE2NzYzMDE4OTA1MDAwMAo'\'''
DEBUG: divisor = 'MTc0NzE2NzYzMDE4OTA1MDAwMAo'+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ filtered_target_listing=()
+ declare -a filtered_target_listing
+ [[ 4 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ [[ -z '' ]]
+ delaying_factor=0.05
+ [[ -z '' ]]
+ listing_filename=ips.list
+ [[ -z '' ]]
+ parallel_threads=100
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-13 13:20:30'
+ SECONDS=0
+ [[ -z true ]]
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ local configs_list_cache=.cache/configs.list
+ mkdir -p .cache
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
+ sort
+ [[ true == true ]]
+ print 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ echo -en 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ :
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ ! -f ips.list ]]
+ mapfile -t target_listing
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ [[ 15 -eq 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'IPS/CIDR Blocks: '
+ [[ -n IPS/CIDR Blocks:  ]]
+ echo -en 'IPS/CIDR Blocks: '
IPS/CIDR Blocks: + newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ echo -en '  - 10.0.0.1'
  - 10.0.0.1+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ echo -en '  - 10.0.1.2'
  - 10.0.1.2+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
  - 10.0.2.3+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
  - 10.10.10.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
  - 172.16.0.5+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
  - 172.16.1.6+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
  - 172.18.1.20+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ echo -en '  - 172.31.255.254'
  - 172.31.255.254+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
  - 192.0.2.50+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ echo -en '  - 192.168.1.10'
  - 192.168.1.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
  - 192.168.1.11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
  - 192.168.2.12+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
  - 192.168.100.100+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
  - 198.51.100.75+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ echo -en '  - 203.0.113.25'
  - 203.0.113.25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ mkdir -p targets
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'Mapping IPs to config files (pre-scan phase)...'
+ [[ -n Mapping IPs to config files (pre-scan phase)... ]]
+ echo -en 'Mapping IPs to config files (pre-scan phase)...'
Mapping IPs to config files (pre-scan phase)...+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ matching_configs
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=81497
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 81497)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 81497) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 81497)'
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ local target_file=targets/10.0.0.1.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=81503
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 81503)'
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 81503) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 81503)'
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      45'
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ ip_cleaned=10.0.2.3
+ target_file=targets/10.0.2.3.json
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=81513
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 81513)'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 81513) ]]
++ wc -l
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 81513)'
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json
++ tr -d ' '
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ match_count=2
+ site=cisco
+ config_lines='      45'
+ device=fw1.cfg
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg
++ print '[]'
++ true
++ [[ -n [] ]]
++ echo -en '[]'
++ wc -l
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 2 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ tr -d ' '
+ ip_cleaned=10.10.10.10
+ target_file=targets/10.10.10.10.json
+ job_pid=81530
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 81530)'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json
+ local ip_addr=10.10.10.10
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 81530) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 81530)'
+ local target_file=targets/10.10.10.10.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ wc -l
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
+ job_pid=81541
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 81541)'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 81541) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 81541)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ config_lines='      10'
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch.conf
++ wc -l
++ wc -l
++ tr -d ' '
+ ip_cleaned=172.16.1.6
++ true
+ target_file=targets/172.16.1.6.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=81554
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 81554)'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 81554) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 81554)'
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ config_lines='      10'
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=misc
+ device=switch.conf
++ print 172.18.1.20
++ tr -d '\r'
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch.conf
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ tr -d ' '
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
+ match_count=1
+ site=misc
+ device=switch.conf
+ job_pid=81567
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 81567)'
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json
+ local ip_addr=172.18.1.20
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 81567) ]]
+ local target_file=targets/172.18.1.20.json
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 81567)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ jq '{configs: .}'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
+ job_pid=81579
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 81579)'
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json
+ local ip_addr=172.31.255.254
+ local target_file=targets/172.31.255.254.json
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 81579) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 81579)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print 192.0.2.50
++ tr -d '\r'
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 2
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
+ local matched_files=configs/misc/switch.conf
+ [[ -n configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
+ job_pid=81589
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 81589)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 81589) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 81589)'
+ newline
+ local count=1
+ (( i = 0 ))
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=192.0.2.50
+ for ip_addr in "${target_listing[@]}"
+ local target_file=targets/192.0.2.50.json
++ wc -l
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ config_lines='      10'
+ return 0
++ true
+ ip_cleaned=192.168.1.10
+ target_file=targets/192.168.1.10.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ grep -oE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/misc/switch.conf
+ job_pid=81600
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
++ wc -l
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 81600)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 81600) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 81600)'
++ tr -d ' '
+ newline
+ local count=1
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ match_count=1
+ site=misc
+ device=switch.conf
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ return 0
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ job_pid=81611
+ job_pids+=("${job_pid}")
+ config_file=cisco/fw1.cfg
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 81611)'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json
+ local ip_addr=192.168.1.11
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 81611) ]]
+ local target_file=targets/192.168.1.11.json
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 81611)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ wc -l
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ config_lines='      45'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ ip_cleaned=192.168.2.12
+ target_file=targets/192.168.2.12.json
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
+ job_pid=81623
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
++ tr -d ' '
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 81623)'
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 81623) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 81623)'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ newline
+ local count=1
+ (( i = 0 ))
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ for ip_addr in "${target_listing[@]}"
++ jq '{configs: .}'
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=192.168.100.100
+ target_file=targets/192.168.100.100.json
+ job_pid=81635
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 81635)'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 81635) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 81635)'
+ jq -r
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ job_pid=81645
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 81645)'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 81645) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 81645)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ return 0
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=81651
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 81651)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 81651) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 81651)'
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  15 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 81497
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 81497)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 81497) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 81497)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81503
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 81503)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 81503) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 81503)'
+ newline
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81513
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 81513)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 81513) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 81513)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81530
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 81530)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 81530) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 81530)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81541
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 81541)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 81541) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 81541)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81554
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 81554)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 81554) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 81554)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81567
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 81567)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 81567) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 81567)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81579
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 81579)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 81579) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 81579)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81589
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 81589)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 81589) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 81589)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81600
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 81611
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 81611)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 81611) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 81611)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81623
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 81623)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 81623) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 81623)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81635
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 81635)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 81635) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 81635)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81645
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 81645)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 81645) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 81645)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81651
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ IFS=
+ read -r config_file
+ sleep 0.5
+ config_file=cisco/fw1.cfg
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ return 0
++ wc -l
+ config_lines='      45'
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ return 0
+ ((  2 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 81600
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 81600)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 81600) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 81600)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81651
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 81651)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 81651) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 81651)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs mapped:    5'
+ [[ -n Total IPs mapped:    5 ]]
+ echo -en 'Total IPs mapped:    5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:        10'
+ [[ -n Unmapped IPs:        10 ]]
+ echo -en 'Unmapped IPs:        10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:'
+ [[ -n Unmapped IPs: ]]
+ echo -en 'Unmapped IPs:'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=81781
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 81781)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 81781) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 81781)'
+ newline
+ local count=1
+ (( i = 0 ))
+ parse_configs 10.0.0.1 1
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=2
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=81784
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 81784)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 81784) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 81784)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ parse_configs 10.0.1.2 2
+ ip_addr=172.31.255.254
+ local ip_addr=10.0.1.2
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ printf %01d 3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=81788
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 81788)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 81788) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 81788)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 172.31.255.254 3
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ local ip_addr=172.31.255.254
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ printf %01d 4
++ echo -en cfg,conf,cnf
+ padded_index=4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=81793
+ job_pids+=("${job_pid}")
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_ip_map["$job_pid"]=192.168.1.10
+ parse_configs 192.168.1.10 4
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 81793)'
+ local ip_addr=192.168.1.10
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 81793) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 81793)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=5
+ logfile=.local/jobs/172.31.255.254.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=81799
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 81799)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 81799) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 81799)'
+ newline
+ local count=1
+ parse_configs 203.0.113.25 5
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 81781
+ local ip_addr=203.0.113.25
+ valid_job_pids+=("$pid")
+ local padded_index=5
+ for pid in "${job_pids[@]}"
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ kill -0 81784
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 81788
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 81793
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 81799
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.31.255.254'
+ [[ -n \n[DONE] IP: 172.31.255.254 ]]
+ echo -en '\n[DONE] IP: 172.31.255.254'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 81781
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 81781)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 81781) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 81781)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81784
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 81784)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 81784) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 81784)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81788
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 81788)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 81788) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 81788)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81793
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 81793)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 81793) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 81793)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 81799
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 81799)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 81799) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 81799)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ local json_dir=reports/json
+ local master_json=reports/reports.json
+ expected_reports=5
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=5
+ timeout=5
+ elapsed=0
+ ((  actual_reports < expected_reports && elapsed < timeout * 10  ))
+ ((  actual_reports < expected_reports  ))
+ [[ -d reports/json ]]
+ mapfile -t json_files
++ find reports/json -type f -name '*.json'
++ sort
+ ((  5 > 0  ))
+ jq -s . reports/json/10.0.0.1.json reports/json/10.0.1.2.json reports/json/172.31.255.254.json reports/json/192.168.1.10.json reports/json/203.0.113.25.json
+ generate_csvoutput
+ local input_json=reports/reports.json
+ local output_csv=reports/reports.csv
+ [[ ! -f reports/reports.json ]]
+ message target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ local message=target,site,device,object,entry,description,group
+ print target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ echo -en target,site,device,object,entry,description,group
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ jq -r '
        .[] as $entry
        | $entry.configs[]
        | .config as $cfg
        | .objects[]
        | [
            $entry.target,
            $cfg.site,
            $cfg.device,
            (.object // "none"),
            (.entries[0] // "none"),  # assuming you want the first entry
            (.description // "none"),
            (.group // "none")
          ]
        | @csv' reports/reports.json
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ print 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ echo -en 'CSV Report Summary (tabulated):'
CSV Report Summary (tabulated):+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ column -t -s, reports/reports.csv
+ less -SFX
target            site     device         object          entry                                                       descr>
"10.0.0.1"        "cisco"  "fw1.cfg"      "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.0.1"        "cisco"  "fw1.cfg"      "access-list"   "access-list OUTSIDE extended permit ip host 10.0.0.1 any"  "fals>
"10.0.0.1"        "misc"   "switch.conf"  "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.1.2"        "cisco"  "fw1.cfg"      "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.1.2"        "misc"   "switch.conf"  "interface"     "ip address 10.0.1.2 255.255.255.0"                         "fals>
"172.31.255.254"  "misc"   "switch.conf"  "interface"     "ip address 172.31.255.254 255.255.255.0"                   "fals>
"192.168.1.10"    "cisco"  "fw1.cfg"      "object"        "host 192.168.1.10"                                         "fals>
"203.0.113.25"    "cisco"  "fw1.cfg"      "object"        "host 203.0.113.25"                                         "fals>
+ return 0
+ local elapsed=4
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ printf '[INFO] Started at: %s\n' '2025-05-13 13:20:30'
[INFO] Started at: 2025-05-13 13:20:30
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 4
[INFO] Total runtime: 00:00:04
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RIAXTORUE7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RIAXTORUE7

     1	+ set -euo pipefail
     2	+ export LC_ALL=C
     3	+ LC_ALL=C
     4	++ mktemp -d
     5	+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V
     6	+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V
     7	+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
     8	+ source ./scripts/tools-devops.shell
     9	++ [[ -n '' ]]
    10	++ readonly __TOOLS_DEVOPS_SOURCED=1
    11	++ __TOOLS_DEVOPS_SOURCED=1
    12	++ [[ 5 -lt 4 ]]
    13	++ alias log-info=log_info
    14	++ alias log-warn=log_warn
    15	++ alias log-error=log_error
    16	++ alias error-message=error_message
    17	++ alias exit-error=exit_error
    18	++ alias detect-platform=detect_platform
    19	++ alias install-packages=install_packages
    20	++ alias install-missing=install_missing
    21	++ alias display-help=display_help_generic
    22	++ alias relative-configpath=relative_configpath
    23	++ alias validate-address=validate_address
    24	++ export LC_ALL=C
    25	++ LC_ALL=C
    26	++ export 'nl=\n'
    27	++ nl='\n'
    28	++ local_state_dir=.local
    29	++ mkdir -p .local/errors .local/jobs .local/stats
    30	++ export stats_folder=.local/stats/
    31	++ stats_folder=.local/stats/
    32	++ export reports_logsfile=.local/stats//reports.jobs
    33	++ reports_logsfile=.local/stats//reports.jobs
    34	++ export started_logsfile=.local/stats//started.jobs
    35	++ started_logsfile=.local/stats//started.jobs
    36	++ export success_logsfile=.local/stats//success.jobs
    37	++ success_logsfile=.local/stats//success.jobs
    38	++ export targets_logsfile=.local/stats//targets.jobs
    39	++ targets_logsfile=.local/stats//targets.jobs
    40	+++ date +%s%N
    41	+++ base64
    42	+++ tr -dc a-zA-Z0-9
    43	++ export divisor=MTc0NzE2NzYzMTUwNDczNzAwMAo
    44	++ divisor=MTc0NzE2NzYzMTUwNDczNzAwMAo
    45	++ print 'DEBUG: divisor = '\''MTc0NzE2NzYzMTUwNDczNzAwMAo'\'''
    46	++ [[ -n DEBUG: divisor = 'MTc0NzE2NzYzMTUwNDczNzAwMAo' ]]
    47	++ echo -en 'DEBUG: divisor = '\''MTc0NzE2NzYzMTUwNDczNzAwMAo'\'''
    48	DEBUG: divisor = 'MTc0NzE2NzYzMTUwNDczNzAwMAo'+ source ./scripts/tools-extraction.shell
    49	++ [[ -n '' ]]
    50	++ readonly __TOOLS_EXTRACTION_SOURCED=1
    51	++ __TOOLS_EXTRACTION_SOURCED=1
    52	++ alias extract-configs=extract_configs
    53	++ alias process-configs=process_configs
    54	+ alias parse-configs=main
    55	+ matched_blocks_byfile=()
    56	+ declare -gA matched_blocks_byfile
    57	+ export script_name=./scripts/parse-configs.shell
    58	+ script_name=./scripts/parse-configs.shell
    59	+ [[ 9 -ge 1 ]]
    60	+ [[ --configs=configs =~ ^-*(h|help)$ ]]
    61	+ main --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
    62	+ file_extensions=()
    63	+ declare -a file_extensions
    64	+ oIFS='
    65	'
    66	+ for xitem in "${@}"
    67	+ IFS==
    68	+ read -r key value
    69	++ echo -e --configs=configs
    70	++ sed -e '1s|^\(-\)\{1,\}||'
    71	+ [[ configs =~ ^(classify|g)$ ]]
    72	+ [[ configs =~ ^(file-ext|x)$ ]]
    73	+ [[ configs =~ ^(configs|c)$ ]]
    74	+ export configs_dirpath=configs
    75	+ configs_dirpath=configs
    76	+ [[ configs =~ ^(index|n)$ ]]
    77	+ [[ configs =~ ^(ip-addr|i)$ ]]
    78	+ [[ configs =~ ^(logs|o)$ ]]
    79	+ [[ configs =~ ^(matrix|m)$ ]]
    80	+ [[ configs =~ ^(reports|r)$ ]]
    81	+ [[ configs =~ ^(validate|v)$ ]]
    82	+ [[ configs == \h\e\l\p ]]
    83	+ [[ configs == \d\e\b\u\g ]]
    84	+ [[ configs == \d\r\y\-\r\u\n ]]
    85	+ [[ configs == \v\e\r\b\o\s\e ]]
    86	+ for xitem in "${@}"
    87	+ IFS==
    88	+ read -r key value
    89	++ echo -e --ip-addr=10.0.0.1
    90	++ sed -e '1s|^\(-\)\{1,\}||'
    91	+ [[ ip-addr =~ ^(classify|g)$ ]]
    92	+ [[ ip-addr =~ ^(file-ext|x)$ ]]
    93	+ [[ ip-addr =~ ^(configs|c)$ ]]
    94	+ [[ ip-addr =~ ^(index|n)$ ]]
    95	+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
    96	+ local target_address=10.0.0.1
    97	+ [[ ip-addr =~ ^(logs|o)$ ]]
    98	+ [[ ip-addr =~ ^(matrix|m)$ ]]
    99	+ [[ ip-addr =~ ^(reports|r)$ ]]
   100	+ [[ ip-addr =~ ^(validate|v)$ ]]
   101	+ [[ ip-addr == \h\e\l\p ]]
   102	+ [[ ip-addr == \d\e\b\u\g ]]
   103	+ [[ ip-addr == \d\r\y\-\r\u\n ]]
   104	+ [[ ip-addr == \v\e\r\b\o\s\e ]]
   105	+ for xitem in "${@}"
   106	+ IFS==
   107	+ read -r key value
   108	++ echo -e --index=1
   109	++ sed -e '1s|^\(-\)\{1,\}||'
   110	+ [[ index =~ ^(classify|g)$ ]]
   111	+ [[ index =~ ^(file-ext|x)$ ]]
   112	+ [[ index =~ ^(configs|c)$ ]]
   113	+ [[ index =~ ^(index|n)$ ]]
   114	+ local target_index=1
   115	+ [[ index =~ ^(ip-addr|i)$ ]]
   116	+ [[ index =~ ^(logs|o)$ ]]
   117	+ [[ index =~ ^(matrix|m)$ ]]
   118	+ [[ index =~ ^(reports|r)$ ]]
   119	+ [[ index =~ ^(validate|v)$ ]]
   120	+ [[ index == \h\e\l\p ]]
   121	+ [[ index == \d\e\b\u\g ]]
   122	+ [[ index == \d\r\y\-\r\u\n ]]
   123	+ [[ index == \v\e\r\b\o\s\e ]]
   124	+ for xitem in "${@}"
   125	+ IFS==
   126	+ read -r key value
   127	++ echo -e --matrix=matrix.json
   128	++ sed -e '1s|^\(-\)\{1,\}||'
   129	+ [[ matrix =~ ^(classify|g)$ ]]
   130	+ [[ matrix =~ ^(file-ext|x)$ ]]
   131	+ [[ matrix =~ ^(configs|c)$ ]]
   132	+ [[ matrix =~ ^(index|n)$ ]]
   133	+ [[ matrix =~ ^(ip-addr|i)$ ]]
   134	+ [[ matrix =~ ^(logs|o)$ ]]
   135	+ [[ matrix =~ ^(matrix|m)$ ]]
   136	+ local matrix_filename=matrix.json
   137	+ [[ matrix =~ ^(reports|r)$ ]]
   138	+ [[ matrix =~ ^(validate|v)$ ]]
   139	+ [[ matrix == \h\e\l\p ]]
   140	+ [[ matrix == \d\e\b\u\g ]]
   141	+ [[ matrix == \d\r\y\-\r\u\n ]]
   142	+ [[ matrix == \v\e\r\b\o\s\e ]]
   143	+ for xitem in "${@}"
   144	+ IFS==
   145	+ read -r key value
   146	++ echo -e --reports=reports
   147	++ sed -e '1s|^\(-\)\{1,\}||'
   148	+ [[ reports =~ ^(classify|g)$ ]]
   149	+ [[ reports =~ ^(file-ext|x)$ ]]
   150	+ [[ reports =~ ^(configs|c)$ ]]
   151	+ [[ reports =~ ^(index|n)$ ]]
   152	+ [[ reports =~ ^(ip-addr|i)$ ]]
   153	+ [[ reports =~ ^(logs|o)$ ]]
   154	+ [[ reports =~ ^(matrix|m)$ ]]
   155	+ [[ reports =~ ^(reports|r)$ ]]
   156	+ local reports_folder=reports
   157	+ [[ reports =~ ^(validate|v)$ ]]
   158	+ [[ reports == \h\e\l\p ]]
   159	+ [[ reports == \d\e\b\u\g ]]
   160	+ [[ reports == \d\r\y\-\r\u\n ]]
   161	+ [[ reports == \v\e\r\b\o\s\e ]]
   162	+ for xitem in "${@}"
   163	+ IFS==
   164	+ read -r key value
   165	++ echo -e --file-ext=cfg,conf,cnf
   166	++ sed -e '1s|^\(-\)\{1,\}||'
   167	+ [[ file-ext =~ ^(classify|g)$ ]]
   168	+ [[ file-ext =~ ^(file-ext|x)$ ]]
   169	+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
   170	++ print cfg,conf,cnf
   171	++ [[ -n cfg,conf,cnf ]]
   172	++ echo -en cfg,conf,cnf
   173	++ tr ':,;\n ' '\n'
   174	+ [[ file-ext =~ ^(configs|c)$ ]]
   175	+ [[ file-ext =~ ^(index|n)$ ]]
   176	+ [[ file-ext =~ ^(ip-addr|i)$ ]]
   177	+ [[ file-ext =~ ^(logs|o)$ ]]
   178	+ [[ file-ext =~ ^(matrix|m)$ ]]
   179	+ [[ file-ext =~ ^(reports|r)$ ]]
   180	+ [[ file-ext =~ ^(validate|v)$ ]]
   181	+ [[ file-ext == \h\e\l\p ]]
   182	+ [[ file-ext == \d\e\b\u\g ]]
   183	+ [[ file-ext == \d\r\y\-\r\u\n ]]
   184	+ [[ file-ext == \v\e\r\b\o\s\e ]]
   185	+ for xitem in "${@}"
   186	+ IFS==
   187	+ read -r key value
   188	++ echo -e --classify
   189	++ sed -e '1s|^\(-\)\{1,\}||'
   190	+ [[ classify =~ ^(classify|g)$ ]]
   191	+ export classify_targets=true
   192	+ classify_targets=true
   193	+ [[ classify =~ ^(file-ext|x)$ ]]
   194	+ [[ classify =~ ^(configs|c)$ ]]
   195	+ [[ classify =~ ^(index|n)$ ]]
   196	+ [[ classify =~ ^(ip-addr|i)$ ]]
   197	+ [[ classify =~ ^(logs|o)$ ]]
   198	+ [[ classify =~ ^(matrix|m)$ ]]
   199	+ [[ classify =~ ^(reports|r)$ ]]
   200	+ [[ classify =~ ^(validate|v)$ ]]
   201	+ [[ classify == \h\e\l\p ]]
   202	+ [[ classify == \d\e\b\u\g ]]
   203	+ [[ classify == \d\r\y\-\r\u\n ]]
   204	+ [[ classify == \v\e\r\b\o\s\e ]]
   205	+ for xitem in "${@}"
   206	+ IFS==
   207	+ read -r key value
   208	++ echo -e --verbose
   209	++ sed -e '1s|^\(-\)\{1,\}||'
   210	+ [[ verbose =~ ^(classify|g)$ ]]
   211	+ [[ verbose =~ ^(file-ext|x)$ ]]
   212	+ [[ verbose =~ ^(configs|c)$ ]]
   213	+ [[ verbose =~ ^(index|n)$ ]]
   214	+ [[ verbose =~ ^(ip-addr|i)$ ]]
   215	+ [[ verbose =~ ^(logs|o)$ ]]
   216	+ [[ verbose =~ ^(matrix|m)$ ]]
   217	+ [[ verbose =~ ^(reports|r)$ ]]
   218	+ [[ verbose =~ ^(validate|v)$ ]]
   219	+ [[ verbose == \h\e\l\p ]]
   220	+ [[ verbose == \d\e\b\u\g ]]
   221	+ [[ verbose == \d\r\y\-\r\u\n ]]
   222	+ [[ verbose == \v\e\r\b\o\s\e ]]
   223	+ export verbose=true
   224	+ verbose=true
   225	+ for xitem in "${@}"
   226	+ IFS==
   227	+ read -r key value
   228	++ echo -e --debug
   229	++ sed -e '1s|^\(-\)\{1,\}||'
   230	+ [[ debug =~ ^(classify|g)$ ]]
   231	+ [[ debug =~ ^(file-ext|x)$ ]]
   232	+ [[ debug =~ ^(configs|c)$ ]]
   233	+ [[ debug =~ ^(index|n)$ ]]
   234	+ [[ debug =~ ^(ip-addr|i)$ ]]
   235	+ [[ debug =~ ^(logs|o)$ ]]
   236	+ [[ debug =~ ^(matrix|m)$ ]]
   237	+ [[ debug =~ ^(reports|r)$ ]]
   238	+ [[ debug =~ ^(validate|v)$ ]]
   239	+ [[ debug == \h\e\l\p ]]
   240	+ [[ debug == \d\e\b\u\g ]]
   241	+ export debug=true
   242	+ debug=true
   243	+ [[ debug == \d\r\y\-\r\u\n ]]
   244	+ [[ debug == \v\e\r\b\o\s\e ]]
   245	+ IFS='
   246	'
   247	+ [[ -z true ]]
   248	+ [[ -z true ]]
   249	+ [[ '' == true ]]
   250	+ [[ -z true ]]
   251	+ [[ -z x ]]
   252	+ [[ 3 -eq 0 ]]
   253	+ export configs_dirpath=configs
   254	+ configs_dirpath=configs
   255	+ source_configs=()
   256	+ declare -ga source_configs
   257	+ target_configlist_json=targets/10.0.0.1.json
   258	+ [[ ! -f targets/10.0.0.1.json ]]
   259	+ mapfile -t source_configs
   260	++ jq -r '.configs[] | "\(.config.site)/\(.config.device)"' targets/10.0.0.1.json
   261	+ for i in "${!source_configs[@]}"
   262	+ [[ cisco/fw1.cfg != \c\o\n\f\i\g\s\/* ]]
   263	+ source_configs[$i]=configs/cisco/fw1.cfg
   264	+ for i in "${!source_configs[@]}"
   265	+ [[ misc/switch.conf != \c\o\n\f\i\g\s\/* ]]
   266	+ source_configs[$i]=configs/misc/switch.conf
   267	+ [[ true == true ]]
   268	+ print 'Config JSON file used: targets/10.0.0.1.json'
   269	+ [[ -n Config JSON file used: targets/10.0.0.1.json ]]
   270	+ echo -en 'Config JSON file used: targets/10.0.0.1.json'
   271	Config JSON file used: targets/10.0.0.1.json+ print 'Extracted config paths from JSON:'
   272	+ [[ -n Extracted config paths from JSON: ]]
   273	+ echo -en 'Extracted config paths from JSON:'
   274	Extracted config paths from JSON:+ for cfg in "${source_configs[@]}"
   275	+ print ' - configs/cisco/fw1.cfg'
   276	+ [[ -n  - configs/cisco/fw1.cfg ]]
   277	+ echo -en ' - configs/cisco/fw1.cfg'
   278	 - configs/cisco/fw1.cfg+ for cfg in "${source_configs[@]}"
   279	+ print ' - configs/misc/switch.conf'
   280	+ [[ -n  - configs/misc/switch.conf ]]
   281	+ echo -en ' - configs/misc/switch.conf'
   282	 - configs/misc/switch.conf+ newline
   283	+ local count=1
   284	+ (( i = 0 ))
   285	+ (( i < count ))
   286	+ echo
   287
   288	+ (( i++ ))
   289	+ (( i < count ))
   290	+ local matrix_filename=matrix.json
   291	+ [[ ! -f matrix.json ]]
   292	+ jq -e 'length > 0' matrix.json
   293	++ cat matrix.json
   294	+ export 'matrix_configs=[
   295	  {
   296	    "match": ["BU1-NETWORK", "SOME-THING"],
   297	    "group": "Identified Matching Entries"
   298	  },
   299	  {
   300	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   301	    "group": "Business-Unit-HQ"
   302	  },
   303	  {
   304	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   305	    "group": "Business-Unit-Remote"
   306	  },
   307	  {
   308	    "match": ["HQ-Server", "Production-Servers"],
   309	    "group": "Business-Unit-Production"
   310	  },
   311	  {
   312	    "match": ["Web-Server", "Data-Backup"],
   313	    "group": "Business-Unit-Backup"
   314	  },
   315	  {
   316	    "match": ["web_pool", "db_pool"],
   317	    "group": "Business-Unit-Apps"
   318	  },
   319	  {
   320	    "match": ["Vlan1", "Vlan2"],
   321	    "group": "Business-Unit-Networks"
   322	  },
   323	  {
   324	    "match": ["External-203-0-113-25"],
   325	    "group": "Business-Unit-External"
   326	  },
   327	  {
   328	    "match": ["Unused-Host"],
   329	    "group": "Business-Unit-Orphan"
   330	  }
   331	]'
   332	+ matrix_configs='[
   333	  {
   334	    "match": ["BU1-NETWORK", "SOME-THING"],
   335	    "group": "Identified Matching Entries"
   336	  },
   337	  {
   338	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   339	    "group": "Business-Unit-HQ"
   340	  },
   341	  {
   342	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   343	    "group": "Business-Unit-Remote"
   344	  },
   345	  {
   346	    "match": ["HQ-Server", "Production-Servers"],
   347	    "group": "Business-Unit-Production"
   348	  },
   349	  {
   350	    "match": ["Web-Server", "Data-Backup"],
   351	    "group": "Business-Unit-Backup"
   352	  },
   353	  {
   354	    "match": ["web_pool", "db_pool"],
   355	    "group": "Business-Unit-Apps"
   356	  },
   357	  {
   358	    "match": ["Vlan1", "Vlan2"],
   359	    "group": "Business-Unit-Networks"
   360	  },
   361	  {
   362	    "match": ["External-203-0-113-25"],
   363	    "group": "Business-Unit-External"
   364	  },
   365	  {
   366	    "match": ["Unused-Host"],
   367	    "group": "Business-Unit-Orphan"
   368	  }
   369	]'
   370	+ export reports_folder=reports
   371	+ reports_folder=reports
   372	+ mkdir -p reports/json reports/objects
   373	+ [[ -z 1 ]]
   374	+ [[ -z false ]]
   375	+ [[ -z 10.0.0.1 ]]
   376	++ print 10.0.0.1
   377	++ [[ -n 10.0.0.1 ]]
   378	++ echo -en 10.0.0.1
   379	++ sed -E 's/[[:space:]]+//g'
   380	++ tr -d '\r'
   381	+ target_address=10.0.0.1
   382	+ [[ false == true ]]
   383	+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
   384	+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
   385	+ for cfg_file in "${source_configs[@]}"
   386	+ extract_configs configs/cisco/fw1.cfg 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
   387	+ local config_file=configs/cisco/fw1.cfg
   388	+ local target_pattern=10.0.0.1
   389	+ local target_listing=targets/10.0.0.1.json
   390	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
   391	+ [[ ! -f configs/cisco/fw1.cfg ]]
   392	+ message '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   393	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   394	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   395	+ print '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   396	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   397	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   398	[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg+ newline
   399	+ local count=1
   400	+ (( i = 0 ))
   401	+ (( i < count ))
   402	+ echo
   403
   404	+ (( i++ ))
   405	+ (( i < count ))
   406	+ [[ ! -s configs/cisco/fw1.cfg ]]
   407	++ stat -c%s configs/cisco/fw1.cfg
   408	stat: illegal option -- c
   409	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
   410	+ message '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   411	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   412	+ local 'message=[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   413	+ print '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   414	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   415	+ echo -en '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   416	[OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes+ newline
   417	+ local count=1
   418	+ (( i = 0 ))
   419	+ (( i < count ))
   420	+ echo
   421
   422	+ (( i++ ))
   423	+ (( i < count ))
   424	+ local 'imported_content=object-group network BU1-NETWORK
   425	 description Corporate HQ Subnets
   426	 network-object host 10.0.0.1
   427	 network-object host 10.0.1.2
   428	 network-object 192.168.1.0 255.255.255.0
   429	!
   430
   431	object-group network BU2-WIRELESS
   432	 description Corporate HQ Subnets
   433	 network-object host 10.0.0.10
   434	 network-object host 10.0.1.200
   435	 network-object 192.168.1.0 255.255.255.0
   436
   437	object-group network BU3-WAN
   438	 description Corporate HQ Subnets
   439	 network-object host 10.0.0.11
   440	 network-object host 10.0.1.112
   441	 network-object 192.168.1.0 255.255.255.0
   442
   443	object-group network BU4-LAN
   444	 description Corporate HQ Subnets
   445	 network-object host 10.0.0.100
   446	 network-object host 10.0.1.12
   447	 network-object 192.168.1.0 255.255.255.0
   448
   449	object network Server-192-168-1-10
   450	 host 192.168.1.10
   451	 description Main Application Server
   452	!
   453	!!!!!
   454
   455	!
   456
   457
   458
   459	object network External-203-0-113-25
   460	 host 203.0.113.25
   461	!
   462
   463
   464	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   465	access-list OUTSIDE extended deny ip any any
   466	!
   467	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   468	!'
   469	+ [[ true == true ]]
   470	+ message 'Imported Content: object-group network BU1-NETWORK
   471	 description Corporate HQ Subnets
   472	 network-object host 10.0.0.1
   473	 network-object host 10.0.1.2
   474	 network-object 192.168.1.0 255.255.255.0
   475	!
   476
   477	object-group network BU2-WIRELESS
   478	 description Corporate HQ Subnets
   479	 network-object host 10.0.0.10
   480	 network-object host 10.0.1.200
   481	 network-object 192.168.1.0 255.255.255.0
   482
   483	object-group network BU3-WAN
   484	 description Corporate HQ Subnets
   485	 network-object host 10.0.0.11
   486	 network-object host 10.0.1.112
   487	 network-object 192.168.1.0 255.255.255.0
   488
   489	object-group network BU4-LAN
   490	 description Corporate HQ Subnets
   491	 network-object host 10.0.0.100
   492	 network-object host 10.0.1.12
   493	 network-object 192.168.1.0 255.255.255.0
   494
   495	object network Server-192-168-1-10
   496	 host 192.168.1.10
   497	 description Main Application Server
   498	!
   499	!!!!!
   500
   501	!
   502
   503
   504
   505	object network External-203-0-113-25
   506	 host 203.0.113.25
   507	!
   508
   509
   510	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   511	access-list OUTSIDE extended deny ip any any
   512	!
   513	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   514	!'
   515	+ [[ -n Imported Content: object-group network BU1-NETWORK
   516	 description Corporate HQ Subnets
   517	 network-object host 10.0.0.1
   518	 network-object host 10.0.1.2
   519	 network-object 192.168.1.0 255.255.255.0
   520	!
   521
   522	object-group network BU2-WIRELESS
   523	 description Corporate HQ Subnets
   524	 network-object host 10.0.0.10
   525	 network-object host 10.0.1.200
   526	 network-object 192.168.1.0 255.255.255.0
   527
   528	object-group network BU3-WAN
   529	 description Corporate HQ Subnets
   530	 network-object host 10.0.0.11
   531	 network-object host 10.0.1.112
   532	 network-object 192.168.1.0 255.255.255.0
   533
   534	object-group network BU4-LAN
   535	 description Corporate HQ Subnets
   536	 network-object host 10.0.0.100
   537	 network-object host 10.0.1.12
   538	 network-object 192.168.1.0 255.255.255.0
   539
   540	object network Server-192-168-1-10
   541	 host 192.168.1.10
   542	 description Main Application Server
   543	!
   544	!!!!!
   545
   546	!
   547
   548
   549
   550	object network External-203-0-113-25
   551	 host 203.0.113.25
   552	!
   553
   554
   555	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   556	access-list OUTSIDE extended deny ip any any
   557	!
   558	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   559	! ]]
   560	+ local 'message=Imported Content: object-group network BU1-NETWORK
   561	 description Corporate HQ Subnets
   562	 network-object host 10.0.0.1
   563	 network-object host 10.0.1.2
   564	 network-object 192.168.1.0 255.255.255.0
   565	!
   566
   567	object-group network BU2-WIRELESS
   568	 description Corporate HQ Subnets
   569	 network-object host 10.0.0.10
   570	 network-object host 10.0.1.200
   571	 network-object 192.168.1.0 255.255.255.0
   572
   573	object-group network BU3-WAN
   574	 description Corporate HQ Subnets
   575	 network-object host 10.0.0.11
   576	 network-object host 10.0.1.112
   577	 network-object 192.168.1.0 255.255.255.0
   578
   579	object-group network BU4-LAN
   580	 description Corporate HQ Subnets
   581	 network-object host 10.0.0.100
   582	 network-object host 10.0.1.12
   583	 network-object 192.168.1.0 255.255.255.0
   584
   585	object network Server-192-168-1-10
   586	 host 192.168.1.10
   587	 description Main Application Server
   588	!
   589	!!!!!
   590
   591	!
   592
   593
   594
   595	object network External-203-0-113-25
   596	 host 203.0.113.25
   597	!
   598
   599
   600	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   601	access-list OUTSIDE extended deny ip any any
   602	!
   603	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   604	!'
   605	+ print 'Imported Content: object-group network BU1-NETWORK
   606	 description Corporate HQ Subnets
   607	 network-object host 10.0.0.1
   608	 network-object host 10.0.1.2
   609	 network-object 192.168.1.0 255.255.255.0
   610	!
   611
   612	object-group network BU2-WIRELESS
   613	 description Corporate HQ Subnets
   614	 network-object host 10.0.0.10
   615	 network-object host 10.0.1.200
   616	 network-object 192.168.1.0 255.255.255.0
   617
   618	object-group network BU3-WAN
   619	 description Corporate HQ Subnets
   620	 network-object host 10.0.0.11
   621	 network-object host 10.0.1.112
   622	 network-object 192.168.1.0 255.255.255.0
   623
   624	object-group network BU4-LAN
   625	 description Corporate HQ Subnets
   626	 network-object host 10.0.0.100
   627	 network-object host 10.0.1.12
   628	 network-object 192.168.1.0 255.255.255.0
   629
   630	object network Server-192-168-1-10
   631	 host 192.168.1.10
   632	 description Main Application Server
   633	!
   634	!!!!!
   635
   636	!
   637
   638
   639
   640	object network External-203-0-113-25
   641	 host 203.0.113.25
   642	!
   643
   644
   645	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   646	access-list OUTSIDE extended deny ip any any
   647	!
   648	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   649	!'
   650	+ [[ -n Imported Content: object-group network BU1-NETWORK
   651	 description Corporate HQ Subnets
   652	 network-object host 10.0.0.1
   653	 network-object host 10.0.1.2
   654	 network-object 192.168.1.0 255.255.255.0
   655	!
   656
   657	object-group network BU2-WIRELESS
   658	 description Corporate HQ Subnets
   659	 network-object host 10.0.0.10
   660	 network-object host 10.0.1.200
   661	 network-object 192.168.1.0 255.255.255.0
   662
   663	object-group network BU3-WAN
   664	 description Corporate HQ Subnets
   665	 network-object host 10.0.0.11
   666	 network-object host 10.0.1.112
   667	 network-object 192.168.1.0 255.255.255.0
   668
   669	object-group network BU4-LAN
   670	 description Corporate HQ Subnets
   671	 network-object host 10.0.0.100
   672	 network-object host 10.0.1.12
   673	 network-object 192.168.1.0 255.255.255.0
   674
   675	object network Server-192-168-1-10
   676	 host 192.168.1.10
   677	 description Main Application Server
   678	!
   679	!!!!!
   680
   681	!
   682
   683
   684
   685	object network External-203-0-113-25
   686	 host 203.0.113.25
   687	!
   688
   689
   690	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   691	access-list OUTSIDE extended deny ip any any
   692	!
   693	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   694	! ]]
   695	+ echo -en 'Imported Content: object-group network BU1-NETWORK
   696	 description Corporate HQ Subnets
   697	 network-object host 10.0.0.1
   698	 network-object host 10.0.1.2
   699	 network-object 192.168.1.0 255.255.255.0
   700	!
   701
   702	object-group network BU2-WIRELESS
   703	 description Corporate HQ Subnets
   704	 network-object host 10.0.0.10
   705	 network-object host 10.0.1.200
   706	 network-object 192.168.1.0 255.255.255.0
   707
   708	object-group network BU3-WAN
   709	 description Corporate HQ Subnets
   710	 network-object host 10.0.0.11
   711	 network-object host 10.0.1.112
   712	 network-object 192.168.1.0 255.255.255.0
   713
   714	object-group network BU4-LAN
   715	 description Corporate HQ Subnets
   716	 network-object host 10.0.0.100
   717	 network-object host 10.0.1.12
   718	 network-object 192.168.1.0 255.255.255.0
   719
   720	object network Server-192-168-1-10
   721	 host 192.168.1.10
   722	 description Main Application Server
   723	!
   724	!!!!!
   725
   726	!
   727
   728
   729
   730	object network External-203-0-113-25
   731	 host 203.0.113.25
   732	!
   733
   734
   735	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   736	access-list OUTSIDE extended deny ip any any
   737	!
   738	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   739	!'
   740	Imported Content: object-group network BU1-NETWORK
   741	 description Corporate HQ Subnets
   742	 network-object host 10.0.0.1
   743	 network-object host 10.0.1.2
   744	 network-object 192.168.1.0 255.255.255.0
   745	!
   746
   747	object-group network BU2-WIRELESS
   748	 description Corporate HQ Subnets
   749	 network-object host 10.0.0.10
   750	 network-object host 10.0.1.200
   751	 network-object 192.168.1.0 255.255.255.0
   752
   753	object-group network BU3-WAN
   754	 description Corporate HQ Subnets
   755	 network-object host 10.0.0.11
   756	 network-object host 10.0.1.112
   757	 network-object 192.168.1.0 255.255.255.0
   758
   759	object-group network BU4-LAN
   760	 description Corporate HQ Subnets
   761	 network-object host 10.0.0.100
   762	 network-object host 10.0.1.12
   763	 network-object 192.168.1.0 255.255.255.0
   764
   765	object network Server-192-168-1-10
   766	 host 192.168.1.10
   767	 description Main Application Server
   768	!
   769	!!!!!
   770
   771	!
   772
   773
   774
   775	object network External-203-0-113-25
   776	 host 203.0.113.25
   777	!
   778
   779
   780	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   781	access-list OUTSIDE extended deny ip any any
   782	!
   783	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   784	!+ newline
   785	+ local count=1
   786	+ (( i = 0 ))
   787	+ (( i < count ))
   788	+ echo
   789
   790	+ (( i++ ))
   791	+ (( i < count ))
   792	++ sed '/^\s*$/d;/^\s*!.*$/d'
   793	+ local 'sanitized_content=object-group network BU1-NETWORK
   794	 description Corporate HQ Subnets
   795	 network-object host 10.0.0.1
   796	 network-object host 10.0.1.2
   797	 network-object 192.168.1.0 255.255.255.0
   798	object-group network BU2-WIRELESS
   799	 description Corporate HQ Subnets
   800	 network-object host 10.0.0.10
   801	 network-object host 10.0.1.200
   802	 network-object 192.168.1.0 255.255.255.0
   803	object-group network BU3-WAN
   804	 description Corporate HQ Subnets
   805	 network-object host 10.0.0.11
   806	 network-object host 10.0.1.112
   807	 network-object 192.168.1.0 255.255.255.0
   808	object-group network BU4-LAN
   809	 description Corporate HQ Subnets
   810	 network-object host 10.0.0.100
   811	 network-object host 10.0.1.12
   812	 network-object 192.168.1.0 255.255.255.0
   813	object network Server-192-168-1-10
   814	 host 192.168.1.10
   815	 description Main Application Server
   816	object network External-203-0-113-25
   817	 host 203.0.113.25
   818	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   819	access-list OUTSIDE extended deny ip any any
   820	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   821	+ [[ true == true ]]
   822	+ message 'Sanitized Content: object-group network BU1-NETWORK
   823	 description Corporate HQ Subnets
   824	 network-object host 10.0.0.1
   825	 network-object host 10.0.1.2
   826	 network-object 192.168.1.0 255.255.255.0
   827	object-group network BU2-WIRELESS
   828	 description Corporate HQ Subnets
   829	 network-object host 10.0.0.10
   830	 network-object host 10.0.1.200
   831	 network-object 192.168.1.0 255.255.255.0
   832	object-group network BU3-WAN
   833	 description Corporate HQ Subnets
   834	 network-object host 10.0.0.11
   835	 network-object host 10.0.1.112
   836	 network-object 192.168.1.0 255.255.255.0
   837	object-group network BU4-LAN
   838	 description Corporate HQ Subnets
   839	 network-object host 10.0.0.100
   840	 network-object host 10.0.1.12
   841	 network-object 192.168.1.0 255.255.255.0
   842	object network Server-192-168-1-10
   843	 host 192.168.1.10
   844	 description Main Application Server
   845	object network External-203-0-113-25
   846	 host 203.0.113.25
   847	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   848	access-list OUTSIDE extended deny ip any any
   849	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   850	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   851	 description Corporate HQ Subnets
   852	 network-object host 10.0.0.1
   853	 network-object host 10.0.1.2
   854	 network-object 192.168.1.0 255.255.255.0
   855	object-group network BU2-WIRELESS
   856	 description Corporate HQ Subnets
   857	 network-object host 10.0.0.10
   858	 network-object host 10.0.1.200
   859	 network-object 192.168.1.0 255.255.255.0
   860	object-group network BU3-WAN
   861	 description Corporate HQ Subnets
   862	 network-object host 10.0.0.11
   863	 network-object host 10.0.1.112
   864	 network-object 192.168.1.0 255.255.255.0
   865	object-group network BU4-LAN
   866	 description Corporate HQ Subnets
   867	 network-object host 10.0.0.100
   868	 network-object host 10.0.1.12
   869	 network-object 192.168.1.0 255.255.255.0
   870	object network Server-192-168-1-10
   871	 host 192.168.1.10
   872	 description Main Application Server
   873	object network External-203-0-113-25
   874	 host 203.0.113.25
   875	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   876	access-list OUTSIDE extended deny ip any any
   877	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   878	+ local 'message=Sanitized Content: object-group network BU1-NETWORK
   879	 description Corporate HQ Subnets
   880	 network-object host 10.0.0.1
   881	 network-object host 10.0.1.2
   882	 network-object 192.168.1.0 255.255.255.0
   883	object-group network BU2-WIRELESS
   884	 description Corporate HQ Subnets
   885	 network-object host 10.0.0.10
   886	 network-object host 10.0.1.200
   887	 network-object 192.168.1.0 255.255.255.0
   888	object-group network BU3-WAN
   889	 description Corporate HQ Subnets
   890	 network-object host 10.0.0.11
   891	 network-object host 10.0.1.112
   892	 network-object 192.168.1.0 255.255.255.0
   893	object-group network BU4-LAN
   894	 description Corporate HQ Subnets
   895	 network-object host 10.0.0.100
   896	 network-object host 10.0.1.12
   897	 network-object 192.168.1.0 255.255.255.0
   898	object network Server-192-168-1-10
   899	 host 192.168.1.10
   900	 description Main Application Server
   901	object network External-203-0-113-25
   902	 host 203.0.113.25
   903	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   904	access-list OUTSIDE extended deny ip any any
   905	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   906	+ print 'Sanitized Content: object-group network BU1-NETWORK
   907	 description Corporate HQ Subnets
   908	 network-object host 10.0.0.1
   909	 network-object host 10.0.1.2
   910	 network-object 192.168.1.0 255.255.255.0
   911	object-group network BU2-WIRELESS
   912	 description Corporate HQ Subnets
   913	 network-object host 10.0.0.10
   914	 network-object host 10.0.1.200
   915	 network-object 192.168.1.0 255.255.255.0
   916	object-group network BU3-WAN
   917	 description Corporate HQ Subnets
   918	 network-object host 10.0.0.11
   919	 network-object host 10.0.1.112
   920	 network-object 192.168.1.0 255.255.255.0
   921	object-group network BU4-LAN
   922	 description Corporate HQ Subnets
   923	 network-object host 10.0.0.100
   924	 network-object host 10.0.1.12
   925	 network-object 192.168.1.0 255.255.255.0
   926	object network Server-192-168-1-10
   927	 host 192.168.1.10
   928	 description Main Application Server
   929	object network External-203-0-113-25
   930	 host 203.0.113.25
   931	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   932	access-list OUTSIDE extended deny ip any any
   933	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   934	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   935	 description Corporate HQ Subnets
   936	 network-object host 10.0.0.1
   937	 network-object host 10.0.1.2
   938	 network-object 192.168.1.0 255.255.255.0
   939	object-group network BU2-WIRELESS
   940	 description Corporate HQ Subnets
   941	 network-object host 10.0.0.10
   942	 network-object host 10.0.1.200
   943	 network-object 192.168.1.0 255.255.255.0
   944	object-group network BU3-WAN
   945	 description Corporate HQ Subnets
   946	 network-object host 10.0.0.11
   947	 network-object host 10.0.1.112
   948	 network-object 192.168.1.0 255.255.255.0
   949	object-group network BU4-LAN
   950	 description Corporate HQ Subnets
   951	 network-object host 10.0.0.100
   952	 network-object host 10.0.1.12
   953	 network-object 192.168.1.0 255.255.255.0
   954	object network Server-192-168-1-10
   955	 host 192.168.1.10
   956	 description Main Application Server
   957	object network External-203-0-113-25
   958	 host 203.0.113.25
   959	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   960	access-list OUTSIDE extended deny ip any any
   961	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   962	+ echo -en 'Sanitized Content: object-group network BU1-NETWORK
   963	 description Corporate HQ Subnets
   964	 network-object host 10.0.0.1
   965	 network-object host 10.0.1.2
   966	 network-object 192.168.1.0 255.255.255.0
   967	object-group network BU2-WIRELESS
   968	 description Corporate HQ Subnets
   969	 network-object host 10.0.0.10
   970	 network-object host 10.0.1.200
   971	 network-object 192.168.1.0 255.255.255.0
   972	object-group network BU3-WAN
   973	 description Corporate HQ Subnets
   974	 network-object host 10.0.0.11
   975	 network-object host 10.0.1.112
   976	 network-object 192.168.1.0 255.255.255.0
   977	object-group network BU4-LAN
   978	 description Corporate HQ Subnets
   979	 network-object host 10.0.0.100
   980	 network-object host 10.0.1.12
   981	 network-object 192.168.1.0 255.255.255.0
   982	object network Server-192-168-1-10
   983	 host 192.168.1.10
   984	 description Main Application Server
   985	object network External-203-0-113-25
   986	 host 203.0.113.25
   987	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   988	access-list OUTSIDE extended deny ip any any
   989	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   990	Sanitized Content: object-group network BU1-NETWORK
   991	 description Corporate HQ Subnets
   992	 network-object host 10.0.0.1
   993	 network-object host 10.0.1.2
   994	 network-object 192.168.1.0 255.255.255.0
   995	object-group network BU2-WIRELESS
   996	 description Corporate HQ Subnets
   997	 network-object host 10.0.0.10
   998	 network-object host 10.0.1.200
   999	 network-object 192.168.1.0 255.255.255.0
  1000	object-group network BU3-WAN
  1001	 description Corporate HQ Subnets
  1002	 network-object host 10.0.0.11
  1003	 network-object host 10.0.1.112
  1004	 network-object 192.168.1.0 255.255.255.0
  1005	object-group network BU4-LAN
  1006	 description Corporate HQ Subnets
  1007	 network-object host 10.0.0.100
  1008	 network-object host 10.0.1.12
  1009	 network-object 192.168.1.0 255.255.255.0
  1010	object network Server-192-168-1-10
  1011	 host 192.168.1.10
  1012	 description Main Application Server
  1013	object network External-203-0-113-25
  1014	 host 203.0.113.25
  1015	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1016	access-list OUTSIDE extended deny ip any any
  1017	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25+ newline
  1018	+ local count=1
  1019	+ (( i = 0 ))
  1020	+ (( i < count ))
  1021	+ echo
  1022
  1023	+ (( i++ ))
  1024	+ (( i < count ))
  1025	++ perl -pe 's/\n/MTc0NzE2NzYzMTUwNDczNzAwMAo/g'
  1026	+ local 'serialized_objects=object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1027	+ [[ true == true ]]
  1028	+ message 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1029	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  1030	+ local 'message=Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1031	+ print 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1032	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  1033	+ echo -en 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1034	Serialized Objects: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application ServerMTc0NzE2NzYzMTUwNDczNzAwMAoobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25MTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE2NzYzMTUwNDczNzAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE2NzYzMTUwNDczNzAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  1035	+ local count=1
  1036	+ (( i = 0 ))
  1037	+ (( i < count ))
  1038	+ echo
  1039
  1040	+ (( i++ ))
  1041	+ (( i < count ))
  1042	++ sed -E 's/MTc0NzE2NzYzMTUwNDczNzAwMAo([^[:space:]])/\n\1/g'
  1043	+ local 'restored_lines=object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1044	object-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1045	object-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1046	object-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1047	object network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server
  1048	object network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25
  1049	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1050	access-list OUTSIDE extended deny ip any any
  1051	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1052	+ restored_lines+='
  1053	'
  1054	+ IFS='
  1055	'
  1056	+ read -r -d '' -a config_objects
  1057	++ printf '%s\0' 'object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1058	object-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1059	object-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1060	object-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0
  1061	object network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server
  1062	object network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25
  1063	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1064	access-list OUTSIDE extended deny ip any any
  1065	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo
  1066	'
  1067	+ [[ true == true ]]
  1068	+ message 'Loaded 9 config blocks'
  1069	+ [[ -n Loaded 9 config blocks ]]
  1070	+ local 'message=Loaded 9 config blocks'
  1071	+ print 'Loaded 9 config blocks'
  1072	+ [[ -n Loaded 9 config blocks ]]
  1073	+ echo -en 'Loaded 9 config blocks'
  1074	Loaded 9 config blocks+ newline
  1075	+ local count=1
  1076	+ (( i = 0 ))
  1077	+ (( i < count ))
  1078	+ echo
  1079
  1080	+ (( i++ ))
  1081	+ (( i < count ))
  1082	+ for i in "${!config_objects[@]}"
  1083	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1084	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1085	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1086	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1087	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1088	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1089	|---> Block [0]
  1090	object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1091	+ local count=1
  1092	+ (( i = 0 ))
  1093	+ (( i < count ))
  1094	+ echo
  1095
  1096	+ (( i++ ))
  1097	+ (( i < count ))
  1098	+ for i in "${!config_objects[@]}"
  1099	+ message '|---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1100	+ [[ -n |---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1101	+ local 'message=|---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1102	+ print '|---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1103	+ [[ -n |---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1104	+ echo -en '|---> Block [1]\nobject-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1105	|---> Block [1]
  1106	object-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1107	+ local count=1
  1108	+ (( i = 0 ))
  1109	+ (( i < count ))
  1110	+ echo
  1111
  1112	+ (( i++ ))
  1113	+ (( i < count ))
  1114	+ for i in "${!config_objects[@]}"
  1115	+ message '|---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1116	+ [[ -n |---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1117	+ local 'message=|---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1118	+ print '|---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1119	+ [[ -n |---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1120	+ echo -en '|---> Block [2]\nobject-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1121	|---> Block [2]
  1122	object-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1123	+ local count=1
  1124	+ (( i = 0 ))
  1125	+ (( i < count ))
  1126	+ echo
  1127
  1128	+ (( i++ ))
  1129	+ (( i < count ))
  1130	+ for i in "${!config_objects[@]}"
  1131	+ message '|---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1132	+ [[ -n |---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1133	+ local 'message=|---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1134	+ print '|---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1135	+ [[ -n |---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1136	+ echo -en '|---> Block [3]\nobject-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1137	|---> Block [3]
  1138	object-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1139	+ local count=1
  1140	+ (( i = 0 ))
  1141	+ (( i < count ))
  1142	+ echo
  1143
  1144	+ (( i++ ))
  1145	+ (( i < count ))
  1146	+ for i in "${!config_objects[@]}"
  1147	+ message '|---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server'
  1148	+ [[ -n |---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server ]]
  1149	+ local 'message=|---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server'
  1150	+ print '|---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server'
  1151	+ [[ -n |---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server ]]
  1152	+ echo -en '|---> Block [4]\nobject network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server'
  1153	|---> Block [4]
  1154	object network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server+ newline
  1155	+ local count=1
  1156	+ (( i = 0 ))
  1157	+ (( i < count ))
  1158	+ echo
  1159
  1160	+ (( i++ ))
  1161	+ (( i < count ))
  1162	+ for i in "${!config_objects[@]}"
  1163	+ message '|---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25'
  1164	+ [[ -n |---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25 ]]
  1165	+ local 'message=|---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25'
  1166	+ print '|---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25'
  1167	+ [[ -n |---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25 ]]
  1168	+ echo -en '|---> Block [5]\nobject network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25'
  1169	|---> Block [5]
  1170	object network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25+ newline
  1171	+ local count=1
  1172	+ (( i = 0 ))
  1173	+ (( i < count ))
  1174	+ echo
  1175
  1176	+ (( i++ ))
  1177	+ (( i < count ))
  1178	+ for i in "${!config_objects[@]}"
  1179	+ message '|---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1180	+ [[ -n |---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1181	+ local 'message=|---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1182	+ print '|---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1183	+ [[ -n |---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1184	+ echo -en '|---> Block [6]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1185	|---> Block [6]
  1186	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1187	+ local count=1
  1188	+ (( i = 0 ))
  1189	+ (( i < count ))
  1190	+ echo
  1191
  1192	+ (( i++ ))
  1193	+ (( i < count ))
  1194	+ for i in "${!config_objects[@]}"
  1195	+ message '|---> Block [7]\naccess-list OUTSIDE extended deny ip any any'
  1196	+ [[ -n |---> Block [7]\naccess-list OUTSIDE extended deny ip any any ]]
  1197	+ local 'message=|---> Block [7]\naccess-list OUTSIDE extended deny ip any any'
  1198	+ print '|---> Block [7]\naccess-list OUTSIDE extended deny ip any any'
  1199	+ [[ -n |---> Block [7]\naccess-list OUTSIDE extended deny ip any any ]]
  1200	+ echo -en '|---> Block [7]\naccess-list OUTSIDE extended deny ip any any'
  1201	|---> Block [7]
  1202	access-list OUTSIDE extended deny ip any any+ newline
  1203	+ local count=1
  1204	+ (( i = 0 ))
  1205	+ (( i < count ))
  1206	+ echo
  1207
  1208	+ (( i++ ))
  1209	+ (( i < count ))
  1210	+ for i in "${!config_objects[@]}"
  1211	+ message '|---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1212	+ [[ -n |---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  1213	+ local 'message=|---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1214	+ print '|---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1215	+ [[ -n |---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  1216	+ echo -en '|---> Block [8]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1217	|---> Block [8]
  1218	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  1219	+ local count=1
  1220	+ (( i = 0 ))
  1221	+ (( i < count ))
  1222	+ echo
  1223
  1224	+ (( i++ ))
  1225	+ (( i < count ))
  1226	+ newline
  1227	+ local count=1
  1228	+ (( i = 0 ))
  1229	+ (( i < count ))
  1230	+ echo
  1231
  1232	+ (( i++ ))
  1233	+ (( i < count ))
  1234	+ oIFS='
  1235	'
  1236	+ IFS='
  1237	'
  1238	++ printf '%s\n' 'object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU2-WIRELESSMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.10MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.200MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU3-WANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.11MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.112MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU4-LANMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.100MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.12MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0' 'object network Server-192-168-1-10MTc0NzE2NzYzMTUwNDczNzAwMAo host 192.168.1.10MTc0NzE2NzYzMTUwNDczNzAwMAo description Main Application Server' 'object network External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo host 203.0.113.25' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' 'access-list OUTSIDE extended deny ip any any' 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE2NzYzMTUwNDczNzAwMAo'
  1239	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  1240	+ matched_objects=('object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any')
  1241	+ declare -a matched_objects
  1242	+ IFS='
  1243	'
  1244	+ [[ true == true ]]
  1245	+ message 'Loaded 2 config blocks'
  1246	+ [[ -n Loaded 2 config blocks ]]
  1247	+ local 'message=Loaded 2 config blocks'
  1248	+ print 'Loaded 2 config blocks'
  1249	+ [[ -n Loaded 2 config blocks ]]
  1250	+ echo -en 'Loaded 2 config blocks'
  1251	Loaded 2 config blocks+ newline
  1252	+ local count=1
  1253	+ (( i = 0 ))
  1254	+ (( i < count ))
  1255	+ echo
  1256
  1257	+ (( i++ ))
  1258	+ (( i < count ))
  1259	+ for i in "${!matched_objects[@]}"
  1260	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1261	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1262	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1263	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1264	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1265	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1266	|---> Block [0]
  1267	object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1268	+ local count=1
  1269	+ (( i = 0 ))
  1270	+ (( i < count ))
  1271	+ echo
  1272
  1273	+ (( i++ ))
  1274	+ (( i < count ))
  1275	+ for i in "${!matched_objects[@]}"
  1276	+ message '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1277	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1278	+ local 'message=|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1279	+ print '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1280	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1281	+ echo -en '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1282	|---> Block [1]
  1283	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1284	+ local count=1
  1285	+ (( i = 0 ))
  1286	+ (( i < count ))
  1287	+ echo
  1288
  1289	+ (( i++ ))
  1290	+ (( i < count ))
  1291	+ newline
  1292	+ local count=1
  1293	+ (( i = 0 ))
  1294	+ (( i < count ))
  1295	+ echo
  1296
  1297	+ (( i++ ))
  1298	+ (( i < count ))
  1299	+ restored_block=()
  1300	+ declare -a restored_block
  1301	+ for serialized_line in "${matched_objects[@]}"
  1302	+ [[ true == true ]]
  1303	+ message 'Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1304	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1305	+ local 'message=Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1306	+ print 'Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1307	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1308	+ echo -en 'Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0'
  1309	Serialized Line: object-group network BU1-NETWORKMTc0NzE2NzYzMTUwNDczNzAwMAo description Corporate HQ SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo network-object host 10.0.1.2MTc0NzE2NzYzMTUwNDczNzAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1310	+ local count=1
  1311	+ (( i = 0 ))
  1312	+ (( i < count ))
  1313	+ echo
  1314
  1315	+ (( i++ ))
  1316	+ (( i < count ))
  1317	++ perl -pe 's/MTc0NzE2NzYzMTUwNDczNzAwMAo/\n/g'
  1318	+ restored_block='object-group network BU1-NETWORK
  1319	 description Corporate HQ Subnets
  1320	 network-object host 10.0.0.1
  1321	 network-object host 10.0.1.2
  1322	 network-object 192.168.1.0 255.255.255.0'
  1323	+ [[ true == true ]]
  1324	+ message 'Restored Configuration:\nobject-group network BU1-NETWORK
  1325	 description Corporate HQ Subnets
  1326	 network-object host 10.0.0.1
  1327	 network-object host 10.0.1.2
  1328	 network-object 192.168.1.0 255.255.255.0'
  1329	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1330	 description Corporate HQ Subnets
  1331	 network-object host 10.0.0.1
  1332	 network-object host 10.0.1.2
  1333	 network-object 192.168.1.0 255.255.255.0 ]]
  1334	+ local 'message=Restored Configuration:\nobject-group network BU1-NETWORK
  1335	 description Corporate HQ Subnets
  1336	 network-object host 10.0.0.1
  1337	 network-object host 10.0.1.2
  1338	 network-object 192.168.1.0 255.255.255.0'
  1339	+ print 'Restored Configuration:\nobject-group network BU1-NETWORK
  1340	 description Corporate HQ Subnets
  1341	 network-object host 10.0.0.1
  1342	 network-object host 10.0.1.2
  1343	 network-object 192.168.1.0 255.255.255.0'
  1344	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1345	 description Corporate HQ Subnets
  1346	 network-object host 10.0.0.1
  1347	 network-object host 10.0.1.2
  1348	 network-object 192.168.1.0 255.255.255.0 ]]
  1349	+ echo -en 'Restored Configuration:\nobject-group network BU1-NETWORK
  1350	 description Corporate HQ Subnets
  1351	 network-object host 10.0.0.1
  1352	 network-object host 10.0.1.2
  1353	 network-object 192.168.1.0 255.255.255.0'
  1354	Restored Configuration:
  1355	object-group network BU1-NETWORK
  1356	 description Corporate HQ Subnets
  1357	 network-object host 10.0.0.1
  1358	 network-object host 10.0.1.2
  1359	 network-object 192.168.1.0 255.255.255.0+ newline
  1360	+ local count=1
  1361	+ (( i = 0 ))
  1362	+ (( i < count ))
  1363	+ echo
  1364
  1365	+ (( i++ ))
  1366	+ (( i < count ))
  1367	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'object-group network BU1-NETWORK
  1368	 description Corporate HQ Subnets
  1369	 network-object host 10.0.0.1
  1370	 network-object host 10.0.1.2
  1371	 network-object 192.168.1.0 255.255.255.0'
  1372	+ local target_pattern=10.0.0.1
  1373	+ local config_path=configs/cisco/fw1.cfg
  1374	+ local 'restored_block=object-group network BU1-NETWORK
  1375	 description Corporate HQ Subnets
  1376	 network-object host 10.0.0.1
  1377	 network-object host 10.0.1.2
  1378	 network-object 192.168.1.0 255.255.255.0'
  1379	+ local cleaned_block
  1380	++ sed '/^[[:space:]]*$/d'
  1381	+ cleaned_block='object-group network BU1-NETWORK
  1382	 description Corporate HQ Subnets
  1383	 network-object host 10.0.0.1
  1384	 network-object host 10.0.1.2
  1385	 network-object 192.168.1.0 255.255.255.0'
  1386	+ [[ -z object-group network BU1-NETWORK
  1387	 description Corporate HQ Subnets
  1388	 network-object host 10.0.0.1
  1389	 network-object host 10.0.1.2
  1390	 network-object 192.168.1.0 255.255.255.0 ]]
  1391	+ [[ true == true ]]
  1392	+ message '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1393	 description Corporate HQ Subnets
  1394	 network-object host 10.0.0.1
  1395	 network-object host 10.0.1.2
  1396	 network-object 192.168.1.0 255.255.255.0'
  1397	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1398	 description Corporate HQ Subnets
  1399	 network-object host 10.0.0.1
  1400	 network-object host 10.0.1.2
  1401	 network-object 192.168.1.0 255.255.255.0 ]]
  1402	+ local 'message=[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1403	 description Corporate HQ Subnets
  1404	 network-object host 10.0.0.1
  1405	 network-object host 10.0.1.2
  1406	 network-object 192.168.1.0 255.255.255.0'
  1407	+ print '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1408	 description Corporate HQ Subnets
  1409	 network-object host 10.0.0.1
  1410	 network-object host 10.0.1.2
  1411	 network-object 192.168.1.0 255.255.255.0'
  1412	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1413	 description Corporate HQ Subnets
  1414	 network-object host 10.0.0.1
  1415	 network-object host 10.0.1.2
  1416	 network-object 192.168.1.0 255.255.255.0 ]]
  1417	+ echo -en '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1418	 description Corporate HQ Subnets
  1419	 network-object host 10.0.0.1
  1420	 network-object host 10.0.1.2
  1421	 network-object 192.168.1.0 255.255.255.0'
  1422	[process_configs] Raw Block:
  1423	object-group network BU1-NETWORK
  1424	 description Corporate HQ Subnets
  1425	 network-object host 10.0.0.1
  1426	 network-object host 10.0.1.2
  1427	 network-object 192.168.1.0 255.255.255.0+ newline
  1428	+ local count=1
  1429	+ (( i = 0 ))
  1430	+ (( i < count ))
  1431	+ echo
  1432
  1433	+ (( i++ ))
  1434	+ (( i < count ))
  1435	+ local object_line
  1436	++ head -n 1
  1437	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1438	+ object_line='object-group network BU1-NETWORK'
  1439	+ [[ -z object-group network BU1-NETWORK ]]
  1440	+ local object_keyword type_value
  1441	++ awk '{print $1}'
  1442	+ object_keyword=object-group
  1443	++ awk '{$1=""; print substr($0,2)}'
  1444	+ type_value='network BU1-NETWORK'
  1445	+ [[ true == true ]]
  1446	+ print '[process_configs] object   : object-group'
  1447	+ [[ -n [process_configs] object   : object-group ]]
  1448	+ echo -en '[process_configs] object   : object-group'
  1449	[process_configs] object   : object-group+ print '[process_configs] type     : network BU1-NETWORK'
  1450	+ [[ -n [process_configs] type     : network BU1-NETWORK ]]
  1451	+ echo -en '[process_configs] type     : network BU1-NETWORK'
  1452	[process_configs] type     : network BU1-NETWORK+ entries=()
  1453	+ local -a entries
  1454	+ IFS=
  1455	+ read -r line
  1456	+ local trimmed
  1457	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1458	+ trimmed='object-group network BU1-NETWORK'
  1459	+ [[ -z object-group network BU1-NETWORK ]]
  1460	+ [[ object-group network bu1-network =~ ^description[[:space:]] ]]
  1461	+ entries+=("${trimmed}")
  1462	+ IFS=
  1463	+ read -r line
  1464	+ local trimmed
  1465	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1466	+ trimmed='description Corporate HQ Subnets'
  1467	+ [[ -z description Corporate HQ Subnets ]]
  1468	+ [[ description corporate hq subnets =~ ^description[[:space:]] ]]
  1469	+ continue
  1470	+ IFS=
  1471	+ read -r line
  1472	+ local trimmed
  1473	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1474	+ trimmed='network-object host 10.0.0.1'
  1475	+ [[ -z network-object host 10.0.0.1 ]]
  1476	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  1477	+ entries+=("${trimmed}")
  1478	+ IFS=
  1479	+ read -r line
  1480	+ local trimmed
  1481	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1482	+ trimmed='network-object host 10.0.1.2'
  1483	+ [[ -z network-object host 10.0.1.2 ]]
  1484	+ [[ network-object host 10.0.1.2 =~ ^description[[:space:]] ]]
  1485	+ entries+=("${trimmed}")
  1486	+ IFS=
  1487	+ read -r line
  1488	+ local trimmed
  1489	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1490	+ trimmed='network-object 192.168.1.0 255.255.255.0'
  1491	+ [[ -z network-object 192.168.1.0 255.255.255.0 ]]
  1492	+ [[ network-object 192.168.1.0 255.255.255.0 =~ ^description[[:space:]] ]]
  1493	+ entries+=("${trimmed}")
  1494	+ IFS=
  1495	+ read -r line
  1496	+ ((  4 > 1  ))
  1497	+ entries=("${entries[@]:1}")
  1498	+ [[ true == true ]]
  1499	+ message '[process_configs] Entries:'
  1500	+ [[ -n [process_configs] Entries: ]]
  1501	+ local 'message=[process_configs] Entries:'
  1502	+ print '[process_configs] Entries:'
  1503	+ [[ -n [process_configs] Entries: ]]
  1504	+ echo -en '[process_configs] Entries:'
  1505	[process_configs] Entries:+ newline
  1506	+ local count=1
  1507	+ (( i = 0 ))
  1508	+ (( i < count ))
  1509	+ echo
  1510
  1511	+ (( i++ ))
  1512	+ (( i < count ))
  1513	+ for e in "${entries[@]}"
  1514	+ print '  - network-object host 10.0.0.1'
  1515	+ [[ -n   - network-object host 10.0.0.1 ]]
  1516	+ echo -en '  - network-object host 10.0.0.1'
  1517	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  1518	+ print '  - network-object host 10.0.1.2'
  1519	+ [[ -n   - network-object host 10.0.1.2 ]]
  1520	+ echo -en '  - network-object host 10.0.1.2'
  1521	  - network-object host 10.0.1.2+ for e in "${entries[@]}"
  1522	+ print '  - network-object 192.168.1.0 255.255.255.0'
  1523	+ [[ -n   - network-object 192.168.1.0 255.255.255.0 ]]
  1524	+ echo -en '  - network-object 192.168.1.0 255.255.255.0'
  1525	  - network-object 192.168.1.0 255.255.255.0+ local matched_line
  1526	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  1527	++ head -n 1
  1528	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1529	+ matched_line='network-object host 10.0.0.1'
  1530	+ [[ -z network-object host 10.0.0.1 ]]
  1531	+ [[ true == true ]]
  1532	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  1533	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1534	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  1535	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  1536	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1537	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  1538	[process_configs] Matched: network-object host 10.0.0.1+ newline
  1539	+ local count=1
  1540	+ (( i = 0 ))
  1541	+ (( i < count ))
  1542	+ echo
  1543
  1544	+ (( i++ ))
  1545	+ (( i < count ))
  1546	+ local desc_val=false
  1547	+ [[ -z false ]]
  1548	+ [[ true == true ]]
  1549	+ message '[process_configs] Description: false'
  1550	+ [[ -n [process_configs] Description: false ]]
  1551	+ local 'message=[process_configs] Description: false'
  1552	+ print '[process_configs] Description: false'
  1553	+ [[ -n [process_configs] Description: false ]]
  1554	+ echo -en '[process_configs] Description: false'
  1555	[process_configs] Description: false+ newline
  1556	+ local count=1
  1557	+ (( i = 0 ))
  1558	+ (( i < count ))
  1559	+ echo
  1560
  1561	+ (( i++ ))
  1562	+ (( i < count ))
  1563	+ local group_val=Unclassified
  1564	+ [[ true == true ]]
  1565	+ local object_key
  1566	++ awk '{print $NF}'
  1567	++ sed -E 's/[[:punct:]]*$//'
  1568	+ object_key=BU1-NETWORK
  1569	++ jq -r --arg key BU1-NETWORK 'map(select(.match[]? | contains($key))) | .[0].group'
  1570	+ group_val='Identified Matching Entries'
  1571	+ [[ -z Identified Matching Entries ]]
  1572	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1573	+ [[ -z Identified Matching Entries ]]
  1574	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1575	+ [[ true == true ]]
  1576	+ message '[process_configs] Group: Identified Matching Entries'
  1577	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1578	+ local 'message=[process_configs] Group: Identified Matching Entries'
  1579	+ print '[process_configs] Group: Identified Matching Entries'
  1580	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1581	+ echo -en '[process_configs] Group: Identified Matching Entries'
  1582	[process_configs] Group: Identified Matching Entries+ newline
  1583	+ local count=1
  1584	+ (( i = 0 ))
  1585	+ (( i < count ))
  1586	+ echo
  1587
  1588	+ (( i++ ))
  1589	+ (( i < count ))
  1590	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object host 10.0.1.2' 'network-object 192.168.1.0 255.255.255.0'
  1591	++ jq -R .
  1592	++ jq -s .
  1593	+ local 'entries_2json=[
  1594	  "network-object host 10.0.0.1",
  1595	  "network-object host 10.0.1.2",
  1596	  "network-object 192.168.1.0 255.255.255.0"
  1597	]'
  1598	+ [[ 3 -eq 1 ]]
  1599	++ jq -n --arg object object-group --arg type 'network BU1-NETWORK' --arg description false --argjson entries '[
  1600	  "network-object host 10.0.0.1",
  1601	  "network-object host 10.0.1.2",
  1602	  "network-object 192.168.1.0 255.255.255.0"
  1603	]' --arg group 'Identified Matching Entries' '{
  1604	                  object: $object,
  1605	                  type: $type,
  1606	                  description: ($description | select(. != "" and . != "null") // false),
  1607	                  entries: $entries,
  1608	                  group: $group
  1609	                }'
  1610	+ target_object='{
  1611	  "object": "object-group",
  1612	  "type": "network BU1-NETWORK",
  1613	  "description": "false",
  1614	  "entries": [
  1615	    "network-object host 10.0.0.1",
  1616	    "network-object host 10.0.1.2",
  1617	    "network-object 192.168.1.0 255.255.255.0"
  1618	  ],
  1619	  "group": "Identified Matching Entries"
  1620	}'
  1621	+ export target_object
  1622	+ [[ true == true ]]
  1623	+ message '[process_configs] JSON Object (output):'
  1624	+ [[ -n [process_configs] JSON Object (output): ]]
  1625	+ local 'message=[process_configs] JSON Object (output):'
  1626	+ print '[process_configs] JSON Object (output):'
  1627	+ [[ -n [process_configs] JSON Object (output): ]]
  1628	+ echo -en '[process_configs] JSON Object (output):'
  1629	[process_configs] JSON Object (output):+ newline
  1630	+ local count=1
  1631	+ (( i = 0 ))
  1632	+ (( i < count ))
  1633	+ echo
  1634
  1635	+ (( i++ ))
  1636	+ (( i < count ))
  1637	+ print '{
  1638	  "object": "object-group",
  1639	  "type": "network BU1-NETWORK",
  1640	  "description": "false",
  1641	  "entries": [
  1642	    "network-object host 10.0.0.1",
  1643	    "network-object host 10.0.1.2",
  1644	    "network-object 192.168.1.0 255.255.255.0"
  1645	  ],
  1646	  "group": "Identified Matching Entries"
  1647	}'
  1648	+ [[ -n {
  1649	  "object": "object-group",
  1650	  "type": "network BU1-NETWORK",
  1651	  "description": "false",
  1652	  "entries": [
  1653	    "network-object host 10.0.0.1",
  1654	    "network-object host 10.0.1.2",
  1655	    "network-object 192.168.1.0 255.255.255.0"
  1656	  ],
  1657	  "group": "Identified Matching Entries"
  1658	} ]]
  1659	+ jq .
  1660	+ echo -en '{
  1661	  "object": "object-group",
  1662	  "type": "network BU1-NETWORK",
  1663	  "description": "false",
  1664	  "entries": [
  1665	    "network-object host 10.0.0.1",
  1666	    "network-object host 10.0.1.2",
  1667	    "network-object 192.168.1.0 255.255.255.0"
  1668	  ],
  1669	  "group": "Identified Matching Entries"
  1670	}'
  1671	{
  1672	  "object": "object-group",
  1673	  "type": "network BU1-NETWORK",
  1674	  "description": "false",
  1675	  "entries": [
  1676	    "network-object host 10.0.0.1",
  1677	    "network-object host 10.0.1.2",
  1678	    "network-object 192.168.1.0 255.255.255.0"
  1679	  ],
  1680	  "group": "Identified Matching Entries"
  1681	}
  1682	+ newline
  1683	+ local count=1
  1684	+ (( i = 0 ))
  1685	+ (( i < count ))
  1686	+ echo
  1687
  1688	+ (( i++ ))
  1689	+ (( i < count ))
  1690	+ return 0
  1691	+ [[ -n {
  1692	  "object": "object-group",
  1693	  "type": "network BU1-NETWORK",
  1694	  "description": "false",
  1695	  "entries": [
  1696	    "network-object host 10.0.0.1",
  1697	    "network-object host 10.0.1.2",
  1698	    "network-object 192.168.1.0 255.255.255.0"
  1699	  ],
  1700	  "group": "Identified Matching Entries"
  1701	} ]]
  1702	+ print '|-----> Target Objects: {
  1703	  "object": "object-group",
  1704	  "type": "network BU1-NETWORK",
  1705	  "description": "false",
  1706	  "entries": [
  1707	    "network-object host 10.0.0.1",
  1708	    "network-object host 10.0.1.2",
  1709	    "network-object 192.168.1.0 255.255.255.0"
  1710	  ],
  1711	  "group": "Identified Matching Entries"
  1712	}'
  1713	+ [[ -n |-----> Target Objects: {
  1714	  "object": "object-group",
  1715	  "type": "network BU1-NETWORK",
  1716	  "description": "false",
  1717	  "entries": [
  1718	    "network-object host 10.0.0.1",
  1719	    "network-object host 10.0.1.2",
  1720	    "network-object 192.168.1.0 255.255.255.0"
  1721	  ],
  1722	  "group": "Identified Matching Entries"
  1723	} ]]
  1724	+ echo -en '|-----> Target Objects: {
  1725	  "object": "object-group",
  1726	  "type": "network BU1-NETWORK",
  1727	  "description": "false",
  1728	  "entries": [
  1729	    "network-object host 10.0.0.1",
  1730	    "network-object host 10.0.1.2",
  1731	    "network-object 192.168.1.0 255.255.255.0"
  1732	  ],
  1733	  "group": "Identified Matching Entries"
  1734	}'
  1735	|-----> Target Objects: {
  1736	  "object": "object-group",
  1737	  "type": "network BU1-NETWORK",
  1738	  "description": "false",
  1739	  "entries": [
  1740	    "network-object host 10.0.0.1",
  1741	    "network-object host 10.0.1.2",
  1742	    "network-object 192.168.1.0 255.255.255.0"
  1743	  ],
  1744	  "group": "Identified Matching Entries"
  1745	}+ [[ -n {
  1746	  "object": "object-group",
  1747	  "type": "network BU1-NETWORK",
  1748	  "description": "false",
  1749	  "entries": [
  1750	    "network-object host 10.0.0.1",
  1751	    "network-object host 10.0.1.2",
  1752	    "network-object 192.168.1.0 255.255.255.0"
  1753	  ],
  1754	  "group": "Identified Matching Entries"
  1755	} ]]
  1756	++ printf '%s\n' '{
  1757	  "object": "object-group",
  1758	  "type": "network BU1-NETWORK",
  1759	  "description": "false",
  1760	  "entries": [
  1761	    "network-object host 10.0.0.1",
  1762	    "network-object host 10.0.1.2",
  1763	    "network-object 192.168.1.0 255.255.255.0"
  1764	  ],
  1765	  "group": "Identified Matching Entries"
  1766	}'
  1767	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  1768	              config: {
  1769	                site: ($site | gsub("^.*/"; "")),
  1770	                device: $device
  1771	              },
  1772	              objects: .
  1773	            }'
  1774	+ wrapped_block='{
  1775	  "config": {
  1776	    "site": "cisco",
  1777	    "device": "fw1.cfg"
  1778	  },
  1779	  "objects": [
  1780	    {
  1781	      "object": "object-group",
  1782	      "type": "network BU1-NETWORK",
  1783	      "description": "false",
  1784	      "entries": [
  1785	        "network-object host 10.0.0.1",
  1786	        "network-object host 10.0.1.2",
  1787	        "network-object 192.168.1.0 255.255.255.0"
  1788	      ],
  1789	      "group": "Identified Matching Entries"
  1790	    }
  1791	  ]
  1792	}'
  1793	+ [[ true == true ]]
  1794	+ message '|-----> Config Objects:\n{
  1795	  "config": {
  1796	    "site": "cisco",
  1797	    "device": "fw1.cfg"
  1798	  },
  1799	  "objects": [
  1800	    {
  1801	      "object": "object-group",
  1802	      "type": "network BU1-NETWORK",
  1803	      "description": "false",
  1804	      "entries": [
  1805	        "network-object host 10.0.0.1",
  1806	        "network-object host 10.0.1.2",
  1807	        "network-object 192.168.1.0 255.255.255.0"
  1808	      ],
  1809	      "group": "Identified Matching Entries"
  1810	    }
  1811	  ]
  1812	}'
  1813	+ [[ -n |-----> Config Objects:\n{
  1814	  "config": {
  1815	    "site": "cisco",
  1816	    "device": "fw1.cfg"
  1817	  },
  1818	  "objects": [
  1819	    {
  1820	      "object": "object-group",
  1821	      "type": "network BU1-NETWORK",
  1822	      "description": "false",
  1823	      "entries": [
  1824	        "network-object host 10.0.0.1",
  1825	        "network-object host 10.0.1.2",
  1826	        "network-object 192.168.1.0 255.255.255.0"
  1827	      ],
  1828	      "group": "Identified Matching Entries"
  1829	    }
  1830	  ]
  1831	} ]]
  1832	+ local 'message=|-----> Config Objects:\n{
  1833	  "config": {
  1834	    "site": "cisco",
  1835	    "device": "fw1.cfg"
  1836	  },
  1837	  "objects": [
  1838	    {
  1839	      "object": "object-group",
  1840	      "type": "network BU1-NETWORK",
  1841	      "description": "false",
  1842	      "entries": [
  1843	        "network-object host 10.0.0.1",
  1844	        "network-object host 10.0.1.2",
  1845	        "network-object 192.168.1.0 255.255.255.0"
  1846	      ],
  1847	      "group": "Identified Matching Entries"
  1848	    }
  1849	  ]
  1850	}'
  1851	+ print '|-----> Config Objects:\n{
  1852	  "config": {
  1853	    "site": "cisco",
  1854	    "device": "fw1.cfg"
  1855	  },
  1856	  "objects": [
  1857	    {
  1858	      "object": "object-group",
  1859	      "type": "network BU1-NETWORK",
  1860	      "description": "false",
  1861	      "entries": [
  1862	        "network-object host 10.0.0.1",
  1863	        "network-object host 10.0.1.2",
  1864	        "network-object 192.168.1.0 255.255.255.0"
  1865	      ],
  1866	      "group": "Identified Matching Entries"
  1867	    }
  1868	  ]
  1869	}'
  1870	+ [[ -n |-----> Config Objects:\n{
  1871	  "config": {
  1872	    "site": "cisco",
  1873	    "device": "fw1.cfg"
  1874	  },
  1875	  "objects": [
  1876	    {
  1877	      "object": "object-group",
  1878	      "type": "network BU1-NETWORK",
  1879	      "description": "false",
  1880	      "entries": [
  1881	        "network-object host 10.0.0.1",
  1882	        "network-object host 10.0.1.2",
  1883	        "network-object 192.168.1.0 255.255.255.0"
  1884	      ],
  1885	      "group": "Identified Matching Entries"
  1886	    }
  1887	  ]
  1888	} ]]
  1889	+ echo -en '|-----> Config Objects:\n{
  1890	  "config": {
  1891	    "site": "cisco",
  1892	    "device": "fw1.cfg"
  1893	  },
  1894	  "objects": [
  1895	    {
  1896	      "object": "object-group",
  1897	      "type": "network BU1-NETWORK",
  1898	      "description": "false",
  1899	      "entries": [
  1900	        "network-object host 10.0.0.1",
  1901	        "network-object host 10.0.1.2",
  1902	        "network-object 192.168.1.0 255.255.255.0"
  1903	      ],
  1904	      "group": "Identified Matching Entries"
  1905	    }
  1906	  ]
  1907	}'
  1908	|-----> Config Objects:
  1909	{
  1910	  "config": {
  1911	    "site": "cisco",
  1912	    "device": "fw1.cfg"
  1913	  },
  1914	  "objects": [
  1915	    {
  1916	      "object": "object-group",
  1917	      "type": "network BU1-NETWORK",
  1918	      "description": "false",
  1919	      "entries": [
  1920	        "network-object host 10.0.0.1",
  1921	        "network-object host 10.0.1.2",
  1922	        "network-object 192.168.1.0 255.255.255.0"
  1923	      ],
  1924	      "group": "Identified Matching Entries"
  1925	    }
  1926	  ]
  1927	}+ newline
  1928	+ local count=1
  1929	+ (( i = 0 ))
  1930	+ (( i < count ))
  1931	+ echo
  1932
  1933	+ (( i++ ))
  1934	+ (( i < count ))
  1935	+ print '{
  1936	  "config": {
  1937	    "site": "cisco",
  1938	    "device": "fw1.cfg"
  1939	  },
  1940	  "objects": [
  1941	    {
  1942	      "object": "object-group",
  1943	      "type": "network BU1-NETWORK",
  1944	      "description": "false",
  1945	      "entries": [
  1946	        "network-object host 10.0.0.1",
  1947	        "network-object host 10.0.1.2",
  1948	        "network-object 192.168.1.0 255.255.255.0"
  1949	      ],
  1950	      "group": "Identified Matching Entries"
  1951	    }
  1952	  ]
  1953	}'
  1954	+ [[ -n {
  1955	  "config": {
  1956	    "site": "cisco",
  1957	    "device": "fw1.cfg"
  1958	  },
  1959	  "objects": [
  1960	    {
  1961	      "object": "object-group",
  1962	      "type": "network BU1-NETWORK",
  1963	      "description": "false",
  1964	      "entries": [
  1965	        "network-object host 10.0.0.1",
  1966	        "network-object host 10.0.1.2",
  1967	        "network-object 192.168.1.0 255.255.255.0"
  1968	      ],
  1969	      "group": "Identified Matching Entries"
  1970	    }
  1971	  ]
  1972	} ]]
  1973	+ echo -en '{
  1974	  "config": {
  1975	    "site": "cisco",
  1976	    "device": "fw1.cfg"
  1977	  },
  1978	  "objects": [
  1979	    {
  1980	      "object": "object-group",
  1981	      "type": "network BU1-NETWORK",
  1982	      "description": "false",
  1983	      "entries": [
  1984	        "network-object host 10.0.0.1",
  1985	        "network-object host 10.0.1.2",
  1986	        "network-object 192.168.1.0 255.255.255.0"
  1987	      ],
  1988	      "group": "Identified Matching Entries"
  1989	    }
  1990	  ]
  1991	}'
  1992	+ for serialized_line in "${matched_objects[@]}"
  1993	+ [[ true == true ]]
  1994	+ message 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1995	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1996	+ local 'message=Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1997	+ print 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1998	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1999	+ echo -en 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2000	Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  2001	+ local count=1
  2002	+ (( i = 0 ))
  2003	+ (( i < count ))
  2004	+ echo
  2005
  2006	+ (( i++ ))
  2007	+ (( i < count ))
  2008	++ perl -pe 's/MTc0NzE2NzYzMTUwNDczNzAwMAo/\n/g'
  2009	+ restored_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2010	+ [[ true == true ]]
  2011	+ message 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2012	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2013	+ local 'message=Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2014	+ print 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2015	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2016	+ echo -en 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2017	Restored Configuration:
  2018	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  2019	+ local count=1
  2020	+ (( i = 0 ))
  2021	+ (( i < count ))
  2022	+ echo
  2023
  2024	+ (( i++ ))
  2025	+ (( i < count ))
  2026	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2027	+ local target_pattern=10.0.0.1
  2028	+ local config_path=configs/cisco/fw1.cfg
  2029	+ local 'restored_block=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2030	+ local cleaned_block
  2031	++ sed '/^[[:space:]]*$/d'
  2032	+ cleaned_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2033	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2034	+ [[ true == true ]]
  2035	+ message '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2036	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2037	+ local 'message=[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2038	+ print '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2039	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2040	+ echo -en '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2041	[process_configs] Raw Block:
  2042	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  2043	+ local count=1
  2044	+ (( i = 0 ))
  2045	+ (( i < count ))
  2046	+ echo
  2047
  2048	+ (( i++ ))
  2049	+ (( i < count ))
  2050	+ local object_line
  2051	++ head -n 1
  2052	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2053	+ object_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2054	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2055	+ local object_keyword type_value
  2056	++ awk '{print $1}'
  2057	+ object_keyword=access-list
  2058	++ awk '{$1=""; print substr($0,2)}'
  2059	+ type_value='OUTSIDE extended permit ip host 10.0.0.1 any'
  2060	+ [[ true == true ]]
  2061	+ print '[process_configs] object   : access-list'
  2062	+ [[ -n [process_configs] object   : access-list ]]
  2063	+ echo -en '[process_configs] object   : access-list'
  2064	[process_configs] object   : access-list+ print '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  2065	+ [[ -n [process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2066	+ echo -en '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  2067	[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any+ entries=()
  2068	+ local -a entries
  2069	+ IFS=
  2070	+ read -r line
  2071	+ local trimmed
  2072	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2073	+ trimmed='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2074	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2075	+ [[ access-list outside extended permit ip host 10.0.0.1 any =~ ^description[[:space:]] ]]
  2076	+ entries+=("${trimmed}")
  2077	+ IFS=
  2078	+ read -r line
  2079	+ ((  1 > 1  ))
  2080	+ [[ true == true ]]
  2081	+ message '[process_configs] Entries:'
  2082	+ [[ -n [process_configs] Entries: ]]
  2083	+ local 'message=[process_configs] Entries:'
  2084	+ print '[process_configs] Entries:'
  2085	+ [[ -n [process_configs] Entries: ]]
  2086	+ echo -en '[process_configs] Entries:'
  2087	[process_configs] Entries:+ newline
  2088	+ local count=1
  2089	+ (( i = 0 ))
  2090	+ (( i < count ))
  2091	+ echo
  2092
  2093	+ (( i++ ))
  2094	+ (( i < count ))
  2095	+ for e in "${entries[@]}"
  2096	+ print '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2097	+ [[ -n   - access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2098	+ echo -en '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2099	  - access-list OUTSIDE extended permit ip host 10.0.0.1 any+ local matched_line
  2100	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  2101	++ head -n 1
  2102	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2103	+ matched_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2104	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2105	+ [[ true == true ]]
  2106	+ message '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2107	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2108	+ local 'message=[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2109	+ print '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2110	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2111	+ echo -en '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2112	[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  2113	+ local count=1
  2114	+ (( i = 0 ))
  2115	+ (( i < count ))
  2116	+ echo
  2117
  2118	+ (( i++ ))
  2119	+ (( i < count ))
  2120	+ local desc_val=false
  2121	+ [[ -z false ]]
  2122	+ [[ true == true ]]
  2123	+ message '[process_configs] Description: false'
  2124	+ [[ -n [process_configs] Description: false ]]
  2125	+ local 'message=[process_configs] Description: false'
  2126	+ print '[process_configs] Description: false'
  2127	+ [[ -n [process_configs] Description: false ]]
  2128	+ echo -en '[process_configs] Description: false'
  2129	[process_configs] Description: false+ newline
  2130	+ local count=1
  2131	+ (( i = 0 ))
  2132	+ (( i < count ))
  2133	+ echo
  2134
  2135	+ (( i++ ))
  2136	+ (( i < count ))
  2137	+ local group_val=Unclassified
  2138	+ [[ true == true ]]
  2139	+ local object_key
  2140	++ awk '{print $NF}'
  2141	++ sed -E 's/[[:punct:]]*$//'
  2142	+ object_key=any
  2143	++ jq -r --arg key any 'map(select(.match[]? | contains($key))) | .[0].group'
  2144	+ group_val=null
  2145	+ [[ -z null ]]
  2146	+ [[ null == \n\u\l\l ]]
  2147	++ jq -r --arg desc false 'map(select(.match[]? == $desc)) | .[0].group'
  2148	+ group_val=null
  2149	+ [[ -z null ]]
  2150	+ [[ null == \n\u\l\l ]]
  2151	+ group_val=Unclassified
  2152	+ [[ true == true ]]
  2153	+ message '[process_configs] Group: Unclassified'
  2154	+ [[ -n [process_configs] Group: Unclassified ]]
  2155	+ local 'message=[process_configs] Group: Unclassified'
  2156	+ print '[process_configs] Group: Unclassified'
  2157	+ [[ -n [process_configs] Group: Unclassified ]]
  2158	+ echo -en '[process_configs] Group: Unclassified'
  2159	[process_configs] Group: Unclassified+ newline
  2160	+ local count=1
  2161	+ (( i = 0 ))
  2162	+ (( i < count ))
  2163	+ echo
  2164
  2165	+ (( i++ ))
  2166	+ (( i < count ))
  2167	++ printf '%s\n' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2168	++ jq -R .
  2169	++ jq -s .
  2170	+ local 'entries_2json=[
  2171	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2172	]'
  2173	+ [[ 1 -eq 1 ]]
  2174	++ jq -n --arg object access-list --arg description false --argjson entries '[
  2175	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2176	]' --arg group Unclassified '{
  2177	                  object: $object,
  2178	                  type: false,
  2179	                  description: ($description | select(. != "" and . != "null") // false),
  2180	                  entries: $entries,
  2181	                  group: $group
  2182	                }'
  2183	+ target_object='{
  2184	  "object": "access-list",
  2185	  "type": false,
  2186	  "description": "false",
  2187	  "entries": [
  2188	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2189	  ],
  2190	  "group": "Unclassified"
  2191	}'
  2192	+ export target_object
  2193	+ [[ true == true ]]
  2194	+ message '[process_configs] JSON Object (output):'
  2195	+ [[ -n [process_configs] JSON Object (output): ]]
  2196	+ local 'message=[process_configs] JSON Object (output):'
  2197	+ print '[process_configs] JSON Object (output):'
  2198	+ [[ -n [process_configs] JSON Object (output): ]]
  2199	+ echo -en '[process_configs] JSON Object (output):'
  2200	[process_configs] JSON Object (output):+ newline
  2201	+ local count=1
  2202	+ (( i = 0 ))
  2203	+ (( i < count ))
  2204	+ echo
  2205
  2206	+ (( i++ ))
  2207	+ (( i < count ))
  2208	+ print '{
  2209	  "object": "access-list",
  2210	  "type": false,
  2211	  "description": "false",
  2212	  "entries": [
  2213	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2214	  ],
  2215	  "group": "Unclassified"
  2216	}'
  2217	+ [[ -n {
  2218	  "object": "access-list",
  2219	  "type": false,
  2220	  "description": "false",
  2221	  "entries": [
  2222	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2223	  ],
  2224	  "group": "Unclassified"
  2225	} ]]
  2226	+ echo -en '{
  2227	  "object": "access-list",
  2228	  "type": false,
  2229	  "description": "false",
  2230	  "entries": [
  2231	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2232	  ],
  2233	  "group": "Unclassified"
  2234	}'
  2235	+ jq .
  2236	{
  2237	  "object": "access-list",
  2238	  "type": false,
  2239	  "description": "false",
  2240	  "entries": [
  2241	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2242	  ],
  2243	  "group": "Unclassified"
  2244	}
  2245	+ newline
  2246	+ local count=1
  2247	+ (( i = 0 ))
  2248	+ (( i < count ))
  2249	+ echo
  2250
  2251	+ (( i++ ))
  2252	+ (( i < count ))
  2253	+ return 0
  2254	+ [[ -n {
  2255	  "object": "access-list",
  2256	  "type": false,
  2257	  "description": "false",
  2258	  "entries": [
  2259	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2260	  ],
  2261	  "group": "Unclassified"
  2262	} ]]
  2263	+ print '|-----> Target Objects: {
  2264	  "object": "access-list",
  2265	  "type": false,
  2266	  "description": "false",
  2267	  "entries": [
  2268	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2269	  ],
  2270	  "group": "Unclassified"
  2271	}'
  2272	+ [[ -n |-----> Target Objects: {
  2273	  "object": "access-list",
  2274	  "type": false,
  2275	  "description": "false",
  2276	  "entries": [
  2277	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2278	  ],
  2279	  "group": "Unclassified"
  2280	} ]]
  2281	+ echo -en '|-----> Target Objects: {
  2282	  "object": "access-list",
  2283	  "type": false,
  2284	  "description": "false",
  2285	  "entries": [
  2286	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2287	  ],
  2288	  "group": "Unclassified"
  2289	}'
  2290	|-----> Target Objects: {
  2291	  "object": "access-list",
  2292	  "type": false,
  2293	  "description": "false",
  2294	  "entries": [
  2295	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2296	  ],
  2297	  "group": "Unclassified"
  2298	}+ [[ -n {
  2299	  "object": "access-list",
  2300	  "type": false,
  2301	  "description": "false",
  2302	  "entries": [
  2303	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2304	  ],
  2305	  "group": "Unclassified"
  2306	} ]]
  2307	++ printf '%s\n' '{
  2308	  "object": "access-list",
  2309	  "type": false,
  2310	  "description": "false",
  2311	  "entries": [
  2312	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2313	  ],
  2314	  "group": "Unclassified"
  2315	}'
  2316	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  2317	              config: {
  2318	                site: ($site | gsub("^.*/"; "")),
  2319	                device: $device
  2320	              },
  2321	              objects: .
  2322	            }'
  2323	+ wrapped_block='{
  2324	  "config": {
  2325	    "site": "cisco",
  2326	    "device": "fw1.cfg"
  2327	  },
  2328	  "objects": [
  2329	    {
  2330	      "object": "access-list",
  2331	      "type": false,
  2332	      "description": "false",
  2333	      "entries": [
  2334	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2335	      ],
  2336	      "group": "Unclassified"
  2337	    }
  2338	  ]
  2339	}'
  2340	+ [[ true == true ]]
  2341	+ message '|-----> Config Objects:\n{
  2342	  "config": {
  2343	    "site": "cisco",
  2344	    "device": "fw1.cfg"
  2345	  },
  2346	  "objects": [
  2347	    {
  2348	      "object": "access-list",
  2349	      "type": false,
  2350	      "description": "false",
  2351	      "entries": [
  2352	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2353	      ],
  2354	      "group": "Unclassified"
  2355	    }
  2356	  ]
  2357	}'
  2358	+ [[ -n |-----> Config Objects:\n{
  2359	  "config": {
  2360	    "site": "cisco",
  2361	    "device": "fw1.cfg"
  2362	  },
  2363	  "objects": [
  2364	    {
  2365	      "object": "access-list",
  2366	      "type": false,
  2367	      "description": "false",
  2368	      "entries": [
  2369	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2370	      ],
  2371	      "group": "Unclassified"
  2372	    }
  2373	  ]
  2374	} ]]
  2375	+ local 'message=|-----> Config Objects:\n{
  2376	  "config": {
  2377	    "site": "cisco",
  2378	    "device": "fw1.cfg"
  2379	  },
  2380	  "objects": [
  2381	    {
  2382	      "object": "access-list",
  2383	      "type": false,
  2384	      "description": "false",
  2385	      "entries": [
  2386	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2387	      ],
  2388	      "group": "Unclassified"
  2389	    }
  2390	  ]
  2391	}'
  2392	+ print '|-----> Config Objects:\n{
  2393	  "config": {
  2394	    "site": "cisco",
  2395	    "device": "fw1.cfg"
  2396	  },
  2397	  "objects": [
  2398	    {
  2399	      "object": "access-list",
  2400	      "type": false,
  2401	      "description": "false",
  2402	      "entries": [
  2403	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2404	      ],
  2405	      "group": "Unclassified"
  2406	    }
  2407	  ]
  2408	}'
  2409	+ [[ -n |-----> Config Objects:\n{
  2410	  "config": {
  2411	    "site": "cisco",
  2412	    "device": "fw1.cfg"
  2413	  },
  2414	  "objects": [
  2415	    {
  2416	      "object": "access-list",
  2417	      "type": false,
  2418	      "description": "false",
  2419	      "entries": [
  2420	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2421	      ],
  2422	      "group": "Unclassified"
  2423	    }
  2424	  ]
  2425	} ]]
  2426	+ echo -en '|-----> Config Objects:\n{
  2427	  "config": {
  2428	    "site": "cisco",
  2429	    "device": "fw1.cfg"
  2430	  },
  2431	  "objects": [
  2432	    {
  2433	      "object": "access-list",
  2434	      "type": false,
  2435	      "description": "false",
  2436	      "entries": [
  2437	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2438	      ],
  2439	      "group": "Unclassified"
  2440	    }
  2441	  ]
  2442	}'
  2443	|-----> Config Objects:
  2444	{
  2445	  "config": {
  2446	    "site": "cisco",
  2447	    "device": "fw1.cfg"
  2448	  },
  2449	  "objects": [
  2450	    {
  2451	      "object": "access-list",
  2452	      "type": false,
  2453	      "description": "false",
  2454	      "entries": [
  2455	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2456	      ],
  2457	      "group": "Unclassified"
  2458	    }
  2459	  ]
  2460	}+ newline
  2461	+ local count=1
  2462	+ (( i = 0 ))
  2463	+ (( i < count ))
  2464	+ echo
  2465
  2466	+ (( i++ ))
  2467	+ (( i < count ))
  2468	+ print '{
  2469	  "config": {
  2470	    "site": "cisco",
  2471	    "device": "fw1.cfg"
  2472	  },
  2473	  "objects": [
  2474	    {
  2475	      "object": "access-list",
  2476	      "type": false,
  2477	      "description": "false",
  2478	      "entries": [
  2479	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2480	      ],
  2481	      "group": "Unclassified"
  2482	    }
  2483	  ]
  2484	}'
  2485	+ [[ -n {
  2486	  "config": {
  2487	    "site": "cisco",
  2488	    "device": "fw1.cfg"
  2489	  },
  2490	  "objects": [
  2491	    {
  2492	      "object": "access-list",
  2493	      "type": false,
  2494	      "description": "false",
  2495	      "entries": [
  2496	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2497	      ],
  2498	      "group": "Unclassified"
  2499	    }
  2500	  ]
  2501	} ]]
  2502	+ echo -en '{
  2503	  "config": {
  2504	    "site": "cisco",
  2505	    "device": "fw1.cfg"
  2506	  },
  2507	  "objects": [
  2508	    {
  2509	      "object": "access-list",
  2510	      "type": false,
  2511	      "description": "false",
  2512	      "entries": [
  2513	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2514	      ],
  2515	      "group": "Unclassified"
  2516	    }
  2517	  ]
  2518	}'
  2519	+ return 0
  2520	+ for cfg_file in "${source_configs[@]}"
  2521	+ extract_configs configs/misc/switch.conf 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
  2522	+ local config_file=configs/misc/switch.conf
  2523	+ local target_pattern=10.0.0.1
  2524	+ local target_listing=targets/10.0.0.1.json
  2525	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
  2526	+ [[ ! -f configs/misc/switch.conf ]]
  2527	+ message '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2528	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2529	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2530	+ print '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2531	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2532	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2533	[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf+ newline
  2534	+ local count=1
  2535	+ (( i = 0 ))
  2536	+ (( i < count ))
  2537	+ echo
  2538
  2539	+ (( i++ ))
  2540	+ (( i < count ))
  2541	+ [[ ! -s configs/misc/switch.conf ]]
  2542	++ stat -c%s configs/misc/switch.conf
  2543	stat: illegal option -- c
  2544	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
  2545	+ message '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2546	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2547	+ local 'message=[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2548	+ print '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2549	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2550	+ echo -en '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2551	[OK] File 'configs/misc/switch.conf' is readable and size is  bytes+ newline
  2552	+ local count=1
  2553	+ (( i = 0 ))
  2554	+ (( i < count ))
  2555	+ echo
  2556
  2557	+ (( i++ ))
  2558	+ (( i < count ))
  2559	+ local 'imported_content=interface Vlan1
  2560	 ip address 172.31.255.254 255.255.255.0
  2561
  2562	interface Vlan2
  2563	 ip address 10.0.1.2 255.255.255.0
  2564
  2565	object-group network SOME-THING
  2566	  description Local Office Subnets
  2567	  network-object host 10.0.0.1
  2568	  network-object 192.168.12.0 255.255.255.0'
  2569	+ [[ true == true ]]
  2570	+ message 'Imported Content: interface Vlan1
  2571	 ip address 172.31.255.254 255.255.255.0
  2572
  2573	interface Vlan2
  2574	 ip address 10.0.1.2 255.255.255.0
  2575
  2576	object-group network SOME-THING
  2577	  description Local Office Subnets
  2578	  network-object host 10.0.0.1
  2579	  network-object 192.168.12.0 255.255.255.0'
  2580	+ [[ -n Imported Content: interface Vlan1
  2581	 ip address 172.31.255.254 255.255.255.0
  2582
  2583	interface Vlan2
  2584	 ip address 10.0.1.2 255.255.255.0
  2585
  2586	object-group network SOME-THING
  2587	  description Local Office Subnets
  2588	  network-object host 10.0.0.1
  2589	  network-object 192.168.12.0 255.255.255.0 ]]
  2590	+ local 'message=Imported Content: interface Vlan1
  2591	 ip address 172.31.255.254 255.255.255.0
  2592
  2593	interface Vlan2
  2594	 ip address 10.0.1.2 255.255.255.0
  2595
  2596	object-group network SOME-THING
  2597	  description Local Office Subnets
  2598	  network-object host 10.0.0.1
  2599	  network-object 192.168.12.0 255.255.255.0'
  2600	+ print 'Imported Content: interface Vlan1
  2601	 ip address 172.31.255.254 255.255.255.0
  2602
  2603	interface Vlan2
  2604	 ip address 10.0.1.2 255.255.255.0
  2605
  2606	object-group network SOME-THING
  2607	  description Local Office Subnets
  2608	  network-object host 10.0.0.1
  2609	  network-object 192.168.12.0 255.255.255.0'
  2610	+ [[ -n Imported Content: interface Vlan1
  2611	 ip address 172.31.255.254 255.255.255.0
  2612
  2613	interface Vlan2
  2614	 ip address 10.0.1.2 255.255.255.0
  2615
  2616	object-group network SOME-THING
  2617	  description Local Office Subnets
  2618	  network-object host 10.0.0.1
  2619	  network-object 192.168.12.0 255.255.255.0 ]]
  2620	+ echo -en 'Imported Content: interface Vlan1
  2621	 ip address 172.31.255.254 255.255.255.0
  2622
  2623	interface Vlan2
  2624	 ip address 10.0.1.2 255.255.255.0
  2625
  2626	object-group network SOME-THING
  2627	  description Local Office Subnets
  2628	  network-object host 10.0.0.1
  2629	  network-object 192.168.12.0 255.255.255.0'
  2630	Imported Content: interface Vlan1
  2631	 ip address 172.31.255.254 255.255.255.0
  2632
  2633	interface Vlan2
  2634	 ip address 10.0.1.2 255.255.255.0
  2635
  2636	object-group network SOME-THING
  2637	  description Local Office Subnets
  2638	  network-object host 10.0.0.1
  2639	  network-object 192.168.12.0 255.255.255.0+ newline
  2640	+ local count=1
  2641	+ (( i = 0 ))
  2642	+ (( i < count ))
  2643	+ echo
  2644
  2645	+ (( i++ ))
  2646	+ (( i < count ))
  2647	++ sed '/^\s*$/d;/^\s*!.*$/d'
  2648	+ local 'sanitized_content=interface Vlan1
  2649	 ip address 172.31.255.254 255.255.255.0
  2650	interface Vlan2
  2651	 ip address 10.0.1.2 255.255.255.0
  2652	object-group network SOME-THING
  2653	  description Local Office Subnets
  2654	  network-object host 10.0.0.1
  2655	  network-object 192.168.12.0 255.255.255.0'
  2656	+ [[ true == true ]]
  2657	+ message 'Sanitized Content: interface Vlan1
  2658	 ip address 172.31.255.254 255.255.255.0
  2659	interface Vlan2
  2660	 ip address 10.0.1.2 255.255.255.0
  2661	object-group network SOME-THING
  2662	  description Local Office Subnets
  2663	  network-object host 10.0.0.1
  2664	  network-object 192.168.12.0 255.255.255.0'
  2665	+ [[ -n Sanitized Content: interface Vlan1
  2666	 ip address 172.31.255.254 255.255.255.0
  2667	interface Vlan2
  2668	 ip address 10.0.1.2 255.255.255.0
  2669	object-group network SOME-THING
  2670	  description Local Office Subnets
  2671	  network-object host 10.0.0.1
  2672	  network-object 192.168.12.0 255.255.255.0 ]]
  2673	+ local 'message=Sanitized Content: interface Vlan1
  2674	 ip address 172.31.255.254 255.255.255.0
  2675	interface Vlan2
  2676	 ip address 10.0.1.2 255.255.255.0
  2677	object-group network SOME-THING
  2678	  description Local Office Subnets
  2679	  network-object host 10.0.0.1
  2680	  network-object 192.168.12.0 255.255.255.0'
  2681	+ print 'Sanitized Content: interface Vlan1
  2682	 ip address 172.31.255.254 255.255.255.0
  2683	interface Vlan2
  2684	 ip address 10.0.1.2 255.255.255.0
  2685	object-group network SOME-THING
  2686	  description Local Office Subnets
  2687	  network-object host 10.0.0.1
  2688	  network-object 192.168.12.0 255.255.255.0'
  2689	+ [[ -n Sanitized Content: interface Vlan1
  2690	 ip address 172.31.255.254 255.255.255.0
  2691	interface Vlan2
  2692	 ip address 10.0.1.2 255.255.255.0
  2693	object-group network SOME-THING
  2694	  description Local Office Subnets
  2695	  network-object host 10.0.0.1
  2696	  network-object 192.168.12.0 255.255.255.0 ]]
  2697	+ echo -en 'Sanitized Content: interface Vlan1
  2698	 ip address 172.31.255.254 255.255.255.0
  2699	interface Vlan2
  2700	 ip address 10.0.1.2 255.255.255.0
  2701	object-group network SOME-THING
  2702	  description Local Office Subnets
  2703	  network-object host 10.0.0.1
  2704	  network-object 192.168.12.0 255.255.255.0'
  2705	Sanitized Content: interface Vlan1
  2706	 ip address 172.31.255.254 255.255.255.0
  2707	interface Vlan2
  2708	 ip address 10.0.1.2 255.255.255.0
  2709	object-group network SOME-THING
  2710	  description Local Office Subnets
  2711	  network-object host 10.0.0.1
  2712	  network-object 192.168.12.0 255.255.255.0+ newline
  2713	+ local count=1
  2714	+ (( i = 0 ))
  2715	+ (( i < count ))
  2716	+ echo
  2717
  2718	+ (( i++ ))
  2719	+ (( i < count ))
  2720	++ perl -pe 's/\n/MTc0NzE2NzYzMTUwNDczNzAwMAo/g'
  2721	+ local 'serialized_objects=interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2722	+ [[ true == true ]]
  2723	+ message 'Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2724	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2725	+ local 'message=Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2726	+ print 'Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2727	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2728	+ echo -en 'Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2729	Serialized Objects: interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAointerface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAoobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  2730	+ local count=1
  2731	+ (( i = 0 ))
  2732	+ (( i < count ))
  2733	+ echo
  2734
  2735	+ (( i++ ))
  2736	+ (( i < count ))
  2737	++ sed -E 's/MTc0NzE2NzYzMTUwNDczNzAwMAo([^[:space:]])/\n\1/g'
  2738	+ local 'restored_lines=interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0
  2739	interface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0
  2740	object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2741	+ restored_lines+='
  2742	'
  2743	+ IFS='
  2744	'
  2745	+ read -r -d '' -a config_objects
  2746	++ printf '%s\0' 'interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0
  2747	interface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0
  2748	object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo
  2749	'
  2750	+ [[ true == true ]]
  2751	+ message 'Loaded 3 config blocks'
  2752	+ [[ -n Loaded 3 config blocks ]]
  2753	+ local 'message=Loaded 3 config blocks'
  2754	+ print 'Loaded 3 config blocks'
  2755	+ [[ -n Loaded 3 config blocks ]]
  2756	+ echo -en 'Loaded 3 config blocks'
  2757	Loaded 3 config blocks+ newline
  2758	+ local count=1
  2759	+ (( i = 0 ))
  2760	+ (( i < count ))
  2761	+ echo
  2762
  2763	+ (( i++ ))
  2764	+ (( i < count ))
  2765	+ for i in "${!config_objects[@]}"
  2766	+ message '|---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0'
  2767	+ [[ -n |---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0 ]]
  2768	+ local 'message=|---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0'
  2769	+ print '|---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0'
  2770	+ [[ -n |---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0 ]]
  2771	+ echo -en '|---> Block [0]\ninterface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0'
  2772	|---> Block [0]
  2773	interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0+ newline
  2774	+ local count=1
  2775	+ (( i = 0 ))
  2776	+ (( i < count ))
  2777	+ echo
  2778
  2779	+ (( i++ ))
  2780	+ (( i < count ))
  2781	+ for i in "${!config_objects[@]}"
  2782	+ message '|---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0'
  2783	+ [[ -n |---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0 ]]
  2784	+ local 'message=|---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0'
  2785	+ print '|---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0'
  2786	+ [[ -n |---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0 ]]
  2787	+ echo -en '|---> Block [1]\ninterface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0'
  2788	|---> Block [1]
  2789	interface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0+ newline
  2790	+ local count=1
  2791	+ (( i = 0 ))
  2792	+ (( i < count ))
  2793	+ echo
  2794
  2795	+ (( i++ ))
  2796	+ (( i < count ))
  2797	+ for i in "${!config_objects[@]}"
  2798	+ message '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2799	+ [[ -n |---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2800	+ local 'message=|---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2801	+ print '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2802	+ [[ -n |---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2803	+ echo -en '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2804	|---> Block [2]
  2805	object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  2806	+ local count=1
  2807	+ (( i = 0 ))
  2808	+ (( i < count ))
  2809	+ echo
  2810
  2811	+ (( i++ ))
  2812	+ (( i < count ))
  2813	+ newline
  2814	+ local count=1
  2815	+ (( i = 0 ))
  2816	+ (( i < count ))
  2817	+ echo
  2818
  2819	+ (( i++ ))
  2820	+ (( i < count ))
  2821	+ oIFS='
  2822	'
  2823	+ IFS='
  2824	'
  2825	++ printf '%s\n' 'interface Vlan1MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 172.31.255.254 255.255.255.0' 'interface Vlan2MTc0NzE2NzYzMTUwNDczNzAwMAo ip address 10.0.1.2 255.255.255.0' 'object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2826	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  2827	+ matched_objects=('object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo')
  2828	+ declare -a matched_objects
  2829	+ IFS='
  2830	'
  2831	+ [[ true == true ]]
  2832	+ message 'Loaded 1 config blocks'
  2833	+ [[ -n Loaded 1 config blocks ]]
  2834	+ local 'message=Loaded 1 config blocks'
  2835	+ print 'Loaded 1 config blocks'
  2836	+ [[ -n Loaded 1 config blocks ]]
  2837	+ echo -en 'Loaded 1 config blocks'
  2838	Loaded 1 config blocks+ newline
  2839	+ local count=1
  2840	+ (( i = 0 ))
  2841	+ (( i < count ))
  2842	+ echo
  2843
  2844	+ (( i++ ))
  2845	+ (( i < count ))
  2846	+ for i in "${!matched_objects[@]}"
  2847	+ message '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2848	+ [[ -n |---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2849	+ local 'message=|---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2850	+ print '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2851	+ [[ -n |---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2852	+ echo -en '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2853	|---> Block [0]
  2854	object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  2855	+ local count=1
  2856	+ (( i = 0 ))
  2857	+ (( i < count ))
  2858	+ echo
  2859
  2860	+ (( i++ ))
  2861	+ (( i < count ))
  2862	+ newline
  2863	+ local count=1
  2864	+ (( i = 0 ))
  2865	+ (( i < count ))
  2866	+ echo
  2867
  2868	+ (( i++ ))
  2869	+ (( i < count ))
  2870	+ restored_block=()
  2871	+ declare -a restored_block
  2872	+ for serialized_line in "${matched_objects[@]}"
  2873	+ [[ true == true ]]
  2874	+ message 'Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2875	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2876	+ local 'message=Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2877	+ print 'Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2878	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo ]]
  2879	+ echo -en 'Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo'
  2880	Serialized Line: object-group network SOME-THINGMTc0NzE2NzYzMTUwNDczNzAwMAo  description Local Office SubnetsMTc0NzE2NzYzMTUwNDczNzAwMAo  network-object host 10.0.0.1MTc0NzE2NzYzMTUwNDczNzAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE2NzYzMTUwNDczNzAwMAo+ newline
  2881	+ local count=1
  2882	+ (( i = 0 ))
  2883	+ (( i < count ))
  2884	+ echo
  2885
  2886	+ (( i++ ))
  2887	+ (( i < count ))
  2888	++ perl -pe 's/MTc0NzE2NzYzMTUwNDczNzAwMAo/\n/g'
  2889	+ restored_block='object-group network SOME-THING
  2890	  description Local Office Subnets
  2891	  network-object host 10.0.0.1
  2892	  network-object 192.168.12.0 255.255.255.0'
  2893	+ [[ true == true ]]
  2894	+ message 'Restored Configuration:\nobject-group network SOME-THING
  2895	  description Local Office Subnets
  2896	  network-object host 10.0.0.1
  2897	  network-object 192.168.12.0 255.255.255.0'
  2898	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2899	  description Local Office Subnets
  2900	  network-object host 10.0.0.1
  2901	  network-object 192.168.12.0 255.255.255.0 ]]
  2902	+ local 'message=Restored Configuration:\nobject-group network SOME-THING
  2903	  description Local Office Subnets
  2904	  network-object host 10.0.0.1
  2905	  network-object 192.168.12.0 255.255.255.0'
  2906	+ print 'Restored Configuration:\nobject-group network SOME-THING
  2907	  description Local Office Subnets
  2908	  network-object host 10.0.0.1
  2909	  network-object 192.168.12.0 255.255.255.0'
  2910	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2911	  description Local Office Subnets
  2912	  network-object host 10.0.0.1
  2913	  network-object 192.168.12.0 255.255.255.0 ]]
  2914	+ echo -en 'Restored Configuration:\nobject-group network SOME-THING
  2915	  description Local Office Subnets
  2916	  network-object host 10.0.0.1
  2917	  network-object 192.168.12.0 255.255.255.0'
  2918	Restored Configuration:
  2919	object-group network SOME-THING
  2920	  description Local Office Subnets
  2921	  network-object host 10.0.0.1
  2922	  network-object 192.168.12.0 255.255.255.0+ newline
  2923	+ local count=1
  2924	+ (( i = 0 ))
  2925	+ (( i < count ))
  2926	+ echo
  2927
  2928	+ (( i++ ))
  2929	+ (( i < count ))
  2930	+ process_configs 10.0.0.1 configs/misc/switch.conf 'object-group network SOME-THING
  2931	  description Local Office Subnets
  2932	  network-object host 10.0.0.1
  2933	  network-object 192.168.12.0 255.255.255.0'
  2934	+ local target_pattern=10.0.0.1
  2935	+ local config_path=configs/misc/switch.conf
  2936	+ local 'restored_block=object-group network SOME-THING
  2937	  description Local Office Subnets
  2938	  network-object host 10.0.0.1
  2939	  network-object 192.168.12.0 255.255.255.0'
  2940	+ local cleaned_block
  2941	++ sed '/^[[:space:]]*$/d'
  2942	+ cleaned_block='object-group network SOME-THING
  2943	  description Local Office Subnets
  2944	  network-object host 10.0.0.1
  2945	  network-object 192.168.12.0 255.255.255.0'
  2946	+ [[ -z object-group network SOME-THING
  2947	  description Local Office Subnets
  2948	  network-object host 10.0.0.1
  2949	  network-object 192.168.12.0 255.255.255.0 ]]
  2950	+ [[ true == true ]]
  2951	+ message '[process_configs] Raw Block:\nobject-group network SOME-THING
  2952	  description Local Office Subnets
  2953	  network-object host 10.0.0.1
  2954	  network-object 192.168.12.0 255.255.255.0'
  2955	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2956	  description Local Office Subnets
  2957	  network-object host 10.0.0.1
  2958	  network-object 192.168.12.0 255.255.255.0 ]]
  2959	+ local 'message=[process_configs] Raw Block:\nobject-group network SOME-THING
  2960	  description Local Office Subnets
  2961	  network-object host 10.0.0.1
  2962	  network-object 192.168.12.0 255.255.255.0'
  2963	+ print '[process_configs] Raw Block:\nobject-group network SOME-THING
  2964	  description Local Office Subnets
  2965	  network-object host 10.0.0.1
  2966	  network-object 192.168.12.0 255.255.255.0'
  2967	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2968	  description Local Office Subnets
  2969	  network-object host 10.0.0.1
  2970	  network-object 192.168.12.0 255.255.255.0 ]]
  2971	+ echo -en '[process_configs] Raw Block:\nobject-group network SOME-THING
  2972	  description Local Office Subnets
  2973	  network-object host 10.0.0.1
  2974	  network-object 192.168.12.0 255.255.255.0'
  2975	[process_configs] Raw Block:
  2976	object-group network SOME-THING
  2977	  description Local Office Subnets
  2978	  network-object host 10.0.0.1
  2979	  network-object 192.168.12.0 255.255.255.0+ newline
  2980	+ local count=1
  2981	+ (( i = 0 ))
  2982	+ (( i < count ))
  2983	+ echo
  2984
  2985	+ (( i++ ))
  2986	+ (( i < count ))
  2987	+ local object_line
  2988	++ head -n 1
  2989	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2990	+ object_line='object-group network SOME-THING'
  2991	+ [[ -z object-group network SOME-THING ]]
  2992	+ local object_keyword type_value
  2993	++ awk '{print $1}'
  2994	+ object_keyword=object-group
  2995	++ awk '{$1=""; print substr($0,2)}'
  2996	+ type_value='network SOME-THING'
  2997	+ [[ true == true ]]
  2998	+ print '[process_configs] object   : object-group'
  2999	+ [[ -n [process_configs] object   : object-group ]]
  3000	+ echo -en '[process_configs] object   : object-group'
  3001	[process_configs] object   : object-group+ print '[process_configs] type     : network SOME-THING'
  3002	+ [[ -n [process_configs] type     : network SOME-THING ]]
  3003	+ echo -en '[process_configs] type     : network SOME-THING'
  3004	[process_configs] type     : network SOME-THING+ entries=()
  3005	+ local -a entries
  3006	+ IFS=
  3007	+ read -r line
  3008	+ local trimmed
  3009	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3010	+ trimmed='object-group network SOME-THING'
  3011	+ [[ -z object-group network SOME-THING ]]
  3012	+ [[ object-group network some-thing =~ ^description[[:space:]] ]]
  3013	+ entries+=("${trimmed}")
  3014	+ IFS=
  3015	+ read -r line
  3016	+ local trimmed
  3017	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3018	+ trimmed='description Local Office Subnets'
  3019	+ [[ -z description Local Office Subnets ]]
  3020	+ [[ description local office subnets =~ ^description[[:space:]] ]]
  3021	+ continue
  3022	+ IFS=
  3023	+ read -r line
  3024	+ local trimmed
  3025	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3026	+ trimmed='network-object host 10.0.0.1'
  3027	+ [[ -z network-object host 10.0.0.1 ]]
  3028	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  3029	+ entries+=("${trimmed}")
  3030	+ IFS=
  3031	+ read -r line
  3032	+ local trimmed
  3033	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3034	+ trimmed='network-object 192.168.12.0 255.255.255.0'
  3035	+ [[ -z network-object 192.168.12.0 255.255.255.0 ]]
  3036	+ [[ network-object 192.168.12.0 255.255.255.0 =~ ^description[[:space:]] ]]
  3037	+ entries+=("${trimmed}")
  3038	+ IFS=
  3039	+ read -r line
  3040	+ ((  3 > 1  ))
  3041	+ entries=("${entries[@]:1}")
  3042	+ [[ true == true ]]
  3043	+ message '[process_configs] Entries:'
  3044	+ [[ -n [process_configs] Entries: ]]
  3045	+ local 'message=[process_configs] Entries:'
  3046	+ print '[process_configs] Entries:'
  3047	+ [[ -n [process_configs] Entries: ]]
  3048	+ echo -en '[process_configs] Entries:'
  3049	[process_configs] Entries:+ newline
  3050	+ local count=1
  3051	+ (( i = 0 ))
  3052	+ (( i < count ))
  3053	+ echo
  3054
  3055	+ (( i++ ))
  3056	+ (( i < count ))
  3057	+ for e in "${entries[@]}"
  3058	+ print '  - network-object host 10.0.0.1'
  3059	+ [[ -n   - network-object host 10.0.0.1 ]]
  3060	+ echo -en '  - network-object host 10.0.0.1'
  3061	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  3062	+ print '  - network-object 192.168.12.0 255.255.255.0'
  3063	+ [[ -n   - network-object 192.168.12.0 255.255.255.0 ]]
  3064	+ echo -en '  - network-object 192.168.12.0 255.255.255.0'
  3065	  - network-object 192.168.12.0 255.255.255.0+ local matched_line
  3066	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  3067	++ head -n 1
  3068	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3069	+ matched_line='network-object host 10.0.0.1'
  3070	+ [[ -z network-object host 10.0.0.1 ]]
  3071	+ [[ true == true ]]
  3072	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  3073	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  3074	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  3075	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  3076	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  3077	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  3078	[process_configs] Matched: network-object host 10.0.0.1+ newline
  3079	+ local count=1
  3080	+ (( i = 0 ))
  3081	+ (( i < count ))
  3082	+ echo
  3083
  3084	+ (( i++ ))
  3085	+ (( i < count ))
  3086	+ local desc_val=false
  3087	+ [[ -z false ]]
  3088	+ [[ true == true ]]
  3089	+ message '[process_configs] Description: false'
  3090	+ [[ -n [process_configs] Description: false ]]
  3091	+ local 'message=[process_configs] Description: false'
  3092	+ print '[process_configs] Description: false'
  3093	+ [[ -n [process_configs] Description: false ]]
  3094	+ echo -en '[process_configs] Description: false'
  3095	[process_configs] Description: false+ newline
  3096	+ local count=1
  3097	+ (( i = 0 ))
  3098	+ (( i < count ))
  3099	+ echo
  3100
  3101	+ (( i++ ))
  3102	+ (( i < count ))
  3103	+ local group_val=Unclassified
  3104	+ [[ true == true ]]
  3105	+ local object_key
  3106	++ awk '{print $NF}'
  3107	++ sed -E 's/[[:punct:]]*$//'
  3108	+ object_key=SOME-THING
  3109	++ jq -r --arg key SOME-THING 'map(select(.match[]? | contains($key))) | .[0].group'
  3110	+ group_val='Identified Matching Entries'
  3111	+ [[ -z Identified Matching Entries ]]
  3112	+ [[ Identified Matching Entries == \n\u\l\l ]]
  3113	+ [[ -z Identified Matching Entries ]]
  3114	+ [[ Identified Matching Entries == \n\u\l\l ]]
  3115	+ [[ true == true ]]
  3116	+ message '[process_configs] Group: Identified Matching Entries'
  3117	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  3118	+ local 'message=[process_configs] Group: Identified Matching Entries'
  3119	+ print '[process_configs] Group: Identified Matching Entries'
  3120	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  3121	+ echo -en '[process_configs] Group: Identified Matching Entries'
  3122	[process_configs] Group: Identified Matching Entries+ newline
  3123	+ local count=1
  3124	+ (( i = 0 ))
  3125	+ (( i < count ))
  3126	+ echo
  3127
  3128	+ (( i++ ))
  3129	+ (( i < count ))
  3130	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object 192.168.12.0 255.255.255.0'
  3131	++ jq -R .
  3132	++ jq -s .
  3133	+ local 'entries_2json=[
  3134	  "network-object host 10.0.0.1",
  3135	  "network-object 192.168.12.0 255.255.255.0"
  3136	]'
  3137	+ [[ 2 -eq 1 ]]
  3138	++ jq -n --arg object object-group --arg type 'network SOME-THING' --arg description false --argjson entries '[
  3139	  "network-object host 10.0.0.1",
  3140	  "network-object 192.168.12.0 255.255.255.0"
  3141	]' --arg group 'Identified Matching Entries' '{
  3142	                  object: $object,
  3143	                  type: $type,
  3144	                  description: ($description | select(. != "" and . != "null") // false),
  3145	                  entries: $entries,
  3146	                  group: $group
  3147	                }'
  3148	+ target_object='{
  3149	  "object": "object-group",
  3150	  "type": "network SOME-THING",
  3151	  "description": "false",
  3152	  "entries": [
  3153	    "network-object host 10.0.0.1",
  3154	    "network-object 192.168.12.0 255.255.255.0"
  3155	  ],
  3156	  "group": "Identified Matching Entries"
  3157	}'
  3158	+ export target_object
  3159	+ [[ true == true ]]
  3160	+ message '[process_configs] JSON Object (output):'
  3161	+ [[ -n [process_configs] JSON Object (output): ]]
  3162	+ local 'message=[process_configs] JSON Object (output):'
  3163	+ print '[process_configs] JSON Object (output):'
  3164	+ [[ -n [process_configs] JSON Object (output): ]]
  3165	+ echo -en '[process_configs] JSON Object (output):'
  3166	[process_configs] JSON Object (output):+ newline
  3167	+ local count=1
  3168	+ (( i = 0 ))
  3169	+ (( i < count ))
  3170	+ echo
  3171
  3172	+ (( i++ ))
  3173	+ (( i < count ))
  3174	+ print '{
  3175	  "object": "object-group",
  3176	  "type": "network SOME-THING",
  3177	  "description": "false",
  3178	  "entries": [
  3179	    "network-object host 10.0.0.1",
  3180	    "network-object 192.168.12.0 255.255.255.0"
  3181	  ],
  3182	  "group": "Identified Matching Entries"
  3183	}'
  3184	+ jq .
  3185	+ [[ -n {
  3186	  "object": "object-group",
  3187	  "type": "network SOME-THING",
  3188	  "description": "false",
  3189	  "entries": [
  3190	    "network-object host 10.0.0.1",
  3191	    "network-object 192.168.12.0 255.255.255.0"
  3192	  ],
  3193	  "group": "Identified Matching Entries"
  3194	} ]]
  3195	+ echo -en '{
  3196	  "object": "object-group",
  3197	  "type": "network SOME-THING",
  3198	  "description": "false",
  3199	  "entries": [
  3200	    "network-object host 10.0.0.1",
  3201	    "network-object 192.168.12.0 255.255.255.0"
  3202	  ],
  3203	  "group": "Identified Matching Entries"
  3204	}'
  3205	{
  3206	  "object": "object-group",
  3207	  "type": "network SOME-THING",
  3208	  "description": "false",
  3209	  "entries": [
  3210	    "network-object host 10.0.0.1",
  3211	    "network-object 192.168.12.0 255.255.255.0"
  3212	  ],
  3213	  "group": "Identified Matching Entries"
  3214	}
  3215	+ newline
  3216	+ local count=1
  3217	+ (( i = 0 ))
  3218	+ (( i < count ))
  3219	+ echo
  3220
  3221	+ (( i++ ))
  3222	+ (( i < count ))
  3223	+ return 0
  3224	+ [[ -n {
  3225	  "object": "object-group",
  3226	  "type": "network SOME-THING",
  3227	  "description": "false",
  3228	  "entries": [
  3229	    "network-object host 10.0.0.1",
  3230	    "network-object 192.168.12.0 255.255.255.0"
  3231	  ],
  3232	  "group": "Identified Matching Entries"
  3233	} ]]
  3234	+ print '|-----> Target Objects: {
  3235	  "object": "object-group",
  3236	  "type": "network SOME-THING",
  3237	  "description": "false",
  3238	  "entries": [
  3239	    "network-object host 10.0.0.1",
  3240	    "network-object 192.168.12.0 255.255.255.0"
  3241	  ],
  3242	  "group": "Identified Matching Entries"
  3243	}'
  3244	+ [[ -n |-----> Target Objects: {
  3245	  "object": "object-group",
  3246	  "type": "network SOME-THING",
  3247	  "description": "false",
  3248	  "entries": [
  3249	    "network-object host 10.0.0.1",
  3250	    "network-object 192.168.12.0 255.255.255.0"
  3251	  ],
  3252	  "group": "Identified Matching Entries"
  3253	} ]]
  3254	+ echo -en '|-----> Target Objects: {
  3255	  "object": "object-group",
  3256	  "type": "network SOME-THING",
  3257	  "description": "false",
  3258	  "entries": [
  3259	    "network-object host 10.0.0.1",
  3260	    "network-object 192.168.12.0 255.255.255.0"
  3261	  ],
  3262	  "group": "Identified Matching Entries"
  3263	}'
  3264	|-----> Target Objects: {
  3265	  "object": "object-group",
  3266	  "type": "network SOME-THING",
  3267	  "description": "false",
  3268	  "entries": [
  3269	    "network-object host 10.0.0.1",
  3270	    "network-object 192.168.12.0 255.255.255.0"
  3271	  ],
  3272	  "group": "Identified Matching Entries"
  3273	}+ [[ -n {
  3274	  "object": "object-group",
  3275	  "type": "network SOME-THING",
  3276	  "description": "false",
  3277	  "entries": [
  3278	    "network-object host 10.0.0.1",
  3279	    "network-object 192.168.12.0 255.255.255.0"
  3280	  ],
  3281	  "group": "Identified Matching Entries"
  3282	} ]]
  3283	++ printf '%s\n' '{
  3284	  "object": "object-group",
  3285	  "type": "network SOME-THING",
  3286	  "description": "false",
  3287	  "entries": [
  3288	    "network-object host 10.0.0.1",
  3289	    "network-object 192.168.12.0 255.255.255.0"
  3290	  ],
  3291	  "group": "Identified Matching Entries"
  3292	}'
  3293	++ jq -s --arg site configs/misc --arg device switch.conf '{
  3294	              config: {
  3295	                site: ($site | gsub("^.*/"; "")),
  3296	                device: $device
  3297	              },
  3298	              objects: .
  3299	            }'
  3300	+ wrapped_block='{
  3301	  "config": {
  3302	    "site": "misc",
  3303	    "device": "switch.conf"
  3304	  },
  3305	  "objects": [
  3306	    {
  3307	      "object": "object-group",
  3308	      "type": "network SOME-THING",
  3309	      "description": "false",
  3310	      "entries": [
  3311	        "network-object host 10.0.0.1",
  3312	        "network-object 192.168.12.0 255.255.255.0"
  3313	      ],
  3314	      "group": "Identified Matching Entries"
  3315	    }
  3316	  ]
  3317	}'
  3318	+ [[ true == true ]]
  3319	+ message '|-----> Config Objects:\n{
  3320	  "config": {
  3321	    "site": "misc",
  3322	    "device": "switch.conf"
  3323	  },
  3324	  "objects": [
  3325	    {
  3326	      "object": "object-group",
  3327	      "type": "network SOME-THING",
  3328	      "description": "false",
  3329	      "entries": [
  3330	        "network-object host 10.0.0.1",
  3331	        "network-object 192.168.12.0 255.255.255.0"
  3332	      ],
  3333	      "group": "Identified Matching Entries"
  3334	    }
  3335	  ]
  3336	}'
  3337	+ [[ -n |-----> Config Objects:\n{
  3338	  "config": {
  3339	    "site": "misc",
  3340	    "device": "switch.conf"
  3341	  },
  3342	  "objects": [
  3343	    {
  3344	      "object": "object-group",
  3345	      "type": "network SOME-THING",
  3346	      "description": "false",
  3347	      "entries": [
  3348	        "network-object host 10.0.0.1",
  3349	        "network-object 192.168.12.0 255.255.255.0"
  3350	      ],
  3351	      "group": "Identified Matching Entries"
  3352	    }
  3353	  ]
  3354	} ]]
  3355	+ local 'message=|-----> Config Objects:\n{
  3356	  "config": {
  3357	    "site": "misc",
  3358	    "device": "switch.conf"
  3359	  },
  3360	  "objects": [
  3361	    {
  3362	      "object": "object-group",
  3363	      "type": "network SOME-THING",
  3364	      "description": "false",
  3365	      "entries": [
  3366	        "network-object host 10.0.0.1",
  3367	        "network-object 192.168.12.0 255.255.255.0"
  3368	      ],
  3369	      "group": "Identified Matching Entries"
  3370	    }
  3371	  ]
  3372	}'
  3373	+ print '|-----> Config Objects:\n{
  3374	  "config": {
  3375	    "site": "misc",
  3376	    "device": "switch.conf"
  3377	  },
  3378	  "objects": [
  3379	    {
  3380	      "object": "object-group",
  3381	      "type": "network SOME-THING",
  3382	      "description": "false",
  3383	      "entries": [
  3384	        "network-object host 10.0.0.1",
  3385	        "network-object 192.168.12.0 255.255.255.0"
  3386	      ],
  3387	      "group": "Identified Matching Entries"
  3388	    }
  3389	  ]
  3390	}'
  3391	+ [[ -n |-----> Config Objects:\n{
  3392	  "config": {
  3393	    "site": "misc",
  3394	    "device": "switch.conf"
  3395	  },
  3396	  "objects": [
  3397	    {
  3398	      "object": "object-group",
  3399	      "type": "network SOME-THING",
  3400	      "description": "false",
  3401	      "entries": [
  3402	        "network-object host 10.0.0.1",
  3403	        "network-object 192.168.12.0 255.255.255.0"
  3404	      ],
  3405	      "group": "Identified Matching Entries"
  3406	    }
  3407	  ]
  3408	} ]]
  3409	+ echo -en '|-----> Config Objects:\n{
  3410	  "config": {
  3411	    "site": "misc",
  3412	    "device": "switch.conf"
  3413	  },
  3414	  "objects": [
  3415	    {
  3416	      "object": "object-group",
  3417	      "type": "network SOME-THING",
  3418	      "description": "false",
  3419	      "entries": [
  3420	        "network-object host 10.0.0.1",
  3421	        "network-object 192.168.12.0 255.255.255.0"
  3422	      ],
  3423	      "group": "Identified Matching Entries"
  3424	    }
  3425	  ]
  3426	}'
  3427	|-----> Config Objects:
  3428	{
  3429	  "config": {
  3430	    "site": "misc",
  3431	    "device": "switch.conf"
  3432	  },
  3433	  "objects": [
  3434	    {
  3435	      "object": "object-group",
  3436	      "type": "network SOME-THING",
  3437	      "description": "false",
  3438	      "entries": [
  3439	        "network-object host 10.0.0.1",
  3440	        "network-object 192.168.12.0 255.255.255.0"
  3441	      ],
  3442	      "group": "Identified Matching Entries"
  3443	    }
  3444	  ]
  3445	}+ newline
  3446	+ local count=1
  3447	+ (( i = 0 ))
  3448	+ (( i < count ))
  3449	+ echo
  3450
  3451	+ (( i++ ))
  3452	+ (( i < count ))
  3453	+ print '{
  3454	  "config": {
  3455	    "site": "misc",
  3456	    "device": "switch.conf"
  3457	  },
  3458	  "objects": [
  3459	    {
  3460	      "object": "object-group",
  3461	      "type": "network SOME-THING",
  3462	      "description": "false",
  3463	      "entries": [
  3464	        "network-object host 10.0.0.1",
  3465	        "network-object 192.168.12.0 255.255.255.0"
  3466	      ],
  3467	      "group": "Identified Matching Entries"
  3468	    }
  3469	  ]
  3470	}'
  3471	+ [[ -n {
  3472	  "config": {
  3473	    "site": "misc",
  3474	    "device": "switch.conf"
  3475	  },
  3476	  "objects": [
  3477	    {
  3478	      "object": "object-group",
  3479	      "type": "network SOME-THING",
  3480	      "description": "false",
  3481	      "entries": [
  3482	        "network-object host 10.0.0.1",
  3483	        "network-object 192.168.12.0 255.255.255.0"
  3484	      ],
  3485	      "group": "Identified Matching Entries"
  3486	    }
  3487	  ]
  3488	} ]]
  3489	+ echo -en '{
  3490	  "config": {
  3491	    "site": "misc",
  3492	    "device": "switch.conf"
  3493	  },
  3494	  "objects": [
  3495	    {
  3496	      "object": "object-group",
  3497	      "type": "network SOME-THING",
  3498	      "description": "false",
  3499	      "entries": [
  3500	        "network-object host 10.0.0.1",
  3501	        "network-object 192.168.12.0 255.255.255.0"
  3502	      ],
  3503	      "group": "Identified Matching Entries"
  3504	    }
  3505	  ]
  3506	}'
  3507	+ return 0
  3508	+ export json_outfile=reports/json/10.0.0.1.json
  3509	+ json_outfile=reports/json/10.0.0.1.json
  3510	+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json ]]
  3511	+ jq -s --arg target 10.0.0.1 '{ target: $target, configs: . }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V/fragments.json
  3512	+ [[ true == true ]]
  3513	+ jq . reports/json/10.0.0.1.json
  3514	{
  3515	  "target": "10.0.0.1",
  3516	  "configs": [
  3517	    {
  3518	      "config": {
  3519	        "site": "cisco",
  3520	        "device": "fw1.cfg"
  3521	      },
  3522	      "objects": [
  3523	        {
  3524	          "object": "object-group",
  3525	          "type": "network BU1-NETWORK",
  3526	          "description": "false",
  3527	          "entries": [
  3528	            "network-object host 10.0.0.1",
  3529	            "network-object host 10.0.1.2",
  3530	            "network-object 192.168.1.0 255.255.255.0"
  3531	          ],
  3532	          "group": "Identified Matching Entries"
  3533	        }
  3534	      ]
  3535	    },
  3536	    {
  3537	      "config": {
  3538	        "site": "cisco",
  3539	        "device": "fw1.cfg"
  3540	      },
  3541	      "objects": [
  3542	        {
  3543	          "object": "access-list",
  3544	          "type": false,
  3545	          "description": "false",
  3546	          "entries": [
  3547	            "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  3548	          ],
  3549	          "group": "Unclassified"
  3550	        }
  3551	      ]
  3552	    },
  3553	    {
  3554	      "config": {
  3555	        "site": "misc",
  3556	        "device": "switch.conf"
  3557	      },
  3558	      "objects": [
  3559	        {
  3560	          "object": "object-group",
  3561	          "type": "network SOME-THING",
  3562	          "description": "false",
  3563	          "entries": [
  3564	            "network-object host 10.0.0.1",
  3565	            "network-object 192.168.12.0 255.255.255.0"
  3566	          ],
  3567	          "group": "Identified Matching Entries"
  3568	        }
  3569	      ]
  3570	    }
  3571	  ]
  3572	}
  3573	+ newline
  3574	+ local count=1
  3575	+ (( i = 0 ))
  3576	+ (( i < count ))
  3577	+ echo
  3578
  3579	+ (( i++ ))
  3580	+ (( i < count ))
  3581	+ return 0
  3582	+ unset verbose debug
  3583	+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V ]]
  3584	+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sf4yu24r0V

     1	{
     2	  "target": "10.0.0.1",
     3	  "configs": [
     4	    {
     5	      "config": {
     6	        "site": "cisco",
     7	        "device": "fw1.cfg"
     8	      },
     9	      "objects": [
    10	        {
    11	          "object": "object-group",
    12	          "type": "network BU1-NETWORK",
    13	          "description": "false",
    14	          "entries": [
    15	            "network-object host 10.0.0.1",
    16	            "network-object host 10.0.1.2",
    17	            "network-object 192.168.1.0 255.255.255.0"
    18	          ],
    19	          "group": "Identified Matching Entries"
    20	        }
    21	      ]
    22	    },
    23	    {
    24	      "config": {
    25	        "site": "cisco",
    26	        "device": "fw1.cfg"
    27	      },
    28	      "objects": [
    29	        {
    30	          "object": "access-list",
    31	          "type": false,
    32	          "description": "false",
    33	          "entries": [
    34	            "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
    35	          ],
    36	          "group": "Unclassified"
    37	        }
    38	      ]
    39	    },
    40	    {
    41	      "config": {
    42	        "site": "misc",
    43	        "device": "switch.conf"
    44	      },
    45	      "objects": [
    46	        {
    47	          "object": "object-group",
    48	          "type": "network SOME-THING",
    49	          "description": "false",
    50	          "entries": [
    51	            "network-object host 10.0.0.1",
    52	            "network-object 192.168.12.0 255.255.255.0"
    53	          ],
    54	          "group": "Identified Matching Entries"
    55	        }
    56	      ]
    57	    }
    58	  ]
    59	}
