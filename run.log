$ rm -rf ./reports ./targets ./.cache ./.local ;
$ bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs ;
$ cat -n ./.local/jobs/10.0.0.1.job ;
# cat -n ./reports/json/10.0.0.1.json ;

devops: network-resources (master *$%>) $ rm -rf ./reports ./targets ./.cache ./.local ; bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs ; echo ; cat -n ./.local/jobs/10.0.0.1.job ; echo ; cat -n ./reports/json/10.0.0.1.json ;
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxnaiVqhg5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxnaiVqhg5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzE0NjI2MzgyNjEzOTAwMAo
++ divisor=MTc0NzE0NjI2MzgyNjEzOTAwMAo
++ print 'DEBUG: divisor = '\''MTc0NzE0NjI2MzgyNjEzOTAwMAo'\'''
++ [[ -n DEBUG: divisor = 'MTc0NzE0NjI2MzgyNjEzOTAwMAo' ]]
++ echo -en 'DEBUG: divisor = '\''MTc0NzE0NjI2MzgyNjEzOTAwMAo'\'''
DEBUG: divisor = 'MTc0NzE0NjI2MzgyNjEzOTAwMAo'+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ filtered_target_listing=()
+ declare -a filtered_target_listing
+ [[ 4 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ [[ -z '' ]]
+ delaying_factor=0.05
+ [[ -z '' ]]
+ listing_filename=ips.list
+ [[ -z '' ]]
+ parallel_threads=100
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-13 07:24:23'
+ SECONDS=0
+ [[ -z true ]]
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ local configs_list_cache=.cache/configs.list
+ mkdir -p .cache
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
+ sort
+ [[ true == true ]]
+ print 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ echo -en 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ :
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ ! -f ips.list ]]
+ mapfile -t target_listing
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ [[ 15 -eq 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'IPS/CIDR Blocks: '
+ [[ -n IPS/CIDR Blocks:  ]]
+ echo -en 'IPS/CIDR Blocks: '
IPS/CIDR Blocks: + newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ echo -en '  - 10.0.0.1'
  - 10.0.0.1+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ echo -en '  - 10.0.1.2'
  - 10.0.1.2+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
  - 10.0.2.3+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
  - 10.10.10.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
  - 172.16.0.5+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
  - 172.16.1.6+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
  - 172.18.1.20+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ echo -en '  - 172.31.255.254'
  - 172.31.255.254+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
  - 192.0.2.50+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ echo -en '  - 192.168.1.10'
  - 192.168.1.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
  - 192.168.1.11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
  - 192.168.2.12+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
  - 192.168.100.100+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
  - 198.51.100.75+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ echo -en '  - 203.0.113.25'
  - 203.0.113.25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ mkdir -p targets
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'Mapping IPs to config files (pre-scan phase)...'
+ [[ -n Mapping IPs to config files (pre-scan phase)... ]]
+ echo -en 'Mapping IPs to config files (pre-scan phase)...'
Mapping IPs to config files (pre-scan phase)...+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ matching_configs
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=28144
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 28144)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 28144) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 28144)'
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json
+ newline
+ local count=1
+ local ip_addr=10.0.0.1
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=targets/10.0.0.1.json
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.0.0.1 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=28150
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 28150)'
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 28150) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 28150)'
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.0.1.2 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      29'
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ ip_cleaned=10.0.2.3
+ IFS=
+ read -r config_file
+ target_file=targets/10.0.2.3.json
+ config_file=cisco/fw1.cfg
+ job_pid=28160
+ job_pids+=("${job_pid}")
++ grep -oFw 10.0.0.1 configs/cisco/fw1.cfg
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 28160)'
++ wc -l
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 28160) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 28160)'
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json
+ newline
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
++ tr -d ' '
++ wc -l
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.0.2.3 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ match_count=2
+ site=cisco
+ device=fw1.cfg
+ config_lines='      29'
++ true
++ print '[]'
++ [[ -n [] ]]
+ ip_cleaned=10.10.10.10
+ local matched_files=
++ echo -en '[]'
+ [[ -n '' ]]
+ return 0
+ target_file=targets/10.10.10.10.json
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 2 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ grep -oFw 10.0.1.2 configs/cisco/fw1.cfg
++ wc -l
+ job_pid=28176
+ job_pids+=("${job_pid}")
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json
++ tr -d ' '
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 28176)'
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 28176) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 28176)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.10.10.10 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ true
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
+ job_pid=28187
+ job_pids+=("${job_pid}")
++ wc -l
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 28187)'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 28187) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 28187)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.16.0.5 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ config_lines='      10'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ true
++ grep -oFw 10.0.0.1 configs/misc/switch.conf
++ wc -l
+ ip_cleaned=172.16.1.6
+ target_file=targets/172.16.1.6.json
+ local matched_files=
++ wc -l
+ [[ -n '' ]]
+ return 0
++ tr -d ' '
+ job_pid=28199
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 28199)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 28199) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 28199)'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json
+ newline
+ local ip_addr=172.16.1.6
+ local count=1
+ (( i = 0 ))
+ local target_file=targets/172.16.1.6.json
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.16.1.6 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
+ match_count=1
+ site=misc
+ device=switch.conf
++ tr -d '\r'
+ config_lines='      10'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ grep -oFw 10.0.1.2 configs/misc/switch.conf
++ wc -l
++ true
++ tr -d ' '
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
+ job_pid=28213
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 28213)'
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 28213) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 28213)'
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.18.1.20 configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=misc
+ device=switch.conf
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ ip_cleaned=172.31.255.254
++ jq '{configs: .}'
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ target_file=targets/172.31.255.254.json
+ job_pid=28225
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 28225)'
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 28225) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 28225)'
+ local ip_addr=172.31.255.254
+ local target_file=targets/172.31.255.254.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.31.255.254 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ jq -r
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
+ local matched_files=configs/misc/switch.conf
++ jq '{configs: .}'
+ [[ -n configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
+ job_pid=28235
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 28235)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 28235) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 28235)'
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.0.2.50 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ config_lines='      10'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=192.168.1.10
+ target_file=targets/192.168.1.10.json
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
++ grep -oFw 172.31.255.254 configs/misc/switch.conf
+ return 0
+ job_pid=28247
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 28247)'
++ tr -d ' '
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 28247) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 28247)'
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.1.10 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ match_count=1
+ site=misc
+ device=switch.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ job_pid=28258
++ wc -l
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 28258)'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ local ip_addr=192.168.1.11
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ local target_file=targets/192.168.1.11.json
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 28258) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 28258)'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.1.11 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ tr -d '\r'
++ echo -en 192.168.2.12
+ config_lines='      29'
++ grep -oFw 192.168.1.10 configs/cisco/fw1.cfg
++ wc -l
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
++ tr -d ' '
+ local matched_files=
+ ip_cleaned=192.168.2.12
+ [[ -n '' ]]
+ return 0
+ target_file=targets/192.168.2.12.json
+ job_pid=28271
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ job_pids+=("${job_pid}")
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json
++ jq '{configs: .}'
+ local ip_addr=192.168.2.12
+ job_ip_map["$job_pid"]=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 28271)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 28271) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 28271)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.2.12 configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ ip_cleaned=192.168.100.100
+ target_file=targets/192.168.100.100.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=28282
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 28282)'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 28282) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 28282)'
+ newline
+ local count=1
+ (( i = 0 ))
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
++ grep -lF 192.168.100.100 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
+ local matched_files=
++ echo -en '[
  {
++ jq '{configs: .}'
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
+ [[ -n '' ]]
+ return 0
  }
]'
+ job_pid=28292
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 28292)'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 28292) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 28292)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ return 0
++ grep -lF 198.51.100.75 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ true
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=28298
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 28298)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 28298) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 28298)'
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json
+ local ip_addr=203.0.113.25
+ newline
+ local target_file=targets/203.0.113.25.json
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  15 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 28144
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 28144)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 28144) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 28144)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28150
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 28150)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 28150) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 28150)'
++ grep -lF 203.0.113.25 configs/cisco/fw1.cfg configs/misc/switch.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28160
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 28160)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 28160) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 28160)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28176
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 28176)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 28176) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 28176)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28187
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 28187)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 28187) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 28187)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28199
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 28199)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 28199) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 28199)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28213
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 28213)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 28213) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 28213)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28225
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 28225)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 28225) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 28225)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28235
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 28235)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 28235) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 28235)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28247
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 28258
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 28258)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 28258) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 28258)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28271
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 28271)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 28271) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 28271)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28282
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 28282)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 28282) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 28282)'
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ IFS=
+ echo

+ read -r config_file
+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28292
+ config_file=cisco/fw1.cfg
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 28292)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 28292) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 28292)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28298
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ wc -l
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ return 0
+ config_lines='      29'
++ grep -oFw 203.0.113.25 configs/cisco/fw1.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ return 0
+ ((  2 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 28247
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 28247)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 28247) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 28247)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28298
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 28298)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 28298) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 28298)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs mapped:    5'
+ [[ -n Total IPs mapped:    5 ]]
+ echo -en 'Total IPs mapped:    5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:        10'
+ [[ -n Unmapped IPs:        10 ]]
+ echo -en 'Unmapped IPs:        10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:'
+ [[ -n Unmapped IPs: ]]
+ echo -en 'Unmapped IPs:'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ tr -d '\r'
++ echo -en 10.0.2.3
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=28426
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 28426)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 28426) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 28426)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=2
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=28429
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 28429)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 28429) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 28429)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.31.255.254
+ parse_configs 10.0.1.2 2
+ local ip_addr=10.0.1.2
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_pid=28433
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ job_pids+=("${job_pid}")
+ mkdir -p .local/jobs .local/errors
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 28433)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 28433) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 28433)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 172.31.255.254 3
+ local ip_addr=172.31.255.254
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 4
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=28438
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 28438)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 28438) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 28438)'
+ newline
+ local count=1
+ parse_configs 192.168.1.10 4
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ local ip_addr=192.168.1.10
+ logfile=.local/jobs/10.0.1.2.job
+ local padded_index=4
+ [[ true == true ]]
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ip_addr=203.0.113.25
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=5
+ job_pid=28444
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 28444)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 28444) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 28444)'
+ logfile=.local/jobs/172.31.255.254.job
+ [[ true == true ]]
+ parse_configs 203.0.113.25 5
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ newline
+ local count=1
+ (( i = 0 ))
+ local ip_addr=203.0.113.25
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 28426
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 28429
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 28433
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 28438
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 28444
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.31.255.254'
+ [[ -n \n[DONE] IP: 172.31.255.254 ]]
+ echo -en '\n[DONE] IP: 172.31.255.254'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 28426
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 28426)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 28426) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 28426)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28429
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 28429)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 28429) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 28429)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28433
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 28433)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 28433) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 28433)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28438
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 28438)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 28438) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 28438)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 28444
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 28444)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 28444) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 28444)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ local json_dir=reports/json
+ local master_json=reports/reports.json
+ expected_reports=5
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=5
+ timeout=5
+ elapsed=0
+ ((  actual_reports < expected_reports && elapsed < timeout * 10  ))
+ ((  actual_reports < expected_reports  ))
+ [[ -d reports/json ]]
+ mapfile -t json_files
++ find reports/json -type f -name '*.json'
++ sort
+ ((  5 > 0  ))
+ jq -s . reports/json/10.0.0.1.json reports/json/10.0.1.2.json reports/json/172.31.255.254.json reports/json/192.168.1.10.json reports/json/203.0.113.25.json
+ generate_csvoutput
+ local input_json=reports/reports.json
+ local output_csv=reports/reports.csv
+ [[ ! -f reports/reports.json ]]
+ message target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ local message=target,site,device,object,entry,description,group
+ print target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ echo -en target,site,device,object,entry,description,group
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ jq -r '
        .[] as $entry
        | $entry.configs[]
        | .config as $cfg
        | .objects[]
        | [
            $entry.target,
            $cfg.site,
            $cfg.device,
            (.object // "none"),
            (.entries[0] // "none"),  # assuming you want the first entry
            (.description // "none"),
            (.group // "none")
          ]
        | @csv' reports/reports.json
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ print 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ echo -en 'CSV Report Summary (tabulated):'
CSV Report Summary (tabulated):+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ column -t -s, reports/reports.csv
+ less -SFX
target            site     device         object          entry                                                       descr>
"10.0.0.1"        "cisco"  "fw1.cfg"      "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.0.1"        "cisco"  "fw1.cfg"      "access-list"   "access-list OUTSIDE extended permit ip host 10.0.0.1 any"  "fals>
"10.0.0.1"        "misc"   "switch.conf"  "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.1.2"        "cisco"  "fw1.cfg"      "object-group"  "network-object host 10.0.0.1"                              "fals>
"10.0.1.2"        "misc"   "switch.conf"  "interface"     "ip address 10.0.1.2 255.255.255.0"                         "fals>
"172.31.255.254"  "misc"   "switch.conf"  "interface"     "ip address 172.31.255.254 255.255.255.0"                   "fals>
"192.168.1.10"    "cisco"  "fw1.cfg"      "object"        "host 192.168.1.10"                                         "fals>
"203.0.113.25"    "cisco"  "fw1.cfg"      "object"        "host 203.0.113.25"                                         "fals>
+ return 0
+ local elapsed=5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ printf '[INFO] Started at: %s\n' '2025-05-13 07:24:23'
[INFO] Started at: 2025-05-13 07:24:23
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 5
[INFO] Total runtime: 00:00:05
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxnaiVqhg5 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxnaiVqhg5

     1	+ set -euo pipefail
     2	+ export LC_ALL=C
     3	+ LC_ALL=C
     4	++ mktemp -d
     5	+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w
     6	+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w
     7	+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
     8	+ source ./scripts/tools-devops.shell
     9	++ [[ -n '' ]]
    10	++ readonly __TOOLS_DEVOPS_SOURCED=1
    11	++ __TOOLS_DEVOPS_SOURCED=1
    12	++ [[ 5 -lt 4 ]]
    13	++ alias log-info=log_info
    14	++ alias log-warn=log_warn
    15	++ alias log-error=log_error
    16	++ alias error-message=error_message
    17	++ alias exit-error=exit_error
    18	++ alias detect-platform=detect_platform
    19	++ alias install-packages=install_packages
    20	++ alias install-missing=install_missing
    21	++ alias display-help=display_help_generic
    22	++ alias relative-configpath=relative_configpath
    23	++ alias validate-address=validate_address
    24	++ export LC_ALL=C
    25	++ LC_ALL=C
    26	++ export 'nl=\n'
    27	++ nl='\n'
    28	++ local_state_dir=.local
    29	++ mkdir -p .local/errors .local/jobs .local/stats
    30	++ export stats_folder=.local/stats/
    31	++ stats_folder=.local/stats/
    32	++ export reports_logsfile=.local/stats//reports.jobs
    33	++ reports_logsfile=.local/stats//reports.jobs
    34	++ export started_logsfile=.local/stats//started.jobs
    35	++ started_logsfile=.local/stats//started.jobs
    36	++ export success_logsfile=.local/stats//success.jobs
    37	++ success_logsfile=.local/stats//success.jobs
    38	++ export targets_logsfile=.local/stats//targets.jobs
    39	++ targets_logsfile=.local/stats//targets.jobs
    40	+++ date +%s%N
    41	+++ base64
    42	+++ tr -dc a-zA-Z0-9
    43	++ export divisor=MTc0NzE0NjI2NTE0NTE2NjAwMAo
    44	++ divisor=MTc0NzE0NjI2NTE0NTE2NjAwMAo
    45	++ print 'DEBUG: divisor = '\''MTc0NzE0NjI2NTE0NTE2NjAwMAo'\'''
    46	++ [[ -n DEBUG: divisor = 'MTc0NzE0NjI2NTE0NTE2NjAwMAo' ]]
    47	++ echo -en 'DEBUG: divisor = '\''MTc0NzE0NjI2NTE0NTE2NjAwMAo'\'''
    48	DEBUG: divisor = 'MTc0NzE0NjI2NTE0NTE2NjAwMAo'+ source ./scripts/tools-extraction.shell
    49	++ [[ -n '' ]]
    50	++ readonly __TOOLS_EXTRACTION_SOURCED=1
    51	++ __TOOLS_EXTRACTION_SOURCED=1
    52	++ alias extract-configs=extract_configs
    53	++ alias process-configs=process_configs
    54	+ alias parse-configs=main
    55	+ matched_blocks_byfile=()
    56	+ declare -gA matched_blocks_byfile
    57	+ export script_name=./scripts/parse-configs.shell
    58	+ script_name=./scripts/parse-configs.shell
    59	+ [[ 9 -ge 1 ]]
    60	+ [[ --configs=configs =~ ^-*(h|help)$ ]]
    61	+ main --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
    62	+ file_extensions=()
    63	+ declare -a file_extensions
    64	+ oIFS='
    65	'
    66	+ for xitem in "${@}"
    67	+ IFS==
    68	+ read -r key value
    69	++ echo -e --configs=configs
    70	++ sed -e '1s|^\(-\)\{1,\}||'
    71	+ [[ configs =~ ^(classify|g)$ ]]
    72	+ [[ configs =~ ^(file-ext|x)$ ]]
    73	+ [[ configs =~ ^(configs|c)$ ]]
    74	+ export configs_dirpath=configs
    75	+ configs_dirpath=configs
    76	+ [[ configs =~ ^(index|n)$ ]]
    77	+ [[ configs =~ ^(ip-addr|i)$ ]]
    78	+ [[ configs =~ ^(logs|o)$ ]]
    79	+ [[ configs =~ ^(matrix|m)$ ]]
    80	+ [[ configs =~ ^(reports|r)$ ]]
    81	+ [[ configs =~ ^(validate|v)$ ]]
    82	+ [[ configs == \h\e\l\p ]]
    83	+ [[ configs == \d\e\b\u\g ]]
    84	+ [[ configs == \d\r\y\-\r\u\n ]]
    85	+ [[ configs == \v\e\r\b\o\s\e ]]
    86	+ for xitem in "${@}"
    87	+ IFS==
    88	+ read -r key value
    89	++ echo -e --ip-addr=10.0.0.1
    90	++ sed -e '1s|^\(-\)\{1,\}||'
    91	+ [[ ip-addr =~ ^(classify|g)$ ]]
    92	+ [[ ip-addr =~ ^(file-ext|x)$ ]]
    93	+ [[ ip-addr =~ ^(configs|c)$ ]]
    94	+ [[ ip-addr =~ ^(index|n)$ ]]
    95	+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
    96	+ local target_address=10.0.0.1
    97	+ [[ ip-addr =~ ^(logs|o)$ ]]
    98	+ [[ ip-addr =~ ^(matrix|m)$ ]]
    99	+ [[ ip-addr =~ ^(reports|r)$ ]]
   100	+ [[ ip-addr =~ ^(validate|v)$ ]]
   101	+ [[ ip-addr == \h\e\l\p ]]
   102	+ [[ ip-addr == \d\e\b\u\g ]]
   103	+ [[ ip-addr == \d\r\y\-\r\u\n ]]
   104	+ [[ ip-addr == \v\e\r\b\o\s\e ]]
   105	+ for xitem in "${@}"
   106	+ IFS==
   107	+ read -r key value
   108	++ echo -e --index=1
   109	++ sed -e '1s|^\(-\)\{1,\}||'
   110	+ [[ index =~ ^(classify|g)$ ]]
   111	+ [[ index =~ ^(file-ext|x)$ ]]
   112	+ [[ index =~ ^(configs|c)$ ]]
   113	+ [[ index =~ ^(index|n)$ ]]
   114	+ local target_index=1
   115	+ [[ index =~ ^(ip-addr|i)$ ]]
   116	+ [[ index =~ ^(logs|o)$ ]]
   117	+ [[ index =~ ^(matrix|m)$ ]]
   118	+ [[ index =~ ^(reports|r)$ ]]
   119	+ [[ index =~ ^(validate|v)$ ]]
   120	+ [[ index == \h\e\l\p ]]
   121	+ [[ index == \d\e\b\u\g ]]
   122	+ [[ index == \d\r\y\-\r\u\n ]]
   123	+ [[ index == \v\e\r\b\o\s\e ]]
   124	+ for xitem in "${@}"
   125	+ IFS==
   126	+ read -r key value
   127	++ echo -e --matrix=matrix.json
   128	++ sed -e '1s|^\(-\)\{1,\}||'
   129	+ [[ matrix =~ ^(classify|g)$ ]]
   130	+ [[ matrix =~ ^(file-ext|x)$ ]]
   131	+ [[ matrix =~ ^(configs|c)$ ]]
   132	+ [[ matrix =~ ^(index|n)$ ]]
   133	+ [[ matrix =~ ^(ip-addr|i)$ ]]
   134	+ [[ matrix =~ ^(logs|o)$ ]]
   135	+ [[ matrix =~ ^(matrix|m)$ ]]
   136	+ local matrix_filename=matrix.json
   137	+ [[ matrix =~ ^(reports|r)$ ]]
   138	+ [[ matrix =~ ^(validate|v)$ ]]
   139	+ [[ matrix == \h\e\l\p ]]
   140	+ [[ matrix == \d\e\b\u\g ]]
   141	+ [[ matrix == \d\r\y\-\r\u\n ]]
   142	+ [[ matrix == \v\e\r\b\o\s\e ]]
   143	+ for xitem in "${@}"
   144	+ IFS==
   145	+ read -r key value
   146	++ echo -e --reports=reports
   147	++ sed -e '1s|^\(-\)\{1,\}||'
   148	+ [[ reports =~ ^(classify|g)$ ]]
   149	+ [[ reports =~ ^(file-ext|x)$ ]]
   150	+ [[ reports =~ ^(configs|c)$ ]]
   151	+ [[ reports =~ ^(index|n)$ ]]
   152	+ [[ reports =~ ^(ip-addr|i)$ ]]
   153	+ [[ reports =~ ^(logs|o)$ ]]
   154	+ [[ reports =~ ^(matrix|m)$ ]]
   155	+ [[ reports =~ ^(reports|r)$ ]]
   156	+ local reports_folder=reports
   157	+ [[ reports =~ ^(validate|v)$ ]]
   158	+ [[ reports == \h\e\l\p ]]
   159	+ [[ reports == \d\e\b\u\g ]]
   160	+ [[ reports == \d\r\y\-\r\u\n ]]
   161	+ [[ reports == \v\e\r\b\o\s\e ]]
   162	+ for xitem in "${@}"
   163	+ IFS==
   164	+ read -r key value
   165	++ echo -e --file-ext=cfg,conf,cnf
   166	++ sed -e '1s|^\(-\)\{1,\}||'
   167	+ [[ file-ext =~ ^(classify|g)$ ]]
   168	+ [[ file-ext =~ ^(file-ext|x)$ ]]
   169	+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
   170	++ print cfg,conf,cnf
   171	++ [[ -n cfg,conf,cnf ]]
   172	++ echo -en cfg,conf,cnf
   173	++ tr ':,;\n ' '\n'
   174	+ [[ file-ext =~ ^(configs|c)$ ]]
   175	+ [[ file-ext =~ ^(index|n)$ ]]
   176	+ [[ file-ext =~ ^(ip-addr|i)$ ]]
   177	+ [[ file-ext =~ ^(logs|o)$ ]]
   178	+ [[ file-ext =~ ^(matrix|m)$ ]]
   179	+ [[ file-ext =~ ^(reports|r)$ ]]
   180	+ [[ file-ext =~ ^(validate|v)$ ]]
   181	+ [[ file-ext == \h\e\l\p ]]
   182	+ [[ file-ext == \d\e\b\u\g ]]
   183	+ [[ file-ext == \d\r\y\-\r\u\n ]]
   184	+ [[ file-ext == \v\e\r\b\o\s\e ]]
   185	+ for xitem in "${@}"
   186	+ IFS==
   187	+ read -r key value
   188	++ echo -e --classify
   189	++ sed -e '1s|^\(-\)\{1,\}||'
   190	+ [[ classify =~ ^(classify|g)$ ]]
   191	+ export classify_targets=true
   192	+ classify_targets=true
   193	+ [[ classify =~ ^(file-ext|x)$ ]]
   194	+ [[ classify =~ ^(configs|c)$ ]]
   195	+ [[ classify =~ ^(index|n)$ ]]
   196	+ [[ classify =~ ^(ip-addr|i)$ ]]
   197	+ [[ classify =~ ^(logs|o)$ ]]
   198	+ [[ classify =~ ^(matrix|m)$ ]]
   199	+ [[ classify =~ ^(reports|r)$ ]]
   200	+ [[ classify =~ ^(validate|v)$ ]]
   201	+ [[ classify == \h\e\l\p ]]
   202	+ [[ classify == \d\e\b\u\g ]]
   203	+ [[ classify == \d\r\y\-\r\u\n ]]
   204	+ [[ classify == \v\e\r\b\o\s\e ]]
   205	+ for xitem in "${@}"
   206	+ IFS==
   207	+ read -r key value
   208	++ echo -e --verbose
   209	++ sed -e '1s|^\(-\)\{1,\}||'
   210	+ [[ verbose =~ ^(classify|g)$ ]]
   211	+ [[ verbose =~ ^(file-ext|x)$ ]]
   212	+ [[ verbose =~ ^(configs|c)$ ]]
   213	+ [[ verbose =~ ^(index|n)$ ]]
   214	+ [[ verbose =~ ^(ip-addr|i)$ ]]
   215	+ [[ verbose =~ ^(logs|o)$ ]]
   216	+ [[ verbose =~ ^(matrix|m)$ ]]
   217	+ [[ verbose =~ ^(reports|r)$ ]]
   218	+ [[ verbose =~ ^(validate|v)$ ]]
   219	+ [[ verbose == \h\e\l\p ]]
   220	+ [[ verbose == \d\e\b\u\g ]]
   221	+ [[ verbose == \d\r\y\-\r\u\n ]]
   222	+ [[ verbose == \v\e\r\b\o\s\e ]]
   223	+ export verbose=true
   224	+ verbose=true
   225	+ for xitem in "${@}"
   226	+ IFS==
   227	+ read -r key value
   228	++ echo -e --debug
   229	++ sed -e '1s|^\(-\)\{1,\}||'
   230	+ [[ debug =~ ^(classify|g)$ ]]
   231	+ [[ debug =~ ^(file-ext|x)$ ]]
   232	+ [[ debug =~ ^(configs|c)$ ]]
   233	+ [[ debug =~ ^(index|n)$ ]]
   234	+ [[ debug =~ ^(ip-addr|i)$ ]]
   235	+ [[ debug =~ ^(logs|o)$ ]]
   236	+ [[ debug =~ ^(matrix|m)$ ]]
   237	+ [[ debug =~ ^(reports|r)$ ]]
   238	+ [[ debug =~ ^(validate|v)$ ]]
   239	+ [[ debug == \h\e\l\p ]]
   240	+ [[ debug == \d\e\b\u\g ]]
   241	+ export debug=true
   242	+ debug=true
   243	+ [[ debug == \d\r\y\-\r\u\n ]]
   244	+ [[ debug == \v\e\r\b\o\s\e ]]
   245	+ IFS='
   246	'
   247	+ [[ -z true ]]
   248	+ [[ -z true ]]
   249	+ [[ '' == true ]]
   250	+ [[ -z true ]]
   251	+ [[ -z x ]]
   252	+ [[ 3 -eq 0 ]]
   253	+ export configs_dirpath=configs
   254	+ configs_dirpath=configs
   255	+ source_configs=()
   256	+ declare -ga source_configs
   257	+ target_configlist_json=targets/10.0.0.1.json
   258	+ [[ ! -f targets/10.0.0.1.json ]]
   259	+ mapfile -t source_configs
   260	++ jq -r '.configs[] | "\(.config.site)/\(.config.device)"' targets/10.0.0.1.json
   261	+ for i in "${!source_configs[@]}"
   262	+ [[ cisco/fw1.cfg != \c\o\n\f\i\g\s\/* ]]
   263	+ source_configs[$i]=configs/cisco/fw1.cfg
   264	+ for i in "${!source_configs[@]}"
   265	+ [[ misc/switch.conf != \c\o\n\f\i\g\s\/* ]]
   266	+ source_configs[$i]=configs/misc/switch.conf
   267	+ [[ true == true ]]
   268	+ print 'Config JSON file used: targets/10.0.0.1.json'
   269	+ [[ -n Config JSON file used: targets/10.0.0.1.json ]]
   270	+ echo -en 'Config JSON file used: targets/10.0.0.1.json'
   271	Config JSON file used: targets/10.0.0.1.json+ print 'Extracted config paths from JSON:'
   272	+ [[ -n Extracted config paths from JSON: ]]
   273	+ echo -en 'Extracted config paths from JSON:'
   274	Extracted config paths from JSON:+ for cfg in "${source_configs[@]}"
   275	+ print ' - configs/cisco/fw1.cfg'
   276	+ [[ -n  - configs/cisco/fw1.cfg ]]
   277	+ echo -en ' - configs/cisco/fw1.cfg'
   278	 - configs/cisco/fw1.cfg+ for cfg in "${source_configs[@]}"
   279	+ print ' - configs/misc/switch.conf'
   280	+ [[ -n  - configs/misc/switch.conf ]]
   281	+ echo -en ' - configs/misc/switch.conf'
   282	 - configs/misc/switch.conf+ newline
   283	+ local count=1
   284	+ (( i = 0 ))
   285	+ (( i < count ))
   286	+ echo
   287
   288	+ (( i++ ))
   289	+ (( i < count ))
   290	+ local matrix_filename=matrix.json
   291	+ [[ ! -f matrix.json ]]
   292	+ jq -e 'length > 0' matrix.json
   293	++ cat matrix.json
   294	+ export 'matrix_configs=[
   295	  {
   296	    "match": ["BU1-NETWORK", "SOME-THING"],
   297	    "group": "Identified Matching Entries"
   298	  },
   299	  {
   300	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   301	    "group": "Business-Unit-HQ"
   302	  },
   303	  {
   304	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   305	    "group": "Business-Unit-Remote"
   306	  },
   307	  {
   308	    "match": ["HQ-Server", "Production-Servers"],
   309	    "group": "Business-Unit-Production"
   310	  },
   311	  {
   312	    "match": ["Web-Server", "Data-Backup"],
   313	    "group": "Business-Unit-Backup"
   314	  },
   315	  {
   316	    "match": ["web_pool", "db_pool"],
   317	    "group": "Business-Unit-Apps"
   318	  },
   319	  {
   320	    "match": ["Vlan1", "Vlan2"],
   321	    "group": "Business-Unit-Networks"
   322	  },
   323	  {
   324	    "match": ["External-203-0-113-25"],
   325	    "group": "Business-Unit-External"
   326	  },
   327	  {
   328	    "match": ["Unused-Host"],
   329	    "group": "Business-Unit-Orphan"
   330	  }
   331	]'
   332	+ matrix_configs='[
   333	  {
   334	    "match": ["BU1-NETWORK", "SOME-THING"],
   335	    "group": "Identified Matching Entries"
   336	  },
   337	  {
   338	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   339	    "group": "Business-Unit-HQ"
   340	  },
   341	  {
   342	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   343	    "group": "Business-Unit-Remote"
   344	  },
   345	  {
   346	    "match": ["HQ-Server", "Production-Servers"],
   347	    "group": "Business-Unit-Production"
   348	  },
   349	  {
   350	    "match": ["Web-Server", "Data-Backup"],
   351	    "group": "Business-Unit-Backup"
   352	  },
   353	  {
   354	    "match": ["web_pool", "db_pool"],
   355	    "group": "Business-Unit-Apps"
   356	  },
   357	  {
   358	    "match": ["Vlan1", "Vlan2"],
   359	    "group": "Business-Unit-Networks"
   360	  },
   361	  {
   362	    "match": ["External-203-0-113-25"],
   363	    "group": "Business-Unit-External"
   364	  },
   365	  {
   366	    "match": ["Unused-Host"],
   367	    "group": "Business-Unit-Orphan"
   368	  }
   369	]'
   370	+ export reports_folder=reports
   371	+ reports_folder=reports
   372	+ mkdir -p reports/json reports/objects
   373	+ [[ -z 1 ]]
   374	+ [[ -z false ]]
   375	+ [[ -z 10.0.0.1 ]]
   376	++ print 10.0.0.1
   377	++ [[ -n 10.0.0.1 ]]
   378	++ echo -en 10.0.0.1
   379	++ sed -E 's/[[:space:]]+//g'
   380	++ tr -d '\r'
   381	+ target_address=10.0.0.1
   382	+ [[ false == true ]]
   383	+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
   384	+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
   385	+ for cfg_file in "${source_configs[@]}"
   386	+ extract_configs configs/cisco/fw1.cfg 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
   387	+ local config_file=configs/cisco/fw1.cfg
   388	+ local target_pattern=10.0.0.1
   389	+ local target_listing=targets/10.0.0.1.json
   390	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
   391	+ [[ ! -f configs/cisco/fw1.cfg ]]
   392	+ message '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   393	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   394	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   395	+ print '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   396	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   397	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   398	[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg+ newline
   399	+ local count=1
   400	+ (( i = 0 ))
   401	+ (( i < count ))
   402	+ echo
   403
   404	+ (( i++ ))
   405	+ (( i < count ))
   406	+ [[ ! -s configs/cisco/fw1.cfg ]]
   407	++ stat -c%s configs/cisco/fw1.cfg
   408	stat: illegal option -- c
   409	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
   410	+ message '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   411	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   412	+ local 'message=[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   413	+ print '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   414	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   415	+ echo -en '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   416	[OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes+ newline
   417	+ local count=1
   418	+ (( i = 0 ))
   419	+ (( i < count ))
   420	+ echo
   421
   422	+ (( i++ ))
   423	+ (( i < count ))
   424	+ local 'imported_content=object-group network BU1-NETWORK
   425	 description Corporate HQ Subnets
   426	 network-object host 10.0.0.1
   427	 network-object host 10.0.1.2
   428	 network-object 192.168.1.0 255.255.255.0
   429	!
   430
   431
   432
   433	object network Server-192-168-1-10
   434	 host 192.168.1.10
   435	 description Main Application Server
   436	!
   437	!!!!!
   438
   439	!
   440
   441
   442
   443	object network External-203-0-113-25
   444	 host 203.0.113.25
   445	!
   446
   447
   448	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   449	access-list OUTSIDE extended deny ip any any
   450	!
   451	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   452	!'
   453	+ [[ true == true ]]
   454	+ message 'Imported Content: object-group network BU1-NETWORK
   455	 description Corporate HQ Subnets
   456	 network-object host 10.0.0.1
   457	 network-object host 10.0.1.2
   458	 network-object 192.168.1.0 255.255.255.0
   459	!
   460
   461
   462
   463	object network Server-192-168-1-10
   464	 host 192.168.1.10
   465	 description Main Application Server
   466	!
   467	!!!!!
   468
   469	!
   470
   471
   472
   473	object network External-203-0-113-25
   474	 host 203.0.113.25
   475	!
   476
   477
   478	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   479	access-list OUTSIDE extended deny ip any any
   480	!
   481	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   482	!'
   483	+ [[ -n Imported Content: object-group network BU1-NETWORK
   484	 description Corporate HQ Subnets
   485	 network-object host 10.0.0.1
   486	 network-object host 10.0.1.2
   487	 network-object 192.168.1.0 255.255.255.0
   488	!
   489
   490
   491
   492	object network Server-192-168-1-10
   493	 host 192.168.1.10
   494	 description Main Application Server
   495	!
   496	!!!!!
   497
   498	!
   499
   500
   501
   502	object network External-203-0-113-25
   503	 host 203.0.113.25
   504	!
   505
   506
   507	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   508	access-list OUTSIDE extended deny ip any any
   509	!
   510	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   511	! ]]
   512	+ local 'message=Imported Content: object-group network BU1-NETWORK
   513	 description Corporate HQ Subnets
   514	 network-object host 10.0.0.1
   515	 network-object host 10.0.1.2
   516	 network-object 192.168.1.0 255.255.255.0
   517	!
   518
   519
   520
   521	object network Server-192-168-1-10
   522	 host 192.168.1.10
   523	 description Main Application Server
   524	!
   525	!!!!!
   526
   527	!
   528
   529
   530
   531	object network External-203-0-113-25
   532	 host 203.0.113.25
   533	!
   534
   535
   536	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   537	access-list OUTSIDE extended deny ip any any
   538	!
   539	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   540	!'
   541	+ print 'Imported Content: object-group network BU1-NETWORK
   542	 description Corporate HQ Subnets
   543	 network-object host 10.0.0.1
   544	 network-object host 10.0.1.2
   545	 network-object 192.168.1.0 255.255.255.0
   546	!
   547
   548
   549
   550	object network Server-192-168-1-10
   551	 host 192.168.1.10
   552	 description Main Application Server
   553	!
   554	!!!!!
   555
   556	!
   557
   558
   559
   560	object network External-203-0-113-25
   561	 host 203.0.113.25
   562	!
   563
   564
   565	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   566	access-list OUTSIDE extended deny ip any any
   567	!
   568	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   569	!'
   570	+ [[ -n Imported Content: object-group network BU1-NETWORK
   571	 description Corporate HQ Subnets
   572	 network-object host 10.0.0.1
   573	 network-object host 10.0.1.2
   574	 network-object 192.168.1.0 255.255.255.0
   575	!
   576
   577
   578
   579	object network Server-192-168-1-10
   580	 host 192.168.1.10
   581	 description Main Application Server
   582	!
   583	!!!!!
   584
   585	!
   586
   587
   588
   589	object network External-203-0-113-25
   590	 host 203.0.113.25
   591	!
   592
   593
   594	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   595	access-list OUTSIDE extended deny ip any any
   596	!
   597	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   598	! ]]
   599	+ echo -en 'Imported Content: object-group network BU1-NETWORK
   600	 description Corporate HQ Subnets
   601	 network-object host 10.0.0.1
   602	 network-object host 10.0.1.2
   603	 network-object 192.168.1.0 255.255.255.0
   604	!
   605
   606
   607
   608	object network Server-192-168-1-10
   609	 host 192.168.1.10
   610	 description Main Application Server
   611	!
   612	!!!!!
   613
   614	!
   615
   616
   617
   618	object network External-203-0-113-25
   619	 host 203.0.113.25
   620	!
   621
   622
   623	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   624	access-list OUTSIDE extended deny ip any any
   625	!
   626	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   627	!'
   628	Imported Content: object-group network BU1-NETWORK
   629	 description Corporate HQ Subnets
   630	 network-object host 10.0.0.1
   631	 network-object host 10.0.1.2
   632	 network-object 192.168.1.0 255.255.255.0
   633	!
   634
   635
   636
   637	object network Server-192-168-1-10
   638	 host 192.168.1.10
   639	 description Main Application Server
   640	!
   641	!!!!!
   642
   643	!
   644
   645
   646
   647	object network External-203-0-113-25
   648	 host 203.0.113.25
   649	!
   650
   651
   652	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   653	access-list OUTSIDE extended deny ip any any
   654	!
   655	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   656	!+ newline
   657	+ local count=1
   658	+ (( i = 0 ))
   659	+ (( i < count ))
   660	+ echo
   661
   662	+ (( i++ ))
   663	+ (( i < count ))
   664	++ sed '/^\s*$/d;/^\s*!.*$/d'
   665	+ local 'sanitized_content=object-group network BU1-NETWORK
   666	 description Corporate HQ Subnets
   667	 network-object host 10.0.0.1
   668	 network-object host 10.0.1.2
   669	 network-object 192.168.1.0 255.255.255.0
   670	object network Server-192-168-1-10
   671	 host 192.168.1.10
   672	 description Main Application Server
   673	object network External-203-0-113-25
   674	 host 203.0.113.25
   675	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   676	access-list OUTSIDE extended deny ip any any
   677	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   678	+ [[ true == true ]]
   679	+ message 'Sanitized Content: object-group network BU1-NETWORK
   680	 description Corporate HQ Subnets
   681	 network-object host 10.0.0.1
   682	 network-object host 10.0.1.2
   683	 network-object 192.168.1.0 255.255.255.0
   684	object network Server-192-168-1-10
   685	 host 192.168.1.10
   686	 description Main Application Server
   687	object network External-203-0-113-25
   688	 host 203.0.113.25
   689	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   690	access-list OUTSIDE extended deny ip any any
   691	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   692	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   693	 description Corporate HQ Subnets
   694	 network-object host 10.0.0.1
   695	 network-object host 10.0.1.2
   696	 network-object 192.168.1.0 255.255.255.0
   697	object network Server-192-168-1-10
   698	 host 192.168.1.10
   699	 description Main Application Server
   700	object network External-203-0-113-25
   701	 host 203.0.113.25
   702	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   703	access-list OUTSIDE extended deny ip any any
   704	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   705	+ local 'message=Sanitized Content: object-group network BU1-NETWORK
   706	 description Corporate HQ Subnets
   707	 network-object host 10.0.0.1
   708	 network-object host 10.0.1.2
   709	 network-object 192.168.1.0 255.255.255.0
   710	object network Server-192-168-1-10
   711	 host 192.168.1.10
   712	 description Main Application Server
   713	object network External-203-0-113-25
   714	 host 203.0.113.25
   715	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   716	access-list OUTSIDE extended deny ip any any
   717	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   718	+ print 'Sanitized Content: object-group network BU1-NETWORK
   719	 description Corporate HQ Subnets
   720	 network-object host 10.0.0.1
   721	 network-object host 10.0.1.2
   722	 network-object 192.168.1.0 255.255.255.0
   723	object network Server-192-168-1-10
   724	 host 192.168.1.10
   725	 description Main Application Server
   726	object network External-203-0-113-25
   727	 host 203.0.113.25
   728	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   729	access-list OUTSIDE extended deny ip any any
   730	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   731	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   732	 description Corporate HQ Subnets
   733	 network-object host 10.0.0.1
   734	 network-object host 10.0.1.2
   735	 network-object 192.168.1.0 255.255.255.0
   736	object network Server-192-168-1-10
   737	 host 192.168.1.10
   738	 description Main Application Server
   739	object network External-203-0-113-25
   740	 host 203.0.113.25
   741	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   742	access-list OUTSIDE extended deny ip any any
   743	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   744	+ echo -en 'Sanitized Content: object-group network BU1-NETWORK
   745	 description Corporate HQ Subnets
   746	 network-object host 10.0.0.1
   747	 network-object host 10.0.1.2
   748	 network-object 192.168.1.0 255.255.255.0
   749	object network Server-192-168-1-10
   750	 host 192.168.1.10
   751	 description Main Application Server
   752	object network External-203-0-113-25
   753	 host 203.0.113.25
   754	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   755	access-list OUTSIDE extended deny ip any any
   756	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   757	Sanitized Content: object-group network BU1-NETWORK
   758	 description Corporate HQ Subnets
   759	 network-object host 10.0.0.1
   760	 network-object host 10.0.1.2
   761	 network-object 192.168.1.0 255.255.255.0
   762	object network Server-192-168-1-10
   763	 host 192.168.1.10
   764	 description Main Application Server
   765	object network External-203-0-113-25
   766	 host 203.0.113.25
   767	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   768	access-list OUTSIDE extended deny ip any any
   769	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25+ newline
   770	+ local count=1
   771	+ (( i = 0 ))
   772	+ (( i < count ))
   773	+ echo
   774
   775	+ (( i++ ))
   776	+ (( i < count ))
   777	++ perl -pe 's/\n/MTc0NzE0NjI2NTE0NTE2NjAwMAo/g'
   778	+ local 'serialized_objects=object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   779	+ [[ true == true ]]
   780	+ message 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   781	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
   782	+ local 'message=Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   783	+ print 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   784	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
   785	+ echo -en 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   786	Serialized Objects: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application ServerMTc0NzE0NjI2NTE0NTE2NjAwMAoobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25MTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE0NjI2NTE0NTE2NjAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE0NjI2NTE0NTE2NjAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
   787	+ local count=1
   788	+ (( i = 0 ))
   789	+ (( i < count ))
   790	+ echo
   791
   792	+ (( i++ ))
   793	+ (( i < count ))
   794	++ sed -E 's/MTc0NzE0NjI2NTE0NTE2NjAwMAo([^[:space:]])/\n\1/g'
   795	+ local 'restored_lines=object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0
   796	object network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server
   797	object network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25
   798	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   799	access-list OUTSIDE extended deny ip any any
   800	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   801	+ restored_lines+='
   802	'
   803	+ IFS='
   804	'
   805	+ read -r -d '' -a config_objects
   806	++ printf '%s\0' 'object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0
   807	object network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server
   808	object network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25
   809	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   810	access-list OUTSIDE extended deny ip any any
   811	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo
   812	'
   813	+ [[ true == true ]]
   814	+ message 'Loaded 6 config blocks'
   815	+ [[ -n Loaded 6 config blocks ]]
   816	+ local 'message=Loaded 6 config blocks'
   817	+ print 'Loaded 6 config blocks'
   818	+ [[ -n Loaded 6 config blocks ]]
   819	+ echo -en 'Loaded 6 config blocks'
   820	Loaded 6 config blocks+ newline
   821	+ local count=1
   822	+ (( i = 0 ))
   823	+ (( i < count ))
   824	+ echo
   825
   826	+ (( i++ ))
   827	+ (( i < count ))
   828	+ for i in "${!config_objects[@]}"
   829	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   830	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   831	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   832	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   833	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   834	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   835	|---> Block [0]
   836	object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0+ newline
   837	+ local count=1
   838	+ (( i = 0 ))
   839	+ (( i < count ))
   840	+ echo
   841
   842	+ (( i++ ))
   843	+ (( i < count ))
   844	+ for i in "${!config_objects[@]}"
   845	+ message '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server'
   846	+ [[ -n |---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server ]]
   847	+ local 'message=|---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server'
   848	+ print '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server'
   849	+ [[ -n |---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server ]]
   850	+ echo -en '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server'
   851	|---> Block [1]
   852	object network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server+ newline
   853	+ local count=1
   854	+ (( i = 0 ))
   855	+ (( i < count ))
   856	+ echo
   857
   858	+ (( i++ ))
   859	+ (( i < count ))
   860	+ for i in "${!config_objects[@]}"
   861	+ message '|---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25'
   862	+ [[ -n |---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25 ]]
   863	+ local 'message=|---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25'
   864	+ print '|---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25'
   865	+ [[ -n |---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25 ]]
   866	+ echo -en '|---> Block [2]\nobject network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25'
   867	|---> Block [2]
   868	object network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25+ newline
   869	+ local count=1
   870	+ (( i = 0 ))
   871	+ (( i < count ))
   872	+ echo
   873
   874	+ (( i++ ))
   875	+ (( i < count ))
   876	+ for i in "${!config_objects[@]}"
   877	+ message '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   878	+ [[ -n |---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   879	+ local 'message=|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   880	+ print '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   881	+ [[ -n |---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   882	+ echo -en '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   883	|---> Block [3]
   884	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
   885	+ local count=1
   886	+ (( i = 0 ))
   887	+ (( i < count ))
   888	+ echo
   889
   890	+ (( i++ ))
   891	+ (( i < count ))
   892	+ for i in "${!config_objects[@]}"
   893	+ message '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   894	+ [[ -n |---> Block [4]\naccess-list OUTSIDE extended deny ip any any ]]
   895	+ local 'message=|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   896	+ print '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   897	+ [[ -n |---> Block [4]\naccess-list OUTSIDE extended deny ip any any ]]
   898	+ echo -en '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   899	|---> Block [4]
   900	access-list OUTSIDE extended deny ip any any+ newline
   901	+ local count=1
   902	+ (( i = 0 ))
   903	+ (( i < count ))
   904	+ echo
   905
   906	+ (( i++ ))
   907	+ (( i < count ))
   908	+ for i in "${!config_objects[@]}"
   909	+ message '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   910	+ [[ -n |---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
   911	+ local 'message=|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   912	+ print '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   913	+ [[ -n |---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
   914	+ echo -en '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   915	|---> Block [5]
   916	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
   917	+ local count=1
   918	+ (( i = 0 ))
   919	+ (( i < count ))
   920	+ echo
   921
   922	+ (( i++ ))
   923	+ (( i < count ))
   924	+ newline
   925	+ local count=1
   926	+ (( i = 0 ))
   927	+ (( i < count ))
   928	+ echo
   929
   930	+ (( i++ ))
   931	+ (( i < count ))
   932	+ oIFS='
   933	'
   934	+ IFS='
   935	'
   936	++ printf '%s\n' 'object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0' 'object network Server-192-168-1-10MTc0NzE0NjI2NTE0NTE2NjAwMAo host 192.168.1.10MTc0NzE0NjI2NTE0NTE2NjAwMAo description Main Application Server' 'object network External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo host 203.0.113.25' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' 'access-list OUTSIDE extended deny ip any any' 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE0NjI2NTE0NTE2NjAwMAo'
   937	++ grep -F 10.0.0.1
   938	+ matched_objects=('object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any')
   939	+ declare -a matched_objects
   940	+ IFS='
   941	'
   942	+ [[ true == true ]]
   943	+ message 'Loaded 2 config blocks'
   944	+ [[ -n Loaded 2 config blocks ]]
   945	+ local 'message=Loaded 2 config blocks'
   946	+ print 'Loaded 2 config blocks'
   947	+ [[ -n Loaded 2 config blocks ]]
   948	+ echo -en 'Loaded 2 config blocks'
   949	Loaded 2 config blocks+ newline
   950	+ local count=1
   951	+ (( i = 0 ))
   952	+ (( i < count ))
   953	+ echo
   954
   955	+ (( i++ ))
   956	+ (( i < count ))
   957	+ for i in "${!matched_objects[@]}"
   958	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   959	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   960	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   961	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   962	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   963	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
   964	|---> Block [0]
   965	object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0+ newline
   966	+ local count=1
   967	+ (( i = 0 ))
   968	+ (( i < count ))
   969	+ echo
   970
   971	+ (( i++ ))
   972	+ (( i < count ))
   973	+ for i in "${!matched_objects[@]}"
   974	+ message '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   975	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   976	+ local 'message=|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   977	+ print '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   978	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   979	+ echo -en '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   980	|---> Block [1]
   981	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
   982	+ local count=1
   983	+ (( i = 0 ))
   984	+ (( i < count ))
   985	+ echo
   986
   987	+ (( i++ ))
   988	+ (( i < count ))
   989	+ newline
   990	+ local count=1
   991	+ (( i = 0 ))
   992	+ (( i < count ))
   993	+ echo
   994
   995	+ (( i++ ))
   996	+ (( i < count ))
   997	+ local site_part=configs/cisco
   998	+ local file_part=fw1.cfg
   999	++ jq -r --arg site cisco --arg file fw1.cfg '.configs[] | select(.config.site == $site and .config.device == $file) | .count' targets/10.0.0.1.json
  1000	+ local expected_count=2
  1001	+ [[ true == true ]]
  1002	+ message 'Expected Matches (Count): 2'
  1003	+ [[ -n Expected Matches (Count): 2 ]]
  1004	+ local 'message=Expected Matches (Count): 2'
  1005	+ print 'Expected Matches (Count): 2'
  1006	+ [[ -n Expected Matches (Count): 2 ]]
  1007	+ echo -en 'Expected Matches (Count): 2'
  1008	Expected Matches (Count): 2+ newline
  1009	+ local count=1
  1010	+ (( i = 0 ))
  1011	+ (( i < count ))
  1012	+ echo
  1013
  1014	+ (( i++ ))
  1015	+ (( i < count ))
  1016	+ actual_count=2
  1017	+ [[ 2 != \2 ]]
  1018	+ restored_block=()
  1019	+ declare -a restored_block
  1020	+ for serialized_line in "${matched_objects[@]}"
  1021	+ [[ true == true ]]
  1022	+ message 'Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
  1023	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1024	+ local 'message=Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
  1025	+ print 'Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
  1026	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1027	+ echo -en 'Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0'
  1028	Serialized Line: object-group network BU1-NETWORKMTc0NzE0NjI2NTE0NTE2NjAwMAo description Corporate HQ SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object host 10.0.1.2MTc0NzE0NjI2NTE0NTE2NjAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1029	+ local count=1
  1030	+ (( i = 0 ))
  1031	+ (( i < count ))
  1032	+ echo
  1033
  1034	+ (( i++ ))
  1035	+ (( i < count ))
  1036	++ perl -pe 's/MTc0NzE0NjI2NTE0NTE2NjAwMAo/\n/g'
  1037	+ restored_block='object-group network BU1-NETWORK
  1038	 description Corporate HQ Subnets
  1039	 network-object host 10.0.0.1
  1040	 network-object host 10.0.1.2
  1041	 network-object 192.168.1.0 255.255.255.0'
  1042	+ [[ true == true ]]
  1043	+ message 'Restored Configuration:\nobject-group network BU1-NETWORK
  1044	 description Corporate HQ Subnets
  1045	 network-object host 10.0.0.1
  1046	 network-object host 10.0.1.2
  1047	 network-object 192.168.1.0 255.255.255.0'
  1048	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1049	 description Corporate HQ Subnets
  1050	 network-object host 10.0.0.1
  1051	 network-object host 10.0.1.2
  1052	 network-object 192.168.1.0 255.255.255.0 ]]
  1053	+ local 'message=Restored Configuration:\nobject-group network BU1-NETWORK
  1054	 description Corporate HQ Subnets
  1055	 network-object host 10.0.0.1
  1056	 network-object host 10.0.1.2
  1057	 network-object 192.168.1.0 255.255.255.0'
  1058	+ print 'Restored Configuration:\nobject-group network BU1-NETWORK
  1059	 description Corporate HQ Subnets
  1060	 network-object host 10.0.0.1
  1061	 network-object host 10.0.1.2
  1062	 network-object 192.168.1.0 255.255.255.0'
  1063	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1064	 description Corporate HQ Subnets
  1065	 network-object host 10.0.0.1
  1066	 network-object host 10.0.1.2
  1067	 network-object 192.168.1.0 255.255.255.0 ]]
  1068	+ echo -en 'Restored Configuration:\nobject-group network BU1-NETWORK
  1069	 description Corporate HQ Subnets
  1070	 network-object host 10.0.0.1
  1071	 network-object host 10.0.1.2
  1072	 network-object 192.168.1.0 255.255.255.0'
  1073	Restored Configuration:
  1074	object-group network BU1-NETWORK
  1075	 description Corporate HQ Subnets
  1076	 network-object host 10.0.0.1
  1077	 network-object host 10.0.1.2
  1078	 network-object 192.168.1.0 255.255.255.0+ newline
  1079	+ local count=1
  1080	+ (( i = 0 ))
  1081	+ (( i < count ))
  1082	+ echo
  1083
  1084	+ (( i++ ))
  1085	+ (( i < count ))
  1086	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'object-group network BU1-NETWORK
  1087	 description Corporate HQ Subnets
  1088	 network-object host 10.0.0.1
  1089	 network-object host 10.0.1.2
  1090	 network-object 192.168.1.0 255.255.255.0'
  1091	+ local target_pattern=10.0.0.1
  1092	+ local config_path=configs/cisco/fw1.cfg
  1093	+ local 'restored_block=object-group network BU1-NETWORK
  1094	 description Corporate HQ Subnets
  1095	 network-object host 10.0.0.1
  1096	 network-object host 10.0.1.2
  1097	 network-object 192.168.1.0 255.255.255.0'
  1098	+ local cleaned_block
  1099	++ sed '/^[[:space:]]*$/d'
  1100	+ cleaned_block='object-group network BU1-NETWORK
  1101	 description Corporate HQ Subnets
  1102	 network-object host 10.0.0.1
  1103	 network-object host 10.0.1.2
  1104	 network-object 192.168.1.0 255.255.255.0'
  1105	+ [[ -z object-group network BU1-NETWORK
  1106	 description Corporate HQ Subnets
  1107	 network-object host 10.0.0.1
  1108	 network-object host 10.0.1.2
  1109	 network-object 192.168.1.0 255.255.255.0 ]]
  1110	+ [[ true == true ]]
  1111	+ message '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1112	 description Corporate HQ Subnets
  1113	 network-object host 10.0.0.1
  1114	 network-object host 10.0.1.2
  1115	 network-object 192.168.1.0 255.255.255.0'
  1116	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1117	 description Corporate HQ Subnets
  1118	 network-object host 10.0.0.1
  1119	 network-object host 10.0.1.2
  1120	 network-object 192.168.1.0 255.255.255.0 ]]
  1121	+ local 'message=[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1122	 description Corporate HQ Subnets
  1123	 network-object host 10.0.0.1
  1124	 network-object host 10.0.1.2
  1125	 network-object 192.168.1.0 255.255.255.0'
  1126	+ print '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1127	 description Corporate HQ Subnets
  1128	 network-object host 10.0.0.1
  1129	 network-object host 10.0.1.2
  1130	 network-object 192.168.1.0 255.255.255.0'
  1131	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1132	 description Corporate HQ Subnets
  1133	 network-object host 10.0.0.1
  1134	 network-object host 10.0.1.2
  1135	 network-object 192.168.1.0 255.255.255.0 ]]
  1136	+ echo -en '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1137	 description Corporate HQ Subnets
  1138	 network-object host 10.0.0.1
  1139	 network-object host 10.0.1.2
  1140	 network-object 192.168.1.0 255.255.255.0'
  1141	[process_configs] Raw Block:
  1142	object-group network BU1-NETWORK
  1143	 description Corporate HQ Subnets
  1144	 network-object host 10.0.0.1
  1145	 network-object host 10.0.1.2
  1146	 network-object 192.168.1.0 255.255.255.0+ newline
  1147	+ local count=1
  1148	+ (( i = 0 ))
  1149	+ (( i < count ))
  1150	+ echo
  1151
  1152	+ (( i++ ))
  1153	+ (( i < count ))
  1154	+ local object_line
  1155	++ head -n 1
  1156	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1157	+ object_line='object-group network BU1-NETWORK'
  1158	+ [[ -z object-group network BU1-NETWORK ]]
  1159	+ local object_keyword type_value
  1160	++ awk '{print $1}'
  1161	+ object_keyword=object-group
  1162	++ awk '{$1=""; print substr($0,2)}'
  1163	+ type_value='network BU1-NETWORK'
  1164	+ [[ true == true ]]
  1165	+ print '[process_configs] object   : object-group'
  1166	+ [[ -n [process_configs] object   : object-group ]]
  1167	+ echo -en '[process_configs] object   : object-group'
  1168	[process_configs] object   : object-group+ print '[process_configs] type     : network BU1-NETWORK'
  1169	+ [[ -n [process_configs] type     : network BU1-NETWORK ]]
  1170	+ echo -en '[process_configs] type     : network BU1-NETWORK'
  1171	[process_configs] type     : network BU1-NETWORK+ entries=()
  1172	+ local -a entries
  1173	+ IFS=
  1174	+ read -r line
  1175	+ local trimmed
  1176	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1177	+ trimmed='object-group network BU1-NETWORK'
  1178	+ [[ -z object-group network BU1-NETWORK ]]
  1179	+ [[ object-group network bu1-network =~ ^description[[:space:]] ]]
  1180	+ entries+=("${trimmed}")
  1181	+ IFS=
  1182	+ read -r line
  1183	+ local trimmed
  1184	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1185	+ trimmed='description Corporate HQ Subnets'
  1186	+ [[ -z description Corporate HQ Subnets ]]
  1187	+ [[ description corporate hq subnets =~ ^description[[:space:]] ]]
  1188	+ continue
  1189	+ IFS=
  1190	+ read -r line
  1191	+ local trimmed
  1192	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1193	+ trimmed='network-object host 10.0.0.1'
  1194	+ [[ -z network-object host 10.0.0.1 ]]
  1195	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  1196	+ entries+=("${trimmed}")
  1197	+ IFS=
  1198	+ read -r line
  1199	+ local trimmed
  1200	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1201	+ trimmed='network-object host 10.0.1.2'
  1202	+ [[ -z network-object host 10.0.1.2 ]]
  1203	+ [[ network-object host 10.0.1.2 =~ ^description[[:space:]] ]]
  1204	+ entries+=("${trimmed}")
  1205	+ IFS=
  1206	+ read -r line
  1207	+ local trimmed
  1208	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1209	+ trimmed='network-object 192.168.1.0 255.255.255.0'
  1210	+ [[ -z network-object 192.168.1.0 255.255.255.0 ]]
  1211	+ [[ network-object 192.168.1.0 255.255.255.0 =~ ^description[[:space:]] ]]
  1212	+ entries+=("${trimmed}")
  1213	+ IFS=
  1214	+ read -r line
  1215	+ ((  4 > 1  ))
  1216	+ entries=("${entries[@]:1}")
  1217	+ [[ true == true ]]
  1218	+ message '[process_configs] Entries:'
  1219	+ [[ -n [process_configs] Entries: ]]
  1220	+ local 'message=[process_configs] Entries:'
  1221	+ print '[process_configs] Entries:'
  1222	+ [[ -n [process_configs] Entries: ]]
  1223	+ echo -en '[process_configs] Entries:'
  1224	[process_configs] Entries:+ newline
  1225	+ local count=1
  1226	+ (( i = 0 ))
  1227	+ (( i < count ))
  1228	+ echo
  1229
  1230	+ (( i++ ))
  1231	+ (( i < count ))
  1232	+ for e in "${entries[@]}"
  1233	+ print '  - network-object host 10.0.0.1'
  1234	+ [[ -n   - network-object host 10.0.0.1 ]]
  1235	+ echo -en '  - network-object host 10.0.0.1'
  1236	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  1237	+ print '  - network-object host 10.0.1.2'
  1238	+ [[ -n   - network-object host 10.0.1.2 ]]
  1239	+ echo -en '  - network-object host 10.0.1.2'
  1240	  - network-object host 10.0.1.2+ for e in "${entries[@]}"
  1241	+ print '  - network-object 192.168.1.0 255.255.255.0'
  1242	+ [[ -n   - network-object 192.168.1.0 255.255.255.0 ]]
  1243	+ echo -en '  - network-object 192.168.1.0 255.255.255.0'
  1244	  - network-object 192.168.1.0 255.255.255.0+ local matched_line
  1245	++ grep -wF 10.0.0.1
  1246	++ head -n 1
  1247	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1248	+ matched_line='network-object host 10.0.0.1'
  1249	+ [[ -z network-object host 10.0.0.1 ]]
  1250	+ [[ true == true ]]
  1251	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  1252	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1253	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  1254	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  1255	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1256	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  1257	[process_configs] Matched: network-object host 10.0.0.1+ newline
  1258	+ local count=1
  1259	+ (( i = 0 ))
  1260	+ (( i < count ))
  1261	+ echo
  1262
  1263	+ (( i++ ))
  1264	+ (( i < count ))
  1265	+ local desc_val=false
  1266	+ [[ -z false ]]
  1267	+ [[ true == true ]]
  1268	+ message '[process_configs] Description: false'
  1269	+ [[ -n [process_configs] Description: false ]]
  1270	+ local 'message=[process_configs] Description: false'
  1271	+ print '[process_configs] Description: false'
  1272	+ [[ -n [process_configs] Description: false ]]
  1273	+ echo -en '[process_configs] Description: false'
  1274	[process_configs] Description: false+ newline
  1275	+ local count=1
  1276	+ (( i = 0 ))
  1277	+ (( i < count ))
  1278	+ echo
  1279
  1280	+ (( i++ ))
  1281	+ (( i < count ))
  1282	+ local group_val=Unclassified
  1283	+ [[ true == true ]]
  1284	+ local object_key
  1285	++ awk '{print $NF}'
  1286	++ sed -E 's/[[:punct:]]*$//'
  1287	+ object_key=BU1-NETWORK
  1288	++ jq -r --arg key BU1-NETWORK 'map(select(.match[]? | contains($key))) | .[0].group'
  1289	+ group_val='Identified Matching Entries'
  1290	+ [[ -z Identified Matching Entries ]]
  1291	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1292	+ [[ -z Identified Matching Entries ]]
  1293	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1294	+ [[ true == true ]]
  1295	+ message '[process_configs] Group: Identified Matching Entries'
  1296	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1297	+ local 'message=[process_configs] Group: Identified Matching Entries'
  1298	+ print '[process_configs] Group: Identified Matching Entries'
  1299	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1300	+ echo -en '[process_configs] Group: Identified Matching Entries'
  1301	[process_configs] Group: Identified Matching Entries+ newline
  1302	+ local count=1
  1303	+ (( i = 0 ))
  1304	+ (( i < count ))
  1305	+ echo
  1306
  1307	+ (( i++ ))
  1308	+ (( i < count ))
  1309	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object host 10.0.1.2' 'network-object 192.168.1.0 255.255.255.0'
  1310	++ jq -R .
  1311	++ jq -s .
  1312	+ local 'entries_2json=[
  1313	  "network-object host 10.0.0.1",
  1314	  "network-object host 10.0.1.2",
  1315	  "network-object 192.168.1.0 255.255.255.0"
  1316	]'
  1317	+ [[ 3 -eq 1 ]]
  1318	++ jq -n --arg object object-group --arg type 'network BU1-NETWORK' --arg description false --argjson entries '[
  1319	  "network-object host 10.0.0.1",
  1320	  "network-object host 10.0.1.2",
  1321	  "network-object 192.168.1.0 255.255.255.0"
  1322	]' --arg group 'Identified Matching Entries' '{
  1323	                  object: $object,
  1324	                  type: $type,
  1325	                  description: ($description | select(. != "" and . != "null") // false),
  1326	                  entries: $entries,
  1327	                  group: $group
  1328	                }'
  1329	+ target_object='{
  1330	  "object": "object-group",
  1331	  "type": "network BU1-NETWORK",
  1332	  "description": "false",
  1333	  "entries": [
  1334	    "network-object host 10.0.0.1",
  1335	    "network-object host 10.0.1.2",
  1336	    "network-object 192.168.1.0 255.255.255.0"
  1337	  ],
  1338	  "group": "Identified Matching Entries"
  1339	}'
  1340	+ export target_object
  1341	+ [[ true == true ]]
  1342	+ message '[process_configs] JSON Object (output):'
  1343	+ [[ -n [process_configs] JSON Object (output): ]]
  1344	+ local 'message=[process_configs] JSON Object (output):'
  1345	+ print '[process_configs] JSON Object (output):'
  1346	+ [[ -n [process_configs] JSON Object (output): ]]
  1347	+ echo -en '[process_configs] JSON Object (output):'
  1348	[process_configs] JSON Object (output):+ newline
  1349	+ local count=1
  1350	+ (( i = 0 ))
  1351	+ (( i < count ))
  1352	+ echo
  1353
  1354	+ (( i++ ))
  1355	+ (( i < count ))
  1356	+ print '{
  1357	  "object": "object-group",
  1358	  "type": "network BU1-NETWORK",
  1359	  "description": "false",
  1360	  "entries": [
  1361	    "network-object host 10.0.0.1",
  1362	    "network-object host 10.0.1.2",
  1363	    "network-object 192.168.1.0 255.255.255.0"
  1364	  ],
  1365	  "group": "Identified Matching Entries"
  1366	}'
  1367	+ jq .
  1368	+ [[ -n {
  1369	  "object": "object-group",
  1370	  "type": "network BU1-NETWORK",
  1371	  "description": "false",
  1372	  "entries": [
  1373	    "network-object host 10.0.0.1",
  1374	    "network-object host 10.0.1.2",
  1375	    "network-object 192.168.1.0 255.255.255.0"
  1376	  ],
  1377	  "group": "Identified Matching Entries"
  1378	} ]]
  1379	+ echo -en '{
  1380	  "object": "object-group",
  1381	  "type": "network BU1-NETWORK",
  1382	  "description": "false",
  1383	  "entries": [
  1384	    "network-object host 10.0.0.1",
  1385	    "network-object host 10.0.1.2",
  1386	    "network-object 192.168.1.0 255.255.255.0"
  1387	  ],
  1388	  "group": "Identified Matching Entries"
  1389	}'
  1390	{
  1391	  "object": "object-group",
  1392	  "type": "network BU1-NETWORK",
  1393	  "description": "false",
  1394	  "entries": [
  1395	    "network-object host 10.0.0.1",
  1396	    "network-object host 10.0.1.2",
  1397	    "network-object 192.168.1.0 255.255.255.0"
  1398	  ],
  1399	  "group": "Identified Matching Entries"
  1400	}
  1401	+ newline
  1402	+ local count=1
  1403	+ (( i = 0 ))
  1404	+ (( i < count ))
  1405	+ echo
  1406
  1407	+ (( i++ ))
  1408	+ (( i < count ))
  1409	+ return 0
  1410	+ [[ -n {
  1411	  "object": "object-group",
  1412	  "type": "network BU1-NETWORK",
  1413	  "description": "false",
  1414	  "entries": [
  1415	    "network-object host 10.0.0.1",
  1416	    "network-object host 10.0.1.2",
  1417	    "network-object 192.168.1.0 255.255.255.0"
  1418	  ],
  1419	  "group": "Identified Matching Entries"
  1420	} ]]
  1421	+ print '|-----> Target Objects: {
  1422	  "object": "object-group",
  1423	  "type": "network BU1-NETWORK",
  1424	  "description": "false",
  1425	  "entries": [
  1426	    "network-object host 10.0.0.1",
  1427	    "network-object host 10.0.1.2",
  1428	    "network-object 192.168.1.0 255.255.255.0"
  1429	  ],
  1430	  "group": "Identified Matching Entries"
  1431	}'
  1432	+ [[ -n |-----> Target Objects: {
  1433	  "object": "object-group",
  1434	  "type": "network BU1-NETWORK",
  1435	  "description": "false",
  1436	  "entries": [
  1437	    "network-object host 10.0.0.1",
  1438	    "network-object host 10.0.1.2",
  1439	    "network-object 192.168.1.0 255.255.255.0"
  1440	  ],
  1441	  "group": "Identified Matching Entries"
  1442	} ]]
  1443	+ echo -en '|-----> Target Objects: {
  1444	  "object": "object-group",
  1445	  "type": "network BU1-NETWORK",
  1446	  "description": "false",
  1447	  "entries": [
  1448	    "network-object host 10.0.0.1",
  1449	    "network-object host 10.0.1.2",
  1450	    "network-object 192.168.1.0 255.255.255.0"
  1451	  ],
  1452	  "group": "Identified Matching Entries"
  1453	}'
  1454	|-----> Target Objects: {
  1455	  "object": "object-group",
  1456	  "type": "network BU1-NETWORK",
  1457	  "description": "false",
  1458	  "entries": [
  1459	    "network-object host 10.0.0.1",
  1460	    "network-object host 10.0.1.2",
  1461	    "network-object 192.168.1.0 255.255.255.0"
  1462	  ],
  1463	  "group": "Identified Matching Entries"
  1464	}+ [[ -n {
  1465	  "object": "object-group",
  1466	  "type": "network BU1-NETWORK",
  1467	  "description": "false",
  1468	  "entries": [
  1469	    "network-object host 10.0.0.1",
  1470	    "network-object host 10.0.1.2",
  1471	    "network-object 192.168.1.0 255.255.255.0"
  1472	  ],
  1473	  "group": "Identified Matching Entries"
  1474	} ]]
  1475	++ printf '%s\n' '{
  1476	  "object": "object-group",
  1477	  "type": "network BU1-NETWORK",
  1478	  "description": "false",
  1479	  "entries": [
  1480	    "network-object host 10.0.0.1",
  1481	    "network-object host 10.0.1.2",
  1482	    "network-object 192.168.1.0 255.255.255.0"
  1483	  ],
  1484	  "group": "Identified Matching Entries"
  1485	}'
  1486	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  1487	              config: {
  1488	                site: ($site | gsub("^.*/"; "")),
  1489	                device: $device
  1490	              },
  1491	              objects: .
  1492	            }'
  1493	+ wrapped_block='{
  1494	  "config": {
  1495	    "site": "cisco",
  1496	    "device": "fw1.cfg"
  1497	  },
  1498	  "objects": [
  1499	    {
  1500	      "object": "object-group",
  1501	      "type": "network BU1-NETWORK",
  1502	      "description": "false",
  1503	      "entries": [
  1504	        "network-object host 10.0.0.1",
  1505	        "network-object host 10.0.1.2",
  1506	        "network-object 192.168.1.0 255.255.255.0"
  1507	      ],
  1508	      "group": "Identified Matching Entries"
  1509	    }
  1510	  ]
  1511	}'
  1512	+ [[ true == true ]]
  1513	+ message 'Wrapped JSON Block:\n{
  1514	  "config": {
  1515	    "site": "cisco",
  1516	    "device": "fw1.cfg"
  1517	  },
  1518	  "objects": [
  1519	    {
  1520	      "object": "object-group",
  1521	      "type": "network BU1-NETWORK",
  1522	      "description": "false",
  1523	      "entries": [
  1524	        "network-object host 10.0.0.1",
  1525	        "network-object host 10.0.1.2",
  1526	        "network-object 192.168.1.0 255.255.255.0"
  1527	      ],
  1528	      "group": "Identified Matching Entries"
  1529	    }
  1530	  ]
  1531	}'
  1532	+ [[ -n Wrapped JSON Block:\n{
  1533	  "config": {
  1534	    "site": "cisco",
  1535	    "device": "fw1.cfg"
  1536	  },
  1537	  "objects": [
  1538	    {
  1539	      "object": "object-group",
  1540	      "type": "network BU1-NETWORK",
  1541	      "description": "false",
  1542	      "entries": [
  1543	        "network-object host 10.0.0.1",
  1544	        "network-object host 10.0.1.2",
  1545	        "network-object 192.168.1.0 255.255.255.0"
  1546	      ],
  1547	      "group": "Identified Matching Entries"
  1548	    }
  1549	  ]
  1550	} ]]
  1551	+ local 'message=Wrapped JSON Block:\n{
  1552	  "config": {
  1553	    "site": "cisco",
  1554	    "device": "fw1.cfg"
  1555	  },
  1556	  "objects": [
  1557	    {
  1558	      "object": "object-group",
  1559	      "type": "network BU1-NETWORK",
  1560	      "description": "false",
  1561	      "entries": [
  1562	        "network-object host 10.0.0.1",
  1563	        "network-object host 10.0.1.2",
  1564	        "network-object 192.168.1.0 255.255.255.0"
  1565	      ],
  1566	      "group": "Identified Matching Entries"
  1567	    }
  1568	  ]
  1569	}'
  1570	+ print 'Wrapped JSON Block:\n{
  1571	  "config": {
  1572	    "site": "cisco",
  1573	    "device": "fw1.cfg"
  1574	  },
  1575	  "objects": [
  1576	    {
  1577	      "object": "object-group",
  1578	      "type": "network BU1-NETWORK",
  1579	      "description": "false",
  1580	      "entries": [
  1581	        "network-object host 10.0.0.1",
  1582	        "network-object host 10.0.1.2",
  1583	        "network-object 192.168.1.0 255.255.255.0"
  1584	      ],
  1585	      "group": "Identified Matching Entries"
  1586	    }
  1587	  ]
  1588	}'
  1589	+ [[ -n Wrapped JSON Block:\n{
  1590	  "config": {
  1591	    "site": "cisco",
  1592	    "device": "fw1.cfg"
  1593	  },
  1594	  "objects": [
  1595	    {
  1596	      "object": "object-group",
  1597	      "type": "network BU1-NETWORK",
  1598	      "description": "false",
  1599	      "entries": [
  1600	        "network-object host 10.0.0.1",
  1601	        "network-object host 10.0.1.2",
  1602	        "network-object 192.168.1.0 255.255.255.0"
  1603	      ],
  1604	      "group": "Identified Matching Entries"
  1605	    }
  1606	  ]
  1607	} ]]
  1608	+ echo -en 'Wrapped JSON Block:\n{
  1609	  "config": {
  1610	    "site": "cisco",
  1611	    "device": "fw1.cfg"
  1612	  },
  1613	  "objects": [
  1614	    {
  1615	      "object": "object-group",
  1616	      "type": "network BU1-NETWORK",
  1617	      "description": "false",
  1618	      "entries": [
  1619	        "network-object host 10.0.0.1",
  1620	        "network-object host 10.0.1.2",
  1621	        "network-object 192.168.1.0 255.255.255.0"
  1622	      ],
  1623	      "group": "Identified Matching Entries"
  1624	    }
  1625	  ]
  1626	}'
  1627	Wrapped JSON Block:
  1628	{
  1629	  "config": {
  1630	    "site": "cisco",
  1631	    "device": "fw1.cfg"
  1632	  },
  1633	  "objects": [
  1634	    {
  1635	      "object": "object-group",
  1636	      "type": "network BU1-NETWORK",
  1637	      "description": "false",
  1638	      "entries": [
  1639	        "network-object host 10.0.0.1",
  1640	        "network-object host 10.0.1.2",
  1641	        "network-object 192.168.1.0 255.255.255.0"
  1642	      ],
  1643	      "group": "Identified Matching Entries"
  1644	    }
  1645	  ]
  1646	}+ newline
  1647	+ local count=1
  1648	+ (( i = 0 ))
  1649	+ (( i < count ))
  1650	+ echo
  1651
  1652	+ (( i++ ))
  1653	+ (( i < count ))
  1654	+ print '{
  1655	  "config": {
  1656	    "site": "cisco",
  1657	    "device": "fw1.cfg"
  1658	  },
  1659	  "objects": [
  1660	    {
  1661	      "object": "object-group",
  1662	      "type": "network BU1-NETWORK",
  1663	      "description": "false",
  1664	      "entries": [
  1665	        "network-object host 10.0.0.1",
  1666	        "network-object host 10.0.1.2",
  1667	        "network-object 192.168.1.0 255.255.255.0"
  1668	      ],
  1669	      "group": "Identified Matching Entries"
  1670	    }
  1671	  ]
  1672	}'
  1673	+ [[ -n {
  1674	  "config": {
  1675	    "site": "cisco",
  1676	    "device": "fw1.cfg"
  1677	  },
  1678	  "objects": [
  1679	    {
  1680	      "object": "object-group",
  1681	      "type": "network BU1-NETWORK",
  1682	      "description": "false",
  1683	      "entries": [
  1684	        "network-object host 10.0.0.1",
  1685	        "network-object host 10.0.1.2",
  1686	        "network-object 192.168.1.0 255.255.255.0"
  1687	      ],
  1688	      "group": "Identified Matching Entries"
  1689	    }
  1690	  ]
  1691	} ]]
  1692	+ echo -en '{
  1693	  "config": {
  1694	    "site": "cisco",
  1695	    "device": "fw1.cfg"
  1696	  },
  1697	  "objects": [
  1698	    {
  1699	      "object": "object-group",
  1700	      "type": "network BU1-NETWORK",
  1701	      "description": "false",
  1702	      "entries": [
  1703	        "network-object host 10.0.0.1",
  1704	        "network-object host 10.0.1.2",
  1705	        "network-object 192.168.1.0 255.255.255.0"
  1706	      ],
  1707	      "group": "Identified Matching Entries"
  1708	    }
  1709	  ]
  1710	}'
  1711	+ for serialized_line in "${matched_objects[@]}"
  1712	+ [[ true == true ]]
  1713	+ message 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1714	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1715	+ local 'message=Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1716	+ print 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1717	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1718	+ echo -en 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1719	Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1720	+ local count=1
  1721	+ (( i = 0 ))
  1722	+ (( i < count ))
  1723	+ echo
  1724
  1725	+ (( i++ ))
  1726	+ (( i < count ))
  1727	++ perl -pe 's/MTc0NzE0NjI2NTE0NTE2NjAwMAo/\n/g'
  1728	+ restored_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1729	+ [[ true == true ]]
  1730	+ message 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1731	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1732	+ local 'message=Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1733	+ print 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1734	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1735	+ echo -en 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1736	Restored Configuration:
  1737	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1738	+ local count=1
  1739	+ (( i = 0 ))
  1740	+ (( i < count ))
  1741	+ echo
  1742
  1743	+ (( i++ ))
  1744	+ (( i < count ))
  1745	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1746	+ local target_pattern=10.0.0.1
  1747	+ local config_path=configs/cisco/fw1.cfg
  1748	+ local 'restored_block=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1749	+ local cleaned_block
  1750	++ sed '/^[[:space:]]*$/d'
  1751	+ cleaned_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1752	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1753	+ [[ true == true ]]
  1754	+ message '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1755	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1756	+ local 'message=[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1757	+ print '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1758	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1759	+ echo -en '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1760	[process_configs] Raw Block:
  1761	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1762	+ local count=1
  1763	+ (( i = 0 ))
  1764	+ (( i < count ))
  1765	+ echo
  1766
  1767	+ (( i++ ))
  1768	+ (( i < count ))
  1769	+ local object_line
  1770	++ head -n 1
  1771	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1772	+ object_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1773	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1774	+ local object_keyword type_value
  1775	++ awk '{print $1}'
  1776	+ object_keyword=access-list
  1777	++ awk '{$1=""; print substr($0,2)}'
  1778	+ type_value='OUTSIDE extended permit ip host 10.0.0.1 any'
  1779	+ [[ true == true ]]
  1780	+ print '[process_configs] object   : access-list'
  1781	+ [[ -n [process_configs] object   : access-list ]]
  1782	+ echo -en '[process_configs] object   : access-list'
  1783	[process_configs] object   : access-list+ print '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  1784	+ [[ -n [process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1785	+ echo -en '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  1786	[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any+ entries=()
  1787	+ local -a entries
  1788	+ IFS=
  1789	+ read -r line
  1790	+ local trimmed
  1791	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1792	+ trimmed='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1793	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1794	+ [[ access-list outside extended permit ip host 10.0.0.1 any =~ ^description[[:space:]] ]]
  1795	+ entries+=("${trimmed}")
  1796	+ IFS=
  1797	+ read -r line
  1798	+ ((  1 > 1  ))
  1799	+ [[ true == true ]]
  1800	+ message '[process_configs] Entries:'
  1801	+ [[ -n [process_configs] Entries: ]]
  1802	+ local 'message=[process_configs] Entries:'
  1803	+ print '[process_configs] Entries:'
  1804	+ [[ -n [process_configs] Entries: ]]
  1805	+ echo -en '[process_configs] Entries:'
  1806	[process_configs] Entries:+ newline
  1807	+ local count=1
  1808	+ (( i = 0 ))
  1809	+ (( i < count ))
  1810	+ echo
  1811
  1812	+ (( i++ ))
  1813	+ (( i < count ))
  1814	+ for e in "${entries[@]}"
  1815	+ print '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1816	+ [[ -n   - access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1817	+ echo -en '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1818	  - access-list OUTSIDE extended permit ip host 10.0.0.1 any+ local matched_line
  1819	++ grep -wF 10.0.0.1
  1820	++ head -n 1
  1821	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1822	+ matched_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1823	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1824	+ [[ true == true ]]
  1825	+ message '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1826	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1827	+ local 'message=[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1828	+ print '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1829	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1830	+ echo -en '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1831	[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1832	+ local count=1
  1833	+ (( i = 0 ))
  1834	+ (( i < count ))
  1835	+ echo
  1836
  1837	+ (( i++ ))
  1838	+ (( i < count ))
  1839	+ local desc_val=false
  1840	+ [[ -z false ]]
  1841	+ [[ true == true ]]
  1842	+ message '[process_configs] Description: false'
  1843	+ [[ -n [process_configs] Description: false ]]
  1844	+ local 'message=[process_configs] Description: false'
  1845	+ print '[process_configs] Description: false'
  1846	+ [[ -n [process_configs] Description: false ]]
  1847	+ echo -en '[process_configs] Description: false'
  1848	[process_configs] Description: false+ newline
  1849	+ local count=1
  1850	+ (( i = 0 ))
  1851	+ (( i < count ))
  1852	+ echo
  1853
  1854	+ (( i++ ))
  1855	+ (( i < count ))
  1856	+ local group_val=Unclassified
  1857	+ [[ true == true ]]
  1858	+ local object_key
  1859	++ awk '{print $NF}'
  1860	++ sed -E 's/[[:punct:]]*$//'
  1861	+ object_key=any
  1862	++ jq -r --arg key any 'map(select(.match[]? | contains($key))) | .[0].group'
  1863	+ group_val=null
  1864	+ [[ -z null ]]
  1865	+ [[ null == \n\u\l\l ]]
  1866	++ jq -r --arg desc false 'map(select(.match[]? == $desc)) | .[0].group'
  1867	+ group_val=null
  1868	+ [[ -z null ]]
  1869	+ [[ null == \n\u\l\l ]]
  1870	+ group_val=Unclassified
  1871	+ [[ true == true ]]
  1872	+ message '[process_configs] Group: Unclassified'
  1873	+ [[ -n [process_configs] Group: Unclassified ]]
  1874	+ local 'message=[process_configs] Group: Unclassified'
  1875	+ print '[process_configs] Group: Unclassified'
  1876	+ [[ -n [process_configs] Group: Unclassified ]]
  1877	+ echo -en '[process_configs] Group: Unclassified'
  1878	[process_configs] Group: Unclassified+ newline
  1879	+ local count=1
  1880	+ (( i = 0 ))
  1881	+ (( i < count ))
  1882	+ echo
  1883
  1884	+ (( i++ ))
  1885	+ (( i < count ))
  1886	++ printf '%s\n' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1887	++ jq -R .
  1888	++ jq -s .
  1889	+ local 'entries_2json=[
  1890	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1891	]'
  1892	+ [[ 1 -eq 1 ]]
  1893	++ jq -n --arg object access-list --arg description false --argjson entries '[
  1894	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1895	]' --arg group Unclassified '{
  1896	                  object: $object,
  1897	                  type: false,
  1898	                  description: ($description | select(. != "" and . != "null") // false),
  1899	                  entries: $entries,
  1900	                  group: $group
  1901	                }'
  1902	+ target_object='{
  1903	  "object": "access-list",
  1904	  "type": false,
  1905	  "description": "false",
  1906	  "entries": [
  1907	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1908	  ],
  1909	  "group": "Unclassified"
  1910	}'
  1911	+ export target_object
  1912	+ [[ true == true ]]
  1913	+ message '[process_configs] JSON Object (output):'
  1914	+ [[ -n [process_configs] JSON Object (output): ]]
  1915	+ local 'message=[process_configs] JSON Object (output):'
  1916	+ print '[process_configs] JSON Object (output):'
  1917	+ [[ -n [process_configs] JSON Object (output): ]]
  1918	+ echo -en '[process_configs] JSON Object (output):'
  1919	[process_configs] JSON Object (output):+ newline
  1920	+ local count=1
  1921	+ (( i = 0 ))
  1922	+ (( i < count ))
  1923	+ echo
  1924
  1925	+ (( i++ ))
  1926	+ (( i < count ))
  1927	+ print '{
  1928	  "object": "access-list",
  1929	  "type": false,
  1930	  "description": "false",
  1931	  "entries": [
  1932	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1933	  ],
  1934	  "group": "Unclassified"
  1935	}'
  1936	+ [[ -n {
  1937	  "object": "access-list",
  1938	  "type": false,
  1939	  "description": "false",
  1940	  "entries": [
  1941	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1942	  ],
  1943	  "group": "Unclassified"
  1944	+ jq .
  1945	} ]]
  1946	+ echo -en '{
  1947	  "object": "access-list",
  1948	  "type": false,
  1949	  "description": "false",
  1950	  "entries": [
  1951	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1952	  ],
  1953	  "group": "Unclassified"
  1954	}'
  1955	{
  1956	  "object": "access-list",
  1957	  "type": false,
  1958	  "description": "false",
  1959	  "entries": [
  1960	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1961	  ],
  1962	  "group": "Unclassified"
  1963	}
  1964	+ newline
  1965	+ local count=1
  1966	+ (( i = 0 ))
  1967	+ (( i < count ))
  1968	+ echo
  1969
  1970	+ (( i++ ))
  1971	+ (( i < count ))
  1972	+ return 0
  1973	+ [[ -n {
  1974	  "object": "access-list",
  1975	  "type": false,
  1976	  "description": "false",
  1977	  "entries": [
  1978	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1979	  ],
  1980	  "group": "Unclassified"
  1981	} ]]
  1982	+ print '|-----> Target Objects: {
  1983	  "object": "access-list",
  1984	  "type": false,
  1985	  "description": "false",
  1986	  "entries": [
  1987	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1988	  ],
  1989	  "group": "Unclassified"
  1990	}'
  1991	+ [[ -n |-----> Target Objects: {
  1992	  "object": "access-list",
  1993	  "type": false,
  1994	  "description": "false",
  1995	  "entries": [
  1996	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1997	  ],
  1998	  "group": "Unclassified"
  1999	} ]]
  2000	+ echo -en '|-----> Target Objects: {
  2001	  "object": "access-list",
  2002	  "type": false,
  2003	  "description": "false",
  2004	  "entries": [
  2005	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2006	  ],
  2007	  "group": "Unclassified"
  2008	}'
  2009	|-----> Target Objects: {
  2010	  "object": "access-list",
  2011	  "type": false,
  2012	  "description": "false",
  2013	  "entries": [
  2014	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2015	  ],
  2016	  "group": "Unclassified"
  2017	}+ [[ -n {
  2018	  "object": "access-list",
  2019	  "type": false,
  2020	  "description": "false",
  2021	  "entries": [
  2022	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2023	  ],
  2024	  "group": "Unclassified"
  2025	} ]]
  2026	++ printf '%s\n' '{
  2027	  "object": "access-list",
  2028	  "type": false,
  2029	  "description": "false",
  2030	  "entries": [
  2031	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2032	  ],
  2033	  "group": "Unclassified"
  2034	}'
  2035	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  2036	              config: {
  2037	                site: ($site | gsub("^.*/"; "")),
  2038	                device: $device
  2039	              },
  2040	              objects: .
  2041	            }'
  2042	+ wrapped_block='{
  2043	  "config": {
  2044	    "site": "cisco",
  2045	    "device": "fw1.cfg"
  2046	  },
  2047	  "objects": [
  2048	    {
  2049	      "object": "access-list",
  2050	      "type": false,
  2051	      "description": "false",
  2052	      "entries": [
  2053	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2054	      ],
  2055	      "group": "Unclassified"
  2056	    }
  2057	  ]
  2058	}'
  2059	+ [[ true == true ]]
  2060	+ message 'Wrapped JSON Block:\n{
  2061	  "config": {
  2062	    "site": "cisco",
  2063	    "device": "fw1.cfg"
  2064	  },
  2065	  "objects": [
  2066	    {
  2067	      "object": "access-list",
  2068	      "type": false,
  2069	      "description": "false",
  2070	      "entries": [
  2071	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2072	      ],
  2073	      "group": "Unclassified"
  2074	    }
  2075	  ]
  2076	}'
  2077	+ [[ -n Wrapped JSON Block:\n{
  2078	  "config": {
  2079	    "site": "cisco",
  2080	    "device": "fw1.cfg"
  2081	  },
  2082	  "objects": [
  2083	    {
  2084	      "object": "access-list",
  2085	      "type": false,
  2086	      "description": "false",
  2087	      "entries": [
  2088	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2089	      ],
  2090	      "group": "Unclassified"
  2091	    }
  2092	  ]
  2093	} ]]
  2094	+ local 'message=Wrapped JSON Block:\n{
  2095	  "config": {
  2096	    "site": "cisco",
  2097	    "device": "fw1.cfg"
  2098	  },
  2099	  "objects": [
  2100	    {
  2101	      "object": "access-list",
  2102	      "type": false,
  2103	      "description": "false",
  2104	      "entries": [
  2105	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2106	      ],
  2107	      "group": "Unclassified"
  2108	    }
  2109	  ]
  2110	}'
  2111	+ print 'Wrapped JSON Block:\n{
  2112	  "config": {
  2113	    "site": "cisco",
  2114	    "device": "fw1.cfg"
  2115	  },
  2116	  "objects": [
  2117	    {
  2118	      "object": "access-list",
  2119	      "type": false,
  2120	      "description": "false",
  2121	      "entries": [
  2122	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2123	      ],
  2124	      "group": "Unclassified"
  2125	    }
  2126	  ]
  2127	}'
  2128	+ [[ -n Wrapped JSON Block:\n{
  2129	  "config": {
  2130	    "site": "cisco",
  2131	    "device": "fw1.cfg"
  2132	  },
  2133	  "objects": [
  2134	    {
  2135	      "object": "access-list",
  2136	      "type": false,
  2137	      "description": "false",
  2138	      "entries": [
  2139	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2140	      ],
  2141	      "group": "Unclassified"
  2142	    }
  2143	  ]
  2144	} ]]
  2145	+ echo -en 'Wrapped JSON Block:\n{
  2146	  "config": {
  2147	    "site": "cisco",
  2148	    "device": "fw1.cfg"
  2149	  },
  2150	  "objects": [
  2151	    {
  2152	      "object": "access-list",
  2153	      "type": false,
  2154	      "description": "false",
  2155	      "entries": [
  2156	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2157	      ],
  2158	      "group": "Unclassified"
  2159	    }
  2160	  ]
  2161	}'
  2162	Wrapped JSON Block:
  2163	{
  2164	  "config": {
  2165	    "site": "cisco",
  2166	    "device": "fw1.cfg"
  2167	  },
  2168	  "objects": [
  2169	    {
  2170	      "object": "access-list",
  2171	      "type": false,
  2172	      "description": "false",
  2173	      "entries": [
  2174	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2175	      ],
  2176	      "group": "Unclassified"
  2177	    }
  2178	  ]
  2179	}+ newline
  2180	+ local count=1
  2181	+ (( i = 0 ))
  2182	+ (( i < count ))
  2183	+ echo
  2184
  2185	+ (( i++ ))
  2186	+ (( i < count ))
  2187	+ print '{
  2188	  "config": {
  2189	    "site": "cisco",
  2190	    "device": "fw1.cfg"
  2191	  },
  2192	  "objects": [
  2193	    {
  2194	      "object": "access-list",
  2195	      "type": false,
  2196	      "description": "false",
  2197	      "entries": [
  2198	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2199	      ],
  2200	      "group": "Unclassified"
  2201	    }
  2202	  ]
  2203	}'
  2204	+ [[ -n {
  2205	  "config": {
  2206	    "site": "cisco",
  2207	    "device": "fw1.cfg"
  2208	  },
  2209	  "objects": [
  2210	    {
  2211	      "object": "access-list",
  2212	      "type": false,
  2213	      "description": "false",
  2214	      "entries": [
  2215	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2216	      ],
  2217	      "group": "Unclassified"
  2218	    }
  2219	  ]
  2220	} ]]
  2221	+ echo -en '{
  2222	  "config": {
  2223	    "site": "cisco",
  2224	    "device": "fw1.cfg"
  2225	  },
  2226	  "objects": [
  2227	    {
  2228	      "object": "access-list",
  2229	      "type": false,
  2230	      "description": "false",
  2231	      "entries": [
  2232	        "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2233	      ],
  2234	      "group": "Unclassified"
  2235	    }
  2236	  ]
  2237	}'
  2238	+ return 0
  2239	+ for cfg_file in "${source_configs[@]}"
  2240	+ extract_configs configs/misc/switch.conf 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
  2241	+ local config_file=configs/misc/switch.conf
  2242	+ local target_pattern=10.0.0.1
  2243	+ local target_listing=targets/10.0.0.1.json
  2244	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
  2245	+ [[ ! -f configs/misc/switch.conf ]]
  2246	+ message '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2247	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2248	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2249	+ print '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2250	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2251	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2252	[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf+ newline
  2253	+ local count=1
  2254	+ (( i = 0 ))
  2255	+ (( i < count ))
  2256	+ echo
  2257
  2258	+ (( i++ ))
  2259	+ (( i < count ))
  2260	+ [[ ! -s configs/misc/switch.conf ]]
  2261	++ stat -c%s configs/misc/switch.conf
  2262	stat: illegal option -- c
  2263	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
  2264	+ message '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2265	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2266	+ local 'message=[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2267	+ print '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2268	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2269	+ echo -en '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2270	[OK] File 'configs/misc/switch.conf' is readable and size is  bytes+ newline
  2271	+ local count=1
  2272	+ (( i = 0 ))
  2273	+ (( i < count ))
  2274	+ echo
  2275
  2276	+ (( i++ ))
  2277	+ (( i < count ))
  2278	+ local 'imported_content=interface Vlan1
  2279	 ip address 172.31.255.254 255.255.255.0
  2280
  2281	interface Vlan2
  2282	 ip address 10.0.1.2 255.255.255.0
  2283
  2284	object-group network SOME-THING
  2285	  description Local Office Subnets
  2286	  network-object host 10.0.0.1
  2287	  network-object 192.168.12.0 255.255.255.0'
  2288	+ [[ true == true ]]
  2289	+ message 'Imported Content: interface Vlan1
  2290	 ip address 172.31.255.254 255.255.255.0
  2291
  2292	interface Vlan2
  2293	 ip address 10.0.1.2 255.255.255.0
  2294
  2295	object-group network SOME-THING
  2296	  description Local Office Subnets
  2297	  network-object host 10.0.0.1
  2298	  network-object 192.168.12.0 255.255.255.0'
  2299	+ [[ -n Imported Content: interface Vlan1
  2300	 ip address 172.31.255.254 255.255.255.0
  2301
  2302	interface Vlan2
  2303	 ip address 10.0.1.2 255.255.255.0
  2304
  2305	object-group network SOME-THING
  2306	  description Local Office Subnets
  2307	  network-object host 10.0.0.1
  2308	  network-object 192.168.12.0 255.255.255.0 ]]
  2309	+ local 'message=Imported Content: interface Vlan1
  2310	 ip address 172.31.255.254 255.255.255.0
  2311
  2312	interface Vlan2
  2313	 ip address 10.0.1.2 255.255.255.0
  2314
  2315	object-group network SOME-THING
  2316	  description Local Office Subnets
  2317	  network-object host 10.0.0.1
  2318	  network-object 192.168.12.0 255.255.255.0'
  2319	+ print 'Imported Content: interface Vlan1
  2320	 ip address 172.31.255.254 255.255.255.0
  2321
  2322	interface Vlan2
  2323	 ip address 10.0.1.2 255.255.255.0
  2324
  2325	object-group network SOME-THING
  2326	  description Local Office Subnets
  2327	  network-object host 10.0.0.1
  2328	  network-object 192.168.12.0 255.255.255.0'
  2329	+ [[ -n Imported Content: interface Vlan1
  2330	 ip address 172.31.255.254 255.255.255.0
  2331
  2332	interface Vlan2
  2333	 ip address 10.0.1.2 255.255.255.0
  2334
  2335	object-group network SOME-THING
  2336	  description Local Office Subnets
  2337	  network-object host 10.0.0.1
  2338	  network-object 192.168.12.0 255.255.255.0 ]]
  2339	+ echo -en 'Imported Content: interface Vlan1
  2340	 ip address 172.31.255.254 255.255.255.0
  2341
  2342	interface Vlan2
  2343	 ip address 10.0.1.2 255.255.255.0
  2344
  2345	object-group network SOME-THING
  2346	  description Local Office Subnets
  2347	  network-object host 10.0.0.1
  2348	  network-object 192.168.12.0 255.255.255.0'
  2349	Imported Content: interface Vlan1
  2350	 ip address 172.31.255.254 255.255.255.0
  2351
  2352	interface Vlan2
  2353	 ip address 10.0.1.2 255.255.255.0
  2354
  2355	object-group network SOME-THING
  2356	  description Local Office Subnets
  2357	  network-object host 10.0.0.1
  2358	  network-object 192.168.12.0 255.255.255.0+ newline
  2359	+ local count=1
  2360	+ (( i = 0 ))
  2361	+ (( i < count ))
  2362	+ echo
  2363
  2364	+ (( i++ ))
  2365	+ (( i < count ))
  2366	++ sed '/^\s*$/d;/^\s*!.*$/d'
  2367	+ local 'sanitized_content=interface Vlan1
  2368	 ip address 172.31.255.254 255.255.255.0
  2369	interface Vlan2
  2370	 ip address 10.0.1.2 255.255.255.0
  2371	object-group network SOME-THING
  2372	  description Local Office Subnets
  2373	  network-object host 10.0.0.1
  2374	  network-object 192.168.12.0 255.255.255.0'
  2375	+ [[ true == true ]]
  2376	+ message 'Sanitized Content: interface Vlan1
  2377	 ip address 172.31.255.254 255.255.255.0
  2378	interface Vlan2
  2379	 ip address 10.0.1.2 255.255.255.0
  2380	object-group network SOME-THING
  2381	  description Local Office Subnets
  2382	  network-object host 10.0.0.1
  2383	  network-object 192.168.12.0 255.255.255.0'
  2384	+ [[ -n Sanitized Content: interface Vlan1
  2385	 ip address 172.31.255.254 255.255.255.0
  2386	interface Vlan2
  2387	 ip address 10.0.1.2 255.255.255.0
  2388	object-group network SOME-THING
  2389	  description Local Office Subnets
  2390	  network-object host 10.0.0.1
  2391	  network-object 192.168.12.0 255.255.255.0 ]]
  2392	+ local 'message=Sanitized Content: interface Vlan1
  2393	 ip address 172.31.255.254 255.255.255.0
  2394	interface Vlan2
  2395	 ip address 10.0.1.2 255.255.255.0
  2396	object-group network SOME-THING
  2397	  description Local Office Subnets
  2398	  network-object host 10.0.0.1
  2399	  network-object 192.168.12.0 255.255.255.0'
  2400	+ print 'Sanitized Content: interface Vlan1
  2401	 ip address 172.31.255.254 255.255.255.0
  2402	interface Vlan2
  2403	 ip address 10.0.1.2 255.255.255.0
  2404	object-group network SOME-THING
  2405	  description Local Office Subnets
  2406	  network-object host 10.0.0.1
  2407	  network-object 192.168.12.0 255.255.255.0'
  2408	+ [[ -n Sanitized Content: interface Vlan1
  2409	 ip address 172.31.255.254 255.255.255.0
  2410	interface Vlan2
  2411	 ip address 10.0.1.2 255.255.255.0
  2412	object-group network SOME-THING
  2413	  description Local Office Subnets
  2414	  network-object host 10.0.0.1
  2415	  network-object 192.168.12.0 255.255.255.0 ]]
  2416	+ echo -en 'Sanitized Content: interface Vlan1
  2417	 ip address 172.31.255.254 255.255.255.0
  2418	interface Vlan2
  2419	 ip address 10.0.1.2 255.255.255.0
  2420	object-group network SOME-THING
  2421	  description Local Office Subnets
  2422	  network-object host 10.0.0.1
  2423	  network-object 192.168.12.0 255.255.255.0'
  2424	Sanitized Content: interface Vlan1
  2425	 ip address 172.31.255.254 255.255.255.0
  2426	interface Vlan2
  2427	 ip address 10.0.1.2 255.255.255.0
  2428	object-group network SOME-THING
  2429	  description Local Office Subnets
  2430	  network-object host 10.0.0.1
  2431	  network-object 192.168.12.0 255.255.255.0+ newline
  2432	+ local count=1
  2433	+ (( i = 0 ))
  2434	+ (( i < count ))
  2435	+ echo
  2436
  2437	+ (( i++ ))
  2438	+ (( i < count ))
  2439	++ perl -pe 's/\n/MTc0NzE0NjI2NTE0NTE2NjAwMAo/g'
  2440	+ local 'serialized_objects=interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2441	+ [[ true == true ]]
  2442	+ message 'Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2443	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2444	+ local 'message=Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2445	+ print 'Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2446	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2447	+ echo -en 'Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2448	Serialized Objects: interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAointerface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAoobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
  2449	+ local count=1
  2450	+ (( i = 0 ))
  2451	+ (( i < count ))
  2452	+ echo
  2453
  2454	+ (( i++ ))
  2455	+ (( i < count ))
  2456	++ sed -E 's/MTc0NzE0NjI2NTE0NTE2NjAwMAo([^[:space:]])/\n\1/g'
  2457	+ local 'restored_lines=interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0
  2458	interface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0
  2459	object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2460	+ restored_lines+='
  2461	'
  2462	+ IFS='
  2463	'
  2464	+ read -r -d '' -a config_objects
  2465	++ printf '%s\0' 'interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0
  2466	interface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0
  2467	object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo
  2468	'
  2469	+ [[ true == true ]]
  2470	+ message 'Loaded 3 config blocks'
  2471	+ [[ -n Loaded 3 config blocks ]]
  2472	+ local 'message=Loaded 3 config blocks'
  2473	+ print 'Loaded 3 config blocks'
  2474	+ [[ -n Loaded 3 config blocks ]]
  2475	+ echo -en 'Loaded 3 config blocks'
  2476	Loaded 3 config blocks+ newline
  2477	+ local count=1
  2478	+ (( i = 0 ))
  2479	+ (( i < count ))
  2480	+ echo
  2481
  2482	+ (( i++ ))
  2483	+ (( i < count ))
  2484	+ for i in "${!config_objects[@]}"
  2485	+ message '|---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0'
  2486	+ [[ -n |---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0 ]]
  2487	+ local 'message=|---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0'
  2488	+ print '|---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0'
  2489	+ [[ -n |---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0 ]]
  2490	+ echo -en '|---> Block [0]\ninterface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0'
  2491	|---> Block [0]
  2492	interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0+ newline
  2493	+ local count=1
  2494	+ (( i = 0 ))
  2495	+ (( i < count ))
  2496	+ echo
  2497
  2498	+ (( i++ ))
  2499	+ (( i < count ))
  2500	+ for i in "${!config_objects[@]}"
  2501	+ message '|---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0'
  2502	+ [[ -n |---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0 ]]
  2503	+ local 'message=|---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0'
  2504	+ print '|---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0'
  2505	+ [[ -n |---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0 ]]
  2506	+ echo -en '|---> Block [1]\ninterface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0'
  2507	|---> Block [1]
  2508	interface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0+ newline
  2509	+ local count=1
  2510	+ (( i = 0 ))
  2511	+ (( i < count ))
  2512	+ echo
  2513
  2514	+ (( i++ ))
  2515	+ (( i < count ))
  2516	+ for i in "${!config_objects[@]}"
  2517	+ message '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2518	+ [[ -n |---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2519	+ local 'message=|---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2520	+ print '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2521	+ [[ -n |---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2522	+ echo -en '|---> Block [2]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2523	|---> Block [2]
  2524	object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
  2525	+ local count=1
  2526	+ (( i = 0 ))
  2527	+ (( i < count ))
  2528	+ echo
  2529
  2530	+ (( i++ ))
  2531	+ (( i < count ))
  2532	+ newline
  2533	+ local count=1
  2534	+ (( i = 0 ))
  2535	+ (( i < count ))
  2536	+ echo
  2537
  2538	+ (( i++ ))
  2539	+ (( i < count ))
  2540	+ oIFS='
  2541	'
  2542	+ IFS='
  2543	'
  2544	++ printf '%s\n' 'interface Vlan1MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 172.31.255.254 255.255.255.0' 'interface Vlan2MTc0NzE0NjI2NTE0NTE2NjAwMAo ip address 10.0.1.2 255.255.255.0' 'object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2545	++ grep -F 10.0.0.1
  2546	+ matched_objects=('object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo')
  2547	+ declare -a matched_objects
  2548	+ IFS='
  2549	'
  2550	+ [[ true == true ]]
  2551	+ message 'Loaded 1 config blocks'
  2552	+ [[ -n Loaded 1 config blocks ]]
  2553	+ local 'message=Loaded 1 config blocks'
  2554	+ print 'Loaded 1 config blocks'
  2555	+ [[ -n Loaded 1 config blocks ]]
  2556	+ echo -en 'Loaded 1 config blocks'
  2557	Loaded 1 config blocks+ newline
  2558	+ local count=1
  2559	+ (( i = 0 ))
  2560	+ (( i < count ))
  2561	+ echo
  2562
  2563	+ (( i++ ))
  2564	+ (( i < count ))
  2565	+ for i in "${!matched_objects[@]}"
  2566	+ message '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2567	+ [[ -n |---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2568	+ local 'message=|---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2569	+ print '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2570	+ [[ -n |---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2571	+ echo -en '|---> Block [0]\nobject-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2572	|---> Block [0]
  2573	object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
  2574	+ local count=1
  2575	+ (( i = 0 ))
  2576	+ (( i < count ))
  2577	+ echo
  2578
  2579	+ (( i++ ))
  2580	+ (( i < count ))
  2581	+ newline
  2582	+ local count=1
  2583	+ (( i = 0 ))
  2584	+ (( i < count ))
  2585	+ echo
  2586
  2587	+ (( i++ ))
  2588	+ (( i < count ))
  2589	+ local site_part=configs/misc
  2590	+ local file_part=switch.conf
  2591	++ jq -r --arg site misc --arg file switch.conf '.configs[] | select(.config.site == $site and .config.device == $file) | .count' targets/10.0.0.1.json
  2592	+ local expected_count=1
  2593	+ [[ true == true ]]
  2594	+ message 'Expected Matches (Count): 1'
  2595	+ [[ -n Expected Matches (Count): 1 ]]
  2596	+ local 'message=Expected Matches (Count): 1'
  2597	+ print 'Expected Matches (Count): 1'
  2598	+ [[ -n Expected Matches (Count): 1 ]]
  2599	+ echo -en 'Expected Matches (Count): 1'
  2600	Expected Matches (Count): 1+ newline
  2601	+ local count=1
  2602	+ (( i = 0 ))
  2603	+ (( i < count ))
  2604	+ echo
  2605
  2606	+ (( i++ ))
  2607	+ (( i < count ))
  2608	+ actual_count=1
  2609	+ [[ 1 != \1 ]]
  2610	+ restored_block=()
  2611	+ declare -a restored_block
  2612	+ for serialized_line in "${matched_objects[@]}"
  2613	+ [[ true == true ]]
  2614	+ message 'Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2615	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2616	+ local 'message=Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2617	+ print 'Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2618	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo ]]
  2619	+ echo -en 'Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo'
  2620	Serialized Line: object-group network SOME-THINGMTc0NzE0NjI2NTE0NTE2NjAwMAo  description Local Office SubnetsMTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object host 10.0.0.1MTc0NzE0NjI2NTE0NTE2NjAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE0NjI2NTE0NTE2NjAwMAo+ newline
  2621	+ local count=1
  2622	+ (( i = 0 ))
  2623	+ (( i < count ))
  2624	+ echo
  2625
  2626	+ (( i++ ))
  2627	+ (( i < count ))
  2628	++ perl -pe 's/MTc0NzE0NjI2NTE0NTE2NjAwMAo/\n/g'
  2629	+ restored_block='object-group network SOME-THING
  2630	  description Local Office Subnets
  2631	  network-object host 10.0.0.1
  2632	  network-object 192.168.12.0 255.255.255.0'
  2633	+ [[ true == true ]]
  2634	+ message 'Restored Configuration:\nobject-group network SOME-THING
  2635	  description Local Office Subnets
  2636	  network-object host 10.0.0.1
  2637	  network-object 192.168.12.0 255.255.255.0'
  2638	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2639	  description Local Office Subnets
  2640	  network-object host 10.0.0.1
  2641	  network-object 192.168.12.0 255.255.255.0 ]]
  2642	+ local 'message=Restored Configuration:\nobject-group network SOME-THING
  2643	  description Local Office Subnets
  2644	  network-object host 10.0.0.1
  2645	  network-object 192.168.12.0 255.255.255.0'
  2646	+ print 'Restored Configuration:\nobject-group network SOME-THING
  2647	  description Local Office Subnets
  2648	  network-object host 10.0.0.1
  2649	  network-object 192.168.12.0 255.255.255.0'
  2650	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2651	  description Local Office Subnets
  2652	  network-object host 10.0.0.1
  2653	  network-object 192.168.12.0 255.255.255.0 ]]
  2654	+ echo -en 'Restored Configuration:\nobject-group network SOME-THING
  2655	  description Local Office Subnets
  2656	  network-object host 10.0.0.1
  2657	  network-object 192.168.12.0 255.255.255.0'
  2658	Restored Configuration:
  2659	object-group network SOME-THING
  2660	  description Local Office Subnets
  2661	  network-object host 10.0.0.1
  2662	  network-object 192.168.12.0 255.255.255.0+ newline
  2663	+ local count=1
  2664	+ (( i = 0 ))
  2665	+ (( i < count ))
  2666	+ echo
  2667
  2668	+ (( i++ ))
  2669	+ (( i < count ))
  2670	+ process_configs 10.0.0.1 configs/misc/switch.conf 'object-group network SOME-THING
  2671	  description Local Office Subnets
  2672	  network-object host 10.0.0.1
  2673	  network-object 192.168.12.0 255.255.255.0'
  2674	+ local target_pattern=10.0.0.1
  2675	+ local config_path=configs/misc/switch.conf
  2676	+ local 'restored_block=object-group network SOME-THING
  2677	  description Local Office Subnets
  2678	  network-object host 10.0.0.1
  2679	  network-object 192.168.12.0 255.255.255.0'
  2680	+ local cleaned_block
  2681	++ sed '/^[[:space:]]*$/d'
  2682	+ cleaned_block='object-group network SOME-THING
  2683	  description Local Office Subnets
  2684	  network-object host 10.0.0.1
  2685	  network-object 192.168.12.0 255.255.255.0'
  2686	+ [[ -z object-group network SOME-THING
  2687	  description Local Office Subnets
  2688	  network-object host 10.0.0.1
  2689	  network-object 192.168.12.0 255.255.255.0 ]]
  2690	+ [[ true == true ]]
  2691	+ message '[process_configs] Raw Block:\nobject-group network SOME-THING
  2692	  description Local Office Subnets
  2693	  network-object host 10.0.0.1
  2694	  network-object 192.168.12.0 255.255.255.0'
  2695	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2696	  description Local Office Subnets
  2697	  network-object host 10.0.0.1
  2698	  network-object 192.168.12.0 255.255.255.0 ]]
  2699	+ local 'message=[process_configs] Raw Block:\nobject-group network SOME-THING
  2700	  description Local Office Subnets
  2701	  network-object host 10.0.0.1
  2702	  network-object 192.168.12.0 255.255.255.0'
  2703	+ print '[process_configs] Raw Block:\nobject-group network SOME-THING
  2704	  description Local Office Subnets
  2705	  network-object host 10.0.0.1
  2706	  network-object 192.168.12.0 255.255.255.0'
  2707	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2708	  description Local Office Subnets
  2709	  network-object host 10.0.0.1
  2710	  network-object 192.168.12.0 255.255.255.0 ]]
  2711	+ echo -en '[process_configs] Raw Block:\nobject-group network SOME-THING
  2712	  description Local Office Subnets
  2713	  network-object host 10.0.0.1
  2714	  network-object 192.168.12.0 255.255.255.0'
  2715	[process_configs] Raw Block:
  2716	object-group network SOME-THING
  2717	  description Local Office Subnets
  2718	  network-object host 10.0.0.1
  2719	  network-object 192.168.12.0 255.255.255.0+ newline
  2720	+ local count=1
  2721	+ (( i = 0 ))
  2722	+ (( i < count ))
  2723	+ echo
  2724
  2725	+ (( i++ ))
  2726	+ (( i < count ))
  2727	+ local object_line
  2728	++ head -n 1
  2729	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2730	+ object_line='object-group network SOME-THING'
  2731	+ [[ -z object-group network SOME-THING ]]
  2732	+ local object_keyword type_value
  2733	++ awk '{print $1}'
  2734	+ object_keyword=object-group
  2735	++ awk '{$1=""; print substr($0,2)}'
  2736	+ type_value='network SOME-THING'
  2737	+ [[ true == true ]]
  2738	+ print '[process_configs] object   : object-group'
  2739	+ [[ -n [process_configs] object   : object-group ]]
  2740	+ echo -en '[process_configs] object   : object-group'
  2741	[process_configs] object   : object-group+ print '[process_configs] type     : network SOME-THING'
  2742	+ [[ -n [process_configs] type     : network SOME-THING ]]
  2743	+ echo -en '[process_configs] type     : network SOME-THING'
  2744	[process_configs] type     : network SOME-THING+ entries=()
  2745	+ local -a entries
  2746	+ IFS=
  2747	+ read -r line
  2748	+ local trimmed
  2749	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2750	+ trimmed='object-group network SOME-THING'
  2751	+ [[ -z object-group network SOME-THING ]]
  2752	+ [[ object-group network some-thing =~ ^description[[:space:]] ]]
  2753	+ entries+=("${trimmed}")
  2754	+ IFS=
  2755	+ read -r line
  2756	+ local trimmed
  2757	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2758	+ trimmed='description Local Office Subnets'
  2759	+ [[ -z description Local Office Subnets ]]
  2760	+ [[ description local office subnets =~ ^description[[:space:]] ]]
  2761	+ continue
  2762	+ IFS=
  2763	+ read -r line
  2764	+ local trimmed
  2765	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2766	+ trimmed='network-object host 10.0.0.1'
  2767	+ [[ -z network-object host 10.0.0.1 ]]
  2768	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  2769	+ entries+=("${trimmed}")
  2770	+ IFS=
  2771	+ read -r line
  2772	+ local trimmed
  2773	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2774	+ trimmed='network-object 192.168.12.0 255.255.255.0'
  2775	+ [[ -z network-object 192.168.12.0 255.255.255.0 ]]
  2776	+ [[ network-object 192.168.12.0 255.255.255.0 =~ ^description[[:space:]] ]]
  2777	+ entries+=("${trimmed}")
  2778	+ IFS=
  2779	+ read -r line
  2780	+ ((  3 > 1  ))
  2781	+ entries=("${entries[@]:1}")
  2782	+ [[ true == true ]]
  2783	+ message '[process_configs] Entries:'
  2784	+ [[ -n [process_configs] Entries: ]]
  2785	+ local 'message=[process_configs] Entries:'
  2786	+ print '[process_configs] Entries:'
  2787	+ [[ -n [process_configs] Entries: ]]
  2788	+ echo -en '[process_configs] Entries:'
  2789	[process_configs] Entries:+ newline
  2790	+ local count=1
  2791	+ (( i = 0 ))
  2792	+ (( i < count ))
  2793	+ echo
  2794
  2795	+ (( i++ ))
  2796	+ (( i < count ))
  2797	+ for e in "${entries[@]}"
  2798	+ print '  - network-object host 10.0.0.1'
  2799	+ [[ -n   - network-object host 10.0.0.1 ]]
  2800	+ echo -en '  - network-object host 10.0.0.1'
  2801	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  2802	+ print '  - network-object 192.168.12.0 255.255.255.0'
  2803	+ [[ -n   - network-object 192.168.12.0 255.255.255.0 ]]
  2804	+ echo -en '  - network-object 192.168.12.0 255.255.255.0'
  2805	  - network-object 192.168.12.0 255.255.255.0+ local matched_line
  2806	++ grep -wF 10.0.0.1
  2807	++ head -n 1
  2808	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2809	+ matched_line='network-object host 10.0.0.1'
  2810	+ [[ -z network-object host 10.0.0.1 ]]
  2811	+ [[ true == true ]]
  2812	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  2813	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  2814	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  2815	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  2816	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  2817	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  2818	[process_configs] Matched: network-object host 10.0.0.1+ newline
  2819	+ local count=1
  2820	+ (( i = 0 ))
  2821	+ (( i < count ))
  2822	+ echo
  2823
  2824	+ (( i++ ))
  2825	+ (( i < count ))
  2826	+ local desc_val=false
  2827	+ [[ -z false ]]
  2828	+ [[ true == true ]]
  2829	+ message '[process_configs] Description: false'
  2830	+ [[ -n [process_configs] Description: false ]]
  2831	+ local 'message=[process_configs] Description: false'
  2832	+ print '[process_configs] Description: false'
  2833	+ [[ -n [process_configs] Description: false ]]
  2834	+ echo -en '[process_configs] Description: false'
  2835	[process_configs] Description: false+ newline
  2836	+ local count=1
  2837	+ (( i = 0 ))
  2838	+ (( i < count ))
  2839	+ echo
  2840
  2841	+ (( i++ ))
  2842	+ (( i < count ))
  2843	+ local group_val=Unclassified
  2844	+ [[ true == true ]]
  2845	+ local object_key
  2846	++ awk '{print $NF}'
  2847	++ sed -E 's/[[:punct:]]*$//'
  2848	+ object_key=SOME-THING
  2849	++ jq -r --arg key SOME-THING 'map(select(.match[]? | contains($key))) | .[0].group'
  2850	+ group_val='Identified Matching Entries'
  2851	+ [[ -z Identified Matching Entries ]]
  2852	+ [[ Identified Matching Entries == \n\u\l\l ]]
  2853	+ [[ -z Identified Matching Entries ]]
  2854	+ [[ Identified Matching Entries == \n\u\l\l ]]
  2855	+ [[ true == true ]]
  2856	+ message '[process_configs] Group: Identified Matching Entries'
  2857	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  2858	+ local 'message=[process_configs] Group: Identified Matching Entries'
  2859	+ print '[process_configs] Group: Identified Matching Entries'
  2860	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  2861	+ echo -en '[process_configs] Group: Identified Matching Entries'
  2862	[process_configs] Group: Identified Matching Entries+ newline
  2863	+ local count=1
  2864	+ (( i = 0 ))
  2865	+ (( i < count ))
  2866	+ echo
  2867
  2868	+ (( i++ ))
  2869	+ (( i < count ))
  2870	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object 192.168.12.0 255.255.255.0'
  2871	++ jq -R .
  2872	++ jq -s .
  2873	+ local 'entries_2json=[
  2874	  "network-object host 10.0.0.1",
  2875	  "network-object 192.168.12.0 255.255.255.0"
  2876	]'
  2877	+ [[ 2 -eq 1 ]]
  2878	++ jq -n --arg object object-group --arg type 'network SOME-THING' --arg description false --argjson entries '[
  2879	  "network-object host 10.0.0.1",
  2880	  "network-object 192.168.12.0 255.255.255.0"
  2881	]' --arg group 'Identified Matching Entries' '{
  2882	                  object: $object,
  2883	                  type: $type,
  2884	                  description: ($description | select(. != "" and . != "null") // false),
  2885	                  entries: $entries,
  2886	                  group: $group
  2887	                }'
  2888	+ target_object='{
  2889	  "object": "object-group",
  2890	  "type": "network SOME-THING",
  2891	  "description": "false",
  2892	  "entries": [
  2893	    "network-object host 10.0.0.1",
  2894	    "network-object 192.168.12.0 255.255.255.0"
  2895	  ],
  2896	  "group": "Identified Matching Entries"
  2897	}'
  2898	+ export target_object
  2899	+ [[ true == true ]]
  2900	+ message '[process_configs] JSON Object (output):'
  2901	+ [[ -n [process_configs] JSON Object (output): ]]
  2902	+ local 'message=[process_configs] JSON Object (output):'
  2903	+ print '[process_configs] JSON Object (output):'
  2904	+ [[ -n [process_configs] JSON Object (output): ]]
  2905	+ echo -en '[process_configs] JSON Object (output):'
  2906	[process_configs] JSON Object (output):+ newline
  2907	+ local count=1
  2908	+ (( i = 0 ))
  2909	+ (( i < count ))
  2910	+ echo
  2911
  2912	+ (( i++ ))
  2913	+ (( i < count ))
  2914	+ print '{
  2915	  "object": "object-group",
  2916	  "type": "network SOME-THING",
  2917	  "description": "false",
  2918	  "entries": [
  2919	    "network-object host 10.0.0.1",
  2920	    "network-object 192.168.12.0 255.255.255.0"
  2921	  ],
  2922	  "group": "Identified Matching Entries"
  2923	}'
  2924	+ jq .
  2925	+ [[ -n {
  2926	  "object": "object-group",
  2927	  "type": "network SOME-THING",
  2928	  "description": "false",
  2929	  "entries": [
  2930	    "network-object host 10.0.0.1",
  2931	    "network-object 192.168.12.0 255.255.255.0"
  2932	  ],
  2933	  "group": "Identified Matching Entries"
  2934	} ]]
  2935	+ echo -en '{
  2936	  "object": "object-group",
  2937	  "type": "network SOME-THING",
  2938	  "description": "false",
  2939	  "entries": [
  2940	    "network-object host 10.0.0.1",
  2941	    "network-object 192.168.12.0 255.255.255.0"
  2942	  ],
  2943	  "group": "Identified Matching Entries"
  2944	}'
  2945	{
  2946	  "object": "object-group",
  2947	  "type": "network SOME-THING",
  2948	  "description": "false",
  2949	  "entries": [
  2950	    "network-object host 10.0.0.1",
  2951	    "network-object 192.168.12.0 255.255.255.0"
  2952	  ],
  2953	  "group": "Identified Matching Entries"
  2954	}
  2955	+ newline
  2956	+ local count=1
  2957	+ (( i = 0 ))
  2958	+ (( i < count ))
  2959	+ echo
  2960
  2961	+ (( i++ ))
  2962	+ (( i < count ))
  2963	+ return 0
  2964	+ [[ -n {
  2965	  "object": "object-group",
  2966	  "type": "network SOME-THING",
  2967	  "description": "false",
  2968	  "entries": [
  2969	    "network-object host 10.0.0.1",
  2970	    "network-object 192.168.12.0 255.255.255.0"
  2971	  ],
  2972	  "group": "Identified Matching Entries"
  2973	} ]]
  2974	+ print '|-----> Target Objects: {
  2975	  "object": "object-group",
  2976	  "type": "network SOME-THING",
  2977	  "description": "false",
  2978	  "entries": [
  2979	    "network-object host 10.0.0.1",
  2980	    "network-object 192.168.12.0 255.255.255.0"
  2981	  ],
  2982	  "group": "Identified Matching Entries"
  2983	}'
  2984	+ [[ -n |-----> Target Objects: {
  2985	  "object": "object-group",
  2986	  "type": "network SOME-THING",
  2987	  "description": "false",
  2988	  "entries": [
  2989	    "network-object host 10.0.0.1",
  2990	    "network-object 192.168.12.0 255.255.255.0"
  2991	  ],
  2992	  "group": "Identified Matching Entries"
  2993	} ]]
  2994	+ echo -en '|-----> Target Objects: {
  2995	  "object": "object-group",
  2996	  "type": "network SOME-THING",
  2997	  "description": "false",
  2998	  "entries": [
  2999	    "network-object host 10.0.0.1",
  3000	    "network-object 192.168.12.0 255.255.255.0"
  3001	  ],
  3002	  "group": "Identified Matching Entries"
  3003	}'
  3004	|-----> Target Objects: {
  3005	  "object": "object-group",
  3006	  "type": "network SOME-THING",
  3007	  "description": "false",
  3008	  "entries": [
  3009	    "network-object host 10.0.0.1",
  3010	    "network-object 192.168.12.0 255.255.255.0"
  3011	  ],
  3012	  "group": "Identified Matching Entries"
  3013	}+ [[ -n {
  3014	  "object": "object-group",
  3015	  "type": "network SOME-THING",
  3016	  "description": "false",
  3017	  "entries": [
  3018	    "network-object host 10.0.0.1",
  3019	    "network-object 192.168.12.0 255.255.255.0"
  3020	  ],
  3021	  "group": "Identified Matching Entries"
  3022	} ]]
  3023	++ printf '%s\n' '{
  3024	  "object": "object-group",
  3025	  "type": "network SOME-THING",
  3026	  "description": "false",
  3027	  "entries": [
  3028	    "network-object host 10.0.0.1",
  3029	    "network-object 192.168.12.0 255.255.255.0"
  3030	  ],
  3031	  "group": "Identified Matching Entries"
  3032	}'
  3033	++ jq -s --arg site configs/misc --arg device switch.conf '{
  3034	              config: {
  3035	                site: ($site | gsub("^.*/"; "")),
  3036	                device: $device
  3037	              },
  3038	              objects: .
  3039	            }'
  3040	+ wrapped_block='{
  3041	  "config": {
  3042	    "site": "misc",
  3043	    "device": "switch.conf"
  3044	  },
  3045	  "objects": [
  3046	    {
  3047	      "object": "object-group",
  3048	      "type": "network SOME-THING",
  3049	      "description": "false",
  3050	      "entries": [
  3051	        "network-object host 10.0.0.1",
  3052	        "network-object 192.168.12.0 255.255.255.0"
  3053	      ],
  3054	      "group": "Identified Matching Entries"
  3055	    }
  3056	  ]
  3057	}'
  3058	+ [[ true == true ]]
  3059	+ message 'Wrapped JSON Block:\n{
  3060	  "config": {
  3061	    "site": "misc",
  3062	    "device": "switch.conf"
  3063	  },
  3064	  "objects": [
  3065	    {
  3066	      "object": "object-group",
  3067	      "type": "network SOME-THING",
  3068	      "description": "false",
  3069	      "entries": [
  3070	        "network-object host 10.0.0.1",
  3071	        "network-object 192.168.12.0 255.255.255.0"
  3072	      ],
  3073	      "group": "Identified Matching Entries"
  3074	    }
  3075	  ]
  3076	}'
  3077	+ [[ -n Wrapped JSON Block:\n{
  3078	  "config": {
  3079	    "site": "misc",
  3080	    "device": "switch.conf"
  3081	  },
  3082	  "objects": [
  3083	    {
  3084	      "object": "object-group",
  3085	      "type": "network SOME-THING",
  3086	      "description": "false",
  3087	      "entries": [
  3088	        "network-object host 10.0.0.1",
  3089	        "network-object 192.168.12.0 255.255.255.0"
  3090	      ],
  3091	      "group": "Identified Matching Entries"
  3092	    }
  3093	  ]
  3094	} ]]
  3095	+ local 'message=Wrapped JSON Block:\n{
  3096	  "config": {
  3097	    "site": "misc",
  3098	    "device": "switch.conf"
  3099	  },
  3100	  "objects": [
  3101	    {
  3102	      "object": "object-group",
  3103	      "type": "network SOME-THING",
  3104	      "description": "false",
  3105	      "entries": [
  3106	        "network-object host 10.0.0.1",
  3107	        "network-object 192.168.12.0 255.255.255.0"
  3108	      ],
  3109	      "group": "Identified Matching Entries"
  3110	    }
  3111	  ]
  3112	}'
  3113	+ print 'Wrapped JSON Block:\n{
  3114	  "config": {
  3115	    "site": "misc",
  3116	    "device": "switch.conf"
  3117	  },
  3118	  "objects": [
  3119	    {
  3120	      "object": "object-group",
  3121	      "type": "network SOME-THING",
  3122	      "description": "false",
  3123	      "entries": [
  3124	        "network-object host 10.0.0.1",
  3125	        "network-object 192.168.12.0 255.255.255.0"
  3126	      ],
  3127	      "group": "Identified Matching Entries"
  3128	    }
  3129	  ]
  3130	}'
  3131	+ [[ -n Wrapped JSON Block:\n{
  3132	  "config": {
  3133	    "site": "misc",
  3134	    "device": "switch.conf"
  3135	  },
  3136	  "objects": [
  3137	    {
  3138	      "object": "object-group",
  3139	      "type": "network SOME-THING",
  3140	      "description": "false",
  3141	      "entries": [
  3142	        "network-object host 10.0.0.1",
  3143	        "network-object 192.168.12.0 255.255.255.0"
  3144	      ],
  3145	      "group": "Identified Matching Entries"
  3146	    }
  3147	  ]
  3148	} ]]
  3149	+ echo -en 'Wrapped JSON Block:\n{
  3150	  "config": {
  3151	    "site": "misc",
  3152	    "device": "switch.conf"
  3153	  },
  3154	  "objects": [
  3155	    {
  3156	      "object": "object-group",
  3157	      "type": "network SOME-THING",
  3158	      "description": "false",
  3159	      "entries": [
  3160	        "network-object host 10.0.0.1",
  3161	        "network-object 192.168.12.0 255.255.255.0"
  3162	      ],
  3163	      "group": "Identified Matching Entries"
  3164	    }
  3165	  ]
  3166	}'
  3167	Wrapped JSON Block:
  3168	{
  3169	  "config": {
  3170	    "site": "misc",
  3171	    "device": "switch.conf"
  3172	  },
  3173	  "objects": [
  3174	    {
  3175	      "object": "object-group",
  3176	      "type": "network SOME-THING",
  3177	      "description": "false",
  3178	      "entries": [
  3179	        "network-object host 10.0.0.1",
  3180	        "network-object 192.168.12.0 255.255.255.0"
  3181	      ],
  3182	      "group": "Identified Matching Entries"
  3183	    }
  3184	  ]
  3185	}+ newline
  3186	+ local count=1
  3187	+ (( i = 0 ))
  3188	+ (( i < count ))
  3189	+ echo
  3190
  3191	+ (( i++ ))
  3192	+ (( i < count ))
  3193	+ print '{
  3194	  "config": {
  3195	    "site": "misc",
  3196	    "device": "switch.conf"
  3197	  },
  3198	  "objects": [
  3199	    {
  3200	      "object": "object-group",
  3201	      "type": "network SOME-THING",
  3202	      "description": "false",
  3203	      "entries": [
  3204	        "network-object host 10.0.0.1",
  3205	        "network-object 192.168.12.0 255.255.255.0"
  3206	      ],
  3207	      "group": "Identified Matching Entries"
  3208	    }
  3209	  ]
  3210	}'
  3211	+ [[ -n {
  3212	  "config": {
  3213	    "site": "misc",
  3214	    "device": "switch.conf"
  3215	  },
  3216	  "objects": [
  3217	    {
  3218	      "object": "object-group",
  3219	      "type": "network SOME-THING",
  3220	      "description": "false",
  3221	      "entries": [
  3222	        "network-object host 10.0.0.1",
  3223	        "network-object 192.168.12.0 255.255.255.0"
  3224	      ],
  3225	      "group": "Identified Matching Entries"
  3226	    }
  3227	  ]
  3228	} ]]
  3229	+ echo -en '{
  3230	  "config": {
  3231	    "site": "misc",
  3232	    "device": "switch.conf"
  3233	  },
  3234	  "objects": [
  3235	    {
  3236	      "object": "object-group",
  3237	      "type": "network SOME-THING",
  3238	      "description": "false",
  3239	      "entries": [
  3240	        "network-object host 10.0.0.1",
  3241	        "network-object 192.168.12.0 255.255.255.0"
  3242	      ],
  3243	      "group": "Identified Matching Entries"
  3244	    }
  3245	  ]
  3246	}'
  3247	+ return 0
  3248	+ export json_outfile=reports/json/10.0.0.1.json
  3249	+ json_outfile=reports/json/10.0.0.1.json
  3250	+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json ]]
  3251	+ jq -s --arg target 10.0.0.1 '{ target: $target, configs: . }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w/fragments.json
  3252	+ [[ true == true ]]
  3253	+ jq . reports/json/10.0.0.1.json
  3254	{
  3255	  "target": "10.0.0.1",
  3256	  "configs": [
  3257	    {
  3258	      "config": {
  3259	        "site": "cisco",
  3260	        "device": "fw1.cfg"
  3261	      },
  3262	      "objects": [
  3263	        {
  3264	          "object": "object-group",
  3265	          "type": "network BU1-NETWORK",
  3266	          "description": "false",
  3267	          "entries": [
  3268	            "network-object host 10.0.0.1",
  3269	            "network-object host 10.0.1.2",
  3270	            "network-object 192.168.1.0 255.255.255.0"
  3271	          ],
  3272	          "group": "Identified Matching Entries"
  3273	        }
  3274	      ]
  3275	    },
  3276	    {
  3277	      "config": {
  3278	        "site": "cisco",
  3279	        "device": "fw1.cfg"
  3280	      },
  3281	      "objects": [
  3282	        {
  3283	          "object": "access-list",
  3284	          "type": false,
  3285	          "description": "false",
  3286	          "entries": [
  3287	            "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  3288	          ],
  3289	          "group": "Unclassified"
  3290	        }
  3291	      ]
  3292	    },
  3293	    {
  3294	      "config": {
  3295	        "site": "misc",
  3296	        "device": "switch.conf"
  3297	      },
  3298	      "objects": [
  3299	        {
  3300	          "object": "object-group",
  3301	          "type": "network SOME-THING",
  3302	          "description": "false",
  3303	          "entries": [
  3304	            "network-object host 10.0.0.1",
  3305	            "network-object 192.168.12.0 255.255.255.0"
  3306	          ],
  3307	          "group": "Identified Matching Entries"
  3308	        }
  3309	      ]
  3310	    }
  3311	  ]
  3312	}
  3313	+ newline
  3314	+ local count=1
  3315	+ (( i = 0 ))
  3316	+ (( i < count ))
  3317	+ echo
  3318
  3319	+ (( i++ ))
  3320	+ (( i < count ))
  3321	+ return 0
  3322	+ unset verbose debug
  3323	+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w ]]
  3324	+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wwuVWHDN0w

     1	{
     2	  "target": "10.0.0.1",
     3	  "configs": [
     4	    {
     5	      "config": {
     6	        "site": "cisco",
     7	        "device": "fw1.cfg"
     8	      },
     9	      "objects": [
    10	        {
    11	          "object": "object-group",
    12	          "type": "network BU1-NETWORK",
    13	          "description": "false",
    14	          "entries": [
    15	            "network-object host 10.0.0.1",
    16	            "network-object host 10.0.1.2",
    17	            "network-object 192.168.1.0 255.255.255.0"
    18	          ],
    19	          "group": "Identified Matching Entries"
    20	        }
    21	      ]
    22	    },
    23	    {
    24	      "config": {
    25	        "site": "cisco",
    26	        "device": "fw1.cfg"
    27	      },
    28	      "objects": [
    29	        {
    30	          "object": "access-list",
    31	          "type": false,
    32	          "description": "false",
    33	          "entries": [
    34	            "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
    35	          ],
    36	          "group": "Unclassified"
    37	        }
    38	      ]
    39	    },
    40	    {
    41	      "config": {
    42	        "site": "misc",
    43	        "device": "switch.conf"
    44	      },
    45	      "objects": [
    46	        {
    47	          "object": "object-group",
    48	          "type": "network SOME-THING",
    49	          "description": "false",
    50	          "entries": [
    51	            "network-object host 10.0.0.1",
    52	            "network-object 192.168.12.0 255.255.255.0"
    53	          ],
    54	          "group": "Identified Matching Entries"
    55	        }
    56	      ]
    57	    }
    58	  ]
    59	}
devops: network-resources (master *$%>) $
