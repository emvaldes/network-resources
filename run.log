+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias pause=pause
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export actions_logsfile=.local/stats//actions.jobs
++ actions_logsfile=.local/stats//actions.jobs
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzY5OTkwNTE3NTQxODAwMAo
++ divisor=MTc0NzY5OTkwNTE3NTQxODAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ [[ 7 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs --ips-list=ips.list --devices=devices.list --sites=cisco,fortinet,misc
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ devices =~ ^(classify|g)$ ]]
+ [[ devices =~ ^(configs|c)$ ]]
+ [[ devices =~ ^(devices|d)$ ]]
+ export target_devices=devices.list
+ target_devices=devices.list
+ [[ devices =~ ^(file-ext|x)$ ]]
+ [[ devices =~ ^(interval|l)$ ]]
+ [[ devices =~ ^(ips-list|i)$ ]]
+ [[ devices =~ ^(logs|o)$ ]]
+ [[ devices =~ ^(jobs|j)$ ]]
+ [[ devices =~ ^(matrix|m)$ ]]
+ [[ devices =~ ^(reports|r)$ ]]
+ [[ devices =~ ^(sites|s)$ ]]
+ [[ devices =~ ^(validate|v)$ ]]
+ [[ devices == \h\e\l\p ]]
+ [[ devices == \d\e\b\u\g ]]
+ [[ devices == \d\r\y\-\r\u\n ]]
+ [[ devices == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --sites=cisco,fortinet,misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ sites =~ ^(classify|g)$ ]]
+ [[ sites =~ ^(configs|c)$ ]]
+ [[ sites =~ ^(devices|d)$ ]]
+ [[ sites =~ ^(file-ext|x)$ ]]
+ [[ sites =~ ^(interval|l)$ ]]
+ [[ sites =~ ^(ips-list|i)$ ]]
+ [[ sites =~ ^(logs|o)$ ]]
+ [[ sites =~ ^(jobs|j)$ ]]
+ [[ sites =~ ^(matrix|m)$ ]]
+ [[ sites =~ ^(reports|r)$ ]]
+ [[ sites =~ ^(sites|s)$ ]]
+ export target_sites=cisco,fortinet,misc
+ target_sites=cisco,fortinet,misc
+ [[ sites =~ ^(validate|v)$ ]]
+ [[ sites == \h\e\l\p ]]
+ [[ sites == \d\e\b\u\g ]]
+ [[ sites == \d\r\y\-\r\u\n ]]
+ [[ sites == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export delaying_factor=0.05
+ delaying_factor=0.05
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z cisco,fortinet,misc ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-19 17:11:45'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n devices.list ]]
+ [[ -f devices.list ]]
+ mapfile -t target_devices_source
++ grep -v '^\s*$' devices.list
++ tr -d '\r'
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ :
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-19 17:11:45'
+ [[ -n [INFO] Date: 2025-05-19 17:11:45 ]]
+ local 'message=[INFO] Date: 2025-05-19 17:11:45'
+ echo -e '[INFO] Date: 2025-05-19 17:11:45'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ return 0
+ message '[INFO] PID: 35713'
+ [[ -n [INFO] PID: 35713 ]]
+ local 'message=[INFO] PID: 35713'
+ echo -e '[INFO] PID: 35713'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
+ return 0
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ return 0
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ return 0
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Local State Directory: .local'
+ [[ -n [INFO] Local State Directory: .local ]]
+ local 'message=[INFO] Local State Directory: .local'
+ echo -e '[INFO] Local State Directory: .local'
+ return 0
+ message '[INFO] Logging Output Directory: .local/stats/'
+ [[ -n [INFO] Logging Output Directory: .local/stats/ ]]
+ local 'message=[INFO] Logging Output Directory: .local/stats/'
+ echo -e '[INFO] Logging Output Directory: .local/stats/'
+ return 0
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8 ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Classify Targets: true'
+ [[ -n [INFO] Classify Targets: true ]]
+ local 'message=[INFO] Classify Targets: true'
+ echo -e '[INFO] Classify Targets: true'
+ return 0
+ message '[INFO] configs'
+ [[ -n [INFO] configs ]]
+ local 'message=[INFO] configs'
+ echo -e '[INFO] configs'
+ return 0
+ message '[INFO] devices.list'
+ [[ -n [INFO] devices.list ]]
+ local 'message=[INFO] devices.list'
+ echo -e '[INFO] devices.list'
+ return 0
+ message '[INFO] File Extensions: cfg'
+ [[ -n [INFO] File Extensions: cfg ]]
+ local 'message=[INFO] File Extensions: cfg'
+ echo -e '[INFO] File Extensions: cfg'
+ return 0
+ message '[INFO] 0.05'
+ [[ -n [INFO] 0.05 ]]
+ local 'message=[INFO] 0.05'
+ echo -e '[INFO] 0.05'
+ return 0
+ message '[INFO] ips.list'
+ [[ -n [INFO] ips.list ]]
+ local 'message=[INFO] ips.list'
+ echo -e '[INFO] ips.list'
+ return 0
+ message '[INFO] Enable Logging: true'
+ [[ -n [INFO] Enable Logging: true ]]
+ local 'message=[INFO] Enable Logging: true'
+ echo -e '[INFO] Enable Logging: true'
+ return 0
+ message '[INFO] 100'
+ [[ -n [INFO] 100 ]]
+ local 'message=[INFO] 100'
+ echo -e '[INFO] 100'
+ return 0
+ message '[INFO] Matrix Filename: matrix.json'
+ [[ -n [INFO] Matrix Filename: matrix.json ]]
+ local 'message=[INFO] Matrix Filename: matrix.json'
+ echo -e '[INFO] Matrix Filename: matrix.json'
+ return 0
+ message '[INFO] Reports Folder: reports'
+ [[ -n [INFO] Reports Folder: reports ]]
+ local 'message=[INFO] Reports Folder: reports'
+ echo -e '[INFO] Reports Folder: reports'
+ return 0
+ message '[INFO] cisco,fortinet,misc'
+ [[ -n [INFO] cisco,fortinet,misc ]]
+ local 'message=[INFO] cisco,fortinet,misc'
+ echo -e '[INFO] cisco,fortinet,misc'
+ return 0
+ message '[INFO] Validate Address: false'
+ [[ -n [INFO] Validate Address: false ]]
+ local 'message=[INFO] Validate Address: false'
+ echo -e '[INFO] Validate Address: false'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] Debug: true'
+ [[ -n [INFO] Debug: true ]]
+ local 'message=[INFO] Debug: true'
+ echo -e '[INFO] Debug: true'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] Verbose: true'
+ [[ -n [INFO] Verbose: true ]]
+ local 'message=[INFO] Verbose: true'
+ echo -e '[INFO] Verbose: true'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ message 'Target (devices.list) (count): 3'
+ [[ -n Target (devices.list) (count): 3 ]]
+ local 'message=Target (devices.list) (count): 3'
+ echo -e 'Target (devices.list) (count): 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for device in "${target_devices_source[@]}"
+ message '  - fw1'
+ [[ -n   - fw1 ]]
+ local 'message=  - fw1'
+ echo -e '  - fw1'
+ return 0
+ for device in "${target_devices_source[@]}"
+ message '  - fw2'
+ [[ -n   - fw2 ]]
+ local 'message=  - fw2'
+ echo -e '  - fw2'
+ return 0
+ for device in "${target_devices_source[@]}"
+ message '  - fw3'
+ [[ -n   - fw3 ]]
+ local 'message=  - fw3'
+ echo -e '  - fw3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ mkdir -p .cache
+ local configs_list_cache=.cache/configs.list
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ discovered_files=()
+ declare -a discovered_files
+ IFS=
+ read -r fullpath
++ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
++ sort
++ basename configs/cisco/fw1.cfg
+ filename=fw1.cfg
+ device_name=fw1
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw1 =~ fw1 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw2 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw3 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw4.cfg
+ filename=fw4.cfg
+ device_name=fw4
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw4 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw4 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw4 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw7.cfg
+ filename=fw7.cfg
+ device_name=fw7
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw7 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw7 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw7 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw8.cfg
+ filename=fw8.cfg
+ device_name=fw8
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw8 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw8 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw8 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw1.cfg
+ filename=fw1.cfg
+ device_name=fw1
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw1 =~ fw1 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw2 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw3 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw2 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw3 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch1.conf
+ filename=switch1.conf
+ device_name=switch1
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch2.conf
+ filename=switch2.conf
+ device_name=switch2
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch3.conf
+ filename=switch3.conf
+ device_name=switch3
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch4.conf
+ filename=switch4.conf
+ device_name=switch4
+ [[ 3 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fw2 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fw3 ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg
+ [[ true == true ]]
+ message 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ local 'message=Generated configs.list at .cache/configs.list'
+ echo -e 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n cisco,fortinet,misc ]]
+ [[ cisco,fortinet,misc != \f\a\l\s\e ]]
+ oIFS=' 	
'
+ IFS=,
+ read -r -a site_filters
+ IFS=' 	
'
+ filtered_configs=()
+ declare -a filtered_configs
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
+ [[ true == true ]]
+ message 'Filtered Configurations (count): 8'
+ [[ -n Filtered Configurations (count): 8 ]]
+ local 'message=Filtered Configurations (count): 8'
+ echo -e 'Filtered Configurations (count): 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/cisco/fw1.cfg'
+ [[ -n   - configs/cisco/fw1.cfg ]]
+ local 'message=  - configs/cisco/fw1.cfg'
+ echo -e '  - configs/cisco/fw1.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/cisco/fw2.cfg'
+ [[ -n   - configs/cisco/fw2.cfg ]]
+ local 'message=  - configs/cisco/fw2.cfg'
+ echo -e '  - configs/cisco/fw2.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/cisco/fw3.cfg'
+ [[ -n   - configs/cisco/fw3.cfg ]]
+ local 'message=  - configs/cisco/fw3.cfg'
+ echo -e '  - configs/cisco/fw3.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/fortinet/fw1.cfg'
+ [[ -n   - configs/fortinet/fw1.cfg ]]
+ local 'message=  - configs/fortinet/fw1.cfg'
+ echo -e '  - configs/fortinet/fw1.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/fortinet/fw2.cfg'
+ [[ -n   - configs/fortinet/fw2.cfg ]]
+ local 'message=  - configs/fortinet/fw2.cfg'
+ echo -e '  - configs/fortinet/fw2.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/fortinet/fw3.cfg'
+ [[ -n   - configs/fortinet/fw3.cfg ]]
+ local 'message=  - configs/fortinet/fw3.cfg'
+ echo -e '  - configs/fortinet/fw3.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/misc/fw2.cfg'
+ [[ -n   - configs/misc/fw2.cfg ]]
+ local 'message=  - configs/misc/fw2.cfg'
+ echo -e '  - configs/misc/fw2.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
+ message '  - configs/misc/fw3.cfg'
+ [[ -n   - configs/misc/fw3.cfg ]]
+ local 'message=  - configs/misc/fw3.cfg'
+ echo -e '  - configs/misc/fw3.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ 8 -eq 0 ]]
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ target_listing=()
+ declare -a target_listing
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=10 0 0 1'
+ local fixed_address=10.0.0.1
+ [[ -n '' ]]
+ [[ 10.0.0.1 != \1\0\.\0\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.1.2
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.1.2 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '1' '2')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ local 'segments=10 0 1 2'
+ local fixed_address=10.0.1.2
+ [[ -n '' ]]
+ [[ 10.0.1.2 != \1\0\.\0\.\1\.\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.2.3
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.2.3 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '2' '3')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 3
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=3
+ [[ 3 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=3
+ local 'segments=10 0 2 3'
+ local fixed_address=10.0.2.3
+ [[ -n '' ]]
+ [[ 10.0.2.3 != \1\0\.\0\.\2\.\3 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=192 168 1 10'
+ local fixed_address=192.168.1.10
+ [[ -n '' ]]
+ [[ 192.168.1.10 != \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.11
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.11 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '11')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 11
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=11
+ [[ 11 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=11
+ local 'segments=192 168 1 11'
+ local fixed_address=192.168.1.11
+ [[ -n '' ]]
+ [[ 192.168.1.11 != \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.2.12
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.2.12 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '2' '12')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 12
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=12
+ [[ 12 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=12
+ local 'segments=192 168 2 12'
+ local fixed_address=192.168.2.12
+ [[ -n '' ]]
+ [[ 192.168.2.12 != \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.0.5
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.0.5 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '0' '5')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 5
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=5
+ [[ 5 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=5
+ local 'segments=172 16 0 5'
+ local fixed_address=172.16.0.5
+ [[ -n '' ]]
+ [[ 172.16.0.5 != \1\7\2\.\1\6\.\0\.\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.1.6
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.1.6 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '1' '6')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 6
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=6
+ [[ 6 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=6
+ local 'segments=172 16 1 6'
+ local fixed_address=172.16.1.6
+ [[ -n '' ]]
+ [[ 172.16.1.6 != \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.0.2.50
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.0.2.50 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '0' '2' '50')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 50
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=50
+ [[ 50 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=50
+ local 'segments=192 0 2 50'
+ local fixed_address=192.0.2.50
+ [[ -n '' ]]
+ [[ 192.0.2.50 != \1\9\2\.\0\.\2\.\5\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=203.0.113.25
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 203.0.113.25 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('203' '0' '113' '25')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 203
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=203
+ [[ 203 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=203
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 113
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=113
+ [[ 113 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=113
+ for i in "${!segments[@]}"
++ echo -en 25
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=25
+ [[ 25 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=25
+ local 'segments=203 0 113 25'
+ local fixed_address=203.0.113.25
+ [[ -n '' ]]
+ [[ 203.0.113.25 != \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=198.51.100.75
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 198.51.100.75 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('198' '51' '100' '75')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 198
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=198
+ [[ 198 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=198
+ for i in "${!segments[@]}"
++ echo -en 51
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=51
+ [[ 51 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=51
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 75
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=75
+ [[ 75 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=75
+ local 'segments=198 51 100 75'
+ local fixed_address=198.51.100.75
+ [[ -n '' ]]
+ [[ 198.51.100.75 != \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.18.1.20
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.18.1.20 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '18' '1' '20')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 18
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=18
+ [[ 18 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=18
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 20
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=20
+ [[ 20 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=20
+ local 'segments=172 18 1 20'
+ local fixed_address=172.18.1.20
+ [[ -n '' ]]
+ [[ 172.18.1.20 != \1\7\2\.\1\8\.\1\.\2\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.10.10.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.10.10.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '10' '10' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=10 10 10 10'
+ local fixed_address=10.10.10.10
+ [[ -n '' ]]
+ [[ 10.10.10.10 != \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.100.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.100.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '100' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 100 100'
+ local fixed_address=192.168.100.100
+ [[ -n '' ]]
+ [[ 192.168.100.100 != \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.31.255.254
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.31.255.254 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '31' '255' '254')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 31
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=31
+ [[ 31 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=31
+ for i in "${!segments[@]}"
++ echo -en 255
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=255
+ [[ 255 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=255
+ for i in "${!segments[@]}"
++ echo -en 254
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=254
+ [[ 254 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=254
+ local 'segments=172 31 255 254'
+ local fixed_address=172.31.255.254
+ [[ -n '' ]]
+ [[ 172.31.255.254 != \1\7\2\.\3\1\.\2\5\5\.\2\5\4 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=192 168 0 1'
+ local fixed_address=192.168.0.1
+ [[ -n '' ]]
+ [[ 192.168.0.1 != \1\9\2\.\1\6\8\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 0 100'
+ local fixed_address=192.168.0.100
+ [[ -n '' ]]
+ [[ 192.168.0.100 != \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ rejected_logsfile=.local/errors/rejected.jobs
+ touch .local/errors/rejected.jobs
+ stat_flush_success=true
+ find .local/stats/ -type f -name '*.jobs'
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ timestamp='[2025-05-20T00:11:45Z]'
+ printf '%s\n' '[2025-05-20T00:11:45Z]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ grep -qF '[2025-05-20T00:11:45Z]' .local/stats/reports.jobs
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ timestamp='[2025-05-20T00:11:45Z]'
+ printf '%s\n' '[2025-05-20T00:11:45Z]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ grep -qF '[2025-05-20T00:11:45Z]' .local/stats/actions.jobs
+ read -r stat_file
+ mapfile -t site_folders
++ cut -d/ -f2 .cache/configs.list
++ sort -u
+ local batch_size=5
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ return 0
+ message 'Batch size: 5'
+ [[ -n Batch size: 5 ]]
+ local 'message=Batch size: 5'
+ echo -e 'Batch size: 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Parallel threads:   100'
+ [[ -n Parallel threads:   100 ]]
+ local 'message=Parallel threads:   100'
+ echo -e 'Parallel threads:   100'
+ return 0
+ message 'Target IPs (count): 17'
+ [[ -n Target IPs (count): 17 ]]
+ local 'message=Target IPs (count): 17'
+ echo -e 'Target IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /cisco/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=3
+ [[ true == true ]]
+ message 'Target Site:   cisco'
+ [[ -n Target Site:   cisco ]]
+ local 'message=Target Site:   cisco'
+ echo -e 'Target Site:   cisco'
+ return 0
+ message 'Total Configs: 3'
+ [[ -n Total Configs: 3 ]]
+ local 'message=Total Configs: 3'
+ echo -e 'Total Configs: 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ rm -rf ./targets
+ [[ -d ./targets ]]
+ [[ -d ./targets ]]
+ rm -rf .local/jobs
+ [[ -d .local/jobs ]]
+ [[ -d .local/jobs ]]
+ mkdir -p targets .local/errors .local/jobs .local/stats
+ offset=0
+ [[ 0 -lt 3 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747699905729454000 23732
+ export batch_id=MTc0NzY5OTkw
+ batch_id=MTc0NzY5OTkw
++ date +%s
+ batch_suffix=1747699905-31423
+ batch_configs_list=configs--MTc0NzY5OTkw-1747699905-31423.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzY5OTkw'
+ [[ -n Batch ID: MTc0NzY5OTkw ]]
+ local 'message=Batch ID: MTc0NzY5OTkw'
+ echo -e 'Batch ID: MTc0NzY5OTkw'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747699905-31423'
+ [[ -n Batch Suffix:   1747699905-31423 ]]
+ local 'message=Batch Suffix:   1747699905-31423'
+ echo -e 'Batch Suffix:   1747699905-31423'
+ return 0
+ message 'Batch FileName: configs--MTc0NzY5OTkw-1747699905-31423.list'
+ [[ -n Batch FileName: configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local 'message=Batch FileName: configs--MTc0NzY5OTkw-1747699905-31423.list'
+ echo -e 'Batch FileName: configs--MTc0NzY5OTkw-1747699905-31423.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local base=configs--MTc0NzY5OTkw-1747699905-31423.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzY5OTkw-1747699905-31423.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzY5OTkw-1747699905-31423.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzY5OTkw-1747699905-31423.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw2.cfg:configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw2.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw2.cfg:configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
+ job_pid=36152
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.0.2.50.json
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ job_pid=36153
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ job_pid=36155
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ target_file=targets/172.16.0.5.json
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=203.0.113.25
+ job_pid=36157
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=172.16.0.5
+ target_file=targets/10.0.0.1.json
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ job_pid=36161
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ job_pid=36163
+ targets_jobs_pid+=("${job_pid}")
+ local ip_addr=10.0.0.1
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ local target_file=targets/10.0.0.1.json
+ for ip_addr in "${target_listing[@]}"
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ job_pid=36166
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ target_file=targets/10.0.1.2.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw2.cfg'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw2.cfg ]]
+ config_json='[]'
+ job_pid=36168
+ targets_jobs_pid+=("${job_pid}")
+ IFS=
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ read -r config_file
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
+ config_file=cisco/fw1.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ job_pid=36172
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ target_file=targets/192.168.1.10.json
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
++ wc -l
+ IFS=
+ read -r config_file
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ config_file=cisco/fw1.cfg
+ local ip_addr=198.51.100.75
+ job_pid=36176
+ local target_file=targets/198.51.100.75.json
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ targets_jobs_pid+=("${job_pid}")
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ read -r config_file
+ local ip_addr=192.168.1.10
+ config_file=cisco/fw1.cfg
++ wc -l
+ job_pid=36182
+ local target_file=targets/192.168.1.10.json
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ local matched_files=configs/cisco/fw3.cfg
+ for ip_addr in "${target_listing[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ target_file=targets/172.16.1.6.json
+ config_json='[]'
+ IFS=
+ read -r config_file
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ local ip_addr=192.168.1.11
+ config_file=cisco/fw3.cfg
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
++ wc -l
+ job_pid=36187
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ [[ true == true ]]
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
++ wc -l
+ message 'Matched IPs to [cisco] configs (12):'
+ [[ -n Matched IPs to [cisco] configs (12): ]]
+ local 'message=Matched IPs to [cisco] configs (12):'
+ echo -e 'Matched IPs to [cisco] configs (12):'
+ local matched_files=configs/cisco/fw1.cfg
+ return 0
+ [[ -n configs/cisco/fw1.cfg ]]
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
+ echo -e -------------------------------------
+ config_json='[]'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ IFS=
+ [[ -n PID    | IP Address      => Config(s) ]]
+ read -r config_file
+ local ip_addr=172.16.1.6
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ local target_file=targets/172.16.1.6.json
+ return 0
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkw-1747699905-31423.list
+ message -------------------------------------
+ config_file=cisco/fw1.cfg
+ [[ -n ------------------------------------- ]]
+ local 'matched_files=configs/cisco/fw1.cfg
+ local message=-------------------------------------
configs/cisco/fw3.cfg'
+ echo -e -------------------------------------
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw3.cfg ]]
+ return 0
+ config_json='[]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ IFS=
+ ip=192.168.1.10
+ read -r config_file
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ config_file=cisco/fw1.cfg
+ local matched_files=configs/cisco/fw3.cfg
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg
++ wc -l
+ [[ -n configs/cisco/fw3.cfg ]]
+ local matched_files=configs/cisco/fw2.cfg
++ wc -l
+ config_json='[]'
+ [[ -n configs/cisco/fw2.cfg ]]
++ sed 's|configs/cisco/||g'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
+ config_file=cisco/fw2.cfg
+ local matched_files=configs/cisco/fw2.cfg
+ [[ -n configs/cisco/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
++ wc -l
++ wc -l
+ config_file=cisco/fw2.cfg
++ wc -l
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw3.cfg'
+ local matched_files=configs/cisco/fw2.cfg
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw3.cfg ]]
+ [[ -n configs/cisco/fw2.cfg ]]
+ config_json='[]'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ config_file=cisco/fw2.cfg
+ config_lines='      81'
+ config_lines='      81'
+ config_lines='      55'
+ config_lines='      81'
++ wc -l
++ wc -l
+ config_lines='      81'
+ config_lines='      81'
+ config_cleaned=fw1.cfg:fw3.cfg
+ local matched_files=configs/cisco/fw2.cfg
+ [[ -n configs/cisco/fw2.cfg ]]
+ printf '%-6s | %-15s => %s\n' 36176 192.168.1.10 fw1.cfg:fw3.cfg
+ config_json='[]'
++ grep -oE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ IFS=
+ read -r config_file
+ ip=198.51.100.75
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg
+ config_raw=configs/cisco/fw2.cfg
+ config_file=cisco/fw2.cfg
+ config_lines='      55'
+ config_lines='      43'
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ wc -l
++ wc -l
++ wc -l
++ tr -d ' '
++ tr -d ' '
++ tr -d ' '
+ config_lines='      43'
++ wc -l
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg
++ sed 's|configs/cisco/||g'
++ tr -d ' '
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg
+ config_lines='      81'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw2.cfg
++ wc -l
++ wc -l
++ tr -d ' '
++ tr -d ' '
+ config_lines='      43'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw2.cfg
+ match_count=5
+ site=cisco
+ device=fw1.cfg
++ wc -l
+ match_count=3
+ site=cisco
+ device=fw1.cfg
+ match_count=4
+ site=cisco
++ tr -d ' '
++ wc -l
+ device=fw1.cfg
++ tr -d ' '
+ match_count=3
+ site=cisco
+ device=fw3.cfg
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg
+ config_lines='      43'
++ tr -d ' '
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw2.cfg
++ wc -l
+ match_count=3
+ site=cisco
+ config_cleaned=fw2.cfg
+ match_count=3
+ printf '%-6s | %-15s => %s\n' 36172 198.51.100.75 fw2.cfg
+ device=fw1.cfg
++ print '[]'
+ site=cisco
+ device=fw1.cfg
++ [[ -n [] ]]
++ wc -l
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.100.100
++ echo -en '[]'
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw2.cfg
++ return 0
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ print '[]'
++ [[ -n [] ]]
++ tr -d ' '
++ print '[]'
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw2.cfg
+ match_count=3
+ site=cisco
+ match_count=3
+ device=fw3.cfg
+ site=cisco
+ device=fw2.cfg
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ sed 's|configs/cisco/||g'
++ wc -l
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=3
+ site=cisco
+ device=fw2.cfg
++ print '[]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ tr -d ' '
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ [[ -n [] ]]
++ echo -en '[]'
+ match_count=1
++ return 0
+ site=cisco
+ device=fw1.cfg
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=cisco
+ device=fw2.cfg
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ match_count=1
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site=cisco
+ device=fw2.cfg
+ config_cleaned=fw1.cfg:fw2.cfg
+ printf '%-6s | %-15s => %s\n' 36152 192.168.100.100 fw1.cfg:fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.0.2.50
+ config_raw=configs/cisco/fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ sed 's|configs/cisco/||g'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ wc -l
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
++ wc -l
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
] ]]
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
++ return 0
    "lines": 81,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
+ config_cleaned=fw1.cfg
+ printf '%-6s | %-15s => %s\n' 36153 192.0.2.50 fw1.cfg
    "lines": 43,
    "count": 3
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
  }
+ IFS=
]'
+ ip=203.0.113.25
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw2.cfg:configs/cisco/fw3.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
+ read -r config_file
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
    "count": 3
  }
]'
++ return 0
++ jq '{ configs: . }'
+ IFS=
+ read -r config_file
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
] ]]
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
++ jq '{ configs: . }'
+ config_file=cisco/fw3.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
    "lines": 81,
    "count": 3
  }
]'
+ config_lines='      43'
++ print '[
  {
++ return 0
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ echo -en '[
  {
    "config": {
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
++ [[ -n [
  {
    },
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
    "lines": 43,
]'
++ echo -en '[
++ jq '{ configs: . }'
  {
    "count": 3
++ jq '{ configs: . }'
  }
    "config": {
]'
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
+ config_lines='      43'
+ config_json='[
++ wc -l
  }
]'
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
++ [[ -n [
    },
++ return 0
  {
    "lines": 43,
++ return 0
    "count": 1
  }
]'
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ return 0
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw2.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw2.cfg
+ config_lines='      55'
++ tr -d ' '
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ tr -d ' '
+ config_cleaned=fw1.cfg:fw2.cfg:fw3.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ printf '%-6s | %-15s => %s\n' 36155 203.0.113.25 fw1.cfg:fw2.cfg:fw3.cfg
++ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.0.5
+ config_raw=configs/cisco/fw3.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 5
    }
  ]
}'
+ jq -r
++ jq '{ configs: . }'
+ config_lines='      55'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw3.cfg
++ sed 's|configs/cisco/||g'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ jq -r
++ jq '{ configs: . }'
++ wc -l
+ match_count=1
+ site=cisco
+ device=fw2.cfg
++ tr -d ' '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
+ jq -r
      "count": 3
    }
  ]
}'
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw3.cfg
+ match_count=3
+ jq -r
+ site=cisco
+ device=fw2.cfg
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
++ tr -d ' '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=fw3.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
+ printf '%-6s | %-15s => %s\n' 36157 172.16.0.5 fw3.cfg
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ config_raw=configs/cisco/fw2.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  }
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
] ]]
+ match_count=5
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  }
]'
+ site=cisco
+ device=fw3.cfg
++ return 0
++ sed 's|configs/cisco/||g'
+ match_count=1
+ site=cisco
+ device=fw3.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
+ message 'Generated Config-File: targets/192.0.2.50.json'
+ jq -r
+ [[ -n Generated Config-File: targets/192.0.2.50.json ]]
+ local 'message=Generated Config-File: targets/192.0.2.50.json'
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ echo -e 'Generated Config-File: targets/192.0.2.50.json'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
      "count": 1
+ return 0
++ print '[
    }
  ]
}'
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  }
+ jq -r
+ return 0
]'
+ message 'Generated Config-File: targets/172.16.0.5.json'
+ [[ -n Generated Config-File: targets/172.16.0.5.json ]]
+ local 'message=Generated Config-File: targets/172.16.0.5.json'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  }
] ]]
+ echo -e 'Generated Config-File: targets/172.16.0.5.json'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  }
]'
+ return 0
++ return 0
+ return 0
+ config_cleaned=fw2.cfg
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ printf '%-6s | %-15s => %s\n' 36187 172.16.1.6 fw2.cfg
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ return 0
+ ip=192.168.1.11
+ config_raw=configs/cisco/fw2.cfg
+ return 0
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
++ sed 's|configs/cisco/||g'
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
++ jq '{ configs: . }'
  },
  {
    "config": {
      "site": "cisco",
+ return 0
+ return 0
+ config_json='[
+ return 0
      "device": "fw2.cfg"
+ config_file=cisco/fw3.cfg
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
+ return 0
    "lines": 81,
+ config_json='[
+ return 0
    "count": 3
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  },
  },
  {
+ return 0
  {
    "config": {
+ message 'Generated Config-File: targets/192.168.1.11.json'
      "site": "cisco",
    },
    "lines": 43,
    "count": 1
  }
+ config_cleaned=fw2.cfg
]'
    "config": {
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ printf '%-6s | %-15s => %s\n' 36182 192.168.1.11 fw2.cfg
      "device": "fw3.cfg"
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
    },
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
    "lines": 55,
  }
    "count": 1
+ return 0
  }
]'
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ return 0
+ IFS=
++ [[ -n [
  {
    "config": {
+ ip=10.0.1.2
+ IFS=
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
+ config_raw=configs/cisco/fw2.cfg
    "config": {
+ read -r config_file
+ read -r config_file
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
++ wc -l
  }
] ]]
+ message 'Generated Config-File: targets/172.16.1.6.json'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
]'
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
++ return 0
+ return 0
+ return 0
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
    "lines": 55,
++ jq '{ configs: . }'
    "count": 1
  }
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
] ]]
]'
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
]'
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ return 0
++ return 0
+ config_lines='      55'
+ config_cleaned=fw2.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw3.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 3
+ printf '%-6s | %-15s => %s\n' 36168 10.0.1.2 fw2.cfg
    },
++ wc -l
    {
      "config": {
        "site": "cisco",
+ for pid in "${!targets_jobs2ips_mapping[@]}"
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
++ tr -d ' '
+ jq -r
+ ip=10.0.0.1
+ config_raw=configs/cisco/fw1.cfg
++ sed 's|configs/cisco/||g'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 5
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ jq -r
+ match_count=1
+ site=cisco
+ device=fw3.cfg
++ print '[
  {
    "config": {
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ config_cleaned=fw1.cfg
+ printf '%-6s | %-15s => %s\n' 36161 10.0.0.1 fw1.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
+ return 0
+ return 0
++ sed 's|configs/cisco/||g'
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ message 'Generated Config-File: targets/192.168.1.10.json'
+ return 0
+ [[ -n Generated Config-File: targets/192.168.1.10.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.10.json'
+ return 0
+ echo -e 'Generated Config-File: targets/192.168.1.10.json'
+ return 0
+ return 0
+ config_cleaned=fw1.cfg:fw3.cfg
+ printf '%-6s | %-15s => %s\n' 36163 10.10.10.10 fw1.cfg:fw3.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/fw3.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ return 0
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 36166 10.0.2.3 fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  12 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36152
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36153
+ ip_address=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36155
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36157
+ ip_address=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36161
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36163
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36166
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36168
+ ip_address=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36172
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36176
+ ip_address=192.168.1.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36182
+ ip_address=192.168.1.11
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36187
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 4
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36155
+ ip_address=203.0.113.25
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\0\.\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\0\.\2\.\5\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 5 -gt 0 ]]
+ message 'Unmapped IPs (count): 5'
+ [[ -n Unmapped IPs (count): 5 ]]
+ local 'message=Unmapped IPs (count): 5'
+ echo -e 'Unmapped IPs (count): 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=12
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %02d 1
+ padded_index=01
+ job_pid=36418
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
+ parse_configs 192.168.100.100 01
+ local ip_addr=192.168.100.100
+ local padded_index=01
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 2
+ padded_index=02
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=36421
++ return 0
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.0.2.50
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 192.0.2.50 02
+ local ip_addr=192.0.2.50
+ local padded_index=02
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=03
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36425
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
+ parse_configs 203.0.113.25 03
+ local ip_addr=203.0.113.25
+ local padded_index=03
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
++ printf %02d 4
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=01 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=04
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36430
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.0.5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
+ logfile=.local/jobs/192.0.2.50.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=02 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 172.16.0.5 04
+ local ip_addr=172.16.0.5
+ local padded_index=04
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=05
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36435
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=03 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.0.1 05
+ local ip_addr=10.0.0.1
+ local padded_index=05
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 6
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=06
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36440
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ logfile=.local/jobs/172.16.0.5.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=04 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.10.10.10 06
+ local ip_addr=10.10.10.10
+ local padded_index=06
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 7
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=07
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_pid=36446
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ logfile=.local/jobs/10.0.0.1.job
+ ip_addr=10.0.1.2
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=05 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.2.3 07
+ local ip_addr=10.0.2.3
+ local padded_index=07
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ printf %02d 8
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ padded_index=08
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36452
+ logfile=.local/jobs/10.10.10.10.job
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=06 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 10.0.1.2 08
+ local ip_addr=10.0.1.2
+ local padded_index=08
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 9
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=09
+ [[ true == true ]]
+ execute+=(--classify)
+ logfile=.local/jobs/10.0.2.3.job
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ job_pid=36458
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=07 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ mkdir -p .local/jobs .local/errors
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 198.51.100.75 09
+ local ip_addr=198.51.100.75
+ local padded_index=09
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 10
+ padded_index=10
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=36466
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.10
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 192.168.1.10 10
+ local ip_addr=192.168.1.10
+ local padded_index=10
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=08 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ printf %02d 11
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=11
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36473
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
+ logfile=.local/jobs/198.51.100.75.job
+ parse_configs 192.168.1.11 11
+ [[ true == true ]]
+ local ip_addr=192.168.1.11
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=09 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=11
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 12
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=12
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36487
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ logfile=.local/jobs/192.168.1.10.job
+ [[ -n Background Jobs -> Managed Configs: ]]
+ [[ true == true ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=10 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (12)'
+ parse_configs 172.16.1.6 12
+ [[ -n PID   | IP Address (12) ]]
+ local 'message=PID   | IP Address (12)'
+ echo -e 'PID   | IP Address (12)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local ip_addr=172.16.1.6
+ local message=-------------------------
+ local padded_index=12
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36458 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36452 10.0.1.2
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36473 192.168.1.11
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36487 172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36425 203.0.113.25
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36421 192.0.2.50
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36418 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36446 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36440 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36466 192.168.1.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36435 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36430 172.16.0.5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ IFS=,
+ ((  12 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
++ print cfg,conf,cnf
+ kill -0 36418
++ [[ -n cfg,conf,cnf ]]
+ valid_configs_jobs_pid+=("$pid")
++ echo -en cfg,conf,cnf
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36421
++ return 0
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36430
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36435
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36440
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36446
+ [[ true == true ]]
+ execute+=(--classify)
+ valid_configs_jobs_pid+=("$pid")
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ for pid in "${configs_jobs_pid[@]}"
+ [[ true == true ]]
+ execute+=(--debug)
+ kill -0 36452
+ [[ true == true ]]
+ valid_configs_jobs_pid+=("$pid")
+ mkdir -p .local/jobs .local/errors
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36458
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36466
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36473
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36487
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ logfile=.local/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=11 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=12 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  12 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36418
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36421
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36430
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36435
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36440
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36446
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36452
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36458
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36466
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36473
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36487
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  12 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36418
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36421
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36430
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36435
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36440
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36446
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36452
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36458
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36466
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36473
+ ip=192.168.1.11
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36487
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  10 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36418
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36421
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36430
+ ip=172.16.0.5
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36435
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36440
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36446
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36452
+ ip=10.0.1.2
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36458
+ ip=198.51.100.75
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36466
+ ip=192.168.1.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36421
+ ip=192.0.2.50
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36440
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36425
+ ip=203.0.113.25
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 3 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjxuXUcVEK
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message 'Processing reports/192.168.1.10/192.168.1.10.json'
+ [[ -n Processing reports/192.168.1.10/192.168.1.10.json ]]
+ local 'message=Processing reports/192.168.1.10/192.168.1.10.json'
+ echo -e 'Processing reports/192.168.1.10/192.168.1.10.json'
Processing reports/192.168.1.10/192.168.1.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.10/192.168.1.10.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjxuXUcVEK
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DjxuXUcVEK
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /fortinet/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=3
+ [[ true == true ]]
+ message 'Target Site:   fortinet'
+ [[ -n Target Site:   fortinet ]]
+ local 'message=Target Site:   fortinet'
+ echo -e 'Target Site:   fortinet'
+ return 0
+ message 'Total Configs: 3'
+ [[ -n Total Configs: 3 ]]
+ local 'message=Total Configs: 3'
+ echo -e 'Total Configs: 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ rm -rf ./targets
+ [[ -d ./targets ]]
+ [[ -d ./targets ]]
+ rm -rf .local/jobs
+ [[ -d .local/jobs ]]
+ [[ -d .local/jobs ]]
+ mkdir -p targets .local/errors .local/jobs .local/stats
+ offset=0
+ [[ 0 -lt 3 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
++ cut -c1-12
+++ date +%s%N
++ printf %s-%s 1747699910312540000 28226
+ export batch_id=MTc0NzY5OTkx
+ batch_id=MTc0NzY5OTkx
++ date +%s
+ batch_suffix=1747699910-1307
+ batch_configs_list=configs--MTc0NzY5OTkx-1747699910-1307.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ printf '%s\n' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzY5OTkx'
+ [[ -n Batch ID: MTc0NzY5OTkx ]]
+ local 'message=Batch ID: MTc0NzY5OTkx'
+ echo -e 'Batch ID: MTc0NzY5OTkx'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747699910-1307'
+ [[ -n Batch Suffix:   1747699910-1307 ]]
+ local 'message=Batch Suffix:   1747699910-1307'
+ echo -e 'Batch Suffix:   1747699910-1307'
+ return 0
+ message 'Batch FileName: configs--MTc0NzY5OTkx-1747699910-1307.list'
+ [[ -n Batch FileName: configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local 'message=Batch FileName: configs--MTc0NzY5OTkx-1747699910-1307.list'
+ echo -e 'Batch FileName: configs--MTc0NzY5OTkx-1747699910-1307.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local base=configs--MTc0NzY5OTkx-1747699910-1307.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzY5OTkx-1747699910-1307.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzY5OTkx-1747699910-1307.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzY5OTkx-1747699910-1307.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw1.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw1.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw3.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw3.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw3.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ sort -u
+ [[ -n configs/fortinet/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw3.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
+ job_pid=39876
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
+ job_pid=39877
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=192.168.100.100
+ target_file=targets/10.0.0.1.json
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39878
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39881
+ local ip_addr=10.0.0.1
+ targets_jobs_pid+=("${job_pid}")
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39884
+ local ip_addr=10.0.2.3
+ targets_jobs_pid+=("${job_pid}")
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39887
+ local ip_addr=10.0.1.2
+ targets_jobs_pid+=("${job_pid}")
+ local target_file=targets/10.0.1.2.json
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.10.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39889
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ job_pid=39893
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.1.6.json
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ local matched_files=configs/fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ local matched_files=configs/fortinet/fw3.cfg
+ config_file=fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ job_pid=39896
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ targets_jobs_pid+=("${job_pid}")
+ config_file=fortinet/fw3.cfg
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (9):'
+ local matched_files=configs/fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ [[ -n Matched IPs to [fortinet] configs (9): ]]
+ local 'message=Matched IPs to [fortinet] configs (9):'
+ IFS=
+ read -r config_file
+ local ip_addr=172.16.1.6
+ echo -e 'Matched IPs to [fortinet] configs (9):'
+ local target_file=targets/172.16.1.6.json
+ config_file=fortinet/fw2.cfg
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699910-1307.list
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ return 0
+ message -------------------------------------
++ wc -l
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.0.1
+ config_raw=configs/fortinet/fw2.cfg
++ wc -l
++ wc -l
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ local matched_files=configs/fortinet/fw1.cfg
+ local matched_files=configs/fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw1.cfg ]]
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw1.cfg
++ sed 's|configs/fortinet/||g'
+ config_file=fortinet/fw2.cfg
++ wc -l
+ local matched_files=configs/fortinet/fw1.cfg
+ [[ -n configs/fortinet/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
++ wc -l
+ config_file=fortinet/fw1.cfg
+ local matched_files=configs/fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw2.cfg
++ wc -l
+ config_lines='      71'
+ config_lines='     103'
+ local matched_files=configs/fortinet/fw3.cfg
+ [[ -n configs/fortinet/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
++ wc -l
+ config_file=fortinet/fw3.cfg
+ config_lines='     103'
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 39878 10.0.0.1 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ local matched_files=configs/fortinet/fw3.cfg
+ ip=192.168.100.100
+ [[ -n configs/fortinet/fw3.cfg ]]
+ config_json='[]'
+ config_raw=configs/fortinet/fw3.cfg
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw3.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fw2.cfg
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/fortinet/fw3.cfg
++ sed 's|configs/fortinet/||g'
++ wc -l
+ config_lines='      67'
+ config_lines='     103'
++ wc -l
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/fortinet/fw2.cfg
++ wc -l
+ config_lines='      67'
++ tr -d ' '
++ wc -l
++ tr -d ' '
+ config_lines='     103'
++ tr -d ' '
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/fortinet/fw2.cfg
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fw1.cfg
++ wc -l
+ config_lines='      71'
++ wc -l
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fw1.cfg
++ tr -d ' '
++ tr -d ' '
+ match_count=1
+ config_cleaned=fw3.cfg
++ wc -l
+ site=fortinet
+ config_lines='      71'
+ device=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 39876 192.168.100.100 fw3.cfg
+ match_count=1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=203.0.113.25
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/fortinet/fw2.cfg
+ site=fortinet
+ config_raw=configs/fortinet/fw2.cfg
+ device=fw3.cfg
++ tr -d ' '
++ wc -l
+ match_count=1
+ site=fortinet
+ device=fw2.cfg
++ sed 's|configs/fortinet/||g'
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/fortinet/fw3.cfg
++ tr -d ' '
++ wc -l
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/fortinet/fw3.cfg
++ print '[]'
+ match_count=1
++ [[ -n [] ]]
+ site=fortinet
++ echo -en '[]'
++ return 0
+ match_count=1
+ device=fw1.cfg
++ tr -d ' '
+ site=fortinet
+ device=fw2.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ wc -l
++ jq --arg site fortinet --arg device fw3.cfg --argjson lines '      71' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
+ match_count=1
++ tr -d ' '
+ site=fortinet
+ device=fw1.cfg
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=fortinet
+ device=fw2.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ print '[]'
++ jq --arg site fortinet --arg device fw1.cfg --argjson lines '      67' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ match_count=1
+ site=fortinet
+ device=fw3.cfg
++ print '[]'
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 39877 203.0.113.25 fw2.cfg
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.1.10
+ config_raw=configs/fortinet/fw2.cfg
+ match_count=1
++ jq --arg site fortinet --arg device fw1.cfg --argjson lines '      67' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ sed 's|configs/fortinet/||g'
+ site=fortinet
++ jq --arg site fortinet --arg device fw3.cfg --argjson lines '      71' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ device=fw3.cfg
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ print '[]'
++ [[ -n [] ]]
++ [[ -n [] ]]
++ echo -en '[]'
++ echo -en '[]'
++ return 0
++ return 0
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ jq --arg site fortinet --arg device fw3.cfg --argjson lines '      71' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
++ return 0
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
] ]]
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
++ print '[
  {
++ jq '{ configs: . }'
    "count": 1
++ jq '{ configs: . }'
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
  }
]'
+ IFS=
+ read -r config_file
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
] ]]
+ config_cleaned=fw2.cfg
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
+ printf '%-6s | %-15s => %s\n' 39889 192.168.1.10 fw2.cfg
    "count": 1
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ return 0
+ ip=198.51.100.75
+ config_raw=configs/fortinet/fw1.cfg
++ jq '{ configs: . }'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
] ]]
+ IFS=
+ read -r config_file
++ sed 's|configs/fortinet/||g'
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
++ return 0
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ IFS=
++ return 0
++ jq '{ configs: . }'
+ read -r config_file
++ jq '{ configs: . }'
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ return 0
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ jq '{ configs: . }'
+ final_json='{
  "configs": [
    {
      "config": {
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
        "site": "fortinet",
        "device": "fw3.cfg"
      },
+ final_json='{
  "configs": [
    {
++ jq '{ configs: . }'
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
      "lines": 71,
      "count": 1
    }
  ]
}'
    "count": 1
  }
] ]]
+ jq -r
      },
      "lines": 103,
      "count": 1
    }
  ]
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
      },
      "lines": 103,
      "count": 1
    }
  ]
}'
}'
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ jq -r
+ jq -r
++ return 0
+ config_cleaned=fw1.cfg
+ printf '%-6s | %-15s => %s\n' 39887 198.51.100.75 fw1.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_raw=configs/fortinet/fw2.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
] ]]
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw1.cfg"
      },
      "lines": 67,
      "count": 1
    }
  ]
}'
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw3.cfg"
    },
    "lines": 71,
    "count": 1
  }
]'
++ return 0
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
      },
      "lines": 103,
      "count": 1
    }
  ]
}'
++ sed 's|configs/fortinet/||g'
+ jq -r
++ jq '{ configs: . }'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw3.cfg"
      },
      "lines": 71,
      "count": 1
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw1.cfg"
      },
      "lines": 67,
      "count": 1
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
      },
      "lines": 103,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
+ return 0
+ return 0
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ config_cleaned=fw2.cfg
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ printf '%-6s | %-15s => %s\n' 39884 10.0.1.2 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/fortinet/fw1.cfg
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
+ return 0
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw3.cfg"
      },
      "lines": 71,
      "count": 1
    }
  ]
}'
+ jq -r
++ sed 's|configs/fortinet/||g'
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ message 'Generated Config-File: targets/192.168.1.11.json'
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
+ return 0
+ config_cleaned=fw1.cfg
+ printf '%-6s | %-15s => %s\n' 39881 10.0.2.3 fw1.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ message 'Generated Config-File: targets/192.168.1.10.json'
+ config_raw=configs/fortinet/fw3.cfg
+ [[ -n Generated Config-File: targets/192.168.1.10.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.10.json'
+ echo -e 'Generated Config-File: targets/192.168.1.10.json'
+ return 0
+ return 0
++ sed 's|configs/fortinet/||g'
+ message 'Generated Config-File: targets/172.16.1.6.json'
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
+ return 0
+ return 0
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 39896 172.16.1.6 fw3.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.1.11
+ config_raw=configs/fortinet/fw3.cfg
++ sed 's|configs/fortinet/||g'
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 39893 192.168.1.11 fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  9 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39876
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39877
+ ip_address=203.0.113.25
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39878
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39881
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39884
+ ip_address=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39887
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39889
+ ip_address=192.168.1.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39893
+ ip_address=192.168.1.11
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39896
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 8 -gt 0 ]]
+ message 'Unmapped IPs (count): 8'
+ [[ -n Unmapped IPs (count): 8 ]]
+ local 'message=Unmapped IPs (count): 8'
+ echo -e 'Unmapped IPs (count): 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=9
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %01d 1
+ padded_index=1
+ job_pid=40041
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ parse_configs 192.168.100.100 1
+ local ip_addr=192.168.100.100
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=2
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ job_pid=40045
+ execute+=(--debug)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
+ parse_configs 203.0.113.25 2
+ local ip_addr=203.0.113.25
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=3
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=40049
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ [[ false == true ]]
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ execute+=(--verbose)
+ ip_addr=10.0.2.3
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 10.0.0.1 3
+ local ip_addr=10.0.0.1
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ printf %01d 4
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ padded_index=4
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=40054
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.2.3 4
+ local ip_addr=10.0.2.3
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ printf %01d 5
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=40059
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 10.0.1.2 5
+ local ip_addr=10.0.1.2
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 6
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=6
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ job_pid=40064
+ mkdir -p .local/jobs .local/errors
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ logfile=.local/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 198.51.100.75 6
+ local ip_addr=198.51.100.75
+ local padded_index=6
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 7
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ padded_index=7
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ job_pid=40070
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ execute+=(--verbose)
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.10
+ execute+=(--debug)
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ ip_addr=192.168.1.11
+ mkdir -p .local/jobs .local/errors
+ parse_configs 192.168.1.10 7
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ local ip_addr=192.168.1.10
+ local padded_index=7
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 8
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=8
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ job_pid=40076
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
+ parse_configs 192.168.1.11 8
+ local ip_addr=192.168.1.11
+ local padded_index=8
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=6 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 9
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=9
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=40082
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (9)'
+ [[ -n PID   | IP Address (9) ]]
+ local 'message=PID   | IP Address (9)'
+ echo -e 'PID   | IP Address (9)'
+ return 0
+ parse_configs 172.16.1.6 9
+ logfile=.local/jobs/192.168.1.10.job
+ message -------------------------
+ [[ true == true ]]
+ [[ -n ------------------------- ]]
+ local ip_addr=172.16.1.6
+ local message=-------------------------
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=7 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ echo -e -------------------------
+ local padded_index=9
+ return 0
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40045 203.0.113.25
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40041 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40049 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40082 172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40070 192.168.1.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40076 192.168.1.11
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40054 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40059 10.0.1.2
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 40064 198.51.100.75
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  9 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40041
++ IFS=,
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40045
++ print cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
++ [[ -n cfg,conf,cnf ]]
+ kill -0 40049
++ echo -en cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
++ return 0
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40054
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40059
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40064
+ valid_configs_jobs_pid+=("$pid")
+ [[ true == true ]]
+ for pid in "${configs_jobs_pid[@]}"
+ execute+=(--classify)
+ kill -0 40070
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ valid_configs_jobs_pid+=("$pid")
+ [[ true == true ]]
+ for pid in "${configs_jobs_pid[@]}"
+ execute+=(--debug)
+ kill -0 40076
+ [[ true == true ]]
+ valid_configs_jobs_pid+=("$pid")
+ mkdir -p .local/jobs .local/errors
+ for pid in "${configs_jobs_pid[@]}"
+ logfile=.local/jobs/192.168.1.11.job
+ kill -0 40082
+ [[ true == true ]]
+ valid_configs_jobs_pid+=("$pid")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=8 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=9 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  9 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40041
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40045
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40049
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40054
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40059
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40064
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40070
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40076
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40082
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  9 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40041
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40045
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40049
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40054
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40059
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40064
+ ip=198.51.100.75
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40070
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40076
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40082
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  7 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40041
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40045
+ ip=203.0.113.25
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40049
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40059
+ ip=10.0.1.2
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40070
+ ip=192.168.1.10
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40076
+ ip=192.168.1.11
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 40082
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 3 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6VkFYnkvDV
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message 'Processing reports/192.168.1.10/192.168.1.10.json'
+ [[ -n Processing reports/192.168.1.10/192.168.1.10.json ]]
+ local 'message=Processing reports/192.168.1.10/192.168.1.10.json'
+ echo -e 'Processing reports/192.168.1.10/192.168.1.10.json'
Processing reports/192.168.1.10/192.168.1.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.10/192.168.1.10.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6VkFYnkvDV
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6VkFYnkvDV
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /misc/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=2
+ [[ true == true ]]
+ message 'Target Site:   misc'
+ [[ -n Target Site:   misc ]]
+ local 'message=Target Site:   misc'
+ echo -e 'Target Site:   misc'
+ return 0
+ message 'Total Configs: 2'
+ [[ -n Total Configs: 2 ]]
+ local 'message=Total Configs: 2'
+ echo -e 'Total Configs: 2'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ rm -rf ./targets
+ [[ -d ./targets ]]
+ [[ -d ./targets ]]
+ rm -rf .local/jobs
+ [[ -d .local/jobs ]]
+ [[ -d .local/jobs ]]
+ mkdir -p targets .local/errors .local/jobs .local/stats
+ offset=0
+ [[ 0 -lt 2 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747699913330812000 16070
+ export batch_id=MTc0NzY5OTkx
+ batch_id=MTc0NzY5OTkx
++ date +%s
+ batch_suffix=1747699913-11307
+ batch_configs_list=configs--MTc0NzY5OTkx-1747699913-11307.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ printf '%s\n' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ range_first=1
+ range_last=2
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzY5OTkx'
+ [[ -n Batch ID: MTc0NzY5OTkx ]]
+ local 'message=Batch ID: MTc0NzY5OTkx'
+ echo -e 'Batch ID: MTc0NzY5OTkx'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747699913-11307'
+ [[ -n Batch Suffix:   1747699913-11307 ]]
+ local 'message=Batch Suffix:   1747699913-11307'
+ echo -e 'Batch Suffix:   1747699913-11307'
+ return 0
+ message 'Batch FileName: configs--MTc0NzY5OTkx-1747699913-11307.list'
+ [[ -n Batch FileName: configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local 'message=Batch FileName: configs--MTc0NzY5OTkx-1747699913-11307.list'
+ echo -e 'Batch FileName: configs--MTc0NzY5OTkx-1747699913-11307.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local base=configs--MTc0NzY5OTkx-1747699913-11307.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzY5OTkx-1747699913-11307.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzY5OTkx-1747699913-11307.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzY5OTkx-1747699913-11307.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ return 0
+ message 'Batch Ranges:   1 -> 2'
+ [[ -n Batch Ranges:   1 -> 2 ]]
+ local 'message=Batch Ranges:   1 -> 2'
+ echo -e 'Batch Ranges:   1 -> 2'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/fw2.cfg configs/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw3.cfg
+ [[ :configs/misc/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw3.cfg
+ [[ :configs/misc/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg:configs/misc/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ sort -u
+ [[ -n configs/misc/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg:configs/misc/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
+ job_pid=42139
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
+ job_pid=42140
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ job_pid=42141
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local ip_addr=203.0.113.25
+ job_pid=42143
+ local target_file=targets/203.0.113.25.json
+ targets_jobs_pid+=("${job_pid}")
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ job_pid=42145
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.10.json
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ job_pid=42148
+ local ip_addr=198.51.100.75
+ targets_jobs_pid+=("${job_pid}")
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ job_pid=42153
+ targets_jobs_pid+=("${job_pid}")
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.1.6.json
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ job_pid=42155
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ [[ true == true ]]
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ message 'Matched IPs to [misc] configs (8):'
+ [[ -n Matched IPs to [misc] configs (8): ]]
+ local 'message=Matched IPs to [misc] configs (8):'
+ echo -e 'Matched IPs to [misc] configs (8):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ message 'PID    | IP Address      => Config(s)'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ local ip_addr=172.16.1.6
+ [[ -n ------------------------------------- ]]
+ local target_file=targets/172.16.1.6.json
+ local message=-------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8/configs--MTc0NzY5OTkx-1747699913-11307.list
+ echo -e -------------------------------------
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ config_raw=configs/misc/fw2.cfg
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg
+ local 'matched_files=configs/misc/fw2.cfg
configs/misc/fw3.cfg'
+ local matched_files=configs/misc/fw2.cfg
+ [[ -n configs/misc/fw2.cfg
configs/misc/fw3.cfg ]]
+ config_json='[]'
+ [[ -n configs/misc/fw2.cfg ]]
++ sed 's|configs/misc/||g'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
+ config_file=misc/fw2.cfg
+ config_file=misc/fw2.cfg
+ local matched_files=configs/misc/fw3.cfg
+ [[ -n configs/misc/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ local matched_files=configs/misc/fw2.cfg
+ read -r config_file
+ [[ -n configs/misc/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw3.cfg
+ config_file=misc/fw2.cfg
++ wc -l
++ wc -l
+ local matched_files=configs/misc/fw2.cfg
+ [[ -n configs/misc/fw2.cfg ]]
+ config_json='[]'
++ wc -l
++ wc -l
+ IFS=
+ read -r config_file
+ config_file=misc/fw2.cfg
+ local matched_files=configs/misc/fw3.cfg
+ [[ -n configs/misc/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw3.cfg
+ local matched_files=configs/misc/fw2.cfg
+ [[ -n configs/misc/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
++ wc -l
+ config_file=misc/fw2.cfg
++ wc -l
+ local matched_files=configs/misc/fw2.cfg
+ [[ -n configs/misc/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
++ wc -l
+ config_file=misc/fw2.cfg
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 42155 172.16.1.6 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.1.11
+ config_raw=configs/misc/fw2.cfg
++ wc -l
+ config_lines='      55'
+ config_lines='      43'
+ config_lines='      43'
+ config_lines='      43'
++ sed 's|configs/misc/||g'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/fw2.cfg
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/fw3.cfg
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/misc/fw2.cfg
+ config_lines='      43'
++ wc -l
+ config_lines='      55'
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/misc/fw2.cfg
+ config_lines='      43'
++ wc -l
++ wc -l
++ tr -d ' '
++ wc -l
++ tr -d ' '
++ tr -d ' '
+ config_lines='      43'
++ tr -d ' '
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/misc/fw3.cfg
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/misc/fw2.cfg
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 42153 192.168.1.11 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.100.100
+ config_raw=configs/misc/fw2.cfg
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/misc/fw2.cfg
++ wc -l
++ wc -l
++ wc -l
++ tr -d ' '
++ tr -d ' '
+ match_count=3
+ site=misc
+ match_count=3
+ device=fw2.cfg
+ site=misc
+ device=fw3.cfg
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/misc/fw2.cfg
+ match_count=1
+ site=misc
++ sed 's|configs/misc/||g'
++ tr -d ' '
+ device=fw2.cfg
+ match_count=3
+ site=misc
+ device=fw2.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ [[ -n [] ]]
++ return 0
++ echo -en '[]'
++ return 0
+ match_count=3
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site=misc
+ device=fw2.cfg
++ jq --arg site misc --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
++ print '[]'
+ site=misc
+ device=fw3.cfg
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=misc
+ device=fw2.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ print '[]'
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ match_count=1
+ site=misc
+ config_cleaned=fw2.cfg
+ device=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 42139 192.168.100.100 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
++ jq --arg site misc --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_raw=configs/misc/fw2.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ sed 's|configs/misc/||g'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ print '[
++ jq '{ configs: . }'
  {
+ IFS=
    "config": {
+ read -r config_file
++ [[ -n [
      "site": "misc",
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
      "device": "fw3.cfg"
    },
++ jq '{ configs: . }'
+ config_file=misc/fw3.cfg
    },
    "lines": 55,
    "count": 3
  }
    "lines": 43,
    "count": 3
  }
] ]]
++ print '[
+ config_cleaned=fw2.cfg
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ echo -en '[
  {
    "config": {
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
]'
      "site": "misc",
+ printf '%-6s | %-15s => %s\n' 42145 198.51.100.75 fw2.cfg
      "device": "fw2.cfg"
++ jq '{ configs: . }'
    },
+ IFS=
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
+ read -r config_file
    },
    "lines": 43,
    "count": 3
    "lines": 43,
  }
++ [[ -n [
  {
    "count": 3
+ for pid in "${!targets_jobs2ips_mapping[@]}"
  }
    "config": {
]'
]'
++ [[ -n [
+ ip=203.0.113.25
      "site": "misc",
++ wc -l
++ return 0
      "device": "fw3.cfg"
+ config_raw=configs/misc/fw2.cfg:configs/misc/fw3.cfg
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
    },
    "lines": 55,
    "count": 3
  }
+ IFS=
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ echo -en '[
+ read -r config_file
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ return 0
++ return 0
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
++ print '[
  {
    "config": {
+ read -r config_file
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ sed 's|configs/misc/||g'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ return 0
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ return 0
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ return 0
+ config_lines='      55'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
++ jq '{ configs: . }'
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ return 0
+ config_cleaned=fw2.cfg:fw3.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/misc/fw3.cfg
+ printf '%-6s | %-15s => %s\n' 42140 203.0.113.25 fw2.cfg:fw3.cfg
++ wc -l
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/misc/fw3.cfg
++ tr -d ' '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ final_json='{
+ final_json='{
+ jq -r
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
  "configs": [
    {
+ jq -r
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
++ sed 's|configs/misc/||g'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ jq -r
+ match_count=1
+ site=misc
+ device=fw3.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ jq -r
++ jq --arg site misc --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
+ config_cleaned=fw3.cfg
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ printf '%-6s | %-15s => %s\n' 42141 10.0.2.3 fw3.cfg
++ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_raw=configs/misc/fw2.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
+ jq -r
++ sed 's|configs/misc/||g'
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ return 0
+ return 0
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ message 'Generated Config-File: targets/192.168.1.10.json'
+ [[ -n Generated Config-File: targets/192.168.1.10.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.10.json'
+ echo -e 'Generated Config-File: targets/192.168.1.10.json'
+ return 0
+ return 0
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 42143 10.0.1.2 fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.1.10
+ config_raw=configs/misc/fw3.cfg
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
++ sed 's|configs/misc/||g'
+ message 'Generated Config-File: targets/192.168.1.11.json'
+ message 'Generated Config-File: targets/172.16.1.6.json'
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
+ return 0
+ return 0
+ return 0
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
+ return 0
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ return 0
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 42148 192.168.1.10 fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  8 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42139
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42140
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42141
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42143
+ ip_address=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42145
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42148
+ ip_address=192.168.1.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42153
+ ip_address=192.168.1.11
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42155
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "misc",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 42140
+ ip_address=203.0.113.25
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 9 -gt 0 ]]
+ message 'Unmapped IPs (count): 9'
+ [[ -n Unmapped IPs (count): 9 ]]
+ local 'message=Unmapped IPs (count): 9'
+ echo -e 'Unmapped IPs (count): 9'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=8
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %01d 1
+ padded_index=1
+ job_pid=42301
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ parse_configs 192.168.100.100 1
+ local ip_addr=192.168.100.100
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
+ padded_index=2
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=42304
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ execute+=(--classify)
+ [[ false == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ ip_addr=10.0.2.3
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 203.0.113.25 2
+ local ip_addr=203.0.113.25
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_pid=42308
+ [[ true == true ]]
+ execute+=(--debug)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ mkdir -p .local/jobs .local/errors
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 3
+ local ip_addr=10.0.2.3
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 4
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ padded_index=4
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=42313
+ [[ false == true ]]
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 10.0.1.2 4
+ local ip_addr=10.0.1.2
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=42318
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 198.51.100.75 5
+ logfile=.local/jobs/10.0.2.3.job
+ [[ true == true ]]
+ local ip_addr=198.51.100.75
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 6
+ padded_index=6
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=42323
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.10
+ [[ true == true ]]
+ execute+=(--classify)
+ ((  ip_index < total_ips  ))
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ ip_addr=192.168.1.11
+ [[ true == true ]]
+ logfile=.local/jobs/10.0.1.2.job
+ execute+=(--debug)
+ [[ true == true ]]
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 192.168.1.10 6
+ local ip_addr=192.168.1.10
+ local padded_index=6
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 7
+ padded_index=7
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=42329
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ [[ true == true ]]
+ ((  ip_index < total_ips  ))
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ ip_addr=172.16.1.6
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 192.168.1.11 7
+ local ip_addr=192.168.1.11
+ local padded_index=7
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 8
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=8
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=42335
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ logfile=.local/jobs/192.168.1.10.job
+ echo -e 'Background Jobs -> Managed Configs:'
+ parse_configs 172.16.1.6 8
+ [[ true == true ]]
+ return 0
+ message 'PID   | IP Address (8)'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=6 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local ip_addr=172.16.1.6
+ [[ -n PID   | IP Address (8) ]]
+ local 'message=PID   | IP Address (8)'
+ local padded_index=8
+ echo -e 'PID   | IP Address (8)'
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42308 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42301 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42304 203.0.113.25
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42323 192.168.1.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42329 192.168.1.11
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42318 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42313 10.0.1.2
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 42335 172.16.1.6
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42301
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42304
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42308
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42313
++ IFS=,
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42318
++ print cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
++ [[ -n cfg,conf,cnf ]]
+ kill -0 42323
++ echo -en cfg,conf,cnf
++ return 0
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42329
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42335
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=7 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=8 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42301
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42304
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42308
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42313
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42318
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42323
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42329
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42335
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42301
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42304
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42308
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42313
+ ip=10.0.1.2
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42318
+ ip=198.51.100.75
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42323
+ ip=192.168.1.10
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42329
+ ip=192.168.1.11
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42335
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 42304
+ ip=203.0.113.25
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 2 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8AshZ4lj8
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message 'Processing reports/192.168.1.10/192.168.1.10.json'
+ [[ -n Processing reports/192.168.1.10/192.168.1.10.json ]]
+ local 'message=Processing reports/192.168.1.10/192.168.1.10.json'
+ echo -e 'Processing reports/192.168.1.10/192.168.1.10.json'
Processing reports/192.168.1.10/192.168.1.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.10/192.168.1.10.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8AshZ4lj8
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D8AshZ4lj8
+ return 0
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ echo -e 'CSV Report Summary (tabulated):'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ print_file reports/reports.csv
+ cat -n
+ [[ -n reports/reports.csv ]]
+ local target_file=reports/reports.csv
+ [[ true == true ]]
+ [[ -f reports/reports.csv ]]
+ case "${target_file}" in
+ cat reports/reports.csv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local elapsed=11
+ message 'Session Summary:'
+ [[ -n Session Summary: ]]
+ local 'message=Session Summary:'
+ echo -e 'Session Summary:'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ message 'Started at: 2025-05-19 17:11:45'
+ [[ -n Started at: 2025-05-19 17:11:45 ]]
+ local 'message=Started at: 2025-05-19 17:11:45'
+ echo -e 'Started at: 2025-05-19 17:11:45'
+ return 0
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 11
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9cwmj9OjT8
