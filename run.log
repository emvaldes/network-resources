+ set -euo pipefail
+ set -x
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias print-message=message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=.logs
++ logs_location=.logs
++ export targets_location=targets
++ targets_location=targets
+++ pwd
++ export actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ export targets_logsfile=.logs/targets.jobs
++ targets_logsfile=.logs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODMzMjY4NDY2MzE0MTAwMAo
++ divisor=MTc0ODMzMjY4NDY2MzE0MTAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ :
+ rm -rf .cache
+ mkdir -p .cache/jobs .cache/targets
+ rm -rf .logs
+ mkdir -p .logs/errors .logs/jobs
+ rm -rf targets
+ mkdir -p targets
+ [[ -z '' ]]
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ [[ 8 -eq 0 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --logs --classify --ips-list=ips.list --devices=devices.list --sites=cisco,fortinet,misc --configs=configs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(batch-size|b)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(export|e)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(batch-size|b)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(export|e)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(batch-size|b)$ ]]
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(export|e)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(batch-size|b)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(export|e)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(batch-size|b)$ ]]
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(export|e)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ devices =~ ^(batch-size|b)$ ]]
+ [[ devices =~ ^(classify|g)$ ]]
+ [[ devices =~ ^(configs|c)$ ]]
+ [[ devices =~ ^(devices|d)$ ]]
+ export target_devices=devices.list
+ target_devices=devices.list
+ [[ devices =~ ^(export|e)$ ]]
+ [[ devices =~ ^(file-ext|x)$ ]]
+ [[ devices =~ ^(interval|l)$ ]]
+ [[ devices =~ ^(ips-list|i)$ ]]
+ [[ devices =~ ^(logs|o)$ ]]
+ [[ devices =~ ^(jobs|j)$ ]]
+ [[ devices =~ ^(matrix|m)$ ]]
+ [[ devices =~ ^(reports|r)$ ]]
+ [[ devices =~ ^(sites|s)$ ]]
+ [[ devices =~ ^(validate|v)$ ]]
+ [[ devices == \h\e\l\p ]]
+ [[ devices == \d\e\b\u\g ]]
+ [[ devices == \d\r\y\-\r\u\n ]]
+ [[ devices == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --sites=cisco,fortinet,misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ sites =~ ^(batch-size|b)$ ]]
+ [[ sites =~ ^(classify|g)$ ]]
+ [[ sites =~ ^(configs|c)$ ]]
+ [[ sites =~ ^(devices|d)$ ]]
+ [[ sites =~ ^(export|e)$ ]]
+ [[ sites =~ ^(file-ext|x)$ ]]
+ [[ sites =~ ^(interval|l)$ ]]
+ [[ sites =~ ^(ips-list|i)$ ]]
+ [[ sites =~ ^(logs|o)$ ]]
+ [[ sites =~ ^(jobs|j)$ ]]
+ [[ sites =~ ^(matrix|m)$ ]]
+ [[ sites =~ ^(reports|r)$ ]]
+ [[ sites =~ ^(sites|s)$ ]]
+ export target_sites=cisco,fortinet,misc
+ target_sites=cisco,fortinet,misc
+ [[ sites =~ ^(validate|v)$ ]]
+ [[ sites == \h\e\l\p ]]
+ [[ sites == \d\e\b\u\g ]]
+ [[ sites == \d\r\y\-\r\u\n ]]
+ [[ sites == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(batch-size|b)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ configs =~ ^(devices|d)$ ]]
+ [[ configs =~ ^(export|e)$ ]]
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(interval|l)$ ]]
+ [[ configs =~ ^(ips-list|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(jobs|j)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(sites|s)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export configs_batch_size=3
+ configs_batch_size=3
+ [[ -z '' ]]
+ export delaying_factor=0.1
+ delaying_factor=0.1
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z cisco,fortinet,misc ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-27 00:58:04'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ export configs_list_cache=.cache/configs.list
+ configs_list_cache=.cache/configs.list
+ export extracted_resources=.cache/resources
+ extracted_resources=.cache/resources
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export user_defined__file_extensions=false
+ user_defined__file_extensions=false
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-27 00:58:04'
+ [[ -n [INFO] Date: 2025-05-27 00:58:04 ]]
+ local 'message=[INFO] Date: 2025-05-27 00:58:04'
+ echo -e '[INFO] Date: 2025-05-27 00:58:04'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ message '[INFO] PID: 72482'
+ [[ -n [INFO] PID: 72482 ]]
+ local 'message=[INFO] PID: 72482'
+ echo -e '[INFO] PID: 72482'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ system_metrics
+ message 'System Information Metrics:'
+ [[ -n System Information Metrics: ]]
+ local 'message=System Information Metrics:'
+ echo -e 'System Information Metrics:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uptime
++ sed 's/^.*up //; s/,.*$//'
+ message 'System Uptime:                        2 days'
+ [[ -n System Uptime:                        2 days ]]
+ local 'message=System Uptime:                        2 days'
+ echo -e 'System Uptime:                        2 days'
++ uptime
++ awk '-Fload averages*: ' '{print $2}'
+ message 'System Load (1/5/15 min):             2.36 2.17 2.30'
+ [[ -n System Load (1/5/15 min):             2.36 2.17 2.30 ]]
+ local 'message=System Load (1/5/15 min):             2.36 2.17 2.30'
+ echo -e 'System Load (1/5/15 min):             2.36 2.17 2.30'
++ getconf _NPROCESSORS_ONLN
+ message 'CPU Cores (logical):                  16'
+ [[ -n CPU Cores (logical):                  16 ]]
+ local 'message=CPU Cores (logical):                  16'
+ echo -e 'CPU Cores (logical):                  16'
++ uname -m
+ message 'CPU Architecture:                     x86_64'
+ [[ -n CPU Architecture:                     x86_64 ]]
+ local 'message=CPU Architecture:                     x86_64'
+ echo -e 'CPU Architecture:                     x86_64'
+ case "${OSTYPE}" in
++ sysctl -n hw.memsize
+ mem_total=137438953472
++ awk -v mt=137438953472 'BEGIN { printf "%.2f GB", mt / 1024 / 1024 / 1024 }'
+ mem_total_gb='128.00 GB'
++ vm_stat
++ awk '/Pages free/ {free=$3} END { printf "%.2f GB", (free * 4096) / 1024 / 1024 / 1024 }'
+ mem_free='89.78 GB'
++ df -h /
++ awk 'NR==2 {print $2 " total, " $4 " free"}'
+ disk_root='894Gi total, 306Gi free'
+ message 'Memory - Total:                       128.00 GB'
+ [[ -n Memory - Total:                       128.00 GB ]]
+ local 'message=Memory - Total:                       128.00 GB'
+ echo -e 'Memory - Total:                       128.00 GB'
+ message 'Memory - Free:                        89.78 GB'
+ [[ -n Memory - Free:                        89.78 GB ]]
+ local 'message=Memory - Free:                        89.78 GB'
+ echo -e 'Memory - Free:                        89.78 GB'
+ message 'Disk - Root (/):                      894Gi total, 306Gi free'
+ [[ -n Disk - Root (/):                      894Gi total, 306Gi free ]]
+ local 'message=Disk - Root (/):                      894Gi total, 306Gi free'
+ echo -e 'Disk - Root (/):                      894Gi total, 306Gi free'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Logging Output Directory: .logs'
+ [[ -n [INFO] Logging Output Directory: .logs ]]
+ local 'message=[INFO] Logging Output Directory: .logs'
+ echo -e '[INFO] Logging Output Directory: .logs'
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Parsed Input Parameters (CLI Flags):'
+ [[ -n Parsed Input Parameters (CLI Flags): ]]
+ local 'message=Parsed Input Parameters (CLI Flags):'
+ echo -e 'Parsed Input Parameters (CLI Flags):'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch size (configs per batch):       3'
+ [[ -n Batch size (configs per batch):       3 ]]
+ local 'message=Batch size (configs per batch):       3'
+ echo -e 'Batch size (configs per batch):       3'
+ message 'Enable group classification:          true'
+ [[ -n Enable group classification:          true ]]
+ local 'message=Enable group classification:          true'
+ echo -e 'Enable group classification:          true'
+ message 'Source Configs directory:             configs'
+ [[ -n Source Configs directory:             configs ]]
+ local 'message=Source Configs directory:             configs'
+ echo -e 'Source Configs directory:             configs'
+ message 'Target Configs directory:             .cache/resources'
+ [[ -n Target Configs directory:             .cache/resources ]]
+ local 'message=Target Configs directory:             .cache/resources'
+ echo -e 'Target Configs directory:             .cache/resources'
+ message 'Device filter (file or inline):       devices.list'
+ [[ -n Device filter (file or inline):       devices.list ]]
+ local 'message=Device filter (file or inline):       devices.list'
+ echo -e 'Device filter (file or inline):       devices.list'
+ message 'Default Configs Listing file:         .cache/configs.list'
+ [[ -n Default Configs Listing file:         .cache/configs.list ]]
+ local 'message=Default Configs Listing file:         .cache/configs.list'
+ echo -e 'Default Configs Listing file:         .cache/configs.list'
+ message 'Export format (JSON/CSV):             reports/reports.csv'
+ [[ -n Export format (JSON/CSV):             reports/reports.csv ]]
+ local 'message=Export format (JSON/CSV):             reports/reports.csv'
+ echo -e 'Export format (JSON/CSV):             reports/reports.csv'
+ message 'Allowed file extensions:              cfg conf cnf'
+ [[ -n Allowed file extensions:              cfg conf cnf ]]
+ local 'message=Allowed file extensions:              cfg conf cnf'
+ echo -e 'Allowed file extensions:              cfg conf cnf'
+ message 'Delay between background jobs:        0.1'
+ [[ -n Delay between background jobs:        0.1 ]]
+ local 'message=Delay between background jobs:        0.1'
+ echo -e 'Delay between background jobs:        0.1'
+ message 'IP address input (file or inline):    ips.list'
+ [[ -n IP address input (file or inline):    ips.list ]]
+ local 'message=IP address input (file or inline):    ips.list'
+ echo -e 'IP address input (file or inline):    ips.list'
+ message 'Enable logging:                       true'
+ [[ -n Enable logging:                       true ]]
+ local 'message=Enable logging:                       true'
+ echo -e 'Enable logging:                       true'
+ message 'Parallel threads:                     100'
+ [[ -n Parallel threads:                     100 ]]
+ local 'message=Parallel threads:                     100'
+ echo -e 'Parallel threads:                     100'
+ message 'Translation matrix file:              matrix.json'
+ [[ -n Translation matrix file:              matrix.json ]]
+ local 'message=Translation matrix file:              matrix.json'
+ echo -e 'Translation matrix file:              matrix.json'
+ message 'Reports output directory:             reports'
+ [[ -n Reports output directory:             reports ]]
+ local 'message=Reports output directory:             reports'
+ echo -e 'Reports output directory:             reports'
+ message 'Target site folders:                  cisco,fortinet,misc'
+ [[ -n Target site folders:                  cisco,fortinet,misc ]]
+ local 'message=Target site folders:                  cisco,fortinet,misc'
+ echo -e 'Target site folders:                  cisco,fortinet,misc'
+ message 'Enable IP format validation:          false'
+ [[ -n Enable IP format validation:          false ]]
+ local 'message=Enable IP format validation:          false'
+ echo -e 'Enable IP format validation:          false'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Display help:                         false'
+ [[ -n Display help:                         false ]]
+ local 'message=Display help:                         false'
+ echo -e 'Display help:                         false'
+ message 'Enable debug mode:                    true'
+ [[ -n Enable debug mode:                    true ]]
+ local 'message=Enable debug mode:                    true'
+ echo -e 'Enable debug mode:                    true'
+ message 'Dry run mode:                         false'
+ [[ -n Dry run mode:                         false ]]
+ local 'message=Dry run mode:                         false'
+ echo -e 'Dry run mode:                         false'
+ message 'Enable verbose output:                true'
+ [[ -n Enable verbose output:                true ]]
+ local 'message=Enable verbose output:                true'
+ echo -e 'Enable verbose output:                true'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ tr -d '\r'
++ tr ' \t,;:|' '\n'
++ grep -v '^\s*$'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ target_listing=()
+ declare -a target_listing
+ [[ false == true ]]
+ target_listing=("${target_addresses_source[@]}")
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ for ip in "${target_listing[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ for ip in "${target_listing[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ for ip in "${target_listing[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ for ip in "${target_listing[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ for ip in "${target_listing[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ for ip in "${target_listing[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ for ip in "${target_listing[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ for ip in "${target_listing[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_listing=()
+ declare -a configs_listing
+ mapfile -t configs_listing
++ find configs -type f
++ sort -u
+ filtered=()
+ declare -a filtered
+ [[ -v file_extensions ]]
+ [[ 3 -gt 0 ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/access-sw1-west.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/access-switch-07.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-fw-03.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-fw-snmp.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-isr-02.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/core-fw-dmz-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/core-router-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/datacenter-fw-core.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/hq-core-rtr-02.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/hq-core-rtr.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-datacenter-east.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-fw-dmz-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-lab-test-fw.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-testing-config.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw1.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw2.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw3.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw5.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw6.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch1.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch1.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch2.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch2.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch3.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch3.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch4.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch4.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\n\f ]]
+ configs_listing=("${filtered[@]}")
+ [[ false == true ]]
+ filtered=()
+ [[ -n cisco,fortinet,misc ]]
+ [[ cisco,fortinet,misc != \f\a\l\s\e ]]
+ [[ cisco,fortinet,misc != \0 ]]
+ mapfile -t site_filters
++ echo -e cisco,fortinet,misc
++ tr ',|;:. \t' '\n'
++ grep -v '^\s*$'
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/access-sw1-west.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/access-switch-07.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/branch-fw-03.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/branch-fw-snmp.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/branch-isr-02.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/campus-sw-access01.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/core-fw-dmz-01.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/core-router-01.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/datacenter-fw-core.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/dmz-fw2-backup.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/hq-core-rtr-02.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/hq-core-rtr.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=cisco/perimeter-fw1.cfg
+ site_name=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-branch-vpn-01.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-campus-core.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-datacenter-east.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-fw-dmz-01.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-lab-test-fw.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=fortinet/fg-testing-config.cfg
+ site_name=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/fw1.cfg
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/fw2.cfg
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/fw3.cfg
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/fw5.cfg
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/fw6.cfg
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/switch1.conf
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/switch2.conf
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/switch3.conf
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ relpath=misc/switch4.conf
+ site_name=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered+=("${filepath}")
+ break
+ configs_listing=("${filtered[@]}")
+ filtered=()
+ [[ true == true ]]
+ message 'Filtered Config Files by Sites (matched): 28'
+ [[ -n Filtered Config Files by Sites (matched): 28 ]]
+ local 'message=Filtered Config Files by Sites (matched): 28'
+ echo -e 'Filtered Config Files by Sites (matched): 28'
+ message 'Sites requested: 3'
+ [[ -n Sites requested: 3 ]]
+ local 'message=Sites requested: 3'
+ echo -e 'Sites requested: 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for site in "${site_filters[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ for site in "${site_filters[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ for site in "${site_filters[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n devices.list ]]
+ [[ -f devices.list ]]
+ mapfile -t target_devices_source
++ grep -v '^\s*$' devices.list
++ tr -d '\r'
+ [[ 10 -gt 0 ]]
+ filtered=()
+ declare -a filtered
+ for filepath in "${configs_listing[@]}"
+ device_name=access-sw1-west.cfg
+ device_name=access-sw1-west
+ for match in "${target_devices_source[@]}"
+ [[ access-sw1-west == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=access-switch-07.cfg
+ device_name=access-switch-07
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ access-switch-07 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=branch-fw-03.cfg
+ device_name=branch-fw-03
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-03 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=branch-fw-snmp.cfg
+ device_name=branch-fw-snmp
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-fw-snmp == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=branch-isr-02.cfg
+ device_name=branch-isr-02
+ for match in "${target_devices_source[@]}"
+ [[ branch-isr-02 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ branch-isr-02 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=campus-sw-access01.cfg
+ device_name=campus-sw-access01
+ for match in "${target_devices_source[@]}"
+ [[ campus-sw-access01 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ campus-sw-access01 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ campus-sw-access01 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=core-fw-dmz-01.cfg
+ device_name=core-fw-dmz-01
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=core-router-01.cfg
+ device_name=core-router-01
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ core-router-01 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=datacenter-fw-core.cfg
+ device_name=datacenter-fw-core
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ datacenter-fw-core == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=dmz-fw2-backup.cfg
+ device_name=dmz-fw2-backup
+ for match in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=hq-core-rtr-02.cfg
+ device_name=hq-core-rtr-02
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=hq-core-rtr.cfg
+ device_name=hq-core-rtr
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ hq-core-rtr == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=perimeter-fw1.cfg
+ device_name=perimeter-fw1
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ perimeter-fw1 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-branch-vpn-01.cfg
+ device_name=fg-branch-vpn-01
+ for match in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-campus-core.cfg
+ device_name=fg-campus-core
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-campus-core == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-datacenter-east.cfg
+ device_name=fg-datacenter-east
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-datacenter-east == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-fw-dmz-01.cfg
+ device_name=fg-fw-dmz-01
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-lab-test-fw.cfg
+ device_name=fg-lab-test-fw
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=fg-testing-config.cfg
+ device_name=fg-testing-config
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fg-testing-config == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fw1.cfg
+ device_name=fw1
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw1 == \f\w\1 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fw2.cfg
+ device_name=fw2
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw2 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=fw3.cfg
+ device_name=fw3
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw3 == \f\w\3 ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ device_name=fw5.cfg
+ device_name=fw5
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw5 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=fw6.cfg
+ device_name=fw6
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ fw6 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=switch1.conf
+ device_name=switch1
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch1 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=switch2.conf
+ device_name=switch2
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch2 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=switch3.conf
+ device_name=switch3
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch3 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ for filepath in "${configs_listing[@]}"
+ device_name=switch4.conf
+ device_name=switch4
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \a\c\c\e\s\s\-\s\w\1\-\w\e\s\t ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \b\r\a\n\c\h\-\i\s\r\-\0\2 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \d\m\z\-\f\w\2\-\b\a\c\k\u\p ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \f\g\-\c\a\m\p\u\s\-\c\o\r\e ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \f\w\1 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \f\w\3 ]]
+ for match in "${target_devices_source[@]}"
+ [[ switch4 == \p\e\r\i\m\e\t\e\r\-\f\w\1 ]]
+ configs_listing=("${filtered[@]}")
+ filtered=()
+ [[ cisco,fortinet,misc != false ]]
+ valid_devices=()
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)access-sw1-west\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)branch-isr-02\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)branch-isr-02\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)campus-sw-access01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)campus-sw-access01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)campus-sw-access01\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)dmz-fw2-backup\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)dmz-fw2-backup\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)dmz-fw2-backup\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)dmz-fw2-backup\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg =~ (^|/)fg-branch-vpn-01\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg =~ (^|/)fg-campus-core\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-testing-config.cfg =~ (^|/)fg-testing-config\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-testing-config.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/misc/fw1.cfg =~ (^|/)fw1\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/fortinet/fg-testing-config.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/misc/fw1.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/misc/fw3.cfg =~ (^|/)fw3\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ for dev in "${target_devices_source[@]}"
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/access-sw1-west.cfg =~ (^|/)perimeter-fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/branch-isr-02.cfg =~ (^|/)perimeter-fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg =~ (^|/)perimeter-fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg =~ (^|/)perimeter-fw1\.[^/]+$ ]]
+ for cfg in "${configs_listing[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg =~ (^|/)perimeter-fw1\.[^/]+$ ]]
+ valid_devices+=("${dev}")
+ break
+ target_devices_source=("${valid_devices[@]}")
+ target_devices_count=10
+ [[ true == true ]]
+ message 'Filtered Config Files by Device (matched): 10'
+ [[ -n Filtered Config Files by Device (matched): 10 ]]
+ local 'message=Filtered Config Files by Device (matched): 10'
+ echo -e 'Filtered Config Files by Device (matched): 10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for device in "${target_devices_source[@]}"
+ message '  - access-sw1-west'
+ [[ -n   - access-sw1-west ]]
+ local 'message=  - access-sw1-west'
+ echo -e '  - access-sw1-west'
+ for device in "${target_devices_source[@]}"
+ message '  - branch-isr-02'
+ [[ -n   - branch-isr-02 ]]
+ local 'message=  - branch-isr-02'
+ echo -e '  - branch-isr-02'
+ for device in "${target_devices_source[@]}"
+ message '  - campus-sw-access01'
+ [[ -n   - campus-sw-access01 ]]
+ local 'message=  - campus-sw-access01'
+ echo -e '  - campus-sw-access01'
+ for device in "${target_devices_source[@]}"
+ message '  - dmz-fw2-backup'
+ [[ -n   - dmz-fw2-backup ]]
+ local 'message=  - dmz-fw2-backup'
+ echo -e '  - dmz-fw2-backup'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-branch-vpn-01'
+ [[ -n   - fg-branch-vpn-01 ]]
+ local 'message=  - fg-branch-vpn-01'
+ echo -e '  - fg-branch-vpn-01'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-campus-core'
+ [[ -n   - fg-campus-core ]]
+ local 'message=  - fg-campus-core'
+ echo -e '  - fg-campus-core'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-testing-config'
+ [[ -n   - fg-testing-config ]]
+ local 'message=  - fg-testing-config'
+ echo -e '  - fg-testing-config'
+ for device in "${target_devices_source[@]}"
+ message '  - fw1'
+ [[ -n   - fw1 ]]
+ local 'message=  - fw1'
+ echo -e '  - fw1'
+ for device in "${target_devices_source[@]}"
+ message '  - fw3'
+ [[ -n   - fw3 ]]
+ local 'message=  - fw3'
+ echo -e '  - fw3'
+ for device in "${target_devices_source[@]}"
+ message '  - perimeter-fw1'
+ [[ -n   - perimeter-fw1 ]]
+ local 'message=  - perimeter-fw1'
+ echo -e '  - perimeter-fw1'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw3.cfg
+ message 'Discovered Config Files (count): 10'
+ [[ -n Discovered Config Files (count): 10 ]]
+ local 'message=Discovered Config Files (count): 10'
+ echo -e 'Discovered Config Files (count): 10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/access-sw1-west.cfg
++ local full_path=configs/cisco/access-sw1-west.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/branch-isr-02.cfg
++ local full_path=configs/cisco/branch-isr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/campus-sw-access01.cfg
++ local full_path=configs/cisco/campus-sw-access01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/dmz-fw2-backup.cfg
++ local full_path=configs/cisco/dmz-fw2-backup.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/perimeter-fw1.cfg
++ local full_path=configs/cisco/perimeter-fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-branch-vpn-01.cfg
++ local full_path=configs/fortinet/fg-branch-vpn-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-campus-core.cfg
++ local full_path=configs/fortinet/fg-campus-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-testing-config.cfg
++ local full_path=configs/fortinet/fg-testing-config.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw1.cfg
++ local full_path=configs/misc/fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw3.cfg
++ local full_path=configs/misc/fw3.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ [[ ! -f .cache/configs.list ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Cached Configs List: .cache/configs.list'
+ [[ -n Cached Configs List: .cache/configs.list ]]
+ local 'message=Cached Configs List: .cache/configs.list'
+ echo -e 'Cached Configs List: .cache/configs.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file .cache/configs.list
+ [[ -n .cache/configs.list ]]
+ local target_file=.cache/configs.list
+ [[ true == true ]]
+ [[ -f .cache/configs.list ]]
+ case "${target_file}" in
+ cat .cache/configs.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ devices.list == false ]]
++ which bash
++ IFS=,
++ echo -en access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1
+ /usr/local/bin/bash -x ./scripts/network-configs.shell --ips-list=ips.list --search=access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1 --location=configs --output=.cache/resources --verbose
+ set -euo pipefail
+ set -x
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBNlSNgFhR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBNlSNgFhR
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias error-message=error_message
+ alias detect-vendor=detect_vendor
+ alias network-configs=main
+ [[ -z x ]]
+ [[ 5 -eq 0 ]]
+ [[ --ips-list=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --ips-list=ips.list --search=access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1 --location=configs --output=.cache/resources --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ local target_addresses=ips.list
+ [[ ips-list =~ ^(config|c)$ ]]
+ [[ ips-list =~ ^(search|s)$ ]]
+ [[ ips-list =~ ^(location|l)$ ]]
+ [[ ips-list =~ ^(output|o)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(ips-list|i)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_configs=access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1
+ [[ search =~ ^(location|l)$ ]]
+ [[ search =~ ^(output|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(ips-list|i)$ ]]
+ [[ location =~ ^(config|c)$ ]]
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=configs
+ [[ location =~ ^(output|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --output=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ output =~ ^(ips-list|i)$ ]]
+ [[ output =~ ^(config|c)$ ]]
+ [[ output =~ ^(search|s)$ ]]
+ [[ output =~ ^(location|l)$ ]]
+ [[ output =~ ^(output|o)$ ]]
+ local output_config=.cache/resources
+ [[ output == \h\e\l\p ]]
+ [[ output == \d\e\b\u\g ]]
+ [[ output == \d\r\y\-\r\u\n ]]
+ [[ output == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_helper=false
+ [[ -z .cache/resources ]]
+ [[ .cache/resources =~ ^(/|\./?$|)$ ]]
+ [[ ! -d .cache/resources ]]
+ mkdir -p .cache/resources
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ local action_class=unknown
+ [[ -n '' ]]
+ [[ -z configs ]]
+ [[ -z ips.list ]]
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ tr -d '\r'
++ tr ' \t,;:|' '\n'
++ grep -v '^\s*$'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
Loaded (default) IPs addresses (count): 17
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
  - 10.0.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
  - 10.0.1.2
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
  - 10.0.2.3
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
  - 10.10.10.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
  - 172.16.0.5
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
  - 172.16.1.6
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
  - 172.18.1.20
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
  - 172.31.255.254
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
  - 192.0.2.50
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
  - 192.168.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
  - 192.168.0.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
  - 192.168.1.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
  - 192.168.1.11
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
  - 192.168.2.12
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
  - 192.168.100.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
  - 198.51.100.75
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
  - 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo -e 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ target_addresses=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ true == true ]]
+ message 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ [[ -n Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ] ]]
+ local 'message=Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ echo -e 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ -n access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1 ]]
+ IFS=,
+ read -r -a search_items
+ found_configs=()
+ declare -a found_configs
+ for item in "${search_items[@]}"
++ find configs -type f -name 'access-sw1-west.*'
+ result=configs/cisco/access-sw1-west.cfg
+ [[ -n configs/cisco/access-sw1-west.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'branch-isr-02.*'
+ result=configs/cisco/branch-isr-02.cfg
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'campus-sw-access01.*'
+ result=configs/cisco/campus-sw-access01.cfg
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'dmz-fw2-backup.*'
+ result=configs/cisco/dmz-fw2-backup.cfg
+ [[ -n configs/cisco/dmz-fw2-backup.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'fg-branch-vpn-01.*'
+ result=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'fg-campus-core.*'
+ result=configs/fortinet/fg-campus-core.cfg
+ [[ -n configs/fortinet/fg-campus-core.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'fg-testing-config.*'
+ result=configs/fortinet/fg-testing-config.cfg
+ [[ -n configs/fortinet/fg-testing-config.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'fw1.*'
+ result=configs/misc/fw1.cfg
+ [[ -n configs/misc/fw1.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'fw3.*'
+ result=configs/misc/fw3.cfg
+ [[ -n configs/misc/fw3.cfg ]]
+ found_configs+=("${result}")
+ for item in "${search_items[@]}"
++ find configs -type f -name 'perimeter-fw1.*'
+ result=configs/cisco/perimeter-fw1.cfg
+ [[ -n configs/cisco/perimeter-fw1.cfg ]]
+ found_configs+=("${result}")
+ [[ 10 -gt 0 ]]
+ configs_listing=("${found_configs[@]}")
+ action_class=search
+ [[ 10 -eq 0 ]]
+ [[ -n access-sw1-west,branch-isr-02,campus-sw-access01,dmz-fw2-backup,fg-branch-vpn-01,fg-campus-core,fg-testing-config,fw1,fw3,perimeter-fw1 ]]
+ IFS=,
+ read -r -a search_patterns
+ matched_configs=()
+ declare -a matched_configs
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-isr-02.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-isr-02.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw1.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw1.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw1.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw3.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw3.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw3.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${config}")
+ break
+ [[ 10 -gt 0 ]]
+ configs_listing=("${matched_configs[@]}")
+ [[ true == true ]]
+ message 'Matching IPs found in 10 files:'
+ [[ -n Matching IPs found in 10 files: ]]
+ local 'message=Matching IPs found in 10 files:'
+ echo -e 'Matching IPs found in 10 files:'
Matching IPs found in 10 files:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/access-sw1-west.cfg'
+ [[ -n   - configs/cisco/access-sw1-west.cfg ]]
+ local 'message=  - configs/cisco/access-sw1-west.cfg'
+ echo -e '  - configs/cisco/access-sw1-west.cfg'
  - configs/cisco/access-sw1-west.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/branch-isr-02.cfg'
+ [[ -n   - configs/cisco/branch-isr-02.cfg ]]
+ local 'message=  - configs/cisco/branch-isr-02.cfg'
+ echo -e '  - configs/cisco/branch-isr-02.cfg'
  - configs/cisco/branch-isr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/campus-sw-access01.cfg'
+ [[ -n   - configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=  - configs/cisco/campus-sw-access01.cfg'
+ echo -e '  - configs/cisco/campus-sw-access01.cfg'
  - configs/cisco/campus-sw-access01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - configs/cisco/dmz-fw2-backup.cfg'
  - configs/cisco/dmz-fw2-backup.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - configs/fortinet/fg-branch-vpn-01.cfg'
  - configs/fortinet/fg-branch-vpn-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-campus-core.cfg'
+ [[ -n   - configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=  - configs/fortinet/fg-campus-core.cfg'
+ echo -e '  - configs/fortinet/fg-campus-core.cfg'
  - configs/fortinet/fg-campus-core.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-testing-config.cfg'
+ [[ -n   - configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - configs/fortinet/fg-testing-config.cfg'
+ echo -e '  - configs/fortinet/fg-testing-config.cfg'
  - configs/fortinet/fg-testing-config.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw1.cfg'
+ [[ -n   - configs/misc/fw1.cfg ]]
+ local 'message=  - configs/misc/fw1.cfg'
+ echo -e '  - configs/misc/fw1.cfg'
  - configs/misc/fw1.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw3.cfg'
+ [[ -n   - configs/misc/fw3.cfg ]]
+ local 'message=  - configs/misc/fw3.cfg'
+ echo -e '  - configs/misc/fw3.cfg'
  - configs/misc/fw3.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/perimeter-fw1.cfg'
+ [[ -n   - configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=  - configs/cisco/perimeter-fw1.cfg'
+ echo -e '  - configs/cisco/perimeter-fw1.cfg'
  - configs/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ 10 -eq 0 ]]
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ set +e
+ detect_vendor configs/cisco/access-sw1-west.cfg
+ local config_file=configs/cisco/access-sw1-west.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/access-sw1-west.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/access-sw1-west.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/access-sw1-west.cfg
+ target_output=.cache/resources/cisco/access-sw1-west.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/access-sw1-west.cfg' '--output=.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/access-sw1-west.cfg --output=.cache/resources/cisco/access-sw1-west.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "",
     4	  "version": "12.4",
     5	  "domain": "",
     6	  "hostname": "access-sw1-west"
     7	}
     8	
     9	version 12.4
    10	hostname access-sw1-west
    11	
    12	interface Vlan1
    13	 ip address 192.168.0.1 255.255.255.0
    14	 description Management Interface
    15	
    16	interface Vlan100
    17	 ip address 192.168.0.100 255.255.255.0
    18	 description Guest VLAN Gateway
    19	
    20	object-group network MGMT-ACCESS
    21	 description Management objects
    22	 network-object host 192.168.0.1
    23	 network-object host 192.168.0.100
    24	 network-object host 10.10.10.10
    25	
    26	object-group network Mutant-WiFi
    27	 description Controlled guest devices
    28	 network-object host 10.10.10.10
    29	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-isr-02.cfg
+ local config_file=configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/branch-isr-02.cfg
+ target_output=.cache/resources/cisco/branch-isr-02.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/branch-isr-02.cfg' '--output=.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/branch-isr-02.cfg --output=.cache/resources/cisco/branch-isr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "",
     4	  "version": "16.9",
     5	  "domain": "",
     6	  "hostname": "branch-isr-02"
     7	}
     8	
     9	version 16.9
    10	hostname branch-isr-02
    11	
    12	interface GigabitEthernet0/0/0
    13	 ip address 172.16.1.6 255.255.255.0
    14	 description ISP uplink
    15	
    16	interface GigabitEthernet0/0/1
    17	 ip address 192.168.2.12 255.255.255.0
    18	 description Workstation LAN
    19	
    20	interface GigabitEthernet0/0/2
    21	 ip address 10.0.2.3 255.255.255.0
    22	 description Dev VLAN
    23	
    24	object network BlackWidow-Core
    25	 host 172.16.1.6
    26	 description Branch router uplink NAT
    27	
    28	object network Hydra-Link
    29	 host 198.51.100.75
    30	 description Branch NAT egress
    31	
    32	object-group network Hydra-Edge
    33	 description Remote site uplink
    34	 network-object host 192.168.2.12
    35	 network-object host 198.51.100.75
    36	
    37	object network Panther-Gateway
    38	 host 10.0.2.3
    39	 description Secure outbound concentrator
    40	
    41	object-group network Lantern-DMZ
    42	 description Protected but public-facing zone
    43	 network-object host 172.18.1.20
    44	 network-object host 192.168.1.11
    45	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/campus-sw-access01.cfg
+ local config_file=configs/cisco/campus-sw-access01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/campus-sw-access01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/campus-sw-access01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/campus-sw-access01.cfg
+ target_output=.cache/resources/cisco/campus-sw-access01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/campus-sw-access01.cfg' '--output=.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/campus-sw-access01.cfg --output=.cache/resources/cisco/campus-sw-access01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "",
     4	  "version": "12.2",
     5	  "domain": "",
     6	  "hostname": "campus-sw-access01"
     7	}
     8	
     9	version 12.2
    10	hostname campus-sw-access01
    11	
    12	interface Vlan1
    13	 ip address 192.168.0.1 255.255.255.0
    14	 description Switch Mgmt
    15	
    16	object-group network Floor-Networks
    17	 description End-user and service devices
    18	 network-object host 192.168.0.1
    19	 network-object host 192.168.0.100
    20	 network-object host 10.10.10.10
    21	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor configs/cisco/dmz-fw2-backup.cfg
+ local config_file=configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/dmz-fw2-backup.cfg
+ target_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/dmz-fw2-backup.cfg' '--output=.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/dmz-fw2-backup.cfg --output=.cache/resources/cisco/dmz-fw2-backup.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "ASA",
     4	  "version": "9.12(4)",
     5	  "domain": "global.dmz.example.net",
     6	  "hostname": "dmz-fw2-backup"
     7	}
     8	
     9	ASA Version 9.12(4)
    10	hostname dmz-fw2-backup
    11	domain-name global.dmz.example.net
    12	
    13	interface GigabitEthernet0/0
    14	 nameif guest
    15	 ip address 10.10.10.10 255.255.255.0
    16	 description Guest access interface
    17	
    18	interface GigabitEthernet0/1
    19	 nameif inside
    20	 ip address 192.168.100.100 255.255.255.0
    21	 description Inside LAN segment
    22	
    23	interface GigabitEthernet0/2
    24	 nameif outside
    25	 ip address 198.51.100.75 255.255.255.0
    26	 description Outbound Internet NAT interface
    27	
    28	object network Titan-WLAN-Host
    29	 host 192.168.100.100
    30	 description Backup inside NAT IP
    31	
    32	object network Shield-WiFi-Alias
    33	 host 10.10.10.10
    34	 description Guest NAT
    35	
    36	object network Sentinel-NAT
    37	 host 203.0.113.25
    38	 description Corporate NAT edge
    39	
    40	object-group network Sector-Wireless
    41	 description Staff WiFi clients
    42	 network-object host 192.168.100.100
    43	 network-object host 10.10.10.10
    44	
    45	object-group network Watchtower-DMZ
    46	 description Global secure relay
    47	 network-object host 192.0.2.50
    48	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-branch-vpn-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: search): '
+ [[ -n Parsing [ fortinet ] configs (by: search):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: search): '
+ echo -e 'Parsing [ fortinet ] configs (by: search): '
Parsing [ fortinet ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ target_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-branch-vpn-01.cfg' '--output=.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-branch-vpn-01.cfg --output=.cache/resources/fortinet/fg-branch-vpn-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
     1	{
     2	  "vendor": "fortinet",
     3	  "model": "FortiGate-60F",
     4	  "version": "v7.2.5.F",
     5	  "hostname": "fg-branch-vpn-01"
     6	}
     7	
     8	#hostname="fg-branch-vpn-01"
     9	#model="FortiGate-60F"
    10	#config-version=FGT_60F-v7.2.5.F-build1517-230421
    11	
    12	config system interface
    13	 edit "wan1"
    14	  set ip 198.51.100.75 255.255.255.0
    15	  set alias "Branch ISP"
    16	 next
    17	 edit "internal"
    18	  set ip 192.168.2.12 255.255.255.0
    19	  set alias "User LAN"
    20	 next
    21	end
    22	
    23	config firewall address
    24	 edit "Branch-Gateway"
    25	  set subnet 192.168.2.12 255.255.255.255
    26	  set comment "Primary LAN gateway"
    27	 next
    28	 edit "Branch-Public"
    29	  set subnet 198.51.100.75 255.255.255.255
    30	  set comment "Branch NAT"
    31	 next
    32	end
    33	
    34	config firewall address
    35	 edit "IronMan-HQ"
    36	  set subnet 10.0.0.1 255.255.255.255
    37	  set comment "Main node at Stark Tower"
    38	 next
    39	 edit "Spidey-Sandbox"
    40	  set subnet 10.0.1.2 255.255.255.255
    41	  set comment "QA node in Peter's Lab"
    42	 next
    43	 edit "Panther-Vault"
    44	  set subnet 192.168.1.10 255.255.255.255
    45	  set comment "Wakandan data store"
    46	 next
    47	 edit "Public-Test"
    48	  set subnet 203.0.113.25 255.255.255.255
    49	  set comment "Public NAT exposure for Red Skull trap"
    50	 next
    51	 edit "Guardians-Relay"
    52	  set subnet 192.168.0.1 255.255.255.255
    53	  set comment "Backup uplink for Milano crew"
    54	 next
    55	end
    56	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-campus-core.cfg
+ local config_file=configs/fortinet/fg-campus-core.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-campus-core.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: search): '
+ [[ -n Parsing [ fortinet ] configs (by: search):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: search): '
+ echo -e 'Parsing [ fortinet ] configs (by: search): '
Parsing [ fortinet ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-campus-core.cfg
+ target_output=.cache/resources/fortinet/fg-campus-core.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-campus-core.cfg' '--output=.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-campus-core.cfg --output=.cache/resources/fortinet/fg-campus-core.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
     1	{
     2	  "vendor": "fortinet",
     3	  "model": "FortiGate-200F",
     4	  "version": "",
     5	  "hostname": "fg-campus-core"
     6	}
     7	
     8	#hostname="fg-campus-core"
     9	#model="FortiGate-200F"
    10	
    11	config system interface
    12	 edit "core"
    13	  set ip 10.10.10.10 255.255.255.0
    14	  set alias "Campus Core Transit"
    15	 next
    16	 edit "wifi"
    17	  set ip 192.168.100.100 255.255.255.0
    18	  set alias "Wireless VLAN"
    19	 next
    20	end
    21	
    22	config firewall address
    23	 edit "Shield-WiFi"
    24	  set subnet 10.10.10.10 255.255.255.255
    25	  set comment "Wireless AP Gateway"
    26	 next
    27	 edit "Titan-WLAN-Host"
    28	  set subnet 192.168.100.100 255.255.255.255
    29	  set comment "Guest WiFi node"
    30	 next
    31	end
    32	
    33	config firewall address
    34	 edit "Cap-HQ"
    35	  set subnet 192.168.1.11 255.255.255.255
    36	  set comment "Captain America’s secure endpoint"
    37	 next
    38	 edit "Vision-Link"
    39	  set subnet 192.168.2.12 255.255.255.255
    40	  set comment "Vision’s quantum channel"
    41	 next
    42	 edit "Hawkeye-Nest"
    43	  set subnet 172.16.1.6 255.255.255.255
    44	  set comment "Remote sniper node"
    45	 next
    46	 edit "Wanda-Field"
    47	  set subnet 192.168.100.100 255.255.255.255
    48	  set comment "Wanda’s chaos relay"
    49	 next
    50	end
    51	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-testing-config.cfg
+ local config_file=configs/fortinet/fg-testing-config.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-testing-config.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: search): '
+ [[ -n Parsing [ fortinet ] configs (by: search):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: search): '
+ echo -e 'Parsing [ fortinet ] configs (by: search): '
Parsing [ fortinet ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-testing-config.cfg
+ target_output=.cache/resources/fortinet/fg-testing-config.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-testing-config.cfg' '--output=.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-testing-config.cfg --output=.cache/resources/fortinet/fg-testing-config.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
     1	{
     2	  "vendor": "fortinet",
     3	  "model": "FortiGate-60F",
     4	  "version": "v7.2.5.F",
     5	  "hostname": "fg-branch-vpn-01"
     6	}
     7	
     8	#hostname="fg-branch-vpn-01"
     9	#model="FortiGate-60F"
    10	#config-version=FGT_60F-v7.2.5.F-build1517-230421
    11	
    12	config firewall policy
    13	 edit 13
    14	  set name "Remote NAT"
    15	  set srcintf "dmz"
    16	  set dstintf "wan1"
    17	  set srcaddr "10.10.10.10"
    18	  set dstaddr "203.0.113.10"
    19	  set action accept
    20	  set logtraffic all
    21	 next
    22	end
    23	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw1.cfg
+ local config_file=configs/misc/fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw1.cfg
+ target_output=.cache/resources/misc/fw1.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw1.cfg' '--output=.cache/resources/misc/fw1.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw1.cfg --output=.cache/resources/misc/fw1.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
Configuration File [ .cache/resources/misc/fw1.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "",
     4	  "version": "",
     5	  "domain": "",
     6	  "hostname": ""
     7	}
     8	
     9	object-group network Metropolis-Internal
    10	 description Core internal LAN for application clusters
    11	 network-object host 10.0.2.3
    12	 network-object 192.168.2.0 255.255.255.0
    13	 network-object host 192.168.2.12
    14	
    15	object-group network Krypton-Cloud
    16	 description Cloud-facing external nodes
    17	 network-object host 198.51.100.75
    18	 network-object host 203.0.113.25
    19	
    20	object-group network Fortress-Wireless
    21	 description Secure wireless access layer
    22	 network-object host 172.18.1.20
    23	 network-object host 192.168.1.10
    24	
    25	object network Kent-Server
    26	 host 10.0.2.3
    27	 description Internal mail & identity services
    28	
    29	object network Krypton-Gateway
    30	 host 203.0.113.25
    31	 description Secure NAT boundary for cloud access
    32	
    33	object network External-Failover
    34	 host 198.51.100.75
    35	 description Secondary outbound route for edge
    36	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw3.cfg
+ local config_file=configs/misc/fw3.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw3.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw3.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw3.cfg
+ target_output=.cache/resources/misc/fw3.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw3.cfg' '--output=.cache/resources/misc/fw3.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw3.cfg --output=.cache/resources/misc/fw3.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
Configuration File [ .cache/resources/misc/fw3.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "",
     4	  "version": "",
     5	  "domain": "",
     6	  "hostname": ""
     7	}
     8	
     9	object-group network Wakanda-Core
    10	 description National Core Routing Zone
    11	 network-object host 192.168.1.10
    12	 network-object host 10.0.2.3
    13	 network-object 10.0.0.0 255.255.255.0
    14	
    15	object-group network Panther-Edge
    16	 description Internet-facing proxy systems
    17	 network-object host 203.0.113.25
    18	 network-object host 172.16.0.5
    19	
    20	object-group network Shield-WiFi
    21	 description Shield-controlled wireless network
    22	 network-object host 10.10.10.10
    23	 network-object 192.168.100.0 255.255.255.0
    24	
    25	object-group network Shield-WiFi
    26	 description Shield-controlled wireless network
    27	 network-object host 10.10.10.10
    28	 network-object 192.168.100.0 255.255.255.0
    29	
    30	object network Panther-Gateway
    31	 host 10.0.2.3
    32	 description Secure outbound concentrator
    33	
    34	object network Edge-Terminal
    35	 host 172.16.0.5
    36	 description Internet firewall handoff
    37	
    38	object-group network Shield-WiFi
    39	 description Shield-controlled wireless network
    40	 network-object host 10.10.10.10
    41	 network-object 192.168.100.0 255.255.255.0
    42	
    43	object network Shield-WiFi-Alias
    44	 host 10.10.10.10
    45	 description Guest NAT
    46	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ set +e
+ detect_vendor configs/cisco/perimeter-fw1.cfg
+ local config_file=configs/cisco/perimeter-fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/perimeter-fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/perimeter-fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: search): '
+ [[ -n Parsing [ cisco ] configs (by: search):  ]]
+ local 'message=Parsing [ cisco ] configs (by: search): '
+ echo -e 'Parsing [ cisco ] configs (by: search): '
Parsing [ cisco ] configs (by: search): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/perimeter-fw1.cfg
+ target_output=.cache/resources/cisco/perimeter-fw1.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/perimeter-fw1.cfg' '--output=.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash -x ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/perimeter-fw1.cfg --output=.cache/resources/cisco/perimeter-fw1.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
     1	{
     2	  "vendor": "cisco",
     3	  "model": "ASA",
     4	  "version": "9.14(3)",
     5	  "domain": "edge.dc.example.com",
     6	  "hostname": "perimeter-fw1"
     7	}
     8	
     9	ASA Version 9.14(3)
    10	hostname perimeter-fw1
    11	domain-name edge.dc.example.com
    12	
    13	interface GigabitEthernet0/0
    14	 nameif outside
    15	 security-level 0
    16	 ip address 203.0.113.25 255.255.255.0
    17	 description External Internet-facing Interface
    18	
    19	interface GigabitEthernet0/1
    20	 nameif inside
    21	 security-level 100
    22	 ip address 10.0.0.1 255.255.255.0
    23	 description Internal Network Interface
    24	
    25	object network NAT-Edge
    26	 host 203.0.113.25
    27	 description Internet-bound IP NAT
    28	
    29	object network Stark-Tower
    30	 host 10.0.0.1
    31	 description Core services gateway
    32	
    33	object-group network Avengers-DMZ
    34	 description Public access layer
    35	 network-object host 192.0.2.50
    36	 network-object host 203.0.113.25
    37	 network-object 192.168.2.0 255.255.255.0
    38	
    39	object-group network Panther-Edge
    40	 description Internet-facing proxy systems
    41	 network-object host 203.0.113.25
    42	 network-object host 172.16.0.5
    43	
    44	object network Magneto-Core
    45	 host 172.16.0.5
    46	 description WAN firewall entry point
    47	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ tree .cache/resources
.cache/resources
|-- cisco
|   |-- access-sw1-west.cfg
|   |-- branch-isr-02.cfg
|   |-- campus-sw-access01.cfg
|   |-- dmz-fw2-backup.cfg
|   `-- perimeter-fw1.cfg
|-- fortinet
|   |-- fg-branch-vpn-01.cfg
|   |-- fg-campus-core.cfg
|   `-- fg-testing-config.cfg
`-- misc
    |-- fw1.cfg
    `-- fw3.cfg

4 directories, 10 files
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBNlSNgFhR ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bBNlSNgFhR
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ [[ ! -d .cache/resources ]]
+ mapfile -t configs_list_cache
++ find .cache/resources -type f
++ sort
+ [[ ! -f .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ ! -s .cache/resources/cisco/access-sw1-west.cfg ]]
+ message 'Extracted - Configurations List Cache:'
+ [[ -n Extracted - Configurations List Cache: ]]
+ local 'message=Extracted - Configurations List Cache:'
+ echo -e 'Extracted - Configurations List Cache:'
Extracted - Configurations List Cache:
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n   - .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=  - .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '  - .cache/resources/cisco/access-sw1-west.cfg'
  - .cache/resources/cisco/access-sw1-west.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n   - .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=  - .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '  - .cache/resources/cisco/branch-isr-02.cfg'
  - .cache/resources/cisco/branch-isr-02.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n   - .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=  - .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '  - .cache/resources/cisco/campus-sw-access01.cfg'
  - .cache/resources/cisco/campus-sw-access01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - .cache/resources/cisco/dmz-fw2-backup.cfg'
  - .cache/resources/cisco/dmz-fw2-backup.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n   - .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=  - .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '  - .cache/resources/cisco/perimeter-fw1.cfg'
  - .cache/resources/cisco/perimeter-fw1.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  - .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-campus-core.cfg'
  - .cache/resources/fortinet/fg-campus-core.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-testing-config.cfg'
  - .cache/resources/fortinet/fg-testing-config.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw1.cfg'
+ [[ -n   - .cache/resources/misc/fw1.cfg ]]
+ local 'message=  - .cache/resources/misc/fw1.cfg'
+ echo -e '  - .cache/resources/misc/fw1.cfg'
  - .cache/resources/misc/fw1.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw3.cfg'
+ [[ -n   - .cache/resources/misc/fw3.cfg ]]
+ local 'message=  - .cache/resources/misc/fw3.cfg'
+ echo -e '  - .cache/resources/misc/fw3.cfg'
  - .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ip_batch_size=10
+ total_ips=17
+ (( ip_offset=0 ))
+ (( ip_offset<total_ips ))
+ superset_index=1
+ superset_total=2
+ range_start_ip=10.0.0.1
+ range_end_ip=192.168.0.1
+ percentage_done=50
+ local 'processing=1 → 10'
+ local 'completed=1/2 (50%) → 17'
+ message 'Processing Addresses: [ 1 → 10 ]'
+ [[ -n Processing Addresses: [ 1 → 10 ] ]]
+ local 'message=Processing Addresses: [ 1 → 10 ]'
+ echo -e 'Processing Addresses: [ 1 → 10 ]'
+ message 'Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ [[ -n Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ] ]]
+ local 'message=Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ echo -e 'Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Progress / Completed: 1/2 (50%) → 17 IPs'
+ [[ -n Progress / Completed: 1/2 (50%) → 17 IPs ]]
+ local 'message=Progress / Completed: 1/2 (50%) → 17 IPs'
+ echo -e 'Progress / Completed: 1/2 (50%) → 17 IPs'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ mapfile -t site_folders
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
++ sort -u
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ message 'Batch size: 3'
+ [[ -n Batch size: 3 ]]
+ local 'message=Batch size: 3'
+ echo -e 'Batch size: 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local outer_index=0
+ local outer_batches=3
+ for site in "${site_folders[@]}"
+ outer_index=1
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /cisco/
+ local total_files=5
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  cisco'
+ [[ -n Location Name:  cisco ]]
+ local 'message=Location Name:  cisco'
+ echo -e 'Location Name:  cisco'
+ message 'Location Index: 1/3'
+ [[ -n Location Index: 1/3 ]]
+ local 'message=Location Index: 1/3'
+ echo -e 'Location Index: 1/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  5'
+ [[ -n Total Configs:  5 ]]
+ local 'message=Total Configs:  5'
+ echo -e 'Total Configs:  5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ find targets -maxdepth 1 -type f -name '*.json' -delete
+ compgen -G 'targets/*.json'
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 5 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332685832535000 7392
+ export batch_id=MTc0ODMzMjY4
+ batch_id=MTc0ODMzMjY4
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332685-25631
+ batch_configs_list=configs--MTc0ODMzMjY4-1748332685-25631.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY4'
+ [[ -n Batch ID: MTc0ODMzMjY4 ]]
+ local 'message=Batch ID: MTc0ODMzMjY4'
+ echo -e 'Batch ID: MTc0ODMzMjY4'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748332685-25631'
+ [[ -n Batch Suffix:   1748332685-25631 ]]
+ local 'message=Batch Suffix:   1748332685-25631'
+ echo -e 'Batch Suffix:   1748332685-25631'
+ message 'Batch FileName: configs--MTc0ODMzMjY4-1748332685-25631.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY4-1748332685-25631.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY4-1748332685-25631.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY4-1748332685-25631.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local base=configs--MTc0ODMzMjY4-1748332685-25631.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY4-1748332685-25631.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY4-1748332685-25631.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY4-1748332685-25631.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/campus-sw-access01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/campus-sw-access01.cfg
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.18.1.20.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/172.18.1.20
+ tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/172.18.1.20
+ touch targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json
+ job_pid=73060
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.1.json
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json
++ sed -E 's|^.cache/resources/||'
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.1
+ tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/192.168.0.1
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
+ touch targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json
+ config_lines='      45'
++ grep -oE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
+ job_pid=73074
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
+ generate_configslist 192.168.0.1 targets/192.168.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json
+ local ip_addr=192.168.0.1
+ local target_file=targets/192.168.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=branch-isr-02.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/10.10.10.10
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
++ wc -l
++ tr -d ' '
+ job_pid=73092
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/10.0.2.3
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq -r
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
++ wc -l
++ tr -d ' '
++ wc -l
+ job_pid=73113
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.1.6.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json
++ sed -E 's|^.cache/resources/||'
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json ]]
++ cut -d/ -f1
+ [[ -f targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json targets/172.18.1.20.json
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
+ config_lines='      21'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
+ site_name=cisco
++ tr -d ' '
+ target_dirpath=targets/172.16.1.6
+ tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/172.16.1.6
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
+ match_count=2
+ site=cisco
+ device=campus-sw-access01.cfg
+ touch targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json
+ mv -f targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json.tmp targets/172.18.1.20/172.18.1.20--cisco--MTc0ODMzMjY4.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ config_lines='      45'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ wc -l
++ wc -l
++ tr -d ' '
+ job_pid=73141
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ [[ true == true ]]
+ message 'Generated Config-File: targets/172.18.1.20.json'
+ message 'Matched IPs to [cisco] configs (5):'
+ [[ -n Generated Config-File: targets/172.18.1.20.json ]]
+ local 'message=Generated Config-File: targets/172.18.1.20.json'
+ echo -e 'Generated Config-File: targets/172.18.1.20.json'
+ [[ -n Matched IPs to [cisco] configs (5): ]]
+ local 'message=Matched IPs to [cisco] configs (5):'
+ return 0
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json
+ echo -e 'Matched IPs to [cisco] configs (5):'
+ local ip_addr=172.16.1.6
+ message -------------------------------------
+ local target_file=targets/172.16.1.6.json
+ [[ -n ------------------------------------- ]]
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332685-25631.list
+ local message=-------------------------------------
+ local tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed 's|.cache/resources/cisco/||g'
+ config_lines='      21'
+ match_count=2
++ tr : ' : '
+ site=cisco
+ device=branch-isr-02.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
+ IFS=
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
+ read -r config_file
++ print '[]'
++ wc -l
++ [[ -n [] ]]
++ echo -en '[]'
++ tr -d ' '
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=branch-isr-02.cfg
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
++ print '[
+ printf '%-6s | %-15s => %s\n' 73113 10.0.2.3 branch-isr-02.cfg
+ IFS=
  {
+ read -r config_file
+ for pid in "${!targets_jobs2ips_mapping[@]}"
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
++ jq '{ configs: . }'
    },
+ ip=192.168.0.1
    "lines": 21,
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg
    "count": 2
  }
]'
+ config_file=cisco/branch-isr-02.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ wc -l
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      45'
+ config_cleaned='access-sw1-west.cfg campus-sw-access01.cfg'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ printf '%-6s | %-15s => %s\n' 73074 192.168.0.1 'access-sw1-west.cfg campus-sw-access01.cfg'
+ IFS=
+ read -r config_file
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 21,
      "count": 2
    }
  ]
}'
+ jq -r
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ wc -l
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ sed 's|.cache/resources/cisco/||g'
++ jq '{ configs: . }'
++ tr -d ' '
++ tr : ' : '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ config_cleaned=branch-isr-02.cfg
+ IFS=
+ read -r config_file
+ printf '%-6s | %-15s => %s\n' 73141 172.16.1.6 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ match_count=2
+ ip=10.10.10.10
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg
+ site=cisco
+ device=branch-isr-02.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ print '[]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ [[ -n [] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ sed 's|.cache/resources/cisco/||g'
++ echo -en '[]'
++ tr : ' : '
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ [[ -n targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json ]]
+ [[ -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json targets/192.168.0.1.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq -r
+ config_cleaned='access-sw1-west.cfg campus-sw-access01.cfg'
+ printf '%-6s | %-15s => %s\n' 73092 10.10.10.10 'access-sw1-west.cfg campus-sw-access01.cfg'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.18.1.20
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ mv -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json.tmp targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMzMjY4.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json ]]
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json targets/10.0.2.3.json
      "device": "branch-isr-02.cfg"
++ jq '{ configs: . }'
    },
    "lines": 45,
    "count": 2
  }
]'
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 73060 172.18.1.20 branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  5 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73060
+ ip_address=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73074
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73092
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73113
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73141
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ message 'Generated Config-File: targets/192.168.0.1.json'
+ [[ -n Generated Config-File: targets/192.168.0.1.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.1.json'
+ echo -e 'Generated Config-File: targets/192.168.0.1.json'
+ return 0
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json targets/10.10.10.10.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq -r
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0ODMzMjY4.json
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ [[ -n targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json ]]
+ [[ -f targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json targets/172.16.1.6.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ mv -f targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json.tmp targets/172.16.1.6/172.16.1.6--cisco--MTc0ODMzMjY4.json
+ message 'Generated Config-File: targets/172.16.1.6.json'
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
+ return 0
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73074
+ ip_address=192.168.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73092
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73113
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 73141
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 12 -gt 0 ]]
+ message 'Unmapped IPs (count): 12'
+ [[ -n Unmapped IPs (count): 12 ]]
+ local 'message=Unmapped IPs (count): 12'
+ echo -e 'Unmapped IPs (count): 12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
++ printf %01d 1
+ padded_index=1
+ job_pid=73206
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.18.1.20
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.1
+ parse_configs 172.18.1.20 1
+ local ip_addr=172.18.1.20
+ local padded_index=1
++ printf %01d 2
++ IFS=,
+ padded_index=2
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=172.18.1.20' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ job_pid=73209
+ [[ true == true ]]
+ execute+=(--verbose)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.1
+ mkdir -p .logs/jobs .logs/errors
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 192.168.0.1 2
+ local ip_addr=192.168.0.1
+ local padded_index=2
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.1' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ job_pid=73213
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ mkdir -p .logs/jobs .logs/errors
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.10.10.10 3
+ local ip_addr=10.10.10.10
+ local padded_index=3
++ printf %01d 4
+ logfile=.logs/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=172.18.1.20 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=4
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ job_pid=73218
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
+ parse_configs 10.0.2.3 4
+ local ip_addr=10.0.2.3
+ local padded_index=4
+ logfile=.logs/jobs/192.168.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.1 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 5
++ IFS=,
+ padded_index=5
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.0.2.3' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ job_pid=73223
+ declare -a execute
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ parse_configs 172.16.1.6 5
+ message 'PID   | IP Address (5)'
+ [[ -n PID   | IP Address (5) ]]
+ local 'message=PID   | IP Address (5)'
+ echo -e 'PID   | IP Address (5)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 73209 192.168.0.1
+ local ip_addr=172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ logfile=.logs/jobs/10.10.10.10.job
+ printf '%-5s | %s\n' 73206 172.18.1.20
+ local padded_index=5
+ [[ true == true ]]
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 73218 10.0.2.3
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 73213 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 73223 172.16.1.6
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73206
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
++ IFS=,
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
++ print cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
++ [[ -n cfg,conf,cnf ]]
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
++ echo -en cfg,conf,cnf
+ sleep 0.1
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=172.16.1.6' '--index=5' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.0.2.3 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=172.16.1.6 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73206
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73206
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73206
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73206
+ ip=172.18.1.20
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ local status=0
+ ((  status != 0  ))
+ ((  status != 0  ))
+ return 0
+ return 0
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73218
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73223
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73213
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 73209
+ ip=192.168.0.1
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 5 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332687366564000 14681
+ export batch_id=MTc0ODMzMjY4
+ batch_id=MTc0ODMzMjY4
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332687-14562
+ batch_configs_list=configs--MTc0ODMzMjY4-1748332687-14562.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ printf '%s\n' .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg
+ range_first=4
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY4'
+ [[ -n Batch ID: MTc0ODMzMjY4 ]]
+ local 'message=Batch ID: MTc0ODMzMjY4'
+ echo -e 'Batch ID: MTc0ODMzMjY4'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748332687-14562'
+ [[ -n Batch Suffix:   1748332687-14562 ]]
+ local 'message=Batch Suffix:   1748332687-14562'
+ echo -e 'Batch Suffix:   1748332687-14562'
+ message 'Batch FileName: configs--MTc0ODMzMjY4-1748332687-14562.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY4-1748332687-14562.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY4-1748332687-14562.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY4-1748332687-14562.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ local base=configs--MTc0ODMzMjY4-1748332687-14562.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY4-1748332687-14562.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY4-1748332687-14562.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY4-1748332687-14562.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   4 -> 5'
+ [[ -n Batch Ranges:   4 -> 5 ]]
+ local 'message=Batch Ranges:   4 -> 5'
+ echo -e 'Batch Ranges:   4 -> 5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ :.cache/resources/cisco/dmz-fw2-backup.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ :.cache/resources/cisco/dmz-fw2-backup.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ mkdir -p targets/10.10.10.10
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ job_pid=74464
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (1):'
+ [[ -n Matched IPs to [cisco] configs (1): ]]
+ local 'message=Matched IPs to [cisco] configs (1):'
+ echo -e 'Matched IPs to [cisco] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ local ip_addr=10.10.10.10
+ echo -e 'PID    | IP Address      => Config(s)'
+ local target_file=targets/10.10.10.10.json
+ message -------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332687-14562.list
+ [[ -n ------------------------------------- ]]
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=.cache/resources/cisco/dmz-fw2-backup.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/cisco/dmz-fw2-backup.cfg
+ config_cleaned=dmz-fw2-backup.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ printf '%-6s | %-15s => %s\n' 74464 10.10.10.10 dmz-fw2-backup.cfg
+ IFS=
+ read -r config_file
+ newline
+ local count=1
+ (( i = 0 ))
+ config_file=cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74464
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      48'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ wc -l
++ tr -d ' '
+ match_count=3
+ site=cisco
+ device=dmz-fw2-backup.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      48' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 3
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 3
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 48,
      "count": 3
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json targets/10.10.10.10.json
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMzMjY4.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74464
+ ip_address=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ printf %01d 1
+ padded_index=1
+ job_pid=74488
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ parse_configs 10.10.10.10 1
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ local ip_addr=10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ local padded_index=1
+ printf '%-5s | %s\n' 74488 10.10.10.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74488
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 5 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k3WYykjVOS
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k3WYykjVOS
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k3WYykjVOS
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.0.2.3//10.0.2.3--cisco--MTc0ODMzMjY4.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.10.10.10//10.10.10.10--cisco--MTc0ODMzMjY4.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.16.1.6/
+ ip=172.16.1.6
+ final_file=.cache/targets/172.16.1.6.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.16.1.6.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.16.1.6//172.16.1.6--cisco--MTc0ODMzMjY4.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.18.1.20/
+ ip=172.18.1.20
+ final_file=.cache/targets/172.18.1.20.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.18.1.20.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.18.1.20//172.18.1.20--cisco--MTc0ODMzMjY4.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.1/
+ ip=192.168.0.1
+ final_file=.cache/targets/192.168.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.1//192.168.0.1--cisco--MTc0ODMzMjY4.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=2
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /fortinet/
+ local total_files=3
+ local inner_batches=1
+ [[ true == true ]]
+ message 'Location Name:  fortinet'
+ [[ -n Location Name:  fortinet ]]
+ local 'message=Location Name:  fortinet'
+ echo -e 'Location Name:  fortinet'
+ message 'Location Index: 2/3'
+ [[ -n Location Index: 2/3 ]]
+ local 'message=Location Index: 2/3'
+ echo -e 'Location Index: 2/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  3'
+ [[ -n Total Configs:  3 ]]
+ local 'message=Total Configs:  3'
+ echo -e 'Total Configs:  3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 3 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332688727770000 14300
+ export batch_id=MTc0ODMzMjY4
+ batch_id=MTc0ODMzMjY4
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332688-9393
+ batch_configs_list=configs--MTc0ODMzMjY4-1748332688-9393.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ printf '%s\n' .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY4'
+ [[ -n Batch ID: MTc0ODMzMjY4 ]]
+ local 'message=Batch ID: MTc0ODMzMjY4'
+ echo -e 'Batch ID: MTc0ODMzMjY4'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/1'
+ [[ -n Batch Index:    1/1 ]]
+ local 'message=Batch Index:    1/1'
+ echo -e 'Batch Index:    1/1'
+ message 'Batch Suffix:   1748332688-9393'
+ [[ -n Batch Suffix:   1748332688-9393 ]]
+ local 'message=Batch Suffix:   1748332688-9393'
+ echo -e 'Batch Suffix:   1748332688-9393'
+ message 'Batch FileName: configs--MTc0ODMzMjY4-1748332688-9393.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY4-1748332688-9393.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY4-1748332688-9393.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY4-1748332688-9393.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ local base=configs--MTc0ODMzMjY4-1748332688-9393.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY4-1748332688-9393.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY4-1748332688-9393.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY4-1748332688-9393.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\f\o\r\t\i\n\e\t\/\f\g\-\c\a\m\p\u\s\-\c\o\r\e\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/fortinet/fg-campus-core.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ :.cache/resources/fortinet/fg-campus-core.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\f\o\r\t\i\n\e\t\/\f\g\-\c\a\m\p\u\s\-\c\o\r\e\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ :.cache/resources/fortinet/fg-campus-core.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\f\o\r\t\i\n\e\t\/\f\g\-\t\e\s\t\i\n\g\-\c\o\n\f\i\g\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/fortinet/fg-testing-config.cfg
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg:.cache/resources/fortinet/fg-testing-config.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg:.cache/resources/fortinet/fg-testing-config.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ mkdir -p targets/10.10.10.10
+ touch targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ job_pid=74882
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (1):'
+ [[ -n Matched IPs to [fortinet] configs (1): ]]
+ local 'message=Matched IPs to [fortinet] configs (1):'
+ echo -e 'Matched IPs to [fortinet] configs (1):'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ local ip_addr=10.10.10.10
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local target_file=targets/10.10.10.10.json
+ local 'message=PID    | IP Address      => Config(s)'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY4-1748332688-9393.list
+ echo -e 'PID    | IP Address      => Config(s)'
+ local tracing_record=targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=.cache/resources/fortinet/fg-campus-core.cfg:.cache/resources/fortinet/fg-testing-config.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg
++ sed 's|.cache/resources/fortinet/||g'
++ tr : ' : '
+ config_cleaned='fg-campus-core.cfg fg-testing-config.cfg'
+ local 'matched_files=.cache/resources/fortinet/fg-campus-core.cfg
.cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg
.cache/resources/fortinet/fg-testing-config.cfg ]]
+ printf '%-6s | %-15s => %s\n' 74882 10.10.10.10 'fg-campus-core.cfg fg-testing-config.cfg'
+ config_json='[]'
+ newline
+ IFS=
+ read -r config_file
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ config_file=fortinet/fg-campus-core.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74882
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      51'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/fortinet/fg-campus-core.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=fortinet
+ device=fg-campus-core.cfg
++ print '[]'
++ jq --arg site fortinet --arg device fg-campus-core.cfg --argjson lines '      51' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-testing-config.cfg
++ wc -l
+ config_lines='      23'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/fortinet/fg-testing-config.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=fortinet
+ device=fg-testing-config.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  }
] ]]
++ jq --arg site fortinet --arg device fg-testing-config.cfg --argjson lines '      23' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  }
]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-testing-config.cfg"
    },
    "lines": 23,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-testing-config.cfg"
    },
    "lines": 23,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-testing-config.cfg"
    },
    "lines": 23,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-campus-core.cfg"
    },
    "lines": 51,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-testing-config.cfg"
    },
    "lines": 23,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fg-campus-core.cfg"
      },
      "lines": 51,
      "count": 2
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-testing-config.cfg"
      },
      "lines": 23,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json targets/10.10.10.10.json
+ mv -f targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json.tmp targets/10.10.10.10/10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74882
+ ip_address=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ printf %01d 1
+ padded_index=1
+ job_pid=74915
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ parse_configs 10.10.10.10 1
+ local message=-------------------------
+ echo -e -------------------------
+ local ip_addr=10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ local padded_index=1
+ printf '%-5s | %s\n' 74915 10.10.10.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 74915
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 3 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZBNuxQPjye
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZBNuxQPjye
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZBNuxQPjye
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.10.10.10.json targets/10.10.10.10//10.10.10.10--fortinet--MTc0ODMzMjY4.json
+ mv -f .cache/targets/10.10.10.10.json.tmp .cache/targets/10.10.10.10.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=3
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /misc/
+ local total_files=2
+ local inner_batches=1
+ [[ true == true ]]
+ message 'Location Name:  misc'
+ [[ -n Location Name:  misc ]]
+ local 'message=Location Name:  misc'
+ echo -e 'Location Name:  misc'
+ message 'Location Index: 3/3'
+ [[ -n Location Index: 3/3 ]]
+ local 'message=Location Index: 3/3'
+ echo -e 'Location Index: 3/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  2'
+ [[ -n Total Configs:  2 ]]
+ local 'message=Total Configs:  2'
+ echo -e 'Total Configs:  2'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 2 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332690264993000 31455
+ export batch_id=MTc0ODMzMjY5
+ batch_id=MTc0ODMzMjY5
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332690-23285
+ batch_configs_list=configs--MTc0ODMzMjY5-1748332690-23285.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ printf '%s\n' .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
+ range_first=1
+ range_last=2
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY5'
+ [[ -n Batch ID: MTc0ODMzMjY5 ]]
+ local 'message=Batch ID: MTc0ODMzMjY5'
+ echo -e 'Batch ID: MTc0ODMzMjY5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/1'
+ [[ -n Batch Index:    1/1 ]]
+ local 'message=Batch Index:    1/1'
+ echo -e 'Batch Index:    1/1'
+ message 'Batch Suffix:   1748332690-23285'
+ [[ -n Batch Suffix:   1748332690-23285 ]]
+ local 'message=Batch Suffix:   1748332690-23285'
+ echo -e 'Batch Suffix:   1748332690-23285'
+ message 'Batch FileName: configs--MTc0ODMzMjY5-1748332690-23285.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY5-1748332690-23285.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY5-1748332690-23285.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY5-1748332690-23285.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ local base=configs--MTc0ODMzMjY5-1748332690-23285.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY5-1748332690-23285.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY5-1748332690-23285.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY5-1748332690-23285.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   1 -> 2'
+ [[ -n Batch Ranges:   1 -> 2 ]]
+ local 'message=Batch Ranges:   1 -> 2'
+ echo -e 'Batch Ranges:   1 -> 2'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/misc/fw3.cfg
+ [[ :.cache/resources/misc/fw3.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/misc/fw3.cfg
+ [[ :.cache/resources/misc/fw3.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/misc/fw3.cfg
+ [[ :.cache/resources/misc/fw3.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json
+ mkdir -p targets/10.10.10.10
+ touch targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json
+ job_pid=75394
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (1):'
+ [[ -n Matched IPs to [misc] configs (1): ]]
+ local 'message=Matched IPs to [misc] configs (1):'
+ echo -e 'Matched IPs to [misc] configs (1):'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ local ip_addr=10.10.10.10
+ echo -e -------------------------------------
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332690-23285.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=.cache/resources/misc/fw3.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/misc/fw3.cfg
++ sed 's|.cache/resources/misc/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/misc/fw3.cfg
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw3.cfg
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 75394 10.10.10.10 fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ wc -l
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75394
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ config_lines='      46'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/misc/fw3.cfg
++ wc -l
++ tr -d ' '
+ match_count=4
+ site=misc
+ device=fw3.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device fw3.cfg --argjson lines '      46' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 46,
    "count": 4
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 46,
    "count": 4
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 46,
    "count": 4
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 46,
    "count": 4
  }
]'
++ jq '{ configs: . }'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw3.cfg"
      },
      "lines": 46,
      "count": 4
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json targets/10.10.10.10.json
+ mv -f targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json.tmp targets/10.10.10.10/10.10.10.10--misc--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75394
+ ip_address=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ printf %01d 1
+ padded_index=1
+ job_pid=75420
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ parse_configs 10.10.10.10 1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 75420 10.10.10.10
+ local ip_addr=10.10.10.10
+ newline
+ local padded_index=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75420
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 2 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TeUaoCF4zv
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TeUaoCF4zv
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TeUaoCF4zv
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.10.10.10.json targets/10.10.10.10//10.10.10.10--misc--MTc0ODMzMjY5.json
+ mv -f .cache/targets/10.10.10.10.json.tmp .cache/targets/10.10.10.10.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ superset_index=2
+ superset_total=2
+ range_start_ip=192.168.0.100
+ range_end_ip=203.0.113.25
+ percentage_done=100
+ local 'processing=11 → 17'
+ local 'completed=2/2 (100%) → 17'
+ message 'Processing Addresses: [ 11 → 17 ]'
+ [[ -n Processing Addresses: [ 11 → 17 ] ]]
+ local 'message=Processing Addresses: [ 11 → 17 ]'
+ echo -e 'Processing Addresses: [ 11 → 17 ]'
+ message 'Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ [[ -n Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ] ]]
+ local 'message=Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ echo -e 'Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Progress / Completed: 2/2 (100%) → 17 IPs'
+ [[ -n Progress / Completed: 2/2 (100%) → 17 IPs ]]
+ local 'message=Progress / Completed: 2/2 (100%) → 17 IPs'
+ echo -e 'Progress / Completed: 2/2 (100%) → 17 IPs'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ mapfile -t site_folders
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
++ sort -u
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ message 'Batch size: 3'
+ [[ -n Batch size: 3 ]]
+ local 'message=Batch size: 3'
+ echo -e 'Batch size: 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local outer_index=0
+ local outer_batches=3
+ for site in "${site_folders[@]}"
+ outer_index=1
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /cisco/
+ local total_files=5
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  cisco'
+ [[ -n Location Name:  cisco ]]
+ local 'message=Location Name:  cisco'
+ echo -e 'Location Name:  cisco'
+ message 'Location Index: 1/3'
+ [[ -n Location Index: 1/3 ]]
+ local 'message=Location Index: 1/3'
+ echo -e 'Location Index: 1/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  5'
+ [[ -n Total Configs:  5 ]]
+ local 'message=Total Configs:  5'
+ echo -e 'Total Configs:  5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 5 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332691532828000 6478
+ export batch_id=MTc0ODMzMjY5
+ batch_id=MTc0ODMzMjY5
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332691-30917
+ batch_configs_list=configs--MTc0ODMzMjY5-1748332691-30917.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY5'
+ [[ -n Batch ID: MTc0ODMzMjY5 ]]
+ local 'message=Batch ID: MTc0ODMzMjY5'
+ echo -e 'Batch ID: MTc0ODMzMjY5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748332691-30917'
+ [[ -n Batch Suffix:   1748332691-30917 ]]
+ local 'message=Batch Suffix:   1748332691-30917'
+ echo -e 'Batch Suffix:   1748332691-30917'
+ message 'Batch FileName: configs--MTc0ODMzMjY5-1748332691-30917.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY5-1748332691-30917.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY5-1748332691-30917.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY5-1748332691-30917.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local base=configs--MTc0ODMzMjY5-1748332691-30917.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY5-1748332691-30917.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY5-1748332691-30917.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY5-1748332691-30917.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.2.12.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.2.12
+ tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json
+ mkdir -p targets/192.168.2.12
+ touch targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json
+ job_pid=75767
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.2.12
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.100.json
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json
++ sed -E 's|^.cache/resources/||'
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.100
+ tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json
+ mkdir -p targets/192.168.0.100
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
+ touch targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json
+ config_lines='      45'
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
+ job_pid=75780
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
+ generate_configslist 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json
+ local ip_addr=192.168.0.100
+ local target_file=targets/192.168.0.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=branch-isr-02.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ mkdir -p targets/198.51.100.75
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
+ IFS=
+ read -r config_file
++ wc -l
++ tr -d ' '
+ job_pid=75798
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.1.11
+ tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json
+ mkdir -p targets/192.168.1.11
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq -r
+ touch targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json
+ config_lines='      45'
+ config_json='[
  {
    "config": {
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
+ config_file=cisco/campus-sw-access01.cfg
++ tr -d ' '
+ job_pid=75820
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
++ wc -l
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (4):'
+ [[ -n Matched IPs to [cisco] configs (4): ]]
+ local 'message=Matched IPs to [cisco] configs (4):'
+ echo -e 'Matched IPs to [cisco] configs (4):'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local ip_addr=192.168.1.11
+ local message=-------------------------------------
+ local target_file=targets/192.168.1.11.json
+ echo -e -------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332691-30917.list
+ local tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ [[ -n targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json ]]
+ message -------------------------------------
+ [[ -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json ]]
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json targets/192.168.2.12.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.100
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/campus-sw-access01.cfg
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ match_count=2
+ site=cisco
+ device=branch-isr-02.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ config_lines='      21'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
+ config_cleaned='access-sw1-west.cfg campus-sw-access01.cfg'
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 75780 192.168.0.100 'access-sw1-west.cfg campus-sw-access01.cfg'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ tr -d ' '
+ IFS=
+ ip=192.168.1.11
+ read -r config_file
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ mv -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json.tmp targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMzMjY5.json
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      45'
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 75820 192.168.1.11 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.2.12
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
+ message 'Generated Config-File: targets/192.168.2.12.json'
+ [[ -n Generated Config-File: targets/192.168.2.12.json ]]
+ local 'message=Generated Config-File: targets/192.168.2.12.json'
+ echo -e 'Generated Config-File: targets/192.168.2.12.json'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ return 0
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
++ sed 's|.cache/resources/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ tr : ' : '
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ match_count=1
+ site=cisco
+ device=branch-isr-02.cfg
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 75767 192.168.2.12 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
++ print '[]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ [[ -n [] ]]
+ IFS=
++ echo -en '[]'
+ read -r config_file
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      45' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 2
    }
  ]
}'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 21,
    "count": 1
  }
+ jq -r
]'
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 75798 198.51.100.75 branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75767
+ ip_address=192.168.2.12
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75780
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75798
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75820
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq -r
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json targets/198.51.100.75.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json ]]
+ [[ -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json targets/192.168.0.100.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ [[ -n targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json ]]
+ [[ -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json targets/192.168.1.11.json
+ mv -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json.tmp targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/192.168.0.100.json'
+ [[ -n Generated Config-File: targets/192.168.0.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.100.json'
+ echo -e 'Generated Config-File: targets/192.168.0.100.json'
+ return 0
+ mv -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json.tmp targets/192.168.1.11/192.168.1.11--cisco--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/192.168.1.11.json'
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75780
+ ip_address=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75798
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 75820
+ ip_address=192.168.1.11
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 13 -gt 0 ]]
+ message 'Unmapped IPs (count): 13'
+ [[ -n Unmapped IPs (count): 13 ]]
+ local 'message=Unmapped IPs (count): 13'
+ echo -e 'Unmapped IPs (count): 13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=4
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
++ printf %01d 1
+ padded_index=1
+ job_pid=75881
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.2.12
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.100
+ parse_configs 192.168.2.12 1
+ local ip_addr=192.168.2.12
+ local padded_index=1
++ printf %01d 2
++ IFS=,
+ padded_index=2
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.2.12' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ job_pid=75884
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.100
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ ip_addr=198.51.100.75
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 192.168.0.100 2
+ local ip_addr=192.168.0.100
+ local padded_index=2
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=75888
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.100' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ configs_jobs_pid+=("${job_pid}")
+ declare -a execute
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ [[ true == true ]]
+ ((  ip_index < total_ips  ))
+ execute+=(--classify)
+ ip_addr=192.168.1.11
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 198.51.100.75 3
+ local ip_addr=198.51.100.75
+ local padded_index=3
++ printf %01d 4
+ logfile=.logs/jobs/192.168.2.12.job
+ [[ true == true ]]
++ IFS=,
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.2.12 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
+ padded_index=4
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ job_pid=75893
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ execute+=(--classify)
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ [[ false == true ]]
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (4)'
+ [[ -n PID   | IP Address (4) ]]
+ local 'message=PID   | IP Address (4)'
+ echo -e 'PID   | IP Address (4)'
+ parse_configs 192.168.1.11 4
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local ip_addr=192.168.1.11
+ local message=-------------------------
+ local padded_index=4
+ echo -e -------------------------
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 75893 192.168.1.11
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 75888 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 75884 192.168.0.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 75881 192.168.2.12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ logfile=.logs/jobs/192.168.0.100.job
+ ((  4 > 0  ))
+ [[ true == true ]]
+ valid_configs_jobs_pid=()
++ IFS=,
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
++ print cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.100 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75893
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.1.11' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ sleep 0.1
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.1.11 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75893
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75893
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75893
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75893
+ ip=192.168.1.11
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75881
+ ip=192.168.2.12
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75888
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ local status=0
+ kill -0 75884
+ ((  status != 0  ))
+ return 0
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 75884
+ ip=192.168.0.100
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 5 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332692980745000 25054
+ export batch_id=MTc0ODMzMjY5
+ batch_id=MTc0ODMzMjY5
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332692-4636
+ batch_configs_list=configs--MTc0ODMzMjY5-1748332692-4636.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ printf '%s\n' .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg
+ range_first=4
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY5'
+ [[ -n Batch ID: MTc0ODMzMjY5 ]]
+ local 'message=Batch ID: MTc0ODMzMjY5'
+ echo -e 'Batch ID: MTc0ODMzMjY5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748332692-4636'
+ [[ -n Batch Suffix:   1748332692-4636 ]]
+ local 'message=Batch Suffix:   1748332692-4636'
+ echo -e 'Batch Suffix:   1748332692-4636'
+ message 'Batch FileName: configs--MTc0ODMzMjY5-1748332692-4636.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY5-1748332692-4636.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY5-1748332692-4636.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY5-1748332692-4636.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ local base=configs--MTc0ODMzMjY5-1748332692-4636.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY5-1748332692-4636.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY5-1748332692-4636.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY5-1748332692-4636.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   4 -> 5'
+ [[ -n Batch Ranges:   4 -> 5 ]]
+ local 'message=Batch Ranges:   4 -> 5'
+ echo -e 'Batch Ranges:   4 -> 5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ mkdir -p targets/198.51.100.75
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ job_pid=76797
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (1):'
+ [[ -n Matched IPs to [cisco] configs (1): ]]
+ local 'message=Matched IPs to [cisco] configs (1):'
+ echo -e 'Matched IPs to [cisco] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ local ip_addr=198.51.100.75
+ echo -e 'PID    | IP Address      => Config(s)'
+ local target_file=targets/198.51.100.75.json
+ message -------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332692-4636.list
+ [[ -n ------------------------------------- ]]
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/dmz-fw2-backup.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ config_cleaned=dmz-fw2-backup.cfg
+ local matched_files=.cache/resources/cisco/dmz-fw2-backup.cfg
+ printf '%-6s | %-15s => %s\n' 76797 198.51.100.75 dmz-fw2-backup.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ newline
+ IFS=
+ read -r config_file
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ config_file=cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 76797
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      48'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=cisco
+ device=dmz-fw2-backup.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      48' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 48,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
++ jq '{ configs: . }'
    "lines": 48,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 48,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json targets/198.51.100.75.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 76797
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ printf %01d 1
+ padded_index=1
+ job_pid=76821
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ parse_configs 198.51.100.75 1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ local ip_addr=198.51.100.75
+ printf '%-5s | %s\n' 76821 198.51.100.75
+ local padded_index=1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 76821
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 76821
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 76821
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 76821
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 76821
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 5 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rWS6CqJXn8
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rWS6CqJXn8
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rWS6CqJXn8
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.100/
+ ip=192.168.0.100
+ final_file=.cache/targets/192.168.0.100.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.100.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.100//192.168.0.100--cisco--MTc0ODMzMjY5.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.1.11/
+ ip=192.168.1.11
+ final_file=.cache/targets/192.168.1.11.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.1.11.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.1.11//192.168.1.11--cisco--MTc0ODMzMjY5.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.2.12/
+ ip=192.168.2.12
+ final_file=.cache/targets/192.168.2.12.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.2.12.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.2.12//192.168.2.12--cisco--MTc0ODMzMjY5.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/198.51.100.75//198.51.100.75--cisco--MTc0ODMzMjY5.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=2
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /fortinet/
+ local total_files=3
+ local inner_batches=1
+ [[ true == true ]]
+ message 'Location Name:  fortinet'
+ [[ -n Location Name:  fortinet ]]
+ local 'message=Location Name:  fortinet'
+ echo -e 'Location Name:  fortinet'
+ message 'Location Index: 2/3'
+ [[ -n Location Index: 2/3 ]]
+ local 'message=Location Index: 2/3'
+ echo -e 'Location Index: 2/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  3'
+ [[ -n Total Configs:  3 ]]
+ local 'message=Total Configs:  3'
+ echo -e 'Total Configs:  3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 3 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332694032675000 4892
+ export batch_id=MTc0ODMzMjY5
+ batch_id=MTc0ODMzMjY5
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332694-29554
+ batch_configs_list=configs--MTc0ODMzMjY5-1748332694-29554.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ printf '%s\n' .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY5'
+ [[ -n Batch ID: MTc0ODMzMjY5 ]]
+ local 'message=Batch ID: MTc0ODMzMjY5'
+ echo -e 'Batch ID: MTc0ODMzMjY5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/1'
+ [[ -n Batch Index:    1/1 ]]
+ local 'message=Batch Index:    1/1'
+ echo -e 'Batch Index:    1/1'
+ message 'Batch Suffix:   1748332694-29554'
+ [[ -n Batch Suffix:   1748332694-29554 ]]
+ local 'message=Batch Suffix:   1748332694-29554'
+ echo -e 'Batch Suffix:   1748332694-29554'
+ message 'Batch FileName: configs--MTc0ODMzMjY5-1748332694-29554.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY5-1748332694-29554.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY5-1748332694-29554.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY5-1748332694-29554.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ local base=configs--MTc0ODMzMjY5-1748332694-29554.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY5-1748332694-29554.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY5-1748332694-29554.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY5-1748332694-29554.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\f\o\r\t\i\n\e\t\/\f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ :.cache/resources/fortinet/fg-branch-vpn-01.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\f\o\r\t\i\n\e\t\/\f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ sort -u
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ mkdir -p targets/198.51.100.75
+ touch targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ job_pid=77079
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (1):'
+ [[ -n Matched IPs to [fortinet] configs (1): ]]
+ local 'message=Matched IPs to [fortinet] configs (1):'
+ echo -e 'Matched IPs to [fortinet] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ local ip_addr=198.51.100.75
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332694-29554.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed 's|.cache/resources/fortinet/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-branch-vpn-01.cfg
+ config_cleaned=fg-branch-vpn-01.cfg
+ printf '%-6s | %-15s => %s\n' 77079 198.51.100.75 fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 77079
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      56'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=fortinet
+ device=fg-branch-vpn-01.cfg
++ print '[]'
++ jq --arg site fortinet --arg device fg-branch-vpn-01.cfg --argjson lines '      56' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 56,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
++ jq '{ configs: . }'
    "lines": 56,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 56,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 56,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fg-branch-vpn-01.cfg"
      },
      "lines": 56,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json targets/198.51.100.75.json
+ mv -f targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json.tmp targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 77079
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ printf %01d 1
+ padded_index=1
+ job_pid=77103
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ parse_configs 198.51.100.75 1
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ local ip_addr=198.51.100.75
+ echo -e -------------------------
+ local padded_index=1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 77103 198.51.100.75
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77103
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 3 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dxZVnPUj5d
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dxZVnPUj5d
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dxZVnPUj5d
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/198.51.100.75.json targets/198.51.100.75//198.51.100.75--fortinet--MTc0ODMzMjY5.json
+ mv -f .cache/targets/198.51.100.75.json.tmp .cache/targets/198.51.100.75.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=3
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
++ grep -F /misc/
+ local total_files=2
+ local inner_batches=1
+ [[ true == true ]]
+ message 'Location Name:  misc'
+ [[ -n Location Name:  misc ]]
+ local 'message=Location Name:  misc'
+ echo -e 'Location Name:  misc'
+ message 'Location Index: 3/3'
+ [[ -n Location Index: 3/3 ]]
+ local 'message=Location Index: 3/3'
+ echo -e 'Location Index: 3/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  2'
+ [[ -n Total Configs:  2 ]]
+ local 'message=Total Configs:  2'
+ echo -e 'Total Configs:  2'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 2 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748332695371167000 3015
+ export batch_id=MTc0ODMzMjY5
+ batch_id=MTc0ODMzMjY5
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748332695-29342
+ batch_configs_list=configs--MTc0ODMzMjY5-1748332695-29342.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ printf '%s\n' .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
+ range_first=1
+ range_last=2
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMzMjY5'
+ [[ -n Batch ID: MTc0ODMzMjY5 ]]
+ local 'message=Batch ID: MTc0ODMzMjY5'
+ echo -e 'Batch ID: MTc0ODMzMjY5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/1'
+ [[ -n Batch Index:    1/1 ]]
+ local 'message=Batch Index:    1/1'
+ echo -e 'Batch Index:    1/1'
+ message 'Batch Suffix:   1748332695-29342'
+ [[ -n Batch Suffix:   1748332695-29342 ]]
+ local 'message=Batch Suffix:   1748332695-29342'
+ echo -e 'Batch Suffix:   1748332695-29342'
+ message 'Batch FileName: configs--MTc0ODMzMjY5-1748332695-29342.list'
+ [[ -n Batch FileName: configs--MTc0ODMzMjY5-1748332695-29342.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMzMjY5-1748332695-29342.list'
+ echo -e 'Batch FileName: configs--MTc0ODMzMjY5-1748332695-29342.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ local base=configs--MTc0ODMzMjY5-1748332695-29342.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMzMjY5-1748332695-29342.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMzMjY5-1748332695-29342.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMzMjY5-1748332695-29342.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   1 -> 2'
+ [[ -n Batch Ranges:   1 -> 2 ]]
+ local 'message=Batch Ranges:   1 -> 2'
+ echo -e 'Batch Ranges:   1 -> 2'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw1.cfg .cache/resources/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/misc/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/misc/fw1.cfg
+ [[ :.cache/resources/misc/fw1.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\m\i\s\c\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json
+ mkdir -p targets/198.51.100.75
+ touch targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json
+ job_pid=77472
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (1):'
+ [[ -n Matched IPs to [misc] configs (1): ]]
+ local 'message=Matched IPs to [misc] configs (1):'
+ echo -e 'Matched IPs to [misc] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ local ip_addr=198.51.100.75
+ message -------------------------------------
+ local target_file=targets/198.51.100.75.json
+ [[ -n ------------------------------------- ]]
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG/configs--MTc0ODMzMjY5-1748332695-29342.list
+ local message=-------------------------------------
+ local tracing_record=targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/misc/fw1.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/misc/fw1.cfg
++ sed 's|.cache/resources/misc/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/misc/fw1.cfg
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw1.cfg
+ config_cleaned=fw1.cfg
+ printf '%-6s | %-15s => %s\n' 77472 198.51.100.75 fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 77472
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      36'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/misc/fw1.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=misc
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device fw1.cfg --argjson lines '      36' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw1.cfg"
    },
    "lines": 36,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw1.cfg"
    },
    "lines": 36,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw1.cfg"
    },
    "lines": 36,
    "count": 2
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw1.cfg"
    },
    "lines": 36,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw1.cfg"
      },
      "lines": 36,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json targets/198.51.100.75.json
+ mv -f targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json.tmp targets/198.51.100.75/198.51.100.75--misc--MTc0ODMzMjY5.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 77472
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ printf %01d 1
+ padded_index=1
+ job_pid=77496
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ parse_configs 198.51.100.75 1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 77496 198.51.100.75
+ local ip_addr=198.51.100.75
+ newline
+ local padded_index=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 77496
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 2 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TR8nVdBNMj
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TR8nVdBNMj
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TR8nVdBNMj
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/198.51.100.75.json targets/198.51.100.75//198.51.100.75--misc--MTc0ODMzMjY5.json
+ mv -f .cache/targets/198.51.100.75.json.tmp .cache/targets/198.51.100.75.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ [[ true == true ]]
+ grouped_targets=.cache/targets
+ message 'Post-processing: Normalizing JSON files'
+ [[ -n Post-processing: Normalizing JSON files ]]
+ local 'message=Post-processing: Normalizing JSON files'
+ echo -e 'Post-processing: Normalizing JSON files'
+ message ---------------------------------------
+ [[ -n --------------------------------------- ]]
+ local message=---------------------------------------
+ echo -e ---------------------------------------
+ message 'Grouped by site: .cache/targets'
+ [[ -n Grouped by site: .cache/targets ]]
+ local 'message=Grouped by site: .cache/targets'
+ echo -e 'Grouped by site: .cache/targets'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/10.0.2.3.json
+ ip=10.0.2.3.json
+ message '  - 10.0.2.3.json'
+ [[ -n   - 10.0.2.3.json ]]
+ local 'message=  - 10.0.2.3.json'
+ echo -e '  - 10.0.2.3.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/10.10.10.10.json
+ ip=10.10.10.10.json
+ message '  - 10.10.10.10.json'
+ [[ -n   - 10.10.10.10.json ]]
+ local 'message=  - 10.10.10.10.json'
+ echo -e '  - 10.10.10.10.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/172.16.1.6.json
+ ip=172.16.1.6.json
+ message '  - 172.16.1.6.json'
+ [[ -n   - 172.16.1.6.json ]]
+ local 'message=  - 172.16.1.6.json'
+ echo -e '  - 172.16.1.6.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/172.18.1.20.json
+ ip=172.18.1.20.json
+ message '  - 172.18.1.20.json'
+ [[ -n   - 172.18.1.20.json ]]
+ local 'message=  - 172.18.1.20.json'
+ echo -e '  - 172.18.1.20.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.1.json
+ ip=192.168.0.1.json
+ message '  - 192.168.0.1.json'
+ [[ -n   - 192.168.0.1.json ]]
+ local 'message=  - 192.168.0.1.json'
+ echo -e '  - 192.168.0.1.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.100.json
+ ip=192.168.0.100.json
+ message '  - 192.168.0.100.json'
+ [[ -n   - 192.168.0.100.json ]]
+ local 'message=  - 192.168.0.100.json'
+ echo -e '  - 192.168.0.100.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.1.11.json
+ ip=192.168.1.11.json
+ message '  - 192.168.1.11.json'
+ [[ -n   - 192.168.1.11.json ]]
+ local 'message=  - 192.168.1.11.json'
+ echo -e '  - 192.168.1.11.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.2.12.json
+ ip=192.168.2.12.json
+ message '  - 192.168.2.12.json'
+ [[ -n   - 192.168.2.12.json ]]
+ local 'message=  - 192.168.2.12.json'
+ echo -e '  - 192.168.2.12.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/198.51.100.75.json
+ ip=198.51.100.75.json
+ message '  - 198.51.100.75.json'
+ [[ -n   - 198.51.100.75.json ]]
+ local 'message=  - 198.51.100.75.json'
+ echo -e '  - 198.51.100.75.json'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ shopt -s nullglob
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/10.0.2.3.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/10.0.2.3.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/10.10.10.10.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/10.10.10.10.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 21,
      "count": 1
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 48,
      "count": 3
    }
  ],
  "fortinet": [
    {
      "device": "fg-campus-core.cfg",
      "lines": 51,
      "count": 2
    },
    {
      "device": "fg-testing-config.cfg",
      "lines": 23,
      "count": 1
    }
  ],
  "misc": [
    {
      "device": "fw3.cfg",
      "lines": 46,
      "count": 4
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/172.16.1.6.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/172.16.1.6.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/172.18.1.20.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/172.18.1.20.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.1.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.1.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 21,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.100.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.100.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.1.11.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.1.11.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.2.12.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.2.12.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/198.51.100.75.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/198.51.100.75.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 45,
      "count": 2
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 48,
      "count": 1
    }
  ],
  "fortinet": [
    {
      "device": "fg-branch-vpn-01.cfg",
      "lines": 56,
      "count": 2
    }
  ],
  "misc": [
    {
      "device": "fw1.cfg",
      "lines": 36,
      "count": 2
    }
  ]
}'
+ jq .
+ shopt -u nullglob
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ echo -e 'CSV Report Summary (tabulated):'
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ print_file reports/reports.csv
+ cat -n
+ [[ -n reports/reports.csv ]]
+ local target_file=reports/reports.csv
+ [[ true == true ]]
+ [[ -f reports/reports.csv ]]
+ case "${target_file}" in
+ cat reports/reports.csv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local elapsed=12
+ message 'Session Summary:'
+ [[ -n Session Summary: ]]
+ local 'message=Session Summary:'
+ echo -e 'Session Summary:'
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ message 'Started at: 2025-05-27 00:58:04'
+ [[ -n Started at: 2025-05-27 00:58:04 ]]
+ local 'message=Started at: 2025-05-27 00:58:04'
+ echo -e 'Started at: 2025-05-27 00:58:04'
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wFBybAquRG
