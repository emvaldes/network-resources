+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias print-message=message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=.logs
++ logs_location=.logs
++ export targets_location=targets
++ targets_location=targets
+++ pwd
++ export actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ export targets_logsfile=.logs/targets.jobs
++ targets_logsfile=.logs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODMxNTQ0MDMyOTE3MjAwMAo
++ divisor=MTc0ODMxNTQ0MDMyOTE3MjAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ :
+ rm -rf .cache
+ mkdir -p .cache/jobs .cache/targets
+ rm -rf .logs
+ mkdir -p .logs/errors .logs/jobs
+ rm -rf targets
+ mkdir -p targets
+ [[ -z '' ]]
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ [[ 6 -eq 0 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --logs --classify --ips-list=ips.list --configs=configs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(batch-size|b)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(export|e)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(batch-size|b)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(export|e)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(batch-size|b)$ ]]
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(export|e)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(batch-size|b)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(export|e)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(batch-size|b)$ ]]
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(export|e)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(batch-size|b)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ configs =~ ^(devices|d)$ ]]
+ [[ configs =~ ^(export|e)$ ]]
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(interval|l)$ ]]
+ [[ configs =~ ^(ips-list|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(jobs|j)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(sites|s)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export configs_batch_size=3
+ configs_batch_size=3
+ [[ -z '' ]]
+ export delaying_factor=0.1
+ delaying_factor=0.1
+ [[ -z ips.list ]]
+ [[ -z '' ]]
+ export target_devices=false
+ target_devices=false
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z '' ]]
+ export target_sites=false
+ target_sites=false
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-26 20:10:40'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ export configs_list_cache=.cache/configs.list
+ configs_list_cache=.cache/configs.list
+ export extracted_resources=.cache/resources
+ extracted_resources=.cache/resources
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export user_defined__file_extensions=false
+ user_defined__file_extensions=false
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-26 20:10:40'
+ [[ -n [INFO] Date: 2025-05-26 20:10:40 ]]
+ local 'message=[INFO] Date: 2025-05-26 20:10:40'
+ echo -e '[INFO] Date: 2025-05-26 20:10:40'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ message '[INFO] PID: 35490'
+ [[ -n [INFO] PID: 35490 ]]
+ local 'message=[INFO] PID: 35490'
+ echo -e '[INFO] PID: 35490'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ system_metrics
+ message 'System Information Metrics:'
+ [[ -n System Information Metrics: ]]
+ local 'message=System Information Metrics:'
+ echo -e 'System Information Metrics:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uptime
++ sed 's/^.*up //; s/,.*$//'
+ message 'System Uptime:                        2 days'
+ [[ -n System Uptime:                        2 days ]]
+ local 'message=System Uptime:                        2 days'
+ echo -e 'System Uptime:                        2 days'
++ uptime
++ awk '-Fload averages*: ' '{print $2}'
+ message 'System Load (1/5/15 min):             2.29 1.84 1.84'
+ [[ -n System Load (1/5/15 min):             2.29 1.84 1.84 ]]
+ local 'message=System Load (1/5/15 min):             2.29 1.84 1.84'
+ echo -e 'System Load (1/5/15 min):             2.29 1.84 1.84'
++ getconf _NPROCESSORS_ONLN
+ message 'CPU Cores (logical):                  16'
+ [[ -n CPU Cores (logical):                  16 ]]
+ local 'message=CPU Cores (logical):                  16'
+ echo -e 'CPU Cores (logical):                  16'
++ uname -m
+ message 'CPU Architecture:                     x86_64'
+ [[ -n CPU Architecture:                     x86_64 ]]
+ local 'message=CPU Architecture:                     x86_64'
+ echo -e 'CPU Architecture:                     x86_64'
+ case "${OSTYPE}" in
++ sysctl -n hw.memsize
+ mem_total=137438953472
++ awk -v mt=137438953472 'BEGIN { printf "%.2f GB", mt / 1024 / 1024 / 1024 }'
+ mem_total_gb='128.00 GB'
++ vm_stat
++ awk '/Pages free/ {free=$3} END { printf "%.2f GB", (free * 4096) / 1024 / 1024 / 1024 }'
+ mem_free='91.57 GB'
++ df -h /
++ awk 'NR==2 {print $2 " total, " $4 " free"}'
+ disk_root='894Gi total, 306Gi free'
+ message 'Memory - Total:                       128.00 GB'
+ [[ -n Memory - Total:                       128.00 GB ]]
+ local 'message=Memory - Total:                       128.00 GB'
+ echo -e 'Memory - Total:                       128.00 GB'
+ message 'Memory - Free:                        91.57 GB'
+ [[ -n Memory - Free:                        91.57 GB ]]
+ local 'message=Memory - Free:                        91.57 GB'
+ echo -e 'Memory - Free:                        91.57 GB'
+ message 'Disk - Root (/):                      894Gi total, 306Gi free'
+ [[ -n Disk - Root (/):                      894Gi total, 306Gi free ]]
+ local 'message=Disk - Root (/):                      894Gi total, 306Gi free'
+ echo -e 'Disk - Root (/):                      894Gi total, 306Gi free'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Logging Output Directory: .logs'
+ [[ -n [INFO] Logging Output Directory: .logs ]]
+ local 'message=[INFO] Logging Output Directory: .logs'
+ echo -e '[INFO] Logging Output Directory: .logs'
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Parsed Input Parameters (CLI Flags):'
+ [[ -n Parsed Input Parameters (CLI Flags): ]]
+ local 'message=Parsed Input Parameters (CLI Flags):'
+ echo -e 'Parsed Input Parameters (CLI Flags):'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch size (configs per batch):       3'
+ [[ -n Batch size (configs per batch):       3 ]]
+ local 'message=Batch size (configs per batch):       3'
+ echo -e 'Batch size (configs per batch):       3'
+ message 'Enable group classification:          true'
+ [[ -n Enable group classification:          true ]]
+ local 'message=Enable group classification:          true'
+ echo -e 'Enable group classification:          true'
+ message 'Source Configs directory:             configs'
+ [[ -n Source Configs directory:             configs ]]
+ local 'message=Source Configs directory:             configs'
+ echo -e 'Source Configs directory:             configs'
+ message 'Target Configs directory:             .cache/resources'
+ [[ -n Target Configs directory:             .cache/resources ]]
+ local 'message=Target Configs directory:             .cache/resources'
+ echo -e 'Target Configs directory:             .cache/resources'
+ message 'Device filter (file or inline):       false'
+ [[ -n Device filter (file or inline):       false ]]
+ local 'message=Device filter (file or inline):       false'
+ echo -e 'Device filter (file or inline):       false'
+ message 'Default Configs Listing file:         .cache/configs.list'
+ [[ -n Default Configs Listing file:         .cache/configs.list ]]
+ local 'message=Default Configs Listing file:         .cache/configs.list'
+ echo -e 'Default Configs Listing file:         .cache/configs.list'
+ message 'Export format (JSON/CSV):             reports/reports.csv'
+ [[ -n Export format (JSON/CSV):             reports/reports.csv ]]
+ local 'message=Export format (JSON/CSV):             reports/reports.csv'
+ echo -e 'Export format (JSON/CSV):             reports/reports.csv'
+ message 'Allowed file extensions:              cfg conf cnf'
+ [[ -n Allowed file extensions:              cfg conf cnf ]]
+ local 'message=Allowed file extensions:              cfg conf cnf'
+ echo -e 'Allowed file extensions:              cfg conf cnf'
+ message 'Delay between background jobs:        0.1'
+ [[ -n Delay between background jobs:        0.1 ]]
+ local 'message=Delay between background jobs:        0.1'
+ echo -e 'Delay between background jobs:        0.1'
+ message 'IP address input (file or inline):    ips.list'
+ [[ -n IP address input (file or inline):    ips.list ]]
+ local 'message=IP address input (file or inline):    ips.list'
+ echo -e 'IP address input (file or inline):    ips.list'
+ message 'Enable logging:                       true'
+ [[ -n Enable logging:                       true ]]
+ local 'message=Enable logging:                       true'
+ echo -e 'Enable logging:                       true'
+ message 'Parallel threads:                     100'
+ [[ -n Parallel threads:                     100 ]]
+ local 'message=Parallel threads:                     100'
+ echo -e 'Parallel threads:                     100'
+ message 'Translation matrix file:              matrix.json'
+ [[ -n Translation matrix file:              matrix.json ]]
+ local 'message=Translation matrix file:              matrix.json'
+ echo -e 'Translation matrix file:              matrix.json'
+ message 'Reports output directory:             reports'
+ [[ -n Reports output directory:             reports ]]
+ local 'message=Reports output directory:             reports'
+ echo -e 'Reports output directory:             reports'
+ message 'Target site folders:                  false'
+ [[ -n Target site folders:                  false ]]
+ local 'message=Target site folders:                  false'
+ echo -e 'Target site folders:                  false'
+ message 'Enable IP format validation:          false'
+ [[ -n Enable IP format validation:          false ]]
+ local 'message=Enable IP format validation:          false'
+ echo -e 'Enable IP format validation:          false'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Display help:                         false'
+ [[ -n Display help:                         false ]]
+ local 'message=Display help:                         false'
+ echo -e 'Display help:                         false'
+ message 'Enable debug mode:                    true'
+ [[ -n Enable debug mode:                    true ]]
+ local 'message=Enable debug mode:                    true'
+ echo -e 'Enable debug mode:                    true'
+ message 'Dry run mode:                         false'
+ [[ -n Dry run mode:                         false ]]
+ local 'message=Dry run mode:                         false'
+ echo -e 'Dry run mode:                         false'
+ message 'Enable verbose output:                true'
+ [[ -n Enable verbose output:                true ]]
+ local 'message=Enable verbose output:                true'
+ echo -e 'Enable verbose output:                true'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ tr -d '\r'
++ tr ' \t,;:|' '\n'
++ grep -v '^\s*$'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ target_listing=()
+ declare -a target_listing
+ [[ false == true ]]
+ target_listing=("${target_addresses_source[@]}")
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ for ip in "${target_listing[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ for ip in "${target_listing[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ for ip in "${target_listing[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ for ip in "${target_listing[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ for ip in "${target_listing[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ for ip in "${target_listing[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ for ip in "${target_listing[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ for ip in "${target_listing[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ for ip in "${target_listing[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ for ip in "${target_listing[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_listing=()
+ declare -a configs_listing
+ mapfile -t configs_listing
++ find configs -type f
++ sort -u
+ filtered=()
+ declare -a filtered
+ [[ -v file_extensions ]]
+ [[ 3 -gt 0 ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/.ds_store == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/access-sw1-west.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/access-switch-07.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-fw-03.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-fw-snmp.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/branch-isr-02.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/campus-sw-access01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/core-fw-dmz-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/core-router-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/datacenter-fw-core.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/dmz-fw2-backup.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/hq-core-rtr-02.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/hq-core-rtr.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/cisco/perimeter-fw1.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/f5/bigip1.ignore == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-branch-vpn-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-campus-core.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-datacenter-east.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-fw-dmz-01.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-lab-test-fw.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/fortinet/fg-testing-config.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/juniper/srx1.ignore == *\.\c\n\f ]]
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw1.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw2.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw3.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw5.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/fw6.cfg == *\.\c\f\g ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch1.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch1.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch2.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch2.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch3.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch3.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch4.conf == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/misc/switch4.conf == *\.\c\o\n\f ]]
+ filtered+=("${filepath}")
+ break
+ for filepath in "${configs_listing[@]}"
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\f\g ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\o\n\f ]]
+ for ext in "${file_extensions[@]}"
+ [[ configs/paloalto/pa1.ignore == *\.\c\n\f ]]
+ configs_listing=("${filtered[@]}")
+ [[ false == true ]]
+ filtered=()
+ [[ -n false ]]
+ [[ false != \f\a\l\s\e ]]
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n false ]]
+ [[ -f false ]]
+ [[ false != \f\a\l\s\e ]]
+ message 'Devices-Filtering configurations is not required: false'
+ [[ -n Devices-Filtering configurations is not required: false ]]
+ local 'message=Devices-Filtering configurations is not required: false'
+ echo -e 'Devices-Filtering configurations is not required: false'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -gt 0 ]]
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw1.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ message 'Discovered Config Files (count): 28'
+ [[ -n Discovered Config Files (count): 28 ]]
+ local 'message=Discovered Config Files (count): 28'
+ echo -e 'Discovered Config Files (count): 28'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/access-sw1-west.cfg
++ local full_path=configs/cisco/access-sw1-west.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/access-switch-07.cfg
++ local full_path=configs/cisco/access-switch-07.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-switch-07.cfg
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/branch-fw-03.cfg
++ local full_path=configs/cisco/branch-fw-03.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-03.cfg
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/branch-fw-snmp.cfg
++ local full_path=configs/cisco/branch-fw-snmp.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-snmp.cfg
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/branch-isr-02.cfg
++ local full_path=configs/cisco/branch-isr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/campus-sw-access01.cfg
++ local full_path=configs/cisco/campus-sw-access01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/core-fw-dmz-01.cfg
++ local full_path=configs/cisco/core-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/core-router-01.cfg
++ local full_path=configs/cisco/core-router-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-router-01.cfg
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/datacenter-fw-core.cfg
++ local full_path=configs/cisco/datacenter-fw-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/datacenter-fw-core.cfg
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/dmz-fw2-backup.cfg
++ local full_path=configs/cisco/dmz-fw2-backup.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/hq-core-rtr-02.cfg
++ local full_path=configs/cisco/hq-core-rtr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/hq-core-rtr.cfg
++ local full_path=configs/cisco/hq-core-rtr.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr.cfg
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/cisco/perimeter-fw1.cfg
++ local full_path=configs/cisco/perimeter-fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-branch-vpn-01.cfg
++ local full_path=configs/fortinet/fg-branch-vpn-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-campus-core.cfg
++ local full_path=configs/fortinet/fg-campus-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-datacenter-east.cfg
++ local full_path=configs/fortinet/fg-datacenter-east.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-fw-dmz-01.cfg
++ local full_path=configs/fortinet/fg-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-lab-test-fw.cfg
++ local full_path=configs/fortinet/fg-lab-test-fw.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/fortinet/fg-testing-config.cfg
++ local full_path=configs/fortinet/fg-testing-config.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw1.cfg
++ local full_path=configs/misc/fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw2.cfg
++ local full_path=configs/misc/fw2.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw2.cfg
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw3.cfg
++ local full_path=configs/misc/fw3.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw5.cfg
++ local full_path=configs/misc/fw5.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw5.cfg
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/fw6.cfg
++ local full_path=configs/misc/fw6.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw6.cfg
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/switch1.conf
++ local full_path=configs/misc/switch1.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch1.conf
+ message '  - misc/switch1.conf'
+ [[ -n   - misc/switch1.conf ]]
+ local 'message=  - misc/switch1.conf'
+ echo -e '  - misc/switch1.conf'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/switch2.conf
++ local full_path=configs/misc/switch2.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch2.conf
+ message '  - misc/switch2.conf'
+ [[ -n   - misc/switch2.conf ]]
+ local 'message=  - misc/switch2.conf'
+ echo -e '  - misc/switch2.conf'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/switch3.conf
++ local full_path=configs/misc/switch3.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch3.conf
+ message '  - misc/switch3.conf'
+ [[ -n   - misc/switch3.conf ]]
+ local 'message=  - misc/switch3.conf'
+ echo -e '  - misc/switch3.conf'
+ for file in "${configs_listing[@]}"
++ relative_configpath configs/misc/switch4.conf
++ local full_path=configs/misc/switch4.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch4.conf
+ message '  - misc/switch4.conf'
+ [[ -n   - misc/switch4.conf ]]
+ local 'message=  - misc/switch4.conf'
+ echo -e '  - misc/switch4.conf'
+ [[ ! -f .cache/configs.list ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Cached Configs List: .cache/configs.list'
+ [[ -n Cached Configs List: .cache/configs.list ]]
+ local 'message=Cached Configs List: .cache/configs.list'
+ echo -e 'Cached Configs List: .cache/configs.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file .cache/configs.list
+ [[ -n .cache/configs.list ]]
+ local target_file=.cache/configs.list
+ [[ true == true ]]
+ [[ -f .cache/configs.list ]]
+ case "${target_file}" in
+ cat -n
+ cat .cache/configs.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == false ]]
++ which bash
+ /usr/local/bin/bash ./scripts/network-configs.shell --ips-list=ips.list --location=configs --output=.cache/resources --verbose
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxJtasgjfl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxJtasgjfl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ alias display-help=display_help
+ alias new-line=newline
+ alias print-message=message
+ alias error-message=error_message
+ alias detect-vendor=detect_vendor
+ alias network-configs=main
+ [[ -z x ]]
+ [[ 4 -eq 0 ]]
+ [[ --ips-list=ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ main --ips-list=ips.list --location=configs --output=.cache/resources --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ local target_addresses=ips.list
+ [[ ips-list =~ ^(config|c)$ ]]
+ [[ ips-list =~ ^(search|s)$ ]]
+ [[ ips-list =~ ^(location|l)$ ]]
+ [[ ips-list =~ ^(output|o)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --location=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ location =~ ^(ips-list|i)$ ]]
+ [[ location =~ ^(config|c)$ ]]
+ [[ location =~ ^(search|s)$ ]]
+ [[ location =~ ^(location|l)$ ]]
+ local search_location=configs
+ [[ location =~ ^(output|o)$ ]]
+ [[ location == \h\e\l\p ]]
+ [[ location == \d\e\b\u\g ]]
+ [[ location == \d\r\y\-\r\u\n ]]
+ [[ location == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --output=.cache/resources
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ output =~ ^(ips-list|i)$ ]]
+ [[ output =~ ^(config|c)$ ]]
+ [[ output =~ ^(search|s)$ ]]
+ [[ output =~ ^(location|l)$ ]]
+ [[ output =~ ^(output|o)$ ]]
+ local output_config=.cache/resources
+ [[ output == \h\e\l\p ]]
+ [[ output == \d\e\b\u\g ]]
+ [[ output == \d\r\y\-\r\u\n ]]
+ [[ output == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(location|l)$ ]]
+ [[ verbose =~ ^(output|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local script_helper=false
+ [[ -z .cache/resources ]]
+ [[ .cache/resources =~ ^(/|\./?$|)$ ]]
+ [[ ! -d .cache/resources ]]
+ mkdir -p .cache/resources
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ configs_listing=()
+ declare -a configs_listing
+ local action_class=unknown
+ [[ -n '' ]]
+ [[ -z configs ]]
+ [[ -z ips.list ]]
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ tr -d '\r'
++ tr ' \t,;:|' '\n'
++ grep -v '^\s*$'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
Loaded (default) IPs addresses (count): 17
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
  - 10.0.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
  - 10.0.1.2
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
  - 10.0.2.3
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
  - 10.10.10.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
  - 172.16.0.5
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
  - 172.16.1.6
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
  - 172.18.1.20
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
  - 172.31.255.254
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
  - 192.0.2.50
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
  - 192.168.0.1
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
  - 192.168.0.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
  - 192.168.1.10
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
  - 192.168.1.11
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
  - 192.168.2.12
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
  - 192.168.100.100
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
  - 198.51.100.75
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
  - 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo -e 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ target_addresses=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ true == true ]]
+ message 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ [[ -n Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ] ]]
+ local 'message=Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
+ echo -e 'Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]'
Search Pattern: [ 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ -n '' ]]
+ [[ 0 -eq 0 ]]
+ [[ -n configs ]]
+ [[ -d configs ]]
+ mapfile -t configs_listing
++ find configs -type f -name '*.cfg'
+ [[ 24 -eq 0 ]]
+ [[ 24 -gt 0 ]]
+ [[ -n configs ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ action_class=location
+ [[ -n '' ]]
+ [[ -n configs ]]
+ IFS=,
+ read -r -a search_patterns
+ matched_configs=()
+ declare -a matched_configs
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw5.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw6.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw6.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw3.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw3.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw3.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw2.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw2.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/misc/fw1.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/misc/fw1.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/misc/fw1.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/access-sw1-west.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/access-sw1-west.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/core-router-01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/core-router-01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/core-fw-dmz-01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/core-fw-dmz-01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-isr-02.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-isr-02.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-isr-02.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/datacenter-fw-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/datacenter-fw-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/datacenter-fw-core.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/access-switch-07.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/access-switch-07.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/access-switch-07.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/access-switch-07.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/campus-sw-access01.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/campus-sw-access01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.0.5 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.1.6 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.18.1.20 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.31.255.254 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.0.2.50 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.0.1 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.0.100 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.1.10 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.1.11 configs/cisco/branch-fw-03.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.2.12 configs/cisco/branch-fw-03.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/hq-core-rtr-02.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/hq-core-rtr-02.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/perimeter-fw1.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/hq-core-rtr.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/hq-core-rtr.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/hq-core-rtr.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.0.5 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.1.6 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.18.1.20 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.31.255.254 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.0.2.50 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.0.1 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.0.100 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.1.10 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.1.11 configs/cisco/branch-fw-snmp.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 192.168.2.12 configs/cisco/branch-fw-snmp.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/cisco/dmz-fw2-backup.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/cisco/dmz-fw2-backup.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-campus-core.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-campus-core.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-fw-dmz-01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-branch-vpn-01.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-lab-test-fw.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-testing-config.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-testing-config.cfg
+ matched_configs+=("${config}")
+ break
+ for config in "${configs_listing[@]}"
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.0.1 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.1.2 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.0.2.3 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 10.10.10.10 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.0.5 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.16.1.6 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.18.1.20 configs/fortinet/fg-datacenter-east.cfg
+ for pattern in "${search_patterns[@]}"
+ grep -qF 172.31.255.254 configs/fortinet/fg-datacenter-east.cfg
+ matched_configs+=("${config}")
+ break
+ [[ 24 -gt 0 ]]
+ configs_listing=("${matched_configs[@]}")
+ [[ true == true ]]
+ message 'Matching IPs found in 24 files:'
+ [[ -n Matching IPs found in 24 files: ]]
+ local 'message=Matching IPs found in 24 files:'
+ echo -e 'Matching IPs found in 24 files:'
Matching IPs found in 24 files:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw5.cfg'
+ [[ -n   - configs/misc/fw5.cfg ]]
+ local 'message=  - configs/misc/fw5.cfg'
+ echo -e '  - configs/misc/fw5.cfg'
  - configs/misc/fw5.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw6.cfg'
+ [[ -n   - configs/misc/fw6.cfg ]]
+ local 'message=  - configs/misc/fw6.cfg'
+ echo -e '  - configs/misc/fw6.cfg'
  - configs/misc/fw6.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw3.cfg'
+ [[ -n   - configs/misc/fw3.cfg ]]
+ local 'message=  - configs/misc/fw3.cfg'
+ echo -e '  - configs/misc/fw3.cfg'
  - configs/misc/fw3.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw2.cfg'
+ [[ -n   - configs/misc/fw2.cfg ]]
+ local 'message=  - configs/misc/fw2.cfg'
+ echo -e '  - configs/misc/fw2.cfg'
  - configs/misc/fw2.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/misc/fw1.cfg'
+ [[ -n   - configs/misc/fw1.cfg ]]
+ local 'message=  - configs/misc/fw1.cfg'
+ echo -e '  - configs/misc/fw1.cfg'
  - configs/misc/fw1.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/access-sw1-west.cfg'
+ [[ -n   - configs/cisco/access-sw1-west.cfg ]]
+ local 'message=  - configs/cisco/access-sw1-west.cfg'
+ echo -e '  - configs/cisco/access-sw1-west.cfg'
  - configs/cisco/access-sw1-west.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/core-router-01.cfg'
+ [[ -n   - configs/cisco/core-router-01.cfg ]]
+ local 'message=  - configs/cisco/core-router-01.cfg'
+ echo -e '  - configs/cisco/core-router-01.cfg'
  - configs/cisco/core-router-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/core-fw-dmz-01.cfg'
+ [[ -n   - configs/cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - configs/cisco/core-fw-dmz-01.cfg'
+ echo -e '  - configs/cisco/core-fw-dmz-01.cfg'
  - configs/cisco/core-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/branch-isr-02.cfg'
+ [[ -n   - configs/cisco/branch-isr-02.cfg ]]
+ local 'message=  - configs/cisco/branch-isr-02.cfg'
+ echo -e '  - configs/cisco/branch-isr-02.cfg'
  - configs/cisco/branch-isr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/datacenter-fw-core.cfg'
+ [[ -n   - configs/cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - configs/cisco/datacenter-fw-core.cfg'
+ echo -e '  - configs/cisco/datacenter-fw-core.cfg'
  - configs/cisco/datacenter-fw-core.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/access-switch-07.cfg'
+ [[ -n   - configs/cisco/access-switch-07.cfg ]]
+ local 'message=  - configs/cisco/access-switch-07.cfg'
+ echo -e '  - configs/cisco/access-switch-07.cfg'
  - configs/cisco/access-switch-07.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/campus-sw-access01.cfg'
+ [[ -n   - configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=  - configs/cisco/campus-sw-access01.cfg'
+ echo -e '  - configs/cisco/campus-sw-access01.cfg'
  - configs/cisco/campus-sw-access01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/branch-fw-03.cfg'
+ [[ -n   - configs/cisco/branch-fw-03.cfg ]]
+ local 'message=  - configs/cisco/branch-fw-03.cfg'
+ echo -e '  - configs/cisco/branch-fw-03.cfg'
  - configs/cisco/branch-fw-03.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/hq-core-rtr-02.cfg'
+ [[ -n   - configs/cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - configs/cisco/hq-core-rtr-02.cfg'
+ echo -e '  - configs/cisco/hq-core-rtr-02.cfg'
  - configs/cisco/hq-core-rtr-02.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/perimeter-fw1.cfg'
+ [[ -n   - configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=  - configs/cisco/perimeter-fw1.cfg'
+ echo -e '  - configs/cisco/perimeter-fw1.cfg'
  - configs/cisco/perimeter-fw1.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/hq-core-rtr.cfg'
+ [[ -n   - configs/cisco/hq-core-rtr.cfg ]]
+ local 'message=  - configs/cisco/hq-core-rtr.cfg'
+ echo -e '  - configs/cisco/hq-core-rtr.cfg'
  - configs/cisco/hq-core-rtr.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/branch-fw-snmp.cfg'
+ [[ -n   - configs/cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - configs/cisco/branch-fw-snmp.cfg'
+ echo -e '  - configs/cisco/branch-fw-snmp.cfg'
  - configs/cisco/branch-fw-snmp.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - configs/cisco/dmz-fw2-backup.cfg'
  - configs/cisco/dmz-fw2-backup.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-campus-core.cfg'
+ [[ -n   - configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=  - configs/fortinet/fg-campus-core.cfg'
+ echo -e '  - configs/fortinet/fg-campus-core.cfg'
  - configs/fortinet/fg-campus-core.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - configs/fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - configs/fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - configs/fortinet/fg-fw-dmz-01.cfg'
  - configs/fortinet/fg-fw-dmz-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - configs/fortinet/fg-branch-vpn-01.cfg'
  - configs/fortinet/fg-branch-vpn-01.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - configs/fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - configs/fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - configs/fortinet/fg-lab-test-fw.cfg'
  - configs/fortinet/fg-lab-test-fw.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-testing-config.cfg'
+ [[ -n   - configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - configs/fortinet/fg-testing-config.cfg'
+ echo -e '  - configs/fortinet/fg-testing-config.cfg'
  - configs/fortinet/fg-testing-config.cfg
+ for item in "${matched_configs[@]}"
+ message '  - configs/fortinet/fg-datacenter-east.cfg'
+ [[ -n   - configs/fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - configs/fortinet/fg-datacenter-east.cfg'
+ echo -e '  - configs/fortinet/fg-datacenter-east.cfg'
  - configs/fortinet/fg-datacenter-east.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ 24 -eq 0 ]]
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw5.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw5.cfg
+ local config_file=configs/misc/fw5.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw5.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw5.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw5.cfg
+ target_output=.cache/resources/misc/fw5.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw5.cfg' '--output=.cache/resources/misc/fw5.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw5.cfg --output=.cache/resources/misc/fw5.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw5.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw5.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw5.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw5.cfg ]'
Configuration File [ .cache/resources/misc/fw5.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw5.cfg
     1	object-group network Hydra-Edge
     2	 description Remote site uplink
     3	 network-object host 192.168.2.12
     4	 network-object host 198.51.100.75
     5	
     6	object-group network RedRoom-Core
     7	 description Classified subnets
     8	 network-object host 10.0.0.1
     9	 network-object host 172.16.1.6
    10	
    11	object-group network RedRoom-Core
    12	 description Classified subnets
    13	 network-object host 10.0.0.1
    14	 network-object host 172.16.1.6
    15	
    16	object network Hydra-Link
    17	 host 198.51.100.75
    18	
    19	object network BlackWidow-Core
    20	 host 172.16.1.6
    21	
    22	object-group network RedRoom-Core
    23	 description Classified subnets
    24	 network-object host 10.0.0.1
    25	 network-object host 172.16.1.6
    26	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw6.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw6.cfg
+ local config_file=configs/misc/fw6.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw6.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw6.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw6.cfg
+ target_output=.cache/resources/misc/fw6.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw6.cfg' '--output=.cache/resources/misc/fw6.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw6.cfg --output=.cache/resources/misc/fw6.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw6.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw6.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw6.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw6.cfg ]'
Configuration File [ .cache/resources/misc/fw6.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw6.cfg
     1	object-group network Xmen-LAN
     2	 description Secure base subnets
     3	 network-object host 192.168.1.10
     4	 network-object host 10.0.1.2
     5	
     6	object-group network Mutant-WiFi
     7	 description Controlled guest devices
     8	 network-object host 10.10.10.10
     9	
    10	object-group network Sentinel-Edge
    11	 description WAN-facing systems
    12	 network-object host 203.0.113.25
    13	
    14	object network Xavier-Core
    15	 host 192.168.1.10
    16	
    17	object network Sentinel-NAT
    18	 host 203.0.113.25
    19	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw3.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw3.cfg
+ local config_file=configs/misc/fw3.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw3.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw3.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw3.cfg
+ target_output=.cache/resources/misc/fw3.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw3.cfg' '--output=.cache/resources/misc/fw3.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw3.cfg --output=.cache/resources/misc/fw3.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
Configuration File [ .cache/resources/misc/fw3.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
     1	object-group network Wakanda-Core
     2	 description National Core Routing Zone
     3	 network-object host 192.168.1.10
     4	 network-object host 10.0.2.3
     5	 network-object 10.0.0.0 255.255.255.0
     6	
     7	object-group network Panther-Edge
     8	 description Internet-facing proxy systems
     9	 network-object host 203.0.113.25
    10	 network-object host 172.16.0.5
    11	
    12	object-group network Shield-WiFi
    13	 description Shield-controlled wireless network
    14	 network-object host 10.10.10.10
    15	 network-object 192.168.100.0 255.255.255.0
    16	
    17	object-group network Shield-WiFi
    18	 description Shield-controlled wireless network
    19	 network-object host 10.10.10.10
    20	 network-object 192.168.100.0 255.255.255.0
    21	
    22	object network Panther-Gateway
    23	 host 10.0.2.3
    24	 description Secure outbound concentrator
    25	
    26	object network Edge-Terminal
    27	 host 172.16.0.5
    28	 description Internet firewall handoff
    29	
    30	object-group network Shield-WiFi
    31	 description Shield-controlled wireless network
    32	 network-object host 10.10.10.10
    33	 network-object 192.168.100.0 255.255.255.0
    34	
    35	object network Shield-WiFi-Alias
    36	 host 10.10.10.10
    37	 description Guest NAT
    38	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw2.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw2.cfg
+ local config_file=configs/misc/fw2.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw2.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw2.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw2.cfg
+ target_output=.cache/resources/misc/fw2.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw2.cfg' '--output=.cache/resources/misc/fw2.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw2.cfg --output=.cache/resources/misc/fw2.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw2.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw2.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw2.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw2.cfg ]'
Configuration File [ .cache/resources/misc/fw2.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw2.cfg
     1	object-group network Gotham-Internal
     2	 description Internal datacenter and backup LAN
     3	 network-object host 10.0.1.2
     4	 network-object host 192.168.1.11
     5	 network-object 192.168.1.0 255.255.255.0
     6	
     7	object-group network Batcave-Wireless
     8	 description Secure wireless endpoints
     9	 network-object host 172.16.1.6
    10	 network-object host 192.168.100.100
    11	
    12	object-group network Wayne-DMZ
    13	 description External public resources
    14	 network-object host 203.0.113.25
    15	 network-object host 198.51.100.75
    16	
    17	object network Wayne-Tech
    18	 host 10.0.1.2
    19	 description Application edge firewall
    20	
    21	object network Gotham-VPN
    22	 host 198.51.100.75
    23	 description Encrypted edge gateway
    24	
    25	object network Internet-Relay
    26	 host 203.0.113.25
    27	 description Unfiltered outbound NAT IP
    28	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/misc/fw1.cfg ]]
+ set +e
+ detect_vendor configs/misc/fw1.cfg
+ local config_file=configs/misc/fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/misc/fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/misc/fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=misc/fw1.cfg
+ target_output=.cache/resources/misc/fw1.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/misc/fw1.cfg' '--output=.cache/resources/misc/fw1.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/misc/fw1.cfg --output=.cache/resources/misc/fw1.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
Configuration File [ .cache/resources/misc/fw1.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
     1	object-group network Metropolis-Internal
     2	 description Core internal LAN for application clusters
     3	 network-object host 10.0.2.3
     4	 network-object 192.168.2.0 255.255.255.0
     5	 network-object host 192.168.2.12
     6	
     7	object-group network Krypton-Cloud
     8	 description Cloud-facing external nodes
     9	 network-object host 198.51.100.75
    10	 network-object host 203.0.113.25
    11	
    12	object-group network Fortress-Wireless
    13	 description Secure wireless access layer
    14	 network-object host 172.18.1.20
    15	 network-object host 192.168.1.10
    16	
    17	object network Kent-Server
    18	 host 10.0.2.3
    19	 description Internal mail & identity services
    20	
    21	object network Krypton-Gateway
    22	 host 203.0.113.25
    23	 description Secure NAT boundary for cloud access
    24	
    25	object network External-Failover
    26	 host 198.51.100.75
    27	 description Secondary outbound route for edge
    28	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-sw1-west.cfg ]]
+ set +e
+ detect_vendor configs/cisco/access-sw1-west.cfg
+ local config_file=configs/cisco/access-sw1-west.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/access-sw1-west.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/access-sw1-west.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/access-sw1-west.cfg
+ target_output=.cache/resources/cisco/access-sw1-west.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/access-sw1-west.cfg' '--output=.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/access-sw1-west.cfg --output=.cache/resources/cisco/access-sw1-west.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
     1	version 12.4
     2	hostname access-sw1-west
     3	
     4	interface Vlan1
     5	 ip address 192.168.0.1 255.255.255.0
     6	 description Management Interface
     7	
     8	interface Vlan100
     9	 ip address 192.168.0.100 255.255.255.0
    10	 description Guest VLAN Gateway
    11	
    12	object-group network MGMT-ACCESS
    13	 description Management objects
    14	 network-object host 192.168.0.1
    15	 network-object host 192.168.0.100
    16	 network-object host 10.10.10.10
    17	
    18	object-group network Mutant-WiFi
    19	 description Controlled guest devices
    20	 network-object host 10.10.10.10
    21	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/core-router-01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/core-router-01.cfg
+ local config_file=configs/cisco/core-router-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/core-router-01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/core-router-01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/core-router-01.cfg
+ target_output=.cache/resources/cisco/core-router-01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/core-router-01.cfg' '--output=.cache/resources/cisco/core-router-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/core-router-01.cfg --output=.cache/resources/cisco/core-router-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/core-router-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/core-router-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/core-router-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/core-router-01.cfg ]'
Configuration File [ .cache/resources/cisco/core-router-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/core-router-01.cfg
     1	version 15.7
     2	hostname core-router-01
     3	
     4	interface GigabitEthernet0/0
     5	 ip address 10.0.1.2 255.255.255.0
     6	 description Core uplink to WAN
     7	
     8	interface GigabitEthernet0/1
     9	 ip address 192.168.1.10 255.255.255.0
    10	 description LAN Segment A
    11	
    12	interface GigabitEthernet0/2
    13	 ip address 192.168.1.11 255.255.255.0
    14	 description LAN Segment B
    15	
    16	object-group network Gotham-Internal
    17	 description Internal datacenter and backup LAN
    18	 network-object host 10.0.1.2
    19	 network-object host 192.168.1.11
    20	 network-object 192.168.1.0 255.255.255.0
    21	
    22	object-group network Wakanda-Core
    23	 description National Core Routing Zone
    24	 network-object host 192.168.1.10
    25	 network-object host 10.0.2.3
    26	 network-object 10.0.0.0 255.255.255.0
    27	
    28	object-group network Xmen-LAN
    29	 description Secure base subnets
    30	 network-object host 192.168.1.10
    31	 network-object host 10.0.1.2
    32	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/core-fw-dmz-01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/core-fw-dmz-01.cfg
+ local config_file=configs/cisco/core-fw-dmz-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/core-fw-dmz-01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/core-fw-dmz-01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/core-fw-dmz-01.cfg
+ target_output=.cache/resources/cisco/core-fw-dmz-01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/core-fw-dmz-01.cfg' '--output=.cache/resources/cisco/core-fw-dmz-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/core-fw-dmz-01.cfg --output=.cache/resources/cisco/core-fw-dmz-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/core-fw-dmz-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/core-fw-dmz-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/core-fw-dmz-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/core-fw-dmz-01.cfg ]'
Configuration File [ .cache/resources/cisco/core-fw-dmz-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/core-fw-dmz-01.cfg
     1	ASA Version 9.16(2)
     2	hostname core-fw-dmz-01
     3	domain-name corp.dmz.local
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 security-level 0
     8	 ip address 203.0.113.25 255.255.255.0
     9	 description Public ISP Link
    10	
    11	interface GigabitEthernet0/1
    12	 nameif inside
    13	 security-level 100
    14	 ip address 10.0.1.2 255.255.255.0
    15	 description Internal Firewall LAN
    16	
    17	object network Wayne-Tech
    18	 host 10.0.1.2
    19	 description Application edge firewall
    20	
    21	object network Internet-Relay
    22	 host 203.0.113.25
    23	 description Unfiltered outbound NAT IP
    24	
    25	object-group network Wayne-DMZ
    26	 description External public resources
    27	 network-object host 203.0.113.25
    28	 network-object host 198.51.100.75
    29	
    30	object network Gotham-VPN
    31	 host 198.51.100.75
    32	 description Encrypted edge gateway
    33	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-isr-02.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-isr-02.cfg
+ local config_file=configs/cisco/branch-isr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-isr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-isr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/branch-isr-02.cfg
+ target_output=.cache/resources/cisco/branch-isr-02.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/branch-isr-02.cfg' '--output=.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/branch-isr-02.cfg --output=.cache/resources/cisco/branch-isr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
     1	version 16.9
     2	hostname branch-isr-02
     3	
     4	interface GigabitEthernet0/0/0
     5	 ip address 172.16.1.6 255.255.255.0
     6	 description ISP uplink
     7	
     8	interface GigabitEthernet0/0/1
     9	 ip address 192.168.2.12 255.255.255.0
    10	 description Workstation LAN
    11	
    12	interface GigabitEthernet0/0/2
    13	 ip address 10.0.2.3 255.255.255.0
    14	 description Dev VLAN
    15	
    16	object network BlackWidow-Core
    17	 host 172.16.1.6
    18	 description Branch router uplink NAT
    19	
    20	object network Hydra-Link
    21	 host 198.51.100.75
    22	 description Branch NAT egress
    23	
    24	object-group network Hydra-Edge
    25	 description Remote site uplink
    26	 network-object host 192.168.2.12
    27	 network-object host 198.51.100.75
    28	
    29	object network Panther-Gateway
    30	 host 10.0.2.3
    31	 description Secure outbound concentrator
    32	
    33	object-group network Lantern-DMZ
    34	 description Protected but public-facing zone
    35	 network-object host 172.18.1.20
    36	 network-object host 192.168.1.11
    37	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/datacenter-fw-core.cfg ]]
+ set +e
+ detect_vendor configs/cisco/datacenter-fw-core.cfg
+ local config_file=configs/cisco/datacenter-fw-core.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/datacenter-fw-core.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/datacenter-fw-core.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/datacenter-fw-core.cfg
+ target_output=.cache/resources/cisco/datacenter-fw-core.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/datacenter-fw-core.cfg' '--output=.cache/resources/cisco/datacenter-fw-core.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/datacenter-fw-core.cfg --output=.cache/resources/cisco/datacenter-fw-core.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/datacenter-fw-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/datacenter-fw-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/datacenter-fw-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/datacenter-fw-core.cfg ]'
Configuration File [ .cache/resources/cisco/datacenter-fw-core.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/datacenter-fw-core.cfg
     1	ASA Version 9.17(1)
     2	hostname datacenter-fw-core
     3	domain-name dc.example.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif dmz
     7	 ip address 192.0.2.50 255.255.255.0
     8	 security-level 50
     9	 description DMZ for public services
    10	
    11	interface GigabitEthernet0/1
    12	 nameif inside
    13	 ip address 172.31.255.254 255.255.255.0
    14	 security-level 100
    15	 description Internal Core Routing
    16	
    17	object-group network Justice-LAN
    18	 description Secure internal office
    19	 network-object host 172.31.255.254
    20	 network-object host 10.0.2.3
    21	
    22	object-group network Watchtower-DMZ
    23	 description Global secure relay
    24	 network-object host 192.0.2.50
    25	
    26	object network Watchtower-Core
    27	 host 192.0.2.50
    28	 description Public application NAT
    29	
    30	object network Titan-WLAN-Host
    31	 host 192.168.100.100
    32	 description Wireless NAT
    33	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/access-switch-07.cfg ]]
+ set +e
+ detect_vendor configs/cisco/access-switch-07.cfg
+ local config_file=configs/cisco/access-switch-07.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/access-switch-07.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/access-switch-07.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/access-switch-07.cfg
+ target_output=.cache/resources/cisco/access-switch-07.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/access-switch-07.cfg' '--output=.cache/resources/cisco/access-switch-07.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/access-switch-07.cfg --output=.cache/resources/cisco/access-switch-07.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-switch-07.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-switch-07.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-switch-07.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-switch-07.cfg ]'
Configuration File [ .cache/resources/cisco/access-switch-07.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-switch-07.cfg
     1	version 12.2
     2	hostname access-switch-07
     3	
     4	interface Vlan1
     5	 ip address 192.168.0.1 255.255.255.0
     6	 description Management Interface
     7	
     8	interface Vlan10
     9	 ip address 192.168.0.100 255.255.255.0
    10	 description Guest VLAN Gateway
    11	
    12	object-group network MGMT-ACCESS
    13	 description Management subnet objects
    14	 network-object host 192.168.0.1
    15	 network-object host 192.168.0.100
    16	 network-object host 10.99.99.1
    17	
    18	object-group network Titan-Wireless
    19	 description Young heroes WiFi
    20	 network-object host 192.168.100.100
    21	
    22	object-group network Mutant-WiFi
    23	 description Controlled guest devices
    24	 network-object host 10.10.10.10
    25	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/campus-sw-access01.cfg ]]
+ set +e
+ detect_vendor configs/cisco/campus-sw-access01.cfg
+ local config_file=configs/cisco/campus-sw-access01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/campus-sw-access01.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/campus-sw-access01.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/campus-sw-access01.cfg
+ target_output=.cache/resources/cisco/campus-sw-access01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/campus-sw-access01.cfg' '--output=.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/campus-sw-access01.cfg --output=.cache/resources/cisco/campus-sw-access01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
     1	version 12.2
     2	hostname campus-sw-access01
     3	
     4	interface Vlan1
     5	 ip address 192.168.0.1 255.255.255.0
     6	 description Switch Mgmt
     7	
     8	object-group network Floor-Networks
     9	 description End-user and service devices
    10	 network-object host 192.168.0.1
    11	 network-object host 192.168.0.100
    12	 network-object host 10.10.10.10
    13	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-fw-03.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-fw-03.cfg
+ local config_file=configs/cisco/branch-fw-03.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-fw-03.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-fw-03.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/branch-fw-03.cfg
+ target_output=.cache/resources/cisco/branch-fw-03.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/branch-fw-03.cfg' '--output=.cache/resources/cisco/branch-fw-03.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/branch-fw-03.cfg --output=.cache/resources/cisco/branch-fw-03.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-fw-03.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-fw-03.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-fw-03.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-fw-03.cfg ]'
Configuration File [ .cache/resources/cisco/branch-fw-03.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-fw-03.cfg
     1	ASA Version 9.9(2)
     2	hostname branch-fw-03
     3	domain-name remote.corp.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 ip address 198.51.100.75 255.255.255.0
     8	 security-level 0
     9	 description ISP Link
    10	
    11	interface GigabitEthernet0/1
    12	 nameif inside
    13	 ip address 192.168.2.12 255.255.255.0
    14	 security-level 100
    15	 description Office LAN
    16	
    17	object network Hydra-Link
    18	 host 198.51.100.75
    19	 description Public NAT IP
    20	
    21	object network Hydra-Core
    22	 host 192.168.2.12
    23	 description Local Application Server
    24	
    25	object-group network Hydra-Edge
    26	 description Remote site uplink
    27	 network-object host 192.168.2.12
    28	 network-object host 198.51.100.75
    29	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/hq-core-rtr-02.cfg ]]
+ set +e
+ detect_vendor configs/cisco/hq-core-rtr-02.cfg
+ local config_file=configs/cisco/hq-core-rtr-02.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/hq-core-rtr-02.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/hq-core-rtr-02.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/hq-core-rtr-02.cfg
+ target_output=.cache/resources/cisco/hq-core-rtr-02.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/hq-core-rtr-02.cfg' '--output=.cache/resources/cisco/hq-core-rtr-02.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/hq-core-rtr-02.cfg --output=.cache/resources/cisco/hq-core-rtr-02.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/hq-core-rtr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/hq-core-rtr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/hq-core-rtr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/hq-core-rtr-02.cfg ]'
Configuration File [ .cache/resources/cisco/hq-core-rtr-02.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/hq-core-rtr-02.cfg
     1	version 15.4
     2	hostname hq-core-rtr-02
     3	
     4	interface GigabitEthernet0/0
     5	 ip address 10.0.1.2 255.255.255.0
     6	 description Core uplink to WAN
     7	
     8	interface GigabitEthernet0/1
     9	 ip address 192.168.1.10 255.255.255.0
    10	 description Internal VLAN A
    11	
    12	object-group network Corps-Core
    13	 description Internal LAN segments
    14	 network-object host 10.0.1.2
    15	 network-object 192.168.1.0 255.255.255.0
    16	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/perimeter-fw1.cfg ]]
+ set +e
+ detect_vendor configs/cisco/perimeter-fw1.cfg
+ local config_file=configs/cisco/perimeter-fw1.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/perimeter-fw1.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/perimeter-fw1.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/perimeter-fw1.cfg
+ target_output=.cache/resources/cisco/perimeter-fw1.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/perimeter-fw1.cfg' '--output=.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/perimeter-fw1.cfg --output=.cache/resources/cisco/perimeter-fw1.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
     1	ASA Version 9.14(3)
     2	hostname perimeter-fw1
     3	domain-name edge.dc.example.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 security-level 0
     8	 ip address 203.0.113.25 255.255.255.0
     9	 description External Internet-facing Interface
    10	
    11	interface GigabitEthernet0/1
    12	 nameif inside
    13	 security-level 100
    14	 ip address 10.0.0.1 255.255.255.0
    15	 description Internal Network Interface
    16	
    17	object network NAT-Edge
    18	 host 203.0.113.25
    19	 description Internet-bound IP NAT
    20	
    21	object network Stark-Tower
    22	 host 10.0.0.1
    23	 description Core services gateway
    24	
    25	object-group network Avengers-DMZ
    26	 description Public access layer
    27	 network-object host 192.0.2.50
    28	 network-object host 203.0.113.25
    29	 network-object 192.168.2.0 255.255.255.0
    30	
    31	object-group network Panther-Edge
    32	 description Internet-facing proxy systems
    33	 network-object host 203.0.113.25
    34	 network-object host 172.16.0.5
    35	
    36	object network Magneto-Core
    37	 host 172.16.0.5
    38	 description WAN firewall entry point
    39	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/hq-core-rtr.cfg ]]
+ set +e
+ detect_vendor configs/cisco/hq-core-rtr.cfg
+ local config_file=configs/cisco/hq-core-rtr.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/hq-core-rtr.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/hq-core-rtr.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/hq-core-rtr.cfg
+ target_output=.cache/resources/cisco/hq-core-rtr.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/hq-core-rtr.cfg' '--output=.cache/resources/cisco/hq-core-rtr.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/hq-core-rtr.cfg --output=.cache/resources/cisco/hq-core-rtr.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/hq-core-rtr.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/hq-core-rtr.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/hq-core-rtr.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/hq-core-rtr.cfg ]'
Configuration File [ .cache/resources/cisco/hq-core-rtr.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/hq-core-rtr.cfg
     1	version 15.6
     2	hostname hq-core-rtr
     3	
     4	interface GigabitEthernet0/0
     5	 ip address 10.0.2.3 255.255.255.0
     6	 description Core uplink
     7	
     8	interface GigabitEthernet0/1
     9	 ip address 192.168.1.10 255.255.255.0
    10	 description Application LAN
    11	
    12	interface GigabitEthernet0/2
    13	 ip address 172.16.0.5 255.255.255.0
    14	 description DMZ Transfer
    15	
    16	object-group network Wakanda-Core
    17	 description National Core Routing Zone
    18	 network-object host 192.168.1.10
    19	 network-object host 10.0.2.3
    20	 network-object 10.0.0.0 255.255.255.0
    21	
    22	object-group network Panther-Edge
    23	 description Internet-facing proxy systems
    24	 network-object host 203.0.113.25
    25	 network-object host 172.16.0.5
    26	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/branch-fw-snmp.cfg ]]
+ set +e
+ detect_vendor configs/cisco/branch-fw-snmp.cfg
+ local config_file=configs/cisco/branch-fw-snmp.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/branch-fw-snmp.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/branch-fw-snmp.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/branch-fw-snmp.cfg
+ target_output=.cache/resources/cisco/branch-fw-snmp.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/branch-fw-snmp.cfg' '--output=.cache/resources/cisco/branch-fw-snmp.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/branch-fw-snmp.cfg --output=.cache/resources/cisco/branch-fw-snmp.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-fw-snmp.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-fw-snmp.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-fw-snmp.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-fw-snmp.cfg ]'
Configuration File [ .cache/resources/cisco/branch-fw-snmp.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-fw-snmp.cfg
     1	ASA Version 9.12(4)
     2	hostname branch-fw-snmp
     3	domain-name br1.office.example.com
     4	
     5	interface GigabitEthernet0/0
     6	 nameif outside
     7	 ip address 203.0.113.25 255.255.255.0
     8	
     9	interface GigabitEthernet0/1
    10	 nameif inside
    11	 ip address 192.168.2.12 255.255.255.0
    12	
    13	object network Hydra-Core
    14	 host 192.168.2.12
    15	 description Branch App Gateway
    16	
    17	object network Hydra-NAT
    18	 host 203.0.113.25
    19	 description Public NAT Gateway
    20	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/cisco/dmz-fw2-backup.cfg ]]
+ set +e
+ detect_vendor configs/cisco/dmz-fw2-backup.cfg
+ local config_file=configs/cisco/dmz-fw2-backup.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/cisco/dmz-fw2-backup.cfg
+ grep -qiE '\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b' configs/cisco/dmz-fw2-backup.cfg
+ return 2
+ local vendor_code=2
+ set -e
+ case "${vendor_code}" in
+ target_platform=cisco
+ [[ true == true ]]
+ message 'Parsing [ cisco ] configs (by: location): '
+ [[ -n Parsing [ cisco ] configs (by: location):  ]]
+ local 'message=Parsing [ cisco ] configs (by: location): '
+ echo -e 'Parsing [ cisco ] configs (by: location): '
Parsing [ cisco ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=cisco/dmz-fw2-backup.cfg
+ target_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/cisco/dmz-fw2-backup.cfg' '--output=.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/cisco/dmz-fw2-backup.cfg --output=.cache/resources/cisco/dmz-fw2-backup.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
     1	ASA Version 9.12(4)
     2	hostname dmz-fw2-backup
     3	domain-name global.dmz.example.net
     4	
     5	interface GigabitEthernet0/0
     6	 nameif guest
     7	 ip address 10.10.10.10 255.255.255.0
     8	 description Guest access interface
     9	
    10	interface GigabitEthernet0/1
    11	 nameif inside
    12	 ip address 192.168.100.100 255.255.255.0
    13	 description Inside LAN segment
    14	
    15	interface GigabitEthernet0/2
    16	 nameif outside
    17	 ip address 198.51.100.75 255.255.255.0
    18	 description Outbound Internet NAT interface
    19	
    20	object network Titan-WLAN-Host
    21	 host 192.168.100.100
    22	 description Backup inside NAT IP
    23	
    24	object network Shield-WiFi-Alias
    25	 host 10.10.10.10
    26	 description Guest NAT
    27	
    28	object network Sentinel-NAT
    29	 host 203.0.113.25
    30	 description Corporate NAT edge
    31	
    32	object-group network Sector-Wireless
    33	 description Staff WiFi clients
    34	 network-object host 192.168.100.100
    35	 network-object host 10.10.10.10
    36	
    37	object-group network Watchtower-DMZ
    38	 description Global secure relay
    39	 network-object host 192.0.2.50
    40	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-campus-core.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-campus-core.cfg
+ local config_file=configs/fortinet/fg-campus-core.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-campus-core.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-campus-core.cfg
+ target_output=.cache/resources/fortinet/fg-campus-core.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-campus-core.cfg' '--output=.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-campus-core.cfg --output=.cache/resources/fortinet/fg-campus-core.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
     1	#hostname="fg-campus-core"
     2	#model="FortiGate-200F"
     3	
     4	config system interface
     5	 edit "core"
     6	  set ip 10.10.10.10 255.255.255.0
     7	  set alias "Campus Core Transit"
     8	 next
     9	 edit "wifi"
    10	  set ip 192.168.100.100 255.255.255.0
    11	  set alias "Wireless VLAN"
    12	 next
    13	end
    14	
    15	config firewall address
    16	 edit "Shield-WiFi"
    17	  set subnet 10.10.10.10 255.255.255.255
    18	  set comment "Wireless AP Gateway"
    19	 next
    20	 edit "Titan-WLAN-Host"
    21	  set subnet 192.168.100.100 255.255.255.255
    22	  set comment "Guest WiFi node"
    23	 next
    24	end
    25	
    26	config firewall address
    27	 edit "Cap-HQ"
    28	  set subnet 192.168.1.11 255.255.255.255
    29	  set comment "Captain America’s secure endpoint"
    30	 next
    31	 edit "Vision-Link"
    32	  set subnet 192.168.2.12 255.255.255.255
    33	  set comment "Vision’s quantum channel"
    34	 next
    35	 edit "Hawkeye-Nest"
    36	  set subnet 172.16.1.6 255.255.255.255
    37	  set comment "Remote sniper node"
    38	 next
    39	 edit "Wanda-Field"
    40	  set subnet 192.168.100.100 255.255.255.255
    41	  set comment "Wanda’s chaos relay"
    42	 next
    43	end
    44	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-fw-dmz-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-fw-dmz-01.cfg
+ local config_file=configs/fortinet/fg-fw-dmz-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-fw-dmz-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-fw-dmz-01.cfg
+ target_output=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-fw-dmz-01.cfg' '--output=.cache/resources/fortinet/fg-fw-dmz-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-fw-dmz-01.cfg --output=.cache/resources/fortinet/fg-fw-dmz-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-fw-dmz-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-fw-dmz-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-fw-dmz-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-fw-dmz-01.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-fw-dmz-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-fw-dmz-01.cfg
     1	#config-version=FGT_100E-v7.0.10.F-build0485-230512
     2	#conf_file_ver=4.00
     3	#buildno=0485
     4	#serial=FGT100ETK21001234
     5	#hostname="fg-fw-dmz-01"
     6	#model="FortiGate-100E"
     7	#platform="FortiOS"
     8	#vd="root"
     9	
    10	config system interface
    11	 edit "wan1"
    12	  set ip 203.0.113.25 255.255.255.0
    13	  set alias "Internet uplink"
    14	  set allowaccess ping https ssh
    15	 next
    16	 edit "dmz"
    17	  set ip 192.0.2.50 255.255.255.0
    18	  set alias "Public-facing DMZ"
    19	 next
    20	 edit "internal"
    21	  set ip 10.0.0.1 255.255.255.0
    22	  set alias "Core LAN"
    23	 next
    24	end
    25	
    26	config firewall address
    27	 edit "Stark-Tower"
    28	  set subnet 10.0.0.1 255.255.255.255
    29	  set comment "Core services gateway"
    30	 next
    31	 edit "Public-Terminal"
    32	  set subnet 192.0.2.50 255.255.255.255
    33	  set comment "External untrusted terminal"
    34	 next
    35	 edit "NAT-Edge"
    36	  set subnet 203.0.113.25 255.255.255.255
    37	  set comment "Public NAT IP"
    38	 next
    39	end
    40	
    41	config firewall address
    42	 edit "Doctor-Strange-Gateway"
    43	  set subnet 172.31.255.254 255.255.255.255
    44	  set comment "Dimensional access gateway"
    45	 next
    46	 edit "Rocket-Toolbox"
    47	  set subnet 192.168.0.100 255.255.255.255
    48	  set comment "Utility node for gear access"
    49	 next
    50	 edit "Falcon-Uplink"
    51	  set subnet 198.51.100.75 255.255.255.255
    52	  set comment "Encrypted relay via flight pack"
    53	 next
    54	 edit "Ghost-Node"
    55	  set subnet 10.0.2.3 255.255.255.255
    56	  set comment "Phantom test node"
    57	 next
    58	end
    59	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-branch-vpn-01.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-branch-vpn-01.cfg
+ local config_file=configs/fortinet/fg-branch-vpn-01.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-branch-vpn-01.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ target_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-branch-vpn-01.cfg' '--output=.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-branch-vpn-01.cfg --output=.cache/resources/fortinet/fg-branch-vpn-01.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config system interface
     6	 edit "wan1"
     7	  set ip 198.51.100.75 255.255.255.0
     8	  set alias "Branch ISP"
     9	 next
    10	 edit "internal"
    11	  set ip 192.168.2.12 255.255.255.0
    12	  set alias "User LAN"
    13	 next
    14	end
    15	
    16	config firewall address
    17	 edit "Branch-Gateway"
    18	  set subnet 192.168.2.12 255.255.255.255
    19	  set comment "Primary LAN gateway"
    20	 next
    21	 edit "Branch-Public"
    22	  set subnet 198.51.100.75 255.255.255.255
    23	  set comment "Branch NAT"
    24	 next
    25	end
    26	
    27	config firewall address
    28	 edit "IronMan-HQ"
    29	  set subnet 10.0.0.1 255.255.255.255
    30	  set comment "Main node at Stark Tower"
    31	 next
    32	 edit "Spidey-Sandbox"
    33	  set subnet 10.0.1.2 255.255.255.255
    34	  set comment "QA node in Peter's Lab"
    35	 next
    36	 edit "Panther-Vault"
    37	  set subnet 192.168.1.10 255.255.255.255
    38	  set comment "Wakandan data store"
    39	 next
    40	 edit "Public-Test"
    41	  set subnet 203.0.113.25 255.255.255.255
    42	  set comment "Public NAT exposure for Red Skull trap"
    43	 next
    44	 edit "Guardians-Relay"
    45	  set subnet 192.168.0.1 255.255.255.255
    46	  set comment "Backup uplink for Milano crew"
    47	 next
    48	end
    49	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-lab-test-fw.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-lab-test-fw.cfg
+ local config_file=configs/fortinet/fg-lab-test-fw.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-lab-test-fw.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-lab-test-fw.cfg
+ target_output=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-lab-test-fw.cfg' '--output=.cache/resources/fortinet/fg-lab-test-fw.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-lab-test-fw.cfg --output=.cache/resources/fortinet/fg-lab-test-fw.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-lab-test-fw.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-lab-test-fw.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-lab-test-fw.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-lab-test-fw.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-lab-test-fw.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-lab-test-fw.cfg
     1	#hostname="fg-lab-test-fw"
     2	#model="FortiGate-40F"
     3	
     4	config system interface
     5	 edit "lab"
     6	  set ip 10.0.2.3 255.255.255.0
     7	 next
     8	end
     9	
    10	config firewall address
    11	 edit "Phantom-Node"
    12	  set subnet 10.0.2.3 255.255.255.255
    13	  set comment "Lab test VM"
    14	 next
    15	end
    16	
    17	config system interface
    18	 edit "wan1"
    19	  set ip 198.51.100.75 255.255.255.0
    20	  set alias "Branch ISP"
    21	 next
    22	 edit "internal"
    23	  set ip 192.168.2.12 255.255.255.0
    24	  set alias "User LAN"
    25	 next
    26	end
    27	
    28	config firewall address
    29	 edit "Branch-Gateway"
    30	  set subnet 192.168.2.12 255.255.255.255
    31	  set comment "Primary LAN gateway"
    32	 next
    33	 edit "Branch-Public"
    34	  set subnet 198.51.100.75 255.255.255.255
    35	  set comment "Branch NAT"
    36	 next
    37	end
    38	
    39	config firewall address
    40	 edit "IronMan-HQ"
    41	  set subnet 10.0.0.1 255.255.255.255
    42	  set comment "Main node at Stark Tower"
    43	 next
    44	 edit "Spidey-Sandbox"
    45	  set subnet 10.0.1.2 255.255.255.255
    46	  set comment "QA node in Peter's Lab"
    47	 next
    48	 edit "Panther-Vault"
    49	  set subnet 192.168.1.10 255.255.255.255
    50	  set comment "Wakandan data store"
    51	 next
    52	 edit "Public-Test"
    53	  set subnet 203.0.113.25 255.255.255.255
    54	  set comment "Public NAT exposure for Red Skull trap"
    55	 next
    56	 edit "Guardians-Relay"
    57	  set subnet 192.168.0.1 255.255.255.255
    58	  set comment "Backup uplink for Milano crew"
    59	 next
    60	end
    61	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-testing-config.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-testing-config.cfg
+ local config_file=configs/fortinet/fg-testing-config.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-testing-config.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-testing-config.cfg
+ target_output=.cache/resources/fortinet/fg-testing-config.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-testing-config.cfg' '--output=.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-testing-config.cfg --output=.cache/resources/fortinet/fg-testing-config.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
     1	#hostname="fg-branch-vpn-01"
     2	#model="FortiGate-60F"
     3	#config-version=FGT_60F-v7.2.5.F-build1517-230421
     4	
     5	config firewall policy
     6	 edit 13
     7	  set name "Remote NAT"
     8	  set srcintf "dmz"
     9	  set dstintf "wan1"
    10	  set srcaddr "10.10.10.10"
    11	  set dstaddr "203.0.113.10"
    12	  set action accept
    13	  set logtraffic all
    14	 next
    15	end
    16	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target_config in "${configs_listing[@]}"
+ [[ ! -f configs/fortinet/fg-datacenter-east.cfg ]]
+ set +e
+ detect_vendor configs/fortinet/fg-datacenter-east.cfg
+ local config_file=configs/fortinet/fg-datacenter-east.cfg
+ local 'fortinet_pattern=fortinet|fortigate'
+ local 'cisco_pattern=\basa\b|cisco ios|cisco adaptive|^interface\b|^object\b'
+ grep -qiE 'fortinet|fortigate' configs/fortinet/fg-datacenter-east.cfg
+ return 1
+ local vendor_code=1
+ set -e
+ case "${vendor_code}" in
+ target_platform=fortinet
+ [[ true == true ]]
+ message 'Parsing [ fortinet ] configs (by: location): '
+ [[ -n Parsing [ fortinet ] configs (by: location):  ]]
+ local 'message=Parsing [ fortinet ] configs (by: location): '
+ echo -e 'Parsing [ fortinet ] configs (by: location): '
Parsing [ fortinet ] configs (by: location): 
+ [[ -n .cache/resources ]]
+ base_output=.cache/resources
+ rel_path=fortinet/fg-datacenter-east.cfg
+ target_output=.cache/resources/fortinet/fg-datacenter-east.cfg
+ execute=('./scripts/extract-configs.shell' '--ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '--config=configs/fortinet/fg-datacenter-east.cfg' '--output=.cache/resources/fortinet/fg-datacenter-east.cfg')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--verbose)
++ which bash
+ /usr/local/bin/bash ./scripts/extract-configs.shell --ips-list=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 --config=configs/fortinet/fg-datacenter-east.cfg --output=.cache/resources/fortinet/fg-datacenter-east.cfg --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-datacenter-east.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-datacenter-east.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-datacenter-east.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-datacenter-east.cfg ]'
Configuration File [ .cache/resources/fortinet/fg-datacenter-east.cfg ]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-datacenter-east.cfg
     1	#hostname="fg-dc-east"
     2	#model="FortiGate-500E"
     3	
     4	config system interface
     5	 edit "inside"
     6	  set ip 192.168.1.10 255.255.255.0
     7	  set alias "Prod network"
     8	 next
     9	 edit "backup"
    10	  set ip 172.31.255.254 255.255.255.0
    11	  set alias "Offline DR segment"
    12	 next
    13	end
    14	
    15	config firewall address
    16	 edit "Xavier-Core"
    17	  set subnet 192.168.1.10 255.255.255.255
    18	  set comment "Production core host"
    19	 next
    20	 edit "Justice-LAN"
    21	  set subnet 172.31.255.254 255.255.255.255
    22	  set comment "Backup services router"
    23	 next
    24	end
    25	
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ tree .cache/resources
.cache/resources
|-- cisco
|   |-- access-sw1-west.cfg
|   |-- access-switch-07.cfg
|   |-- branch-fw-03.cfg
|   |-- branch-fw-snmp.cfg
|   |-- branch-isr-02.cfg
|   |-- campus-sw-access01.cfg
|   |-- core-fw-dmz-01.cfg
|   |-- core-router-01.cfg
|   |-- datacenter-fw-core.cfg
|   |-- dmz-fw2-backup.cfg
|   |-- hq-core-rtr-02.cfg
|   |-- hq-core-rtr.cfg
|   `-- perimeter-fw1.cfg
|-- fortinet
|   |-- fg-branch-vpn-01.cfg
|   |-- fg-campus-core.cfg
|   |-- fg-datacenter-east.cfg
|   |-- fg-fw-dmz-01.cfg
|   |-- fg-lab-test-fw.cfg
|   `-- fg-testing-config.cfg
`-- misc
    |-- fw1.cfg
    |-- fw2.cfg
    |-- fw3.cfg
    |-- fw5.cfg
    `-- fw6.cfg

4 directories, 24 files
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxJtasgjfl ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxJtasgjfl
+ export configs_dirpath=.cache/resources
+ configs_dirpath=.cache/resources
+ [[ ! -d .cache/resources ]]
+ mapfile -t configs_list_cache
++ find .cache/resources -type f
++ sort
+ [[ ! -f .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ ! -s .cache/resources/cisco/access-sw1-west.cfg ]]
+ message 'Extracted - Configurations List Cache:'
+ [[ -n Extracted - Configurations List Cache: ]]
+ local 'message=Extracted - Configurations List Cache:'
+ echo -e 'Extracted - Configurations List Cache:'
Extracted - Configurations List Cache:
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n   - .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=  - .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '  - .cache/resources/cisco/access-sw1-west.cfg'
  - .cache/resources/cisco/access-sw1-west.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/access-switch-07.cfg'
+ [[ -n   - .cache/resources/cisco/access-switch-07.cfg ]]
+ local 'message=  - .cache/resources/cisco/access-switch-07.cfg'
+ echo -e '  - .cache/resources/cisco/access-switch-07.cfg'
  - .cache/resources/cisco/access-switch-07.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/branch-fw-03.cfg'
+ [[ -n   - .cache/resources/cisco/branch-fw-03.cfg ]]
+ local 'message=  - .cache/resources/cisco/branch-fw-03.cfg'
+ echo -e '  - .cache/resources/cisco/branch-fw-03.cfg'
  - .cache/resources/cisco/branch-fw-03.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/branch-fw-snmp.cfg'
+ [[ -n   - .cache/resources/cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - .cache/resources/cisco/branch-fw-snmp.cfg'
+ echo -e '  - .cache/resources/cisco/branch-fw-snmp.cfg'
  - .cache/resources/cisco/branch-fw-snmp.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n   - .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=  - .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '  - .cache/resources/cisco/branch-isr-02.cfg'
  - .cache/resources/cisco/branch-isr-02.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n   - .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=  - .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '  - .cache/resources/cisco/campus-sw-access01.cfg'
  - .cache/resources/cisco/campus-sw-access01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/core-fw-dmz-01.cfg'
+ [[ -n   - .cache/resources/cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - .cache/resources/cisco/core-fw-dmz-01.cfg'
+ echo -e '  - .cache/resources/cisco/core-fw-dmz-01.cfg'
  - .cache/resources/cisco/core-fw-dmz-01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/core-router-01.cfg'
+ [[ -n   - .cache/resources/cisco/core-router-01.cfg ]]
+ local 'message=  - .cache/resources/cisco/core-router-01.cfg'
+ echo -e '  - .cache/resources/cisco/core-router-01.cfg'
  - .cache/resources/cisco/core-router-01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/datacenter-fw-core.cfg'
+ [[ -n   - .cache/resources/cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - .cache/resources/cisco/datacenter-fw-core.cfg'
+ echo -e '  - .cache/resources/cisco/datacenter-fw-core.cfg'
  - .cache/resources/cisco/datacenter-fw-core.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n   - .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '  - .cache/resources/cisco/dmz-fw2-backup.cfg'
  - .cache/resources/cisco/dmz-fw2-backup.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/hq-core-rtr-02.cfg'
+ [[ -n   - .cache/resources/cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - .cache/resources/cisco/hq-core-rtr-02.cfg'
+ echo -e '  - .cache/resources/cisco/hq-core-rtr-02.cfg'
  - .cache/resources/cisco/hq-core-rtr-02.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/hq-core-rtr.cfg'
+ [[ -n   - .cache/resources/cisco/hq-core-rtr.cfg ]]
+ local 'message=  - .cache/resources/cisco/hq-core-rtr.cfg'
+ echo -e '  - .cache/resources/cisco/hq-core-rtr.cfg'
  - .cache/resources/cisco/hq-core-rtr.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n   - .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=  - .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '  - .cache/resources/cisco/perimeter-fw1.cfg'
  - .cache/resources/cisco/perimeter-fw1.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  - .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-campus-core.cfg'
  - .cache/resources/fortinet/fg-campus-core.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-datacenter-east.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-datacenter-east.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-datacenter-east.cfg'
  - .cache/resources/fortinet/fg-datacenter-east.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-fw-dmz-01.cfg'
  - .cache/resources/fortinet/fg-fw-dmz-01.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-lab-test-fw.cfg'
  - .cache/resources/fortinet/fg-lab-test-fw.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n   - .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=  - .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '  - .cache/resources/fortinet/fg-testing-config.cfg'
  - .cache/resources/fortinet/fg-testing-config.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw1.cfg'
+ [[ -n   - .cache/resources/misc/fw1.cfg ]]
+ local 'message=  - .cache/resources/misc/fw1.cfg'
+ echo -e '  - .cache/resources/misc/fw1.cfg'
  - .cache/resources/misc/fw1.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw2.cfg'
+ [[ -n   - .cache/resources/misc/fw2.cfg ]]
+ local 'message=  - .cache/resources/misc/fw2.cfg'
+ echo -e '  - .cache/resources/misc/fw2.cfg'
  - .cache/resources/misc/fw2.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw3.cfg'
+ [[ -n   - .cache/resources/misc/fw3.cfg ]]
+ local 'message=  - .cache/resources/misc/fw3.cfg'
+ echo -e '  - .cache/resources/misc/fw3.cfg'
  - .cache/resources/misc/fw3.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw5.cfg'
+ [[ -n   - .cache/resources/misc/fw5.cfg ]]
+ local 'message=  - .cache/resources/misc/fw5.cfg'
+ echo -e '  - .cache/resources/misc/fw5.cfg'
  - .cache/resources/misc/fw5.cfg
+ for config in "${configs_list_cache[@]}"
+ message '  - .cache/resources/misc/fw6.cfg'
+ [[ -n   - .cache/resources/misc/fw6.cfg ]]
+ local 'message=  - .cache/resources/misc/fw6.cfg'
+ echo -e '  - .cache/resources/misc/fw6.cfg'
  - .cache/resources/misc/fw6.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ip_batch_size=10
+ total_ips=17
+ (( ip_offset=0 ))
+ (( ip_offset<total_ips ))
+ superset_index=1
+ superset_total=2
+ range_start_ip=10.0.0.1
+ range_end_ip=192.168.0.1
+ percentage_done=50
+ local 'processing=1 → 10'
+ local 'completed=1/2 (50%) → 17'
+ message 'Processing Addresses: [ 1 → 10 ]'
+ [[ -n Processing Addresses: [ 1 → 10 ] ]]
+ local 'message=Processing Addresses: [ 1 → 10 ]'
+ echo -e 'Processing Addresses: [ 1 → 10 ]'
+ message 'Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ [[ -n Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ] ]]
+ local 'message=Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ echo -e 'Processing IPs Range: [ 10.0.0.1 → 192.168.0.1 ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Progress / Completed: 1/2 (50%) → 17 IPs'
+ [[ -n Progress / Completed: 1/2 (50%) → 17 IPs ]]
+ local 'message=Progress / Completed: 1/2 (50%) → 17 IPs'
+ echo -e 'Progress / Completed: 1/2 (50%) → 17 IPs'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ mapfile -t site_folders
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
++ sort -u
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ message 'Batch size: 3'
+ [[ -n Batch size: 3 ]]
+ local 'message=Batch size: 3'
+ echo -e 'Batch size: 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local outer_index=0
+ local outer_batches=3
+ for site in "${site_folders[@]}"
+ outer_index=1
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /cisco/
+ local total_files=13
+ local inner_batches=5
+ [[ true == true ]]
+ message 'Location Name:  cisco'
+ [[ -n Location Name:  cisco ]]
+ local 'message=Location Name:  cisco'
+ echo -e 'Location Name:  cisco'
+ message 'Location Index: 1/3'
+ [[ -n Location Index: 1/3 ]]
+ local 'message=Location Index: 1/3'
+ echo -e 'Location Index: 1/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  13'
+ [[ -n Total Configs:  13 ]]
+ local 'message=Total Configs:  13'
+ echo -e 'Total Configs:  13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-switch-07.cfg
++ local full_path=.cache/resources/cisco/access-switch-07.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-switch-07.cfg
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-03.cfg
++ local full_path=.cache/resources/cisco/branch-fw-03.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-03.cfg
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-snmp.cfg
++ local full_path=.cache/resources/cisco/branch-fw-snmp.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-snmp.cfg
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/core-fw-dmz-01.cfg
++ local full_path=.cache/resources/cisco/core-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/core-router-01.cfg
++ local full_path=.cache/resources/cisco/core-router-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-router-01.cfg
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/datacenter-fw-core.cfg
++ local full_path=.cache/resources/cisco/datacenter-fw-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/datacenter-fw-core.cfg
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr-02.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr.cfg
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ find targets -maxdepth 1 -type f -name '*.json' -delete
+ compgen -G 'targets/*.json'
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 13 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315442357091000 24208
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315442-25165
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315442-25165.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/5'
+ [[ -n Batch Index:    1/5 ]]
+ local 'message=Batch Index:    1/5'
+ echo -e 'Batch Index:    1/5'
+ message 'Batch Suffix:   1748315442-25165'
+ [[ -n Batch Suffix:   1748315442-25165 ]]
+ local 'message=Batch Suffix:   1748315442-25165'
+ echo -e 'Batch Suffix:   1748315442-25165'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315442-25165.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ local base=configs--MTc0ODMxNTQ0-1748315442-25165.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315442-25165.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315442-25165.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315442-25165.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-switch-07.cfg
++ local full_path=.cache/resources/cisco/access-switch-07.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-switch-07.cfg
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-03.cfg
++ local full_path=.cache/resources/cisco/branch-fw-03.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-03.cfg
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/access-switch-07.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/access-switch-07.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ sort -u
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.1.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.1
+ tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.0.1
+ touch targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ job_pid=36538
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
+ generate_configslist 192.168.0.1 targets/192.168.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.0.1
+ local target_file=targets/192.168.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ local tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
++ sed -E 's|^.cache/resources/||'
++ grep -lE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/10.10.10.10
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ config_lines='      21'
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
++ wc -l
+ job_pid=36552
++ tr -d ' '
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (2):'
+ [[ -n Matched IPs to [cisco] configs (2): ]]
+ local 'message=Matched IPs to [cisco] configs (2):'
+ echo -e 'Matched IPs to [cisco] configs (2):'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315442-25165.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg
++ sed 's|.cache/resources/cisco/||g'
+ match_count=2
++ tr : ' : '
+ site=cisco
+ device=access-sw1-west.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
+ config_cleaned='access-sw1-west.cfg access-switch-07.cfg'
+ printf '%-6s | %-15s => %s\n' 36552 10.10.10.10 'access-sw1-west.cfg access-switch-07.cfg'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.1
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg
++ wc -l
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ config_lines='      21'
+ config_cleaned='access-sw1-west.cfg access-switch-07.cfg'
+ printf '%-6s | %-15s => %s\n' 36538 192.168.0.1 'access-sw1-west.cfg access-switch-07.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36538
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36552
+ valid_targets_jobs_pid+=("$pid")
+ config_json='[
  {
    "config": {
      "site": "cisco",
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ wc -l
++ tr -d ' '
++ wc -l
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
+ config_lines='      25'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/access-switch-07.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=cisco
+ device=access-switch-07.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      25' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ wc -l
+ config_lines='      25'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/access-switch-07.cfg
++ wc -l
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
+ match_count=1
+ site=cisco
+ device=access-switch-07.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      25' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 21,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 25,
      "count": 2
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
+ [[ -n targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json targets/192.168.0.1.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 21,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 25,
      "count": 1
    }
  ]
}'
+ jq -r
+ mv -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/192.168.0.1.json'
+ [[ -n Generated Config-File: targets/192.168.0.1.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.1.json'
+ echo -e 'Generated Config-File: targets/192.168.0.1.json'
+ return 0
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json targets/10.10.10.10.json
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36538
+ ip_address=192.168.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 36552
+ ip_address=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 15 -gt 0 ]]
+ message 'Unmapped IPs (count): 15'
+ [[ -n Unmapped IPs (count): 15 ]]
+ local 'message=Unmapped IPs (count): 15'
+ echo -e 'Unmapped IPs (count): 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=2
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=36606
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 192.168.0.1 1
+ local ip_addr=192.168.0.1
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=36609
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.1' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ message 'Background Jobs -> Managed Configs:'
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ -n Background Jobs -> Managed Configs: ]]
+ [[ true == true ]]
+ execute+=(--debug)
+ local 'message=Background Jobs -> Managed Configs:'
+ [[ true == true ]]
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (2)'
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 10.10.10.10 2
+ [[ -n PID   | IP Address (2) ]]
+ local 'message=PID   | IP Address (2)'
+ echo -e 'PID   | IP Address (2)'
+ local ip_addr=10.10.10.10
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local padded_index=2
+ local message=-------------------------
+ echo -e -------------------------
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36606 192.168.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 36609 10.10.10.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36609
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/192.168.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36609
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36609
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36609
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36609
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 36606
+ ip=192.168.0.1
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 13 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315443343391000 10116
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315443-20098
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315443-20098.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ printf '%s\n' .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ range_first=4
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/5'
+ [[ -n Batch Index:    2/5 ]]
+ local 'message=Batch Index:    2/5'
+ echo -e 'Batch Index:    2/5'
+ message 'Batch Suffix:   1748315443-20098'
+ [[ -n Batch Suffix:   1748315443-20098 ]]
+ local 'message=Batch Suffix:   1748315443-20098'
+ echo -e 'Batch Suffix:   1748315443-20098'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315443-20098.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ local base=configs--MTc0ODMxNTQ0-1748315443-20098.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315443-20098.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315443-20098.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315443-20098.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   4 -> 6'
+ [[ -n Batch Ranges:   4 -> 6 ]]
+ local 'message=Batch Ranges:   4 -> 6'
+ echo -e 'Batch Ranges:   4 -> 6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-snmp.cfg
++ local full_path=.cache/resources/cisco/branch-fw-snmp.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-snmp.cfg
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/campus-sw-access01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ :.cache/resources/cisco/campus-sw-access01.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/campus-sw-access01.cfg
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.1.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.1
+ tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.0.1
+ touch targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ job_pid=37074
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
+ generate_configslist 192.168.0.1 targets/192.168.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.0.1
+ local target_file=targets/192.168.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ local tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ local matched_files=.cache/resources/cisco/campus-sw-access01.cfg
+ site_name=cisco
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ target_dirpath=targets/10.10.10.10
+ IFS=
+ read -r config_file
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/10.10.10.10
+ config_file=cisco/campus-sw-access01.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ config_lines='      13'
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
++ tr -d ' '
+ job_pid=37088
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (2):'
+ [[ -n Matched IPs to [cisco] configs (2): ]]
+ local 'message=Matched IPs to [cisco] configs (2):'
+ echo -e 'Matched IPs to [cisco] configs (2):'
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ local ip_addr=10.10.10.10
+ echo -e -------------------------------------
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315443-20098.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.1
+ config_raw=.cache/resources/cisco/campus-sw-access01.cfg
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
+ match_count=2
+ site=cisco
+ device=campus-sw-access01.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      13' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_cleaned=campus-sw-access01.cfg
+ config_file=cisco/campus-sw-access01.cfg
+ printf '%-6s | %-15s => %s\n' 37074 192.168.0.1 campus-sw-access01.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=.cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ config_lines='      13'
+ config_cleaned=campus-sw-access01.cfg
+ config_json='[
  {
    "config": {
+ printf '%-6s | %-15s => %s\n' 37088 10.10.10.10 campus-sw-access01.cfg
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 2
  }
]'
+ newline
+ IFS=
+ read -r config_file
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37074
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37088
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 2
  }
]'
++ jq '{ configs: . }'
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      13' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 13,
      "count": 2
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
+ [[ -n targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json targets/192.168.0.1.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 13,
      "count": 1
    }
  ]
}'
+ jq -r
+ mv -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.0.1/192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/192.168.0.1.json'
+ [[ -n Generated Config-File: targets/192.168.0.1.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.1.json'
+ echo -e 'Generated Config-File: targets/192.168.0.1.json'
+ return 0
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json targets/10.10.10.10.json
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37074
+ ip_address=192.168.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37088
+ ip_address=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 15 -gt 0 ]]
+ message 'Unmapped IPs (count): 15'
+ [[ -n Unmapped IPs (count): 15 ]]
+ local 'message=Unmapped IPs (count): 15'
+ echo -e 'Unmapped IPs (count): 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=2
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=37124
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 192.168.0.1 1
+ local ip_addr=192.168.0.1
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=37127
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.1' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ ((  ip_index < total_ips  ))
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ message 'Background Jobs -> Managed Configs:'
+ [[ true == true ]]
+ [[ -n Background Jobs -> Managed Configs: ]]
+ mkdir -p .logs/jobs .logs/errors
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (2)'
+ [[ -n PID   | IP Address (2) ]]
+ parse_configs 10.10.10.10 2
+ local 'message=PID   | IP Address (2)'
+ local ip_addr=10.10.10.10
+ echo -e 'PID   | IP Address (2)'
+ local padded_index=2
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 37127 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 37124 192.168.0.1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37124
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37127
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=10.10.10.10' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/192.168.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=10.10.10.10 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37124
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37127
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37124
+ ip=192.168.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 37127
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 13 ]]
+ inner_index=3
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315444046692000 13067
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315444-25425
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315444-25425.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ printf '%s\n' .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg
+ range_first=7
+ range_last=9
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    3/5'
+ [[ -n Batch Index:    3/5 ]]
+ local 'message=Batch Index:    3/5'
+ echo -e 'Batch Index:    3/5'
+ message 'Batch Suffix:   1748315444-25425'
+ [[ -n Batch Suffix:   1748315444-25425 ]]
+ local 'message=Batch Suffix:   1748315444-25425'
+ echo -e 'Batch Suffix:   1748315444-25425'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315444-25425.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ local base=configs--MTc0ODMxNTQ0-1748315444-25425.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315444-25425.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315444-25425.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315444-25425.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   7 -> 9'
+ [[ -n Batch Ranges:   7 -> 9 ]]
+ local 'message=Batch Ranges:   7 -> 9'
+ echo -e 'Batch Ranges:   7 -> 9'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/core-fw-dmz-01.cfg
++ local full_path=.cache/resources/cisco/core-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/core-router-01.cfg
++ local full_path=.cache/resources/cisco/core-router-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-router-01.cfg
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/datacenter-fw-core.cfg
++ local full_path=.cache/resources/cisco/datacenter-fw-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/datacenter-fw-core.cfg
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-25425.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' ip address 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 172.31.255.254'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (0):'
+ [[ -n Matched IPs to [cisco] configs (0): ]]
+ local 'message=Matched IPs to [cisco] configs (0):'
+ echo -e 'Matched IPs to [cisco] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=9
+ [[ 9 -lt 13 ]]
+ inner_index=4
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315444191124000 27383
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315444-3633
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315444-3633.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ printf '%s\n' .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg
+ range_first=10
+ range_last=12
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    4/5'
+ [[ -n Batch Index:    4/5 ]]
+ local 'message=Batch Index:    4/5'
+ echo -e 'Batch Index:    4/5'
+ message 'Batch Suffix:   1748315444-3633'
+ [[ -n Batch Suffix:   1748315444-3633 ]]
+ local 'message=Batch Suffix:   1748315444-3633'
+ echo -e 'Batch Suffix:   1748315444-3633'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315444-3633.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ local base=configs--MTc0ODMxNTQ0-1748315444-3633.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315444-3633.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315444-3633.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315444-3633.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   10 -> 12'
+ [[ -n Batch Ranges:   10 -> 12 ]]
+ local 'message=Batch Ranges:   10 -> 12'
+ echo -e 'Batch Ranges:   10 -> 12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr-02.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr.cfg
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-3633.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (0):'
+ [[ -n Matched IPs to [cisco] configs (0): ]]
+ local 'message=Matched IPs to [cisco] configs (0):'
+ echo -e 'Matched IPs to [cisco] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=12
+ [[ 12 -lt 13 ]]
+ inner_index=5
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315444320352000 14274
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315444-4618
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315444-4618.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ printf '%s\n' .cache/resources/cisco/perimeter-fw1.cfg
+ range_first=13
+ range_last=13
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    5/5'
+ [[ -n Batch Index:    5/5 ]]
+ local 'message=Batch Index:    5/5'
+ echo -e 'Batch Index:    5/5'
+ message 'Batch Suffix:   1748315444-4618'
+ [[ -n Batch Suffix:   1748315444-4618 ]]
+ local 'message=Batch Suffix:   1748315444-4618'
+ echo -e 'Batch Suffix:   1748315444-4618'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315444-4618.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ local base=configs--MTc0ODMxNTQ0-1748315444-4618.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315444-4618.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315444-4618.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315444-4618.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     1'
+ [[ -n Batch Size:     1 ]]
+ local 'message=Batch Size:     1'
+ echo -e 'Batch Size:     1'
+ message 'Batch Ranges:   13 -> 13'
+ [[ -n Batch Ranges:   13 -> 13 ]]
+ local 'message=Batch Ranges:   13 -> 13'
+ echo -e 'Batch Ranges:   13 -> 13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-4618.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (0):'
+ [[ -n Matched IPs to [cisco] configs (0): ]]
+ local 'message=Matched IPs to [cisco] configs (0):'
+ echo -e 'Matched IPs to [cisco] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=15
+ [[ 15 -lt 13 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YIOMfhSb8z
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YIOMfhSb8z
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YIOMfhSb8z
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.10.10.10//10.10.10.10--cisco--MTc0ODMxNTQ0.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.1/
+ ip=192.168.0.1
+ final_file=.cache/targets/192.168.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.1//192.168.0.1--cisco--MTc0ODMxNTQ0.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=2
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /fortinet/
+ local total_files=6
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  fortinet'
+ [[ -n Location Name:  fortinet ]]
+ local 'message=Location Name:  fortinet'
+ echo -e 'Location Name:  fortinet'
+ message 'Location Index: 2/3'
+ [[ -n Location Index: 2/3 ]]
+ local 'message=Location Index: 2/3'
+ echo -e 'Location Index: 2/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  6'
+ [[ -n Total Configs:  6 ]]
+ local 'message=Total Configs:  6'
+ echo -e 'Total Configs:  6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-datacenter-east.cfg
++ local full_path=.cache/resources/fortinet/fg-datacenter-east.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local full_path=.cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-lab-test-fw.cfg
++ local full_path=.cache/resources/fortinet/fg-lab-test-fw.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 6 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315444541661000 1805
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315444-26013
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315444-26013.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ printf '%s\n' .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748315444-26013'
+ [[ -n Batch Suffix:   1748315444-26013 ]]
+ local 'message=Batch Suffix:   1748315444-26013'
+ echo -e 'Batch Suffix:   1748315444-26013'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315444-26013.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ local base=configs--MTc0ODMxNTQ0-1748315444-26013.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315444-26013.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315444-26013.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315444-26013.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-datacenter-east.cfg
++ local full_path=.cache/resources/fortinet/fg-datacenter-east.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-26013.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 6 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315444738085000 31892
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315444-27076
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315444-27076.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ printf '%s\n' .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ range_first=4
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748315444-27076'
+ [[ -n Batch Suffix:   1748315444-27076 ]]
+ local 'message=Batch Suffix:   1748315444-27076'
+ echo -e 'Batch Suffix:   1748315444-27076'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315444-27076.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ local base=configs--MTc0ODMxNTQ0-1748315444-27076.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315444-27076.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315444-27076.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315444-27076.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   4 -> 6'
+ [[ -n Batch Ranges:   4 -> 6 ]]
+ local 'message=Batch Ranges:   4 -> 6'
+ echo -e 'Batch Ranges:   4 -> 6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local full_path=.cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-lab-test-fw.cfg
++ local full_path=.cache/resources/fortinet/fg-lab-test-fw.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315444-27076.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.0.2.50 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 6 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tzvInjh3vT
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tzvInjh3vT
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tzvInjh3vT
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ for site in "${site_folders[@]}"
+ outer_index=3
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /misc/
+ local total_files=5
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  misc'
+ [[ -n Location Name:  misc ]]
+ local 'message=Location Name:  misc'
+ echo -e 'Location Name:  misc'
+ message 'Location Index: 3/3'
+ [[ -n Location Index: 3/3 ]]
+ local 'message=Location Index: 3/3'
+ echo -e 'Location Index: 3/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  5'
+ [[ -n Total Configs:  5 ]]
+ local 'message=Total Configs:  5'
+ echo -e 'Total Configs:  5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw2.cfg
++ local full_path=.cache/resources/misc/fw2.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw2.cfg
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw5.cfg
++ local full_path=.cache/resources/misc/fw5.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw5.cfg
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw6.cfg
++ local full_path=.cache/resources/misc/fw6.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw6.cfg
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 5 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315445027427000 19938
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315445-18848
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315445-18848.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ printf '%s\n' .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748315445-18848'
+ [[ -n Batch Suffix:   1748315445-18848 ]]
+ local 'message=Batch Suffix:   1748315445-18848'
+ echo -e 'Batch Suffix:   1748315445-18848'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315445-18848.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ local base=configs--MTc0ODMxNTQ0-1748315445-18848.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315445-18848.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315445-18848.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315445-18848.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw2.cfg
++ local full_path=.cache/resources/misc/fw2.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw2.cfg
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-18848.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 5 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315445199566000 10436
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315445-3446
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315445-3446.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ printf '%s\n' .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
+ range_first=4
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748315445-3446'
+ [[ -n Batch Suffix:   1748315445-3446 ]]
+ local 'message=Batch Suffix:   1748315445-3446'
+ echo -e 'Batch Suffix:   1748315445-3446'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315445-3446.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ local base=configs--MTc0ODMxNTQ0-1748315445-3446.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315445-3446.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315445-3446.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315445-3446.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   4 -> 5'
+ [[ -n Batch Ranges:   4 -> 5 ]]
+ local 'message=Batch Ranges:   4 -> 5'
+ echo -e 'Batch Ranges:   4 -> 5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw5.cfg
++ local full_path=.cache/resources/misc/fw5.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw5.cfg
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw6.cfg
++ local full_path=.cache/resources/misc/fw6.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw6.cfg
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-3446.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 5 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.820Sw60rSO
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.820Sw60rSO
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.820Sw60rSO
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ superset_index=2
+ superset_total=2
+ range_start_ip=192.168.0.100
+ range_end_ip=203.0.113.25
+ percentage_done=100
+ local 'processing=11 → 17'
+ local 'completed=2/2 (100%) → 17'
+ message 'Processing Addresses: [ 11 → 17 ]'
+ [[ -n Processing Addresses: [ 11 → 17 ] ]]
+ local 'message=Processing Addresses: [ 11 → 17 ]'
+ echo -e 'Processing Addresses: [ 11 → 17 ]'
+ message 'Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ [[ -n Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ] ]]
+ local 'message=Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ echo -e 'Processing IPs Range: [ 192.168.0.100 → 203.0.113.25 ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Progress / Completed: 2/2 (100%) → 17 IPs'
+ [[ -n Progress / Completed: 2/2 (100%) → 17 IPs ]]
+ local 'message=Progress / Completed: 2/2 (100%) → 17 IPs'
+ echo -e 'Progress / Completed: 2/2 (100%) → 17 IPs'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ mapfile -t site_folders
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
++ sort -u
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ message 'Batch size: 3'
+ [[ -n Batch size: 3 ]]
+ local 'message=Batch size: 3'
+ echo -e 'Batch size: 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local outer_index=0
+ local outer_batches=3
+ for site in "${site_folders[@]}"
+ outer_index=1
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /cisco/
+ local total_files=13
+ local inner_batches=5
+ [[ true == true ]]
+ message 'Location Name:  cisco'
+ [[ -n Location Name:  cisco ]]
+ local 'message=Location Name:  cisco'
+ echo -e 'Location Name:  cisco'
+ message 'Location Index: 1/3'
+ [[ -n Location Index: 1/3 ]]
+ local 'message=Location Index: 1/3'
+ echo -e 'Location Index: 1/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  13'
+ [[ -n Total Configs:  13 ]]
+ local 'message=Total Configs:  13'
+ echo -e 'Total Configs:  13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/access-switch-07.cfg
++ local full_path=.cache/resources/cisco/access-switch-07.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-switch-07.cfg
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-03.cfg
++ local full_path=.cache/resources/cisco/branch-fw-03.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-03.cfg
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-snmp.cfg
++ local full_path=.cache/resources/cisco/branch-fw-snmp.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-snmp.cfg
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/core-fw-dmz-01.cfg
++ local full_path=.cache/resources/cisco/core-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/core-router-01.cfg
++ local full_path=.cache/resources/cisco/core-router-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-router-01.cfg
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/datacenter-fw-core.cfg
++ local full_path=.cache/resources/cisco/datacenter-fw-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/datacenter-fw-core.cfg
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr-02.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr.cfg
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 13 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315445459006000 32708
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315445-25445
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315445-25445.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/5'
+ [[ -n Batch Index:    1/5 ]]
+ local 'message=Batch Index:    1/5'
+ echo -e 'Batch Index:    1/5'
+ message 'Batch Suffix:   1748315445-25445'
+ [[ -n Batch Suffix:   1748315445-25445 ]]
+ local 'message=Batch Suffix:   1748315445-25445'
+ echo -e 'Batch Suffix:   1748315445-25445'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315445-25445.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local base=configs--MTc0ODMxNTQ0-1748315445-25445.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315445-25445.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315445-25445.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315445-25445.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-sw1-west.cfg
++ local full_path=.cache/resources/cisco/access-sw1-west.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-sw1-west.cfg
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/access-switch-07.cfg
++ local full_path=.cache/resources/cisco/access-switch-07.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/access-switch-07.cfg
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-03.cfg
++ local full_path=.cache/resources/cisco/branch-fw-03.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-03.cfg
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/access-switch-07.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg
+ [[ :.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/access-switch-07.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/access-switch-07.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-fw-03.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-fw-03.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-03.cfg
+ [[ :.cache/resources/cisco/branch-fw-03.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-03.cfg
+ [[ :.cache/resources/cisco/branch-fw-03.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-03.cfg
+ [[ :.cache/resources/cisco/branch-fw-03.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-03.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-03.cfg
+ [[ :.cache/resources/cisco/branch-fw-03.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.100.100
+ tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.100.100
+ touch targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json
+ job_pid=37934
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.2.12.json
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.2.12
+ tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.2.12
+ local matched_files=.cache/resources/cisco/access-switch-07.cfg
+ [[ -n .cache/resources/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ wc -l
+ touch targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ config_lines='      25'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' .cache/resources/cisco/access-switch-07.cfg
++ wc -l
+ job_pid=37947
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.2.12
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.100.json
++ tr -d ' '
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=access-switch-07.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      25' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.0.100
+ tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.0.100
+ local matched_files=.cache/resources/cisco/branch-fw-03.cfg
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-03.cfg
++ wc -l
+ touch targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/branch-fw-03.cfg
++ wc -l
+ job_pid=37964
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ tr -d ' '
+ generate_configslist 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.0.100
+ local target_file=targets/192.168.0.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ local tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
++ [[ -n [
  {
++ jq '{ configs: . }'
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 1
  }
]'
++ grep -lE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=3
+ site=cisco
+ device=branch-fw-03.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-fw-03.cfg --argjson lines '      29' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/198.51.100.75
+ local 'matched_files=.cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg
.cache/resources/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 25,
      "count": 1
    }
  ]
}'
+ jq -r
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ config_lines='      21'
+ config_json='[
  {
    "config": {
      "site": "cisco",
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
++ tr -d ' '
+ job_pid=37987
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (4):'
+ [[ -n Matched IPs to [cisco] configs (4): ]]
+ local 'message=Matched IPs to [cisco] configs (4):'
+ echo -e 'Matched IPs to [cisco] configs (4):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315445-25445.list
+ echo -e -------------------------------------
++ print '[
  {
    "config": {
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.2.12
]'
+ config_raw=.cache/resources/cisco/branch-fw-03.cfg
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
]'
+ [[ -n targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json targets/192.168.100.100.json
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=.cache/resources/cisco/branch-fw-03.cfg
+ [[ -n .cache/resources/cisco/branch-fw-03.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-03.cfg
+ config_cleaned=branch-fw-03.cfg
+ printf '%-6s | %-15s => %s\n' 37947 192.168.2.12 branch-fw-03.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/branch-fw-03.cfg
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-03.cfg"
      },
      "lines": 29,
      "count": 3
    }
  ]
}'
+ jq -r
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ mv -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.100.100/192.168.100.100--cisco--MTc0ODMxNTQ0.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
+ config_cleaned=branch-fw-03.cfg
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/branch-fw-03.cfg
+ printf '%-6s | %-15s => %s\n' 37987 198.51.100.75 branch-fw-03.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.100.100
++ wc -l
+ config_raw=.cache/resources/cisco/access-switch-07.cfg
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
++ wc -l
++ tr -d ' '
+ return 0
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ [[ -n targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json targets/192.168.2.12.json
+ match_count=3
+ site=cisco
+ device=branch-fw-03.cfg
+ config_lines='      25'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-fw-03.cfg --argjson lines '      29' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=access-switch-07.cfg
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/access-switch-07.cfg
+ printf '%-6s | %-15s => %s\n' 37934 192.168.100.100 access-switch-07.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ wc -l
+ ip=192.168.0.100
+ config_raw=.cache/resources/cisco/access-sw1-west.cfg:.cache/resources/cisco/access-switch-07.cfg
++ tr -d ' '
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ match_count=2
+ site=cisco
+ device=access-switch-07.cfg
+ mv -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      25' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
    },
    "lines": 21,
    "count": 2
  }
]'
+ config_cleaned='access-sw1-west.cfg access-switch-07.cfg'
+ printf '%-6s | %-15s => %s\n' 37964 192.168.0.100 'access-sw1-west.cfg access-switch-07.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37934
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37947
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
]'
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37964
+ IFS=
+ read -r config_file
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37987
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
]'
+ message 'Generated Config-File: targets/192.168.2.12.json'
+ [[ -n Generated Config-File: targets/192.168.2.12.json ]]
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
++ jq '{ configs: . }'
+ local 'message=Generated Config-File: targets/192.168.2.12.json'
  }
] ]]
+ echo -e 'Generated Config-File: targets/192.168.2.12.json'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 29,
    "count": 3
  }
]'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 21,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 25,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-03.cfg"
      },
      "lines": 29,
      "count": 3
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 21,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 25,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json targets/198.51.100.75.json
+ [[ -n targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json targets/192.168.0.100.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ mv -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/192.168.0.100.json'
+ [[ -n Generated Config-File: targets/192.168.0.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.100.json'
+ echo -e 'Generated Config-File: targets/192.168.0.100.json'
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37947
+ ip_address=192.168.2.12
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37964
+ ip_address=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 37987
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 13 -gt 0 ]]
+ message 'Unmapped IPs (count): 13'
+ [[ -n Unmapped IPs (count): 13 ]]
+ local 'message=Unmapped IPs (count): 13'
+ echo -e 'Unmapped IPs (count): 13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=4
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %01d 1
+ padded_index=1
+ job_pid=38045
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
+ parse_configs 192.168.100.100 1
+ local ip_addr=192.168.100.100
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=38048
+ configs_jobs_pid+=("${job_pid}")
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.100.100' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ configs_jobs2ips_mapping["$job_pid"]=192.168.2.12
+ ((  ip_index < total_ips  ))
+ declare -a execute
+ ip_addr=192.168.0.100
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 192.168.2.12 2
+ local ip_addr=192.168.2.12
+ local padded_index=2
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.2.12' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ job_pid=38052
+ [[ true == true ]]
+ execute+=(--classify)
+ configs_jobs_pid+=("${job_pid}")
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.100
+ [[ true == true ]]
+ ((  ip_index < total_ips  ))
+ mkdir -p .logs/jobs .logs/errors
+ ip_addr=198.51.100.75
+ parse_configs 192.168.0.100 3
+ local ip_addr=192.168.0.100
+ local padded_index=3
++ printf %01d 4
+ logfile=.logs/jobs/192.168.100.100.job
+ [[ true == true ]]
++ IFS=,
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.100.100 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
+ padded_index=4
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.100' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_pid=38057
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--debug)
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ [[ true == true ]]
+ ((  ip_index < total_ips  ))
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ parse_configs 198.51.100.75 4
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ local ip_addr=198.51.100.75
+ message 'PID   | IP Address (4)'
+ local padded_index=4
+ [[ -n PID   | IP Address (4) ]]
+ local 'message=PID   | IP Address (4)'
+ echo -e 'PID   | IP Address (4)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ logfile=.logs/jobs/192.168.2.12.job
+ echo -e -------------------------
+ [[ true == true ]]
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.2.12 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ printf '%-5s | %s\n' 38048 192.168.2.12
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 38045 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 38052 192.168.0.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 38057 198.51.100.75
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38045
++ IFS=,
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
++ print cfg,conf,cnf
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
++ [[ -n cfg,conf,cnf ]]
+ valid_configs_jobs_pid+=("$pid")
++ echo -en cfg,conf,cnf
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/192.168.0.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.100 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38045
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38045
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  4 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38045
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38048
+ ip=192.168.2.12
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38052
+ ip=192.168.0.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 38057
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 13 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315446600620000 21122
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315446-21221
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315446-21221.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ printf '%s\n' .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ range_first=4
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/5'
+ [[ -n Batch Index:    2/5 ]]
+ local 'message=Batch Index:    2/5'
+ echo -e 'Batch Index:    2/5'
+ message 'Batch Suffix:   1748315446-21221'
+ [[ -n Batch Suffix:   1748315446-21221 ]]
+ local 'message=Batch Suffix:   1748315446-21221'
+ echo -e 'Batch Suffix:   1748315446-21221'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315446-21221.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local base=configs--MTc0ODMxNTQ0-1748315446-21221.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315446-21221.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315446-21221.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315446-21221.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   4 -> 6'
+ [[ -n Batch Ranges:   4 -> 6 ]]
+ local 'message=Batch Ranges:   4 -> 6'
+ echo -e 'Batch Ranges:   4 -> 6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-fw-snmp.cfg
++ local full_path=.cache/resources/cisco/branch-fw-snmp.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-fw-snmp.cfg
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/branch-isr-02.cfg
++ local full_path=.cache/resources/cisco/branch-isr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/branch-isr-02.cfg
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/campus-sw-access01.cfg
++ local full_path=.cache/resources/cisco/campus-sw-access01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/campus-sw-access01.cfg
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-fw-snmp.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-snmp.cfg
+ [[ :.cache/resources/cisco/branch-fw-snmp.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-fw-snmp.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-snmp.cfg
+ [[ :.cache/resources/cisco/branch-fw-snmp.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=:.cache/resources/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-fw-snmp.cfg:.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-fw-snmp.cfg:.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/branch-isr-02.cfg
+ [[ :.cache/resources/cisco/branch-isr-02.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-snmp.cfg:.cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-fw-snmp.cfg:.cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.2.12.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.2.12
+ tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.2.12
+ touch targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ job_pid=39071
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.2.12
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.100.json
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.100
+ tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/192.168.0.100
+ local 'matched_files=.cache/resources/cisco/branch-fw-snmp.cfg
.cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n .cache/resources/cisco/branch-fw-snmp.cfg
.cache/resources/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-snmp.cfg
++ wc -l
+ touch targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ config_lines='      20'
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/branch-fw-snmp.cfg
++ wc -l
+ job_pid=39084
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_addr in "${target_listing[@]}"
++ tr -d ' '
+ target_file=targets/198.51.100.75.json
+ generate_configslist 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=192.168.0.100
+ local target_file=targets/192.168.0.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=branch-fw-snmp.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-fw-snmp.cfg --argjson lines '      20' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/198.51.100.75
+ local matched_files=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ wc -l
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ config_lines='      13'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' .cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
+ job_pid=39102
+ targets_jobs_pid+=("${job_pid}")
++ tr -d ' '
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
++ wc -l
+ message 'Matched IPs to [cisco] configs (3):'
+ [[ -n Matched IPs to [cisco] configs (3): ]]
+ local 'message=Matched IPs to [cisco] configs (3):'
+ echo -e 'Matched IPs to [cisco] configs (3):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315446-21221.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/branch-isr-02.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ config_lines='      37'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      13' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
+ local matched_files=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
++ wc -l
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
+ config_cleaned=branch-isr-02.cfg
++ tr -d ' '
+ printf '%-6s | %-15s => %s\n' 39102 198.51.100.75 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.100
+ config_raw=.cache/resources/cisco/campus-sw-access01.cfg
++ wc -l
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ match_count=2
+ site=cisco
+ device=branch-isr-02.cfg
+ config_lines='      37'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  }
]'
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      37' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=campus-sw-access01.cfg
+ printf '%-6s | %-15s => %s\n' 39084 192.168.0.100 campus-sw-access01.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ IFS=
+ read -r config_file
+ ip=192.168.2.12
+ config_raw=.cache/resources/cisco/branch-fw-snmp.cfg:.cache/resources/cisco/branch-isr-02.cfg
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 13,
    "count": 1
  }
]'
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ match_count=2
+ site=cisco
+ device=branch-isr-02.cfg
+ config_cleaned='branch-fw-snmp.cfg branch-isr-02.cfg'
++ print '[]'
+ printf '%-6s | %-15s => %s\n' 39071 192.168.2.12 'branch-fw-snmp.cfg branch-isr-02.cfg'
++ [[ -n [] ]]
++ echo -en '[]'
+ newline
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      37' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39071
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39084
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39102
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ valid_targets_jobs_pid+=("$pid")
+ IFS=
+ read -r config_file
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 13,
      "count": 1
    }
  ]
}'
++ jq '{ configs: . }'
++ [[ -n [
+ jq -r
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 20,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-snmp.cfg"
      },
      "lines": 20,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 37,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json targets/192.168.0.100.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 37,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json targets/192.168.2.12.json
+ mv -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.0.100/192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/192.168.0.100.json'
+ [[ -n Generated Config-File: targets/192.168.0.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.100.json'
+ echo -e 'Generated Config-File: targets/192.168.0.100.json'
+ return 0
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json targets/198.51.100.75.json
+ mv -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json.tmp targets/192.168.2.12/192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/192.168.2.12.json'
+ [[ -n Generated Config-File: targets/192.168.2.12.json ]]
+ local 'message=Generated Config-File: targets/192.168.2.12.json'
+ echo -e 'Generated Config-File: targets/192.168.2.12.json'
+ return 0
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39071
+ ip_address=192.168.2.12
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39084
+ ip_address=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39102
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 14 -gt 0 ]]
+ message 'Unmapped IPs (count): 14'
+ [[ -n Unmapped IPs (count): 14 ]]
+ local 'message=Unmapped IPs (count): 14'
+ echo -e 'Unmapped IPs (count): 14'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=3
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
++ printf %01d 1
+ padded_index=1
+ job_pid=39157
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.2.12
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.100
+ parse_configs 192.168.2.12 1
+ local ip_addr=192.168.2.12
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=39160
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.100
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.2.12' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 192.168.0.100 2
+ local ip_addr=192.168.0.100
+ local padded_index=2
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=39164
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=192.168.0.100' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ configs_jobs_pid+=("${job_pid}")
+ declare -a execute
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ [[ true == true ]]
+ ((  ip_index < total_ips  ))
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ message 'Background Jobs -> Managed Configs:'
+ mkdir -p .logs/jobs .logs/errors
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (3)'
+ [[ -n PID   | IP Address (3) ]]
+ local 'message=PID   | IP Address (3)'
+ echo -e 'PID   | IP Address (3)'
+ parse_configs 198.51.100.75 3
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ local ip_addr=198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ local padded_index=3
+ printf '%-5s | %s\n' 39157 192.168.2.12
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 39164 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 39160 192.168.0.100
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39160
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39164
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ logfile=.logs/jobs/192.168.2.12.job
+ [[ true == true ]]
++ IFS=,
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.2.12 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/192.168.0.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=192.168.0.100 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39160
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39164
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39160
+ ip=192.168.0.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39164
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39157
+ ip=192.168.2.12
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 13 ]]
+ inner_index=3
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315447621119000 21385
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315447-14632
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315447-14632.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ printf '%s\n' .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg
+ range_first=7
+ range_last=9
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    3/5'
+ [[ -n Batch Index:    3/5 ]]
+ local 'message=Batch Index:    3/5'
+ echo -e 'Batch Index:    3/5'
+ message 'Batch Suffix:   1748315447-14632'
+ [[ -n Batch Suffix:   1748315447-14632 ]]
+ local 'message=Batch Suffix:   1748315447-14632'
+ echo -e 'Batch Suffix:   1748315447-14632'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315447-14632.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ local base=configs--MTc0ODMxNTQ0-1748315447-14632.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315447-14632.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315447-14632.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315447-14632.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   7 -> 9'
+ [[ -n Batch Ranges:   7 -> 9 ]]
+ local 'message=Batch Ranges:   7 -> 9'
+ echo -e 'Batch Ranges:   7 -> 9'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/core-fw-dmz-01.cfg
++ local full_path=.cache/resources/cisco/core-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/core-router-01.cfg
++ local full_path=.cache/resources/cisco/core-router-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/core-router-01.cfg
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/datacenter-fw-core.cfg
++ local full_path=.cache/resources/cisco/datacenter-fw-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/datacenter-fw-core.cfg
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/core-fw-dmz-01.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-fw-dmz-01.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=.cache/resources/cisco/core-fw-dmz-01.cfg
+ [[ :.cache/resources/cisco/core-fw-dmz-01.cfg: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' ip address 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 172.31.255.254'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/datacenter-fw-core.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/core-fw-dmz-01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/core-fw-dmz-01.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/198.51.100.75
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ job_pid=39628
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (1):'
+ [[ -n Matched IPs to [cisco] configs (1): ]]
+ local 'message=Matched IPs to [cisco] configs (1):'
+ echo -e 'Matched IPs to [cisco] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ local message=-------------------------------------
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315447-14632.list
+ echo -e -------------------------------------
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/core-fw-dmz-01.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/core-fw-dmz-01.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/cisco/core-fw-dmz-01.cfg
+ [[ -n .cache/resources/cisco/core-fw-dmz-01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_cleaned=core-fw-dmz-01.cfg
+ config_file=cisco/core-fw-dmz-01.cfg
+ printf '%-6s | %-15s => %s\n' 39628 198.51.100.75 core-fw-dmz-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39628
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      33'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/core-fw-dmz-01.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=cisco
+ device=core-fw-dmz-01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device core-fw-dmz-01.cfg --argjson lines '      33' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 33,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 33,
    "count": 2
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 33,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 33,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "core-fw-dmz-01.cfg"
      },
      "lines": 33,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json targets/198.51.100.75.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39628
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ printf %01d 1
+ padded_index=1
+ job_pid=39652
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 39652 198.51.100.75
+ parse_configs 198.51.100.75 1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local ip_addr=198.51.100.75
+ (( i++ ))
+ (( i < count ))
+ local padded_index=1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39652
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=9
+ [[ 9 -lt 13 ]]
+ inner_index=4
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315448612543000 5289
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315448-14370
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315448-14370.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ printf '%s\n' .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg
+ range_first=10
+ range_last=12
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    4/5'
+ [[ -n Batch Index:    4/5 ]]
+ local 'message=Batch Index:    4/5'
+ echo -e 'Batch Index:    4/5'
+ message 'Batch Suffix:   1748315448-14370'
+ [[ -n Batch Suffix:   1748315448-14370 ]]
+ local 'message=Batch Suffix:   1748315448-14370'
+ echo -e 'Batch Suffix:   1748315448-14370'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315448-14370.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ local base=configs--MTc0ODMxNTQ0-1748315448-14370.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315448-14370.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315448-14370.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315448-14370.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   10 -> 12'
+ [[ -n Batch Ranges:   10 -> 12 ]]
+ local 'message=Batch Ranges:   10 -> 12'
+ echo -e 'Batch Ranges:   10 -> 12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/dmz-fw2-backup.cfg
++ local full_path=.cache/resources/cisco/dmz-fw2-backup.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr-02.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr-02.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/hq-core-rtr.cfg
++ local full_path=.cache/resources/cisco/hq-core-rtr.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/hq-core-rtr.cfg
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\.\c\a\c\h\e\/\r\e\s\o\u\r\c\e\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=.cache/resources/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr-02.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/hq-core-rtr.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
++ sed -E 's|^.cache/resources/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ mkdir -p targets/198.51.100.75
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ job_pid=39929
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ message 'Matched IPs to [cisco] configs (1):'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315448-14370.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ [[ -n Matched IPs to [cisco] configs (1): ]]
+ local 'message=Matched IPs to [cisco] configs (1):'
+ echo -e 'Matched IPs to [cisco] configs (1):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=.cache/resources/cisco/dmz-fw2-backup.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ sed 's|.cache/resources/cisco/||g'
++ tr : ' : '
+ local matched_files=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_cleaned=dmz-fw2-backup.cfg
+ config_file=cisco/dmz-fw2-backup.cfg
+ printf '%-6s | %-15s => %s\n' 39929 198.51.100.75 dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39929
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
++ wc -l
+ config_lines='      40'
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' .cache/resources/cisco/dmz-fw2-backup.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=cisco
+ device=dmz-fw2-backup.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      40' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 40,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 40,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 40,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 40,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 40,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json targets/198.51.100.75.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 39929
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ printf %01d 1
+ padded_index=1
+ job_pid=39953
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ parse_configs 198.51.100.75 1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 39953 198.51.100.75
+ local ip_addr=198.51.100.75
+ newline
+ local padded_index=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39953
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute=('./scripts/parse-configs.shell' '--configs=.cache/resources' '--ip-addr=198.51.100.75' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=.cache/resources --ip-addr=198.51.100.75 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39953
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 39953
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ return 0
+ offset=12
+ [[ 12 -lt 13 ]]
+ inner_index=5
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315449284130000 16140
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315449-17028
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315449-17028.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ printf '%s\n' .cache/resources/cisco/perimeter-fw1.cfg
+ range_first=13
+ range_last=13
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    5/5'
+ [[ -n Batch Index:    5/5 ]]
+ local 'message=Batch Index:    5/5'
+ echo -e 'Batch Index:    5/5'
+ message 'Batch Suffix:   1748315449-17028'
+ [[ -n Batch Suffix:   1748315449-17028 ]]
+ local 'message=Batch Suffix:   1748315449-17028'
+ echo -e 'Batch Suffix:   1748315449-17028'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315449-17028.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ local base=configs--MTc0ODMxNTQ0-1748315449-17028.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315449-17028.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315449-17028.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315449-17028.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     1'
+ [[ -n Batch Size:     1 ]]
+ local 'message=Batch Size:     1'
+ echo -e 'Batch Size:     1'
+ message 'Batch Ranges:   13 -> 13'
+ [[ -n Batch Ranges:   13 -> 13 ]]
+ local 'message=Batch Ranges:   13 -> 13'
+ echo -e 'Batch Ranges:   13 -> 13'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/cisco/perimeter-fw1.cfg
++ local full_path=.cache/resources/cisco/perimeter-fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en cisco/perimeter-fw1.cfg
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-17028.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (0):'
+ [[ -n Matched IPs to [cisco] configs (0): ]]
+ local 'message=Matched IPs to [cisco] configs (0):'
+ echo -e 'Matched IPs to [cisco] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=15
+ [[ 15 -lt 13 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MH78IAK0T1
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MH78IAK0T1
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MH78IAK0T1
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.100/
+ ip=192.168.0.100
+ final_file=.cache/targets/192.168.0.100.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.100.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.100//192.168.0.100--cisco--MTc0ODMxNTQ0.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.100.100/
+ ip=192.168.100.100
+ final_file=.cache/targets/192.168.100.100.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.100.100.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.100.100//192.168.100.100--cisco--MTc0ODMxNTQ0.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.2.12/
+ ip=192.168.2.12
+ final_file=.cache/targets/192.168.2.12.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.2.12.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.2.12//192.168.2.12--cisco--MTc0ODMxNTQ0.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/198.51.100.75//198.51.100.75--cisco--MTc0ODMxNTQ0.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ outer_index=2
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /fortinet/
+ local total_files=6
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  fortinet'
+ [[ -n Location Name:  fortinet ]]
+ local 'message=Location Name:  fortinet'
+ echo -e 'Location Name:  fortinet'
+ message 'Location Index: 2/3'
+ [[ -n Location Index: 2/3 ]]
+ local 'message=Location Index: 2/3'
+ echo -e 'Location Index: 2/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  6'
+ [[ -n Total Configs:  6 ]]
+ local 'message=Total Configs:  6'
+ echo -e 'Total Configs:  6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-datacenter-east.cfg
++ local full_path=.cache/resources/fortinet/fg-datacenter-east.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local full_path=.cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-lab-test-fw.cfg
++ local full_path=.cache/resources/fortinet/fg-lab-test-fw.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 6 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315449529680000 24373
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315449-31992
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315449-31992.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ printf '%s\n' .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748315449-31992'
+ [[ -n Batch Suffix:   1748315449-31992 ]]
+ local 'message=Batch Suffix:   1748315449-31992'
+ echo -e 'Batch Suffix:   1748315449-31992'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315449-31992.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ local base=configs--MTc0ODMxNTQ0-1748315449-31992.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315449-31992.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315449-31992.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315449-31992.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local full_path=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-campus-core.cfg
++ local full_path=.cache/resources/fortinet/fg-campus-core.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-campus-core.cfg
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-datacenter-east.cfg
++ local full_path=.cache/resources/fortinet/fg-datacenter-east.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-31992.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 6 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315449671032000 8719
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315449-2420
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315449-2420.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ printf '%s\n' .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ range_first=4
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748315449-2420'
+ [[ -n Batch Suffix:   1748315449-2420 ]]
+ local 'message=Batch Suffix:   1748315449-2420'
+ echo -e 'Batch Suffix:   1748315449-2420'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315449-2420.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ local base=configs--MTc0ODMxNTQ0-1748315449-2420.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315449-2420.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315449-2420.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315449-2420.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   4 -> 6'
+ [[ -n Batch Ranges:   4 -> 6 ]]
+ local 'message=Batch Ranges:   4 -> 6'
+ echo -e 'Batch Ranges:   4 -> 6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local full_path=.cache/resources/fortinet/fg-fw-dmz-01.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-lab-test-fw.cfg
++ local full_path=.cache/resources/fortinet/fg-lab-test-fw.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/fortinet/fg-testing-config.cfg
++ local full_path=.cache/resources/fortinet/fg-testing-config.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en fortinet/fg-testing-config.cfg
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-2420.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.0.2.50 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 6 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5hlV0wyee
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5hlV0wyee
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.R5hlV0wyee
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ for site in "${site_folders[@]}"
+ outer_index=3
+ mapfile -t site_files
++ printf '%s\n' .cache/resources/cisco/access-sw1-west.cfg .cache/resources/cisco/access-switch-07.cfg .cache/resources/cisco/branch-fw-03.cfg .cache/resources/cisco/branch-fw-snmp.cfg .cache/resources/cisco/branch-isr-02.cfg .cache/resources/cisco/campus-sw-access01.cfg .cache/resources/cisco/core-fw-dmz-01.cfg .cache/resources/cisco/core-router-01.cfg .cache/resources/cisco/datacenter-fw-core.cfg .cache/resources/cisco/dmz-fw2-backup.cfg .cache/resources/cisco/hq-core-rtr-02.cfg .cache/resources/cisco/hq-core-rtr.cfg .cache/resources/cisco/perimeter-fw1.cfg .cache/resources/fortinet/fg-branch-vpn-01.cfg .cache/resources/fortinet/fg-campus-core.cfg .cache/resources/fortinet/fg-datacenter-east.cfg .cache/resources/fortinet/fg-fw-dmz-01.cfg .cache/resources/fortinet/fg-lab-test-fw.cfg .cache/resources/fortinet/fg-testing-config.cfg .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
++ grep -F /misc/
+ local total_files=5
+ local inner_batches=2
+ [[ true == true ]]
+ message 'Location Name:  misc'
+ [[ -n Location Name:  misc ]]
+ local 'message=Location Name:  misc'
+ echo -e 'Location Name:  misc'
+ message 'Location Index: 3/3'
+ [[ -n Location Index: 3/3 ]]
+ local 'message=Location Index: 3/3'
+ echo -e 'Location Index: 3/3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total Configs:  5'
+ [[ -n Total Configs:  5 ]]
+ local 'message=Total Configs:  5'
+ echo -e 'Total Configs:  5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw2.cfg
++ local full_path=.cache/resources/misc/fw2.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw2.cfg
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw5.cfg
++ local full_path=.cache/resources/misc/fw5.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw5.cfg
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ for file in "${site_files[@]}"
++ relative_configpath .cache/resources/misc/fw6.cfg
++ local full_path=.cache/resources/misc/fw6.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw6.cfg
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local offset=0
+ local inner_index=0
+ [[ 0 -lt 5 ]]
+ inner_index=1
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315449922260000 19767
+ export batch_id=MTc0ODMxNTQ0
+ batch_id=MTc0ODMxNTQ0
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315449-22367
+ batch_configs_list=configs--MTc0ODMxNTQ0-1748315449-22367.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ printf '%s\n' .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ0'
+ [[ -n Batch ID: MTc0ODMxNTQ0 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ0'
+ echo -e 'Batch ID: MTc0ODMxNTQ0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    1/2'
+ [[ -n Batch Index:    1/2 ]]
+ local 'message=Batch Index:    1/2'
+ echo -e 'Batch Index:    1/2'
+ message 'Batch Suffix:   1748315449-22367'
+ [[ -n Batch Suffix:   1748315449-22367 ]]
+ local 'message=Batch Suffix:   1748315449-22367'
+ echo -e 'Batch Suffix:   1748315449-22367'
+ message 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ0-1748315449-22367.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ local base=configs--MTc0ODMxNTQ0-1748315449-22367.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ0-1748315449-22367.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ0-1748315449-22367.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ0-1748315449-22367.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw1.cfg
++ local full_path=.cache/resources/misc/fw1.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw1.cfg
+ message '  - misc/fw1.cfg'
+ [[ -n   - misc/fw1.cfg ]]
+ local 'message=  - misc/fw1.cfg'
+ echo -e '  - misc/fw1.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw2.cfg
++ local full_path=.cache/resources/misc/fw2.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw2.cfg
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw3.cfg
++ local full_path=.cache/resources/misc/fw3.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw3.cfg
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ0-1748315449-22367.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw1.cfg .cache/resources/misc/fw2.cfg .cache/resources/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw1.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=3
+ [[ 3 -lt 5 ]]
+ inner_index=2
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748315450085805000 29073
+ export batch_id=MTc0ODMxNTQ1
+ batch_id=MTc0ODMxNTQ1
+ batch_slice=("${site_files[@]:offset:configs_batch_size}")
++ date +%s
+ batch_suffix=1748315450-7467
+ batch_configs_list=configs--MTc0ODMxNTQ1-1748315450-7467.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ printf '%s\n' .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
+ range_first=4
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ message 'Batch ID: MTc0ODMxNTQ1'
+ [[ -n Batch ID: MTc0ODMxNTQ1 ]]
+ local 'message=Batch ID: MTc0ODMxNTQ1'
+ echo -e 'Batch ID: MTc0ODMxNTQ1'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Index:    2/2'
+ [[ -n Batch Index:    2/2 ]]
+ local 'message=Batch Index:    2/2'
+ echo -e 'Batch Index:    2/2'
+ message 'Batch Suffix:   1748315450-7467'
+ [[ -n Batch Suffix:   1748315450-7467 ]]
+ local 'message=Batch Suffix:   1748315450-7467'
+ echo -e 'Batch Suffix:   1748315450-7467'
+ message 'Batch FileName: configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ [[ -n Batch FileName: configs--MTc0ODMxNTQ1-1748315450-7467.list ]]
+ local 'message=Batch FileName: configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ echo -e 'Batch FileName: configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ local base=configs--MTc0ODMxNTQ1-1748315450-7467.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODMxNTQ1-1748315450-7467.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODMxNTQ1-1748315450-7467.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODMxNTQ1-1748315450-7467.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Batch Size:     2'
+ [[ -n Batch Size:     2 ]]
+ local 'message=Batch Size:     2'
+ echo -e 'Batch Size:     2'
+ message 'Batch Ranges:   4 -> 5'
+ [[ -n Batch Ranges:   4 -> 5 ]]
+ local 'message=Batch Ranges:   4 -> 5'
+ echo -e 'Batch Ranges:   4 -> 5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw5.cfg
++ local full_path=.cache/resources/misc/fw5.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw5.cfg
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ for config in "${batch_slice[@]}"
++ relative_configpath .cache/resources/misc/fw6.cfg
++ local full_path=.cache/resources/misc/fw6.cfg
++ local prefix=.cache/resources/
+++ sed 's|.cache/resources/||g'
++ echo -en misc/fw6.cfg
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK/configs--MTc0ODMxNTQ1-1748315450-7467.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list .cache/resources/misc/fw5.cfg .cache/resources/misc/fw6.cfg
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=.cache/resources/misc/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ ((  0 > 0  ))
+ return 0
+ offset=6
+ [[ 6 -lt 5 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HKztZ4rgA2
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HKztZ4rgA2
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.HKztZ4rgA2
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ [[ true == true ]]
+ grouped_targets=.cache/targets
+ message 'Post-processing: Normalizing JSON files'
+ [[ -n Post-processing: Normalizing JSON files ]]
+ local 'message=Post-processing: Normalizing JSON files'
+ echo -e 'Post-processing: Normalizing JSON files'
+ message ---------------------------------------
+ [[ -n --------------------------------------- ]]
+ local message=---------------------------------------
+ echo -e ---------------------------------------
+ message 'Grouped by site: .cache/targets'
+ [[ -n Grouped by site: .cache/targets ]]
+ local 'message=Grouped by site: .cache/targets'
+ echo -e 'Grouped by site: .cache/targets'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/10.10.10.10.json
+ ip=10.10.10.10.json
+ message '  - 10.10.10.10.json'
+ [[ -n   - 10.10.10.10.json ]]
+ local 'message=  - 10.10.10.10.json'
+ echo -e '  - 10.10.10.10.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.1.json
+ ip=192.168.0.1.json
+ message '  - 192.168.0.1.json'
+ [[ -n   - 192.168.0.1.json ]]
+ local 'message=  - 192.168.0.1.json'
+ echo -e '  - 192.168.0.1.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.100.json
+ ip=192.168.0.100.json
+ message '  - 192.168.0.100.json'
+ [[ -n   - 192.168.0.100.json ]]
+ local 'message=  - 192.168.0.100.json'
+ echo -e '  - 192.168.0.100.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.100.100.json
+ ip=192.168.100.100.json
+ message '  - 192.168.100.100.json'
+ [[ -n   - 192.168.100.100.json ]]
+ local 'message=  - 192.168.100.100.json'
+ echo -e '  - 192.168.100.100.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.2.12.json
+ ip=192.168.2.12.json
+ message '  - 192.168.2.12.json'
+ [[ -n   - 192.168.2.12.json ]]
+ local 'message=  - 192.168.2.12.json'
+ echo -e '  - 192.168.2.12.json'
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/198.51.100.75.json
+ ip=198.51.100.75.json
+ message '  - 198.51.100.75.json'
+ [[ -n   - 198.51.100.75.json ]]
+ local 'message=  - 198.51.100.75.json'
+ echo -e '  - 198.51.100.75.json'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ shopt -s nullglob
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/10.10.10.10.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/10.10.10.10.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 21,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 25,
      "count": 1
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 13,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.1.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.1.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 21,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 25,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 13,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.100.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.100.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 21,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 25,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 13,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.100.100.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.100.100.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-switch-07.cfg",
      "lines": 25,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.2.12.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.2.12.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-fw-03.cfg",
      "lines": 29,
      "count": 3
    },
    {
      "device": "branch-fw-snmp.cfg",
      "lines": 20,
      "count": 2
    },
    {
      "device": "branch-isr-02.cfg",
      "lines": 37,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/198.51.100.75.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/198.51.100.75.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-fw-03.cfg",
      "lines": 29,
      "count": 3
    },
    {
      "device": "branch-isr-02.cfg",
      "lines": 37,
      "count": 2
    },
    {
      "device": "core-fw-dmz-01.cfg",
      "lines": 33,
      "count": 2
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 40,
      "count": 1
    }
  ]
}'
+ jq .
+ shopt -u nullglob
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ echo -e 'CSV Report Summary (tabulated):'
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ print_file reports/reports.csv
+ [[ -n reports/reports.csv ]]
+ cat -n
+ local target_file=reports/reports.csv
+ [[ true == true ]]
+ [[ -f reports/reports.csv ]]
+ case "${target_file}" in
+ cat reports/reports.csv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local elapsed=10
+ message 'Session Summary:'
+ [[ -n Session Summary: ]]
+ local 'message=Session Summary:'
+ echo -e 'Session Summary:'
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ message 'Started at: 2025-05-26 20:10:40'
+ [[ -n Started at: 2025-05-26 20:10:40 ]]
+ local 'message=Started at: 2025-05-26 20:10:40'
+ echo -e 'Started at: 2025-05-26 20:10:40'
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qHiHk0UVWK
