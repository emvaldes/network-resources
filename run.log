$ date && echo ;
$ rm -rf ./reports ./targets ./.cache ./.local 2>/dev/null && echo ;
$ bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs && echo ;
$ cat .local/jobs/10.0.0.1.job 2>/dev/null && echo ;
$ jq -r . ./reports/json/10.0.0.1.json 2>/dev/null ;

Fri May 16 18:31:04 MST 2025

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
+ TMP_DIR=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzQ0NTQ2NDYzNjI5NDAwMAo
++ divisor=MTc0NzQ0NTQ2NDYzNjI5NDAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ filtered_target_listing=()
+ declare -a filtered_target_listing
+ [[ 4 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs
+ oIFS=' 
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ IFS=' 
'
+ [[ -z '' ]]
+ delaying_factor=0.05
+ [[ -z '' ]]
+ listing_filename=ips.list
+ [[ -z '' ]]
+ parallel_threads=100
+ [[ -z '' ]]
+ target_sites=false
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-16 18:31:04'
+ SECONDS=0
+ [[ -z true ]]
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ local configs_list_cache=.cache/configs.list
+ mkdir -p .cache
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
+ sort
+ [[ true == true ]]
+ message 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ local 'message=Generated configs.list at .cache/configs.list'
+ print 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ echo -en 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ -n false ]]
+ [[ false != \f\a\l\s\e ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print_file .cache/configs.list
+ [[ -n .cache/configs.list ]]
+ local target_file=.cache/configs.list
+ [[ true == true ]]
+ [[ -f .cache/configs.list ]]
+ case "${target_file}" in
+ cat .cache/configs.list
configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg
configs/cisco/fw5.cfg
configs/cisco/fw6.cfg
configs/cisco/fw7.cfg
configs/cisco/fw8.cfg
configs/misc/switch1.conf
configs/misc/switch2.conf
configs/misc/switch3.conf
configs/misc/switch4.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ message target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ local message=target,site,device,object,entry,description,group
+ print target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ echo -en target,site,device,object,entry,description,group
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ :
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ -z ips.list ]]
+ target_listing_raw=()
+ declare -a target_listing_raw
+ [[ -f ips.list ]]
+ mapfile -t target_listing_raw
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
+ target_listing=()
+ declare -a target_listing
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=10.0.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=10 0 0 1'
+ local fixed_address=10.0.0.1
+ [[ -n '' ]]
+ [[ 10.0.0.1 != \1\0\.\0\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=10.0.1.2
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.1.2 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '1' '2')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ print 2
++ [[ -n 2 ]]
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ local 'segments=10 0 1 2'
+ local fixed_address=10.0.1.2
+ [[ -n '' ]]
+ [[ 10.0.1.2 != \1\0\.\0\.\1\.\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=10.0.2.3
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.2.3 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '2' '3')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 2
++ [[ -n 2 ]]
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ print 3
++ [[ -n 3 ]]
++ echo -en 3
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=3
+ [[ 3 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=3
+ local 'segments=10 0 2 3'
+ local fixed_address=10.0.2.3
+ [[ -n '' ]]
+ [[ 10.0.2.3 != \1\0\.\0\.\2\.\3 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=192.168.1.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 192
++ [[ -n 192 ]]
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ print 168
++ [[ -n 168 ]]
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=192 168 1 10'
+ local fixed_address=192.168.1.10
+ [[ -n '' ]]
+ [[ 192.168.1.10 != \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=192.168.1.11
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.11 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '11')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 192
++ [[ -n 192 ]]
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ print 168
++ [[ -n 168 ]]
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ print 11
++ [[ -n 11 ]]
++ echo -en 11
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=11
+ [[ 11 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=11
+ local 'segments=192 168 1 11'
+ local fixed_address=192.168.1.11
+ [[ -n '' ]]
+ [[ 192.168.1.11 != \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=192.168.2.12
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.2.12 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '2' '12')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 192
++ [[ -n 192 ]]
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ print 168
++ [[ -n 168 ]]
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ print 2
++ [[ -n 2 ]]
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ print 12
++ [[ -n 12 ]]
++ echo -en 12
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=12
+ [[ 12 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=12
+ local 'segments=192 168 2 12'
+ local fixed_address=192.168.2.12
+ [[ -n '' ]]
+ [[ 192.168.2.12 != \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=172.16.0.5
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.0.5 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '0' '5')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 172
++ [[ -n 172 ]]
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ print 16
++ [[ -n 16 ]]
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 5
++ [[ -n 5 ]]
++ echo -en 5
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=5
+ [[ 5 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=5
+ local 'segments=172 16 0 5'
+ local fixed_address=172.16.0.5
+ [[ -n '' ]]
+ [[ 172.16.0.5 != \1\7\2\.\1\6\.\0\.\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=172.16.1.6
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.1.6 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '1' '6')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 172
++ [[ -n 172 ]]
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ print 16
++ [[ -n 16 ]]
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ print 6
++ [[ -n 6 ]]
++ echo -en 6
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=6
+ [[ 6 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=6
+ local 'segments=172 16 1 6'
+ local fixed_address=172.16.1.6
+ [[ -n '' ]]
+ [[ 172.16.1.6 != \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=192.0.2.50
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.0.2.50 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '0' '2' '50')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 192
++ [[ -n 192 ]]
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 2
++ [[ -n 2 ]]
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ print 50
++ [[ -n 50 ]]
++ echo -en 50
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=50
+ [[ 50 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=50
+ local 'segments=192 0 2 50'
+ local fixed_address=192.0.2.50
+ [[ -n '' ]]
+ [[ 192.0.2.50 != \1\9\2\.\0\.\2\.\5\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=203.0.113.25
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 203.0.113.25 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('203' '0' '113' '25')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 203
++ [[ -n 203 ]]
++ echo -en 203
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=203
+ [[ 203 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=203
+ for i in "${!segments[@]}"
++ print 0
++ [[ -n 0 ]]
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 113
++ [[ -n 113 ]]
++ echo -en 113
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=113
+ [[ 113 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=113
+ for i in "${!segments[@]}"
++ print 25
++ [[ -n 25 ]]
++ echo -en 25
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=25
+ [[ 25 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=25
+ local 'segments=203 0 113 25'
+ local fixed_address=203.0.113.25
+ [[ -n '' ]]
+ [[ 203.0.113.25 != \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=198.51.100.75
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 198.51.100.75 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('198' '51' '100' '75')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 198
++ [[ -n 198 ]]
++ echo -en 198
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=198
+ [[ 198 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=198
+ for i in "${!segments[@]}"
++ print 51
++ [[ -n 51 ]]
++ echo -en 51
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=51
+ [[ 51 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=51
+ for i in "${!segments[@]}"
++ print 100
++ [[ -n 100 ]]
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ print 75
++ [[ -n 75 ]]
++ echo -en 75
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=75
+ [[ 75 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=75
+ local 'segments=198 51 100 75'
+ local fixed_address=198.51.100.75
+ [[ -n '' ]]
+ [[ 198.51.100.75 != \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=172.18.1.20
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.18.1.20 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '18' '1' '20')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 172
++ [[ -n 172 ]]
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ print 18
++ [[ -n 18 ]]
++ echo -en 18
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=18
+ [[ 18 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=18
+ for i in "${!segments[@]}"
++ print 1
++ [[ -n 1 ]]
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ print 20
++ [[ -n 20 ]]
++ echo -en 20
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=20
+ [[ 20 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=20
+ local 'segments=172 18 1 20'
+ local fixed_address=172.18.1.20
+ [[ -n '' ]]
+ [[ 172.18.1.20 != \1\7\2\.\1\8\.\1\.\2\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=10.10.10.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.10.10.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '10' '10' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ print 10
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=10 10 10 10'
+ local fixed_address=10.10.10.10
+ [[ -n '' ]]
+ [[ 10.10.10.10 != \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=192.168.100.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.100.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '100' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 192
++ [[ -n 192 ]]
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ print 168
++ [[ -n 168 ]]
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ print 100
++ [[ -n 100 ]]
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ print 100
++ [[ -n 100 ]]
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 100 100'
+ local fixed_address=192.168.100.100
+ [[ -n '' ]]
+ [[ 192.168.100.100 != \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_listing_raw[@]}"
+ target_address=172.31.255.254
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.31.255.254 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '31' '255' '254')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ print 172
++ [[ -n 172 ]]
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ print 31
++ [[ -n 31 ]]
++ echo -en 31
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=31
+ [[ 31 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=31
+ for i in "${!segments[@]}"
++ print 255
++ [[ -n 255 ]]
++ echo -en 255
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=255
+ [[ 255 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=255
+ for i in "${!segments[@]}"
++ print 254
++ [[ -n 254 ]]
++ echo -en 254
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=254
+ [[ 254 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=254
+ local 'segments=172 31 255 254'
+ local fixed_address=172.31.255.254
+ [[ -n '' ]]
+ [[ 172.31.255.254 != \1\7\2\.\3\1\.\2\5\5\.\2\5\4 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ [[ 15 -eq 0 ]]
+ mapfile -t site_folders
++ cut -d/ -f2 .cache/configs.list
++ sort -u
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ print cisco,misc
++ [[ -n cisco,misc ]]
++ echo -en cisco,misc
+ message 'Site Folders: cisco,misc'
+ [[ -n Site Folders: cisco,misc ]]
+ local 'message=Site Folders: cisco,misc'
+ print 'Site Folders: cisco,misc'
+ [[ -n Site Folders: cisco,misc ]]
+ echo -en 'Site Folders: cisco,misc'
Site Folders: cisco,misc+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local batch_size=5
+ for site in "${site_folders[@]}"
+ filtered_target_listing=()
+ oIFS=' 
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /cisco/ .cache/configs.list
++ printf '\0'
+ IFS=' 
'
+ total_files=8
+ [[ true == true ]]
+ message '[BATCH] Processing folder: [cisco]'
+ [[ -n [BATCH] Processing folder: [cisco] ]]
+ local 'message=[BATCH] Processing folder: [cisco]'
+ print '[BATCH] Processing folder: [cisco]'
+ [[ -n [BATCH] Processing folder: [cisco] ]]
+ echo -en '[BATCH] Processing folder: [cisco]'
[BATCH] Processing folder: [cisco]+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message '[BATCH] Found 8 config files'
+ [[ -n [BATCH] Found 8 config files ]]
+ local 'message=[BATCH] Found 8 config files'
+ print '[BATCH] Found 8 config files'
+ [[ -n [BATCH] Found 8 config files ]]
+ echo -en '[BATCH] Found 8 config files'
[BATCH] Found 8 config files+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ rm -rf ./targets
+ [[ -d ./targets ]]
+ [[ -d ./targets ]]
+ rm -rf .local/jobs
+ [[ -d .local/jobs ]]
+ [[ -d .local/jobs ]]
+ stat_flush_success=true
+ find .local/stats/ -type f -name '*.jobs'
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:04Z
+ timestamp='[2025-05-17T01:31:04Z] Flushed'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:04Z
+ printf '%s\n' '[2025-05-17T01:31:04Z] Flushed'
+ grep -qF '[2025-05-17T01:31:04Z] Flushed' .local/stats/reports.jobs
+ read -r stat_file
+ [[ true != true ]]
+ mkdir -p targets .local/errors .local/jobs .local/stats
+ offset=0
+ [[ 0 -lt 8 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747445464840898000 29821
+ export batch_id=MTc0NzQ0NTQ2
+ batch_id=MTc0NzQ0NTQ2
++ date +%s
+ batch_suffix=1747445464-20495
+ batch_configs_list=configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ BATCH_CONFIGS=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ export BATCH_CONFIGS
+ touch /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ range_first=1
+ range_last=5
+ message '[ MTc0NzQ0NTQ2 ] Files 1 -> 5'
+ [[ -n [ MTc0NzQ0NTQ2 ] Files 1 -> 5 ]]
+ local 'message=[ MTc0NzQ0NTQ2 ] Files 1 -> 5'
+ print '[ MTc0NzQ0NTQ2 ] Files 1 -> 5'
+ [[ -n [ MTc0NzQ0NTQ2 ] Files 1 -> 5 ]]
+ echo -en '[ MTc0NzQ0NTQ2 ] Files 1 -> 5'
[ MTc0NzQ0NTQ2 ] Files 1 -> 5+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ list_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ basename /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local base=configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ dirname /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local parent=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzQ0NTQ2-1747445464-20495.list
'
+ format_common+='Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzQ0NTQ2-1747445464-20495.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzQ0NTQ2-1747445464-20495.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
File: configs--MTc0NzQ0NTQ2-1747445464-20495.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: 110 bytes
Blocks/Inode: 8 / 18422615
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 16 18:31:04 2025
Modify: May 16 18:31:04 2025
Change: May 16 18:31:04 2025
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list] ]]
+ local 'message=Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list]'
+ print 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list] ]]
+ echo -en 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list]'
Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445464-20495.list]+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ case "${target_file}" in
+ cat /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg
configs/cisco/fw5.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ message '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ local 'message=[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list'
+ print '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list ]]
+ echo -en '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list'
[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=31988
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 31988)'
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 31988) ]]
+ local ip_addr=10.0.0.1
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 31988)'
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ job_pid=31994
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 31994)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 31994) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 31994)'
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw5.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw5.cfg ]]
+ config_json='[]'
+ newline
+ local count=1
+ IFS=
+ read -r config_file
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=10.0.1.2
+ for ip_addr in "${target_listing[@]}"
+ config_file=cisco/fw1.cfg
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ wc -l
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ target_file=targets/10.0.2.3.json
+ config_lines='      68'
+ job_pid=32002
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 32002)'
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw4.cfg'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 32002) ]]
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw4.cfg ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 32002)'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ wc -l
++ print 192.168.1.10
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d ' '
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ target_file=targets/192.168.1.10.json
+ config_lines='      43'
+ job_pid=32014
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 32014)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 32014) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 32014)'
+ newline
+ local matched_files=configs/cisco/fw3.cfg
+ [[ -n configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ local count=1
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ IFS=
+ read -r config_file
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ (( i = 0 ))
+ (( i < count ))
+ config_file=cisco/fw3.cfg
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw2.cfg
+ match_count=3
+ site=cisco
+ device=fw1.cfg
++ wc -l
++ wc -l
++ tr -d ' '
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      55'
+ match_count=3
+ site=cisco
+ device=fw2.cfg
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw3.cfg'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw3.cfg
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ job_pid=32034
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 32034)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 32034) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 32034)'
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ match_count=3
+ site=cisco
+ device=fw3.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw5.cfg
+ config_lines='      68'
++ wc -l
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw4.cfg'
+ ip_cleaned=192.168.2.12
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw4.cfg ]]
+ target_file=targets/192.168.2.12.json
+ config_json='[]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg
+ config_file=cisco/fw2.cfg
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ job_pid=32052
++ tr -d ' '
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 32052)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 32052) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 32052)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ wc -l
+ for ip_addr in "${target_listing[@]}"
++ wc -l
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ wc -l
+ config_lines='      40'
+ config_lines='      43'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw5.cfg
++ wc -l
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ tr -d ' '
+ local matched_files=configs/cisco/fw5.cfg
+ [[ -n configs/cisco/fw5.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw5.cfg
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw2.cfg
++ wc -l
++ wc -l
+ job_pid=32071
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 32071)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 32071) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 32071)'
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ IFS=
+ read -r config_file
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ config_lines='      29'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw4.cfg
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ jq '{ configs: . }'
++ tr -d '\r'
+ match_count=3
+ site=cisco
+ device=fw5.cfg
++ wc -l
++ tr -d ' '
+ local matched_files=configs/cisco/fw3.cfg
+ [[ -n configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_lines='      40'
+ config_file=cisco/fw3.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ wc -l
+ match_count=1
+ site=cisco
+ device=fw2.cfg
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw5.cfg
++ wc -l
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
+ config_file=cisco/fw3.cfg
++ [[ -n [] ]]
++ echo -en '[]'
+ ip_cleaned=172.16.1.6
++ wc -l
+ target_file=targets/172.16.1.6.json
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ job_pid=32103
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 32103)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 32103) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 32103)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ match_count=1
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ site=cisco
+ device=fw4.cfg
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
+ config_lines='      55'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
+ IFS=
    }
  ]
+ read -r config_file
}'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ jq -r
+ config_lines='      55'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=cisco
+ device=fw5.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw3.cfg
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ wc -l
++ jq '{ configs: . }'
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw3.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ tr -d ' '
++ wc -l
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw5.cfg'
+ config_file=cisco/fw4.cfg
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw5.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
++ tr -d ' '
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
++ wc -l
+ job_pid=32129
+ job_pids+=("${job_pid}")
++ wc -l
+ job_ip_map["$job_pid"]=192.0.2.50
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 32129)'
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 32129) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 32129)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ match_count=3
+ site=cisco
+ device=fw3.cfg
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ print '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
+ return 0
+ match_count=1
+ site=cisco
++ print 203.0.113.25
+ device=fw3.cfg
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  }
] ]]
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
++ echo -en '[
    "count": 1
+ final_json='{
  {
  }
]'
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 3
    }
  ]
    "config": {
      "site": "cisco",
}'
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  }
]'
+ config_lines='      29'
+ jq -r
+ IFS=
+ read -r config_file
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      43'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw4.cfg
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw2.cfg
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
++ wc -l
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
++ wc -l
++ tr -d ' '
+ job_pid=32158
++ wc -l
+ job_pids+=("${job_pid}")
++ tr -d ' '
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 32158)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 32158) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 32158)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ return 0
++ tr -d '\r'
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
+ match_count=1
+ site=cisco
+ device=fw4.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ jq '{ configs: . }'
+ match_count=1
+ site=cisco
+ device=fw2.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ jq '{ configs: . }'
++ print '[]'
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ return 0
+ ip_cleaned=198.51.100.75
+ config_lines='      68'
+ target_file=targets/198.51.100.75.json
+ job_pid=32181
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ local 'matched_files=configs/cisco/fw1.cfg
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 32181)'
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 32181) ]]
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw3.cfg ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 32181)'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ config_file=cisco/fw1.cfg
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ jq -r
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ grep -oE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ wc -l
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d ' '
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ IFS=
+ read -r config_file
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw5.cfg
+ print '\n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json'
+ return 0
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw5.cfg'
+ job_pid=32199
+ job_pids+=("${job_pid}")
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw5.cfg ]]
+ config_lines='      68'
+ config_json='[]'
+ IFS=
+ read -r config_file
+ match_count=4
+ config_file=cisco/fw2.cfg
+ site=cisco
+ device=fw1.cfg
+ job_ip_map["$job_pid"]=172.18.1.20
++ jq '{ configs: . }'
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 32199)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 32199) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 32199)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ print '[]'
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ [[ -n [] ]]
++ echo -en '[]'
++ wc -l
++ tr -d ' '
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print 10.10.10.10
++ tr -d '\r'
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
+ print '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ return 0
+ config_lines='      40'
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ return 0
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw5.cfg
+ ip_cleaned=10.10.10.10
+ local matched_files=configs/cisco/fw4.cfg
+ target_file=targets/10.10.10.10.json
+ [[ -n configs/cisco/fw4.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_lines='      43'
+ config_file=cisco/fw4.cfg
++ wc -l
+ job_pid=32218
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 32218)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 32218) ]]
++ tr -d ' '
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 32218)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ wc -l
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw2.cfg
+ match_count=5
+ site=cisco
+ device=fw1.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 4
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
++ tr -d '\r'
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ match_count=5
+ site=cisco
+ device=fw5.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 4
  }
]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 4
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 4
  }
]'
++ jq '{ configs: . }'
+ config_lines='      29'
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ ip_cleaned=192.168.100.100
+ target_file=targets/192.168.100.100.json
+ print '\n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json ]]
++ grep -oE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw4.cfg
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json'
++ wc -l
+ return 0
+ match_count=3
+ site=cisco
+ device=fw2.cfg
+ job_pid=32243
+ job_pids+=("${job_pid}")
++ wc -l
+ job_ip_map["$job_pid"]=192.168.100.100
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 32243)'
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 32243) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 32243)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ tr -d ' '
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en 172.31.255.254
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 4
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
+ config_lines='      68'
+ match_count=2
++ wc -l
+ site=cisco
+ device=fw4.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ wc -l
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw4.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw2.cfg
configs/cisco/fw4.cfg ]]
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[]'
+ IFS=
+ read -r config_file
++ tr -d ' '
+ config_file=cisco/fw1.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
]'
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
++ jq '{ configs: . }'
++ wc -l
+ job_pid=32269
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 32269)'
+ IFS=
+ read -r config_file
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 32269) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 32269)'
+ config_file=cisco/fw5.cfg
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=172.31.255.254
+ local target_file=targets/172.31.255.254.json
+ ((  15 > 0  ))
+ valid_job_pids=()
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445464-20495.list
+ for pid in "${job_pids[@]}"
+ kill -0 31988
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 31988)'
+ config_lines='      43'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 31988) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 31988)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 31994
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 31994)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 31994) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 31994)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32002
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 32002)'
++ wc -l
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 32002) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 32002)'
++ grep -lE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32014
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 32014)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 32014) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 32014)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32034
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 32034)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 32034) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 32034)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32052
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 32052)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 32052) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 32052)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32071
+ match_count=3
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 32071)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 32071) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 32071)'
+ site=cisco
+ newline
+ device=fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32103
++ wc -l
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw2.cfg
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32129
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32158
+ valid_job_pids+=("$pid")
++ tr -d ' '
+ for pid in "${job_pids[@]}"
+ kill -0 32181
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32199
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32218
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32243
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32269
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ config_lines='      68'
+ print '\n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json'
+ return 0
+ config_lines='      40'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ true
++ wc -l
++ tr -d ' '
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=
+ match_count=3
+ [[ -n '' ]]
+ return 0
+ site=cisco
+ device=fw2.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
    },
    {
      "config": {
        "site": "cisco",
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw5.cfg
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 5
    }
  ]
}'
+ jq -r
++ wc -l
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  }
]'
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=3
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      68' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_file=cisco/fw3.cfg
++ wc -l
+ match_count=2
+ site=cisco
+ device=fw5.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 2
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ wc -l
+ config_lines='      55'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
+ config_lines='      55'
++ wc -l
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw3.cfg
+ print '\n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json'
+ return 0
++ wc -l
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 2
  }
]'
++ jq '{ configs: . }'
+ config_lines='      43'
+ match_count=5
+ site=cisco
+ device=fw3.cfg
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw2.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
++ wc -l
+ match_count=1
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site=cisco
+ device=fw3.cfg
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=cisco
+ device=fw2.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 2
    }
  ]
}'
+ jq -r
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
] ]]
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  }
]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ wc -l
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ print '\n[INFO] Generated JSON for IP: 198.51.100.75 at targets/198.51.100.75.json'
+ [[ -n \n[INFO] Generated JSON for IP: 198.51.100.75 at targets/198.51.100.75.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 198.51.100.75 at targets/198.51.100.75.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
++ wc -l
+ config_lines='      29'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw4.cfg
++ wc -l
++ tr -d ' '
+ config_lines='      29'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 5
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 1
    }
  ]
}'
+ jq -r
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw4.cfg
++ wc -l
+ match_count=2
+ site=cisco
+ device=fw4.cfg
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=1
+ site=cisco
+ device=fw4.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ jq '{ configs: . }'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 68,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
++ jq '{ configs: . }'
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 5
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 2
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 68,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ return 0
+ print '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ return 0
+ ((  8 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 32103
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 32103)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 32103) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 32103)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32129
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 32129)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 32129) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 32129)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32158
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 32158)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 32158) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 32158)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32181
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 32181)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 32181) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 32181)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32199
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 32199)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 32199) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 32199)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32218
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 32218)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 32218) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 32218)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32243
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 32243)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 32243) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 32243)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32269
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 32269)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 32269) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 32269)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ local total_requested=15
+ local total_mapped=14
+ message 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ local 'message=Total IPs requested: 15'
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total IPs mapped:    14'
+ [[ -n Total IPs mapped:    14 ]]
+ local 'message=Total IPs mapped:    14'
+ print 'Total IPs mapped:    14'
+ [[ -n Total IPs mapped:    14 ]]
+ echo -en 'Total IPs mapped:    14'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '\nUnmapped IPs:        1'
+ [[ -n \nUnmapped IPs:        1 ]]
+ local 'message=\nUnmapped IPs:        1'
+ print '\nUnmapped IPs:        1'
+ [[ -n \nUnmapped IPs:        1 ]]
+ echo -en '\nUnmapped IPs:        1'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ print '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ echo -en '  - 172.31.255.254'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=14
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %02d 1
+ padded_index=01
+ job_pid=32485
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 32485)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 32485) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 32485)'
+ parse_configs 10.0.0.1 01
+ local ip_addr=10.0.0.1
+ newline
+ local count=1
+ (( i = 0 ))
+ local padded_index=01
+ (( i < count ))
+ echo
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 2
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=02
+ job_pid=32489
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 32489)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 32489) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 32489)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.0.1.2 02
+ local ip_addr=10.0.1.2
+ local padded_index=02
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=03
+ job_pid=32493
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 32493)'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 32493) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 32493)'
+ parse_configs 10.0.2.3 03
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local ip_addr=10.0.2.3
+ echo

+ (( i++ ))
+ (( i < count ))
+ local padded_index=03
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
++ IFS=,
++ printf %02d 4
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ padded_index=04
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=01 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=32496
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 32496)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 32496) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 32496)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
+ parse_configs 192.168.1.10 04
+ local ip_addr=192.168.1.10
+ local padded_index=04
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 5
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=02 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=05
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ parse_configs 192.168.1.11 05
+ local ip_addr=192.168.1.11
+ local padded_index=05
+ job_pid=32502
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 32502)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 32502) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 32502)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 6
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=06
+ logfile=.local/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=03 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=32507
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 32507)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 32507) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 32507)'
+ parse_configs 192.168.2.12 06
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ local ip_addr=192.168.2.12
+ ip_addr=172.16.0.5
+ local padded_index=06
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=04 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 7
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=07
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=32512
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 32512)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 32512) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 32512)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
+ parse_configs 172.16.0.5 07
+ logfile=.local/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=05 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local ip_addr=172.16.0.5
+ local padded_index=07
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 8
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=08
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=32517
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 32517)'
+ parse_configs 172.16.1.6 08
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 32517) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 32517)'
+ local ip_addr=172.16.1.6
+ local padded_index=08
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
+ logfile=.local/jobs/192.168.2.12.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.2.12 --index=06 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 9
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=09
+ job_pid=32525
+ logfile=.local/jobs/172.16.0.5.job
+ [[ true == true ]]
+ job_pids+=("${job_pid}")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=07 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 192.0.2.50 09
+ job_ip_map["$job_pid"]=192.0.2.50
+ local ip_addr=192.0.2.50
+ local padded_index=09
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 32525)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 32525) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 32525)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 10
+ padded_index=10
+ job_pid=32532
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 32532)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 32532) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 32532)'
+ newline
+ local count=1
+ parse_configs 203.0.113.25 10
+ (( i = 0 ))
+ local ip_addr=203.0.113.25
+ (( i < count ))
+ local padded_index=10
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 11
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=08 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=11
+ logfile=.local/jobs/192.0.2.50.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=09 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=32538
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 32538)'
+ parse_configs 198.51.100.75 11
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 32538) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 32538)'
+ local ip_addr=198.51.100.75
+ local padded_index=11
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
++ printf %02d 12
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=10 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ padded_index=12
+ job_pid=32547
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 32547)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 32547) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 32547)'
+ parse_configs 172.18.1.20 12
+ local ip_addr=172.18.1.20
+ local padded_index=12
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ printf %02d 13
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=13
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=32558
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 32558)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 32558) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 32558)'
+ parse_configs 10.10.10.10 13
+ local ip_addr=10.10.10.10
+ local padded_index=13
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
+ logfile=.local/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=11 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 14
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=14
+ job_pid=32571
+ job_pids+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 32571)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 32571) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 32571)'
+ newline
+ parse_configs 192.168.100.100 14
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ((  14 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ local ip_addr=192.168.100.100
+ kill -0 32485
+ local padded_index=14
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32489
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32493
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32496
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32502
+ [[ true == true ]]
+ execute+=(--debug+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32507
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32512
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32517
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32525
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32532
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32538
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32547
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32558
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32571
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ logfile=.local/jobs/172.18.1.20.job
)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ [[ true == true ]]
++ IFS=,
++ print cfg,conf,cnf
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=12 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=13 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=14 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.2.12'
+ [[ -n \n[DONE] IP: 192.168.2.12 ]]
+ echo -en '\n[DONE] IP: 192.168.2.12'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.18.1.20'
+ [[ -n \n[DONE] IP: 172.18.1.20 ]]
+ echo -en '\n[DONE] IP: 172.18.1.20'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.11'
+ [[ -n \n[DONE] IP: 192.168.1.11 ]]
+ echo -en '\n[DONE] IP: 192.168.1.11'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.2.3'
+ [[ -n \n[DONE] IP: 10.0.2.3 ]]
+ echo -en '\n[DONE] IP: 10.0.2.3'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.0.5'
+ [[ -n \n[DONE] IP: 172.16.0.5 ]]
+ echo -en '\n[DONE] IP: 172.16.0.5'
+ return 0
+ ((  14 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 32485
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32489
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32493
+ ip=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 32493)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 32493) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 32493)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32496
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 32496)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 32496) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 32496)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32502
+ ip=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 32502)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 32502) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 32502)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32507
+ ip=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 32507)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 32507) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 32507)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32512
+ ip=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 32512)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 32512) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 32512)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32517
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32525
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32532
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32538
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32547
+ ip=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 32547)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 32547) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 32547)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32558
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 32571
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.0.2.50'
+ [[ -n \n[DONE] IP: 192.0.2.50 ]]
+ echo -en '\n[DONE] IP: 192.0.2.50'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 198.51.100.75'
+ [[ -n \n[DONE] IP: 198.51.100.75 ]]
+ echo -en '\n[DONE] IP: 198.51.100.75'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.100.100'
+ [[ -n \n[DONE] IP: 192.168.100.100 ]]
+ echo -en '\n[DONE] IP: 192.168.100.100'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.1.6'
+ [[ -n \n[DONE] IP: 172.16.1.6 ]]
+ echo -en '\n[DONE] IP: 172.16.1.6'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.10.10.10'
+ [[ -n \n[DONE] IP: 10.10.10.10 ]]
+ echo -en '\n[DONE] IP: 10.10.10.10'
+ return 0
+ ((  8 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 32485
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 32485)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 32485) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 32485)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32489
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 32489)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 32489) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 32489)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32517
+ ip=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 32517)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 32517) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 32517)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32525
+ ip=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 32525)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 32525) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 32525)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32532
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 32532)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 32532) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 32532)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32538
+ ip=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 32538)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 32538) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 32538)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32558
+ ip=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 32558)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 32558) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 32558)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 32571
+ ip=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 32571)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 32571) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 32571)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ generate_csvoutput
+ local json_dir=reports/json
+ [[ ! -d reports/json ]]
+ find reports/json -type f -name '*.json'
+ sort
reports/json/10.0.0.1.json
reports/json/10.0.1.2.json
reports/json/10.0.2.3.json
reports/json/10.10.10.10.json
reports/json/172.16.0.5.json
reports/json/172.16.1.6.json
reports/json/172.18.1.20.json
reports/json/192.0.2.50.json
reports/json/192.168.1.10.json
reports/json/192.168.1.11.json
reports/json/192.168.100.100.json
reports/json/192.168.2.12.json
reports/json/198.51.100.75.json
reports/json/203.0.113.25.json
+ find reports/json -type f -name '*.json'
+ sort
+ read -r json
+ message 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ local 'message=Processing reports/json/10.0.0.1.json'
+ print 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ echo -en 'Processing reports/json/10.0.0.1.json'
Processing reports/json/10.0.0.1.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.0.1.json
+ read -r json
+ message 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ local 'message=Processing reports/json/10.0.1.2.json'
+ print 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ echo -en 'Processing reports/json/10.0.1.2.json'
Processing reports/json/10.0.1.2.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.1.2.json
+ read -r json
+ message 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ local 'message=Processing reports/json/10.0.2.3.json'
+ print 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ echo -en 'Processing reports/json/10.0.2.3.json'
Processing reports/json/10.0.2.3.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.2.3.json
+ read -r json
+ message 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ local 'message=Processing reports/json/10.10.10.10.json'
+ print 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ echo -en 'Processing reports/json/10.10.10.10.json'
Processing reports/json/10.10.10.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.10.10.10.json
+ read -r json
+ message 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ local 'message=Processing reports/json/172.16.0.5.json'
+ print 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ echo -en 'Processing reports/json/172.16.0.5.json'
Processing reports/json/172.16.0.5.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.0.5.json
+ read -r json
+ message 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ local 'message=Processing reports/json/172.16.1.6.json'
+ print 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ echo -en 'Processing reports/json/172.16.1.6.json'
Processing reports/json/172.16.1.6.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.1.6.json
+ read -r json
+ message 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ local 'message=Processing reports/json/172.18.1.20.json'
+ print 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ echo -en 'Processing reports/json/172.18.1.20.json'
Processing reports/json/172.18.1.20.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.18.1.20.json
+ read -r json
+ message 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ local 'message=Processing reports/json/192.0.2.50.json'
+ print 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ echo -en 'Processing reports/json/192.0.2.50.json'
Processing reports/json/192.0.2.50.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.0.2.50.json
+ read -r json
+ message 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ local 'message=Processing reports/json/192.168.1.10.json'
+ print 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ echo -en 'Processing reports/json/192.168.1.10.json'
Processing reports/json/192.168.1.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.10.json
+ read -r json
+ message 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ local 'message=Processing reports/json/192.168.1.11.json'
+ print 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ echo -en 'Processing reports/json/192.168.1.11.json'
Processing reports/json/192.168.1.11.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.11.json
+ read -r json
+ message 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ local 'message=Processing reports/json/192.168.100.100.json'
+ print 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ echo -en 'Processing reports/json/192.168.100.100.json'
Processing reports/json/192.168.100.100.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.100.100.json
+ read -r json
+ message 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ local 'message=Processing reports/json/192.168.2.12.json'
+ print 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ echo -en 'Processing reports/json/192.168.2.12.json'
Processing reports/json/192.168.2.12.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.2.12.json
+ read -r json
+ message 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ local 'message=Processing reports/json/198.51.100.75.json'
+ print 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ echo -en 'Processing reports/json/198.51.100.75.json'
Processing reports/json/198.51.100.75.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/198.51.100.75.json
+ read -r json
+ message 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ local 'message=Processing reports/json/203.0.113.25.json'
+ print 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ echo -en 'Processing reports/json/203.0.113.25.json'
Processing reports/json/203.0.113.25.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/203.0.113.25.json
+ read -r json
+ return 0
+ [[ 5 -lt 8 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
++ cut -c1-12
+++ date +%s%N
++ printf %s-%s 1747445467691225000 23878
+ export batch_id=MTc0NzQ0NTQ2
+ batch_id=MTc0NzQ0NTQ2
++ date +%s
+ batch_suffix=1747445467-18817
+ batch_configs_list=configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ BATCH_CONFIGS=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ export BATCH_CONFIGS
+ touch /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ printf '%s\n' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ range_first=6
+ range_last=8
+ message '[ MTc0NzQ0NTQ2 ] Files 6 -> 8'
+ [[ -n [ MTc0NzQ0NTQ2 ] Files 6 -> 8 ]]
+ local 'message=[ MTc0NzQ0NTQ2 ] Files 6 -> 8'
+ print '[ MTc0NzQ0NTQ2 ] Files 6 -> 8'
+ [[ -n [ MTc0NzQ0NTQ2 ] Files 6 -> 8 ]]
+ echo -en '[ MTc0NzQ0NTQ2 ] Files 6 -> 8'
[ MTc0NzQ0NTQ2 ] Files 6 -> 8+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ list_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ basename /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local base=configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ dirname /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local parent=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzQ0NTQ2-1747445467-18817.list
'
+ format_common+='Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzQ0NTQ2-1747445467-18817.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzQ0NTQ2-1747445467-18817.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
File: configs--MTc0NzQ0NTQ2-1747445467-18817.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: 66 bytes
Blocks/Inode: 8 / 18422725
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 16 18:31:07 2025
Modify: May 16 18:31:07 2025
Change: May 16 18:31:07 2025
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list] ]]
+ local 'message=Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list]'
+ print 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list] ]]
+ echo -en 'Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list]'
Batch-Config file: [configs--MTc0NzQ0NTQ2-1747445467-18817.list]+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ case "${target_file}" in
+ cat /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
configs/cisco/fw6.cfg
configs/cisco/fw7.cfg
configs/cisco/fw8.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ message '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ local 'message=[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list'
+ print '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list ]]
+ echo -en '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list'
[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=36044
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 36044)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 36044) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 36044)'
+ newline
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ local ip_addr=10.0.0.1
+ (( i++ ))
+ (( i < count ))
+ local target_file=targets/10.0.0.1.json
+ for ip_addr in "${target_listing[@]}"
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local matched_files=configs/cisco/fw8.cfg
+ [[ -n configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ job_pid=36050
+ config_file=cisco/fw8.cfg
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 36050)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 36050) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 36050)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
++ wc -l
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      21'
+ ip_cleaned=10.0.2.3
+ target_file=targets/10.0.2.3.json
+ local matched_files=configs/cisco/fw6.cfg
+ [[ -n configs/cisco/fw6.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw6.cfg
+ job_pid=36059
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
++ wc -l
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw8.cfg
++ wc -l
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 36059)'
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 36059) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 36059)'
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ tr -d ' '
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ tr -d '\r'
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
+ config_lines='      26'
+ match_count=1
+ site=cisco
+ device=fw8.cfg
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw6.cfg
++ wc -l
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ ip_cleaned=192.168.1.10
+ target_file=targets/192.168.1.10.json
++ tr -d ' '
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw7.cfg
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ job_pid=36077
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 36077)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 36077) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 36077)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ wc -l
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 192.168.1.11
++ tr -d '\r'
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
+ match_count=1
+ site=cisco
+ device=fw6.cfg
+ config_lines='      31'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw7.cfg
++ wc -l
++ tr -d ' '
+ local matched_files=configs/cisco/fw6.cfg
+ [[ -n configs/cisco/fw6.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw6.cfg
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
+ job_pid=36093
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 36093)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 36093) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 36093)'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ match_count=1
+ site=cisco
+ device=fw7.cfg
+ config_lines='      26'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ print '[]'
++ true
++ [[ -n [] ]]
++ echo -en '[]'
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw6.cfg
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ wc -l
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ tr -d ' '
+ ip_cleaned=192.168.2.12
+ target_file=targets/192.168.2.12.json
+ job_pid=36113
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 36113)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 36113) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 36113)'
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ local ip_addr=192.168.2.12
+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw8.cfg"
      },
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq -r
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 172.16.0.5
++ tr -d '\r'
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
+ match_count=2
+ site=cisco
+ device=fw6.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
+ job_pid=36125
+ local matched_files=configs/cisco/fw8.cfg
+ [[ -n configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw8.cfg
+ job_pids+=("${job_pid}")
++ jq '{ configs: . }'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
+ job_ip_map["$job_pid"]=172.16.0.5
    "count": 1
  }
]'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 36125)'
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 36125) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 36125)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ wc -l
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ return 0
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      21'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
+ local matched_files=configs/cisco/fw8.cfg
++ jq '{ configs: . }'
+ [[ -n configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw8.cfg
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw8.cfg
++ wc -l
++ wc -l
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 1
    }
  ]
}'
+ jq -r
+ ip_cleaned=172.16.1.6
++ tr -d ' '
+ target_file=targets/172.16.1.6.json
+ job_pid=36145
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 36145)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 36145) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 36145)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ config_lines='      21'
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 2
    }
  ]
}'
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw8.cfg
+ jq -r
+ match_count=1
+ site=cisco
+ device=fw8.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
+ print '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
+ return 0
+ job_pid=36159
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 36159)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 36159) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 36159)'
+ newline
+ local count=1
+ (( i = 0 ))
+ match_count=2
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ site=cisco
+ for ip_addr in "${target_listing[@]}"
+ device=fw8.cfg
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
++ print '[]'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
++ [[ -n [] ]]
++ echo -en '[]'
+ return 0
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ job_pid=36171
+ config_file=cisco/fw7.cfg
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 36171)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 36171) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 36171)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ wc -l
++ print 198.51.100.75
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw8.cfg"
      },
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq -r
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ jq '{ configs: . }'
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
+ local 'matched_files=configs/cisco/fw6.cfg
configs/cisco/fw8.cfg'
+ config_lines='      31'
+ [[ -n configs/cisco/fw6.cfg
configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw6.cfg
+ job_pid=36183
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 36183)'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 36183) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 36183)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ wc -l
++ wc -l
++ grep -oE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw7.cfg
++ tr -d ' '
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 172.18.1.20
++ tr -d '\r'
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
+ print '\n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.2.12 at targets/192.168.2.12.json'
+ return 0
+ config_lines='      26'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw8.cfg"
      },
      "lines": 21,
      "count": 2
    }
  ]
}'
+ jq -r
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw6.cfg
++ true
++ wc -l
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
++ tr -d ' '
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=36200
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 36200)'
+ match_count=3
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 36200) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 36200)'
+ site=cisco
+ device=fw7.cfg
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ match_count=2
+ site=cisco
+ device=fw6.cfg
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ print '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ return 0
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=10.10.10.10
+ target_file=targets/10.10.10.10.json
+ job_pid=36212
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 36212)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 36212) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 36212)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
++ jq '{ configs: . }'
+ ip_cleaned=192.168.100.100
+ target_file=targets/192.168.100.100.json
+ local matched_files=configs/cisco/fw6.cfg
+ [[ -n configs/cisco/fw6.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw6.cfg
+ job_pid=36221
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 36221)'
+ IFS=
+ read -r config_file
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 36221) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 36221)'
+ config_file=cisco/fw8.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
++ wc -l
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ wc -l
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 3
    }
  ]
}'
+ config_lines='      21'
+ jq -r
+ config_lines='      26'
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw7.cfg
+ job_pid=36234
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 36234)'
++ wc -l
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 36234) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 36234)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  15 > 0  ))
+ valid_job_pids=()
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ for pid in "${job_pids[@]}"
+ kill -0 36044
+ local ip_addr=172.31.255.254
+ local target_file=targets/172.31.255.254.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ2-1747445467-18817.list
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 36044)'
++ wc -l
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 36044) ]]
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw6.cfg
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 36044)'
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw8.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36050
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 36050)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 36050) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 36050)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36059
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 36059)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 36059) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 36059)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36077
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 36077)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 36077) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 36077)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36093
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 36093)'
++ grep -lE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 36093) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 36093)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36113
++ tr -d ' '
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 36113)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 36113) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 36113)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36125
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 36125)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 36125) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 36125)'
+ newline
++ tr -d ' '
++ wc -l
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36145
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 36145)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 36145) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 36145)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36159
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36171
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36183
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 36183)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 36183) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 36183)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36200
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 36200)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 36200) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 36200)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36212
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36221
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36234
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ config_lines='      31'
+ match_count=1
+ site=cisco
+ device=fw8.cfg
+ match_count=1
+ site=cisco
+ device=fw6.cfg
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw7.cfg
+ print '\n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
] ]]
+ [[ -n \n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.0.2.50 at targets/192.0.2.50.json'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  }
]'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw7.cfg
+ return 0
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ tr -d ' '
++ print '[]'
++ wc -l
++ [[ -n [] ]]
++ echo -en '[]'
++ wc -l
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=2
+ site=cisco
+ device=fw7.cfg
+ config_lines='      31'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ grep -oE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/cisco/fw7.cfg
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ wc -l
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
+ config_json='[
    "count": 1
  {
  }
    "config": {
]'
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ match_count=1
+ site=cisco
+ device=fw7.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ jq '{ configs: . }'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 2
    },
    {
+ final_json='{
      "config": {
  "configs": [
        "site": "cisco",
    {
        "device": "fw8.cfg"
      "config": {
      },
        "site": "cisco",
      "lines": 21,
        "device": "fw6.cfg"
      "count": 1
      },
    }
      "lines": 26,
  ]
      "count": 1
}'
    }
  ]
}'
+ jq -r
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 2
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ print '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ return 0
+ [[ -n \n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ return 0
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ return 0
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 36159
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 36159)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 36159) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 36159)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36171
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 36171)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 36171) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 36171)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36212
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 36212)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 36212) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 36212)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36221
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 36221)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 36221) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 36221)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36234
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 36234)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 36234) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 36234)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=29
+ message 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ local 'message=Total IPs requested: 15'
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total IPs mapped:    29'
+ [[ -n Total IPs mapped:    29 ]]
+ local 'message=Total IPs mapped:    29'
+ print 'Total IPs mapped:    29'
+ [[ -n Total IPs mapped:    29 ]]
+ echo -en 'Total IPs mapped:    29'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '\nUnmapped IPs:        -14'
+ [[ -n \nUnmapped IPs:        -14 ]]
+ local 'message=\nUnmapped IPs:        -14'
+ print '\nUnmapped IPs:        -14'
+ [[ -n \nUnmapped IPs:        -14 ]]
+ echo -en '\nUnmapped IPs:        -14'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=29
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %02d 1
+ padded_index=01
+ job_pid=36393
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 36393)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 36393) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 36393)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.0.1 01
+ local ip_addr=10.0.0.1
+ local padded_index=01
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ printf %02d 2
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ padded_index=02
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36396
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 36396)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 36396) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 36396)'
+ parse_configs 10.0.1.2 02
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=10.0.1.2
+ ((  ip_index < total_ips  ))
+ local padded_index=02
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ ip_addr=10.0.2.3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ padded_index=03
+ mkdir -p .local/jobs .local/errors
+ job_pid=36401
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 36401)'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 36401) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 36401)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 10.0.2.3 03
+ local ip_addr=10.0.2.3
+ local padded_index=03
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=01 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 4
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=04
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36405
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 36405)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 36405) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 36405)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
+ parse_configs 192.168.1.10 04
+ local ip_addr=192.168.1.10
+ local padded_index=04
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=02 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 5
+ padded_index=05
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=36410
+ job_pids+=("${job_pid}")
+ [[ true == true ]]
+ job_ip_map["$job_pid"]=192.168.1.11
+ execute+=(--classify)
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 36410)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 36410) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 36410)'
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ newline
+ parse_configs 192.168.1.11 05
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ local ip_addr=192.168.1.11
+ (( i++ ))
+ (( i < count ))
+ local padded_index=05
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
+ logfile=.local/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=03 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
++ printf %02d 6
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=06
+ job_pid=36416
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 36416)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 36416) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 36416)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=04 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 192.168.2.12 06
+ local ip_addr=192.168.2.12
+ local padded_index=06
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 7
+ padded_index=07
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ job_pid=36420
++ echo -en cfg,conf,cnf
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 36420)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 36420) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 36420)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ logfile=.local/jobs/192.168.1.11.job
+ ip_addr=172.16.1.6
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=05 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ parse_configs 172.16.0.5 07
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ local ip_addr=172.16.0.5
+ [[ true == true ]]
+ local padded_index=07
+ mkdir -p .local/jobs .local/errors
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 8
+ padded_index=08
+ job_pid=36427
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 36427)'
++ IFS=,
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 36427) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 36427)'
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ newline
++ echo -en cfg,conf,cnf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
+ parse_configs 172.16.1.6 08
+ local ip_addr=172.16.1.6
+ local padded_index=08
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 9
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=09
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36432
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 36432)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 36432) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 36432)'
+ parse_configs 192.0.2.50 09
+ local ip_addr=192.0.2.50
+ local padded_index=09
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ logfile=.local/jobs/192.168.2.12.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.2.12 --index=06 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 10
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=10
+ logfile=.local/jobs/172.16.0.5.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=07 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36439
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 36439)'
+ parse_configs 203.0.113.25 10
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 36439) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 36439)'
+ local ip_addr=203.0.113.25
+ local padded_index=10
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=08 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
++ printf %02d 11
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=11
+ logfile=.local/jobs/192.0.2.50.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=09 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36448
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 36448)'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 36448) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 36448)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ parse_configs 198.51.100.75 11
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
+ local ip_addr=198.51.100.75
+ local padded_index=11
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 12
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ padded_index=12
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=10 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36462
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 36462)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 36462) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 36462)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ printf %02d 13
+ parse_configs 172.18.1.20 12
+ local ip_addr=172.18.1.20
+ local padded_index=12
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=11 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ padded_index=13
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=36470
+ parse_configs 10.10.10.10 13
+ local ip_addr=10.10.10.10
+ job_pids+=("${job_pid}")
+ local padded_index=13
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 36470)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 36470) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 36470)'
+ [[ true == true ]]
+ execute+=(--classify)
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 14
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=14
+ job_pid=36483
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 36483)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 36483) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 36483)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
+ parse_configs 192.168.100.100 14
+ local ip_addr=192.168.100.100
+ local padded_index=14
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ printf %02d 15
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=12 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=15
+ job_pid=36494
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 36494)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 36494) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 36494)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ parse_configs 10.0.0.1 15
+ ip_addr=10.0.1.2
+ local ip_addr=10.0.0.1
+ local padded_index=15
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.10.10.10.job
+ [[ true == true ]]
++ IFS=,
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=13 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 16
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=16
+ job_pid=36509
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 36509)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 36509) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 36509)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=14 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.1.2 16
+ local ip_addr=10.0.1.2
+ local padded_index=16
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=15 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 17
+ padded_index=17
+ job_pid=36528
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 36528)'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 36528) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 36528)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 18
+ parse_configs 10.0.2.3 17
+ local ip_addr=10.0.2.3
+ local padded_index=17
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ padded_index=18
+ job_pid=36545
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 36545)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 36545) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 36545)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 19
+ parse_configs 192.168.1.10 18
+ local ip_addr=192.168.1.10
+ local padded_index=18
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=19
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=36558
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 36558)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 36558) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 36558)'
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=16 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ newline
+ mkdir -p .local/jobs .local/errors
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ parse_configs 192.168.1.11 19
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.2.12
+ local ip_addr=192.168.1.11
+ local padded_index=19
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 20
+ padded_index=20
+ logfile=.local/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=17 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ job_pid=36573
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 36573)'
+ parse_configs 192.168.2.12 20
+ local ip_addr=192.168.2.12
+ local padded_index=20
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 36573) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 36573)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
++ IFS=,
++ print cfg,conf,cnf
+ [[ true == true ]]
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 21
+ padded_index=21
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=18 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36598
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 36598)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 36598) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 36598)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
++ printf %02d 22
+ parse_configs 172.16.0.5 21
+ local ip_addr=172.16.0.5
+ local padded_index=21
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ padded_index=22
+ logfile=.local/jobs/192.168.1.11.job
+ [[ true == true ]]
+ logfile=.local/jobs/192.168.2.12.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=19 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.2.12 --index=20 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36629
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 36629)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 36629) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 36629)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
+ parse_configs 172.16.1.6 22
+ local ip_addr=172.16.1.6
+ local padded_index=22
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 23
+ padded_index=23
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36655
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 36655)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 36655) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 36655)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ parse_configs 192.0.2.50 23
+ local ip_addr=192.0.2.50
+ local padded_index=23
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/172.16.0.5.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=21 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 24
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=24
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=22 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36681
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 36681)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 36681) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 36681)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 203.0.113.25 24
+ local ip_addr=203.0.113.25
+ local padded_index=24
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 25
+ padded_index=25
+ job_pid=36725
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ logfile=.local/jobs/192.0.2.50.job
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 36725)'
+ [[ true == true ]]
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 36725) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 36725)'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=23 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
+ parse_configs 198.51.100.75 25
+ local ip_addr=198.51.100.75
+ local padded_index=25
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=24 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %02d 26
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=26
+ parse_configs 172.18.1.20 26
+ job_pid=36771
+ job_pids+=("${job_pid}")
+ local ip_addr=172.18.1.20
+ local padded_index=26
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 36771)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 36771) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 36771)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 27
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=27
+ logfile=.local/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=25 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36817
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 36817)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 36817) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 36817)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
+ parse_configs 10.10.10.10 27
+ local ip_addr=10.10.10.10
+ local padded_index=27
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 28
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=28
+ logfile=.local/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=26 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=36840
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 36840)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 36840) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 36840)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.31.255.254
+ parse_configs 192.168.100.100 28
+ local ip_addr=192.168.100.100
+ local padded_index=28
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 29
+ padded_index=29
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ logfile=.local/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=27 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=36881
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 36881)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 36881) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 36881)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ((  29 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 36393
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36396
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36401
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36405
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36410
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36416
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36420
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36427
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36432
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36439
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36448
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36462
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36470
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36483
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36494
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36509
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36528
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36545
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36558
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36573
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36598
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36629
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36655
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36681
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36725
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36771
+ valid_job_pids+=("$pid")
+ parse_configs 172.31.255.254 29
+ for pid in "${job_pids[@]}"
+ kill -0 36817
+ valid_job_pids+=("$pid")
+ local ip_addr=172.31.255.254
+ for pid in "${job_pids[@]}"
+ kill -0 36840
+ local padded_index=29
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36881
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=28 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/172.31.255.254.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=29 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.2.12'
+ [[ -n \n[DONE] IP: 192.168.2.12 ]]
+ echo -en '\n[DONE] IP: 192.168.2.12'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.10.10.10'
+ [[ -n \n[DONE] IP: 10.10.10.10 ]]
+ echo -en '\n[DONE] IP: 10.10.10.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.2.3'
+ [[ -n \n[DONE] IP: 10.0.2.3 ]]
+ echo -en '\n[DONE] IP: 10.0.2.3'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.2.12'
+ [[ -n \n[DONE] IP: 192.168.2.12 ]]
+ echo -en '\n[DONE] IP: 192.168.2.12'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.2.3'
+ [[ -n \n[DONE] IP: 10.0.2.3 ]]
+ echo -en '\n[DONE] IP: 10.0.2.3'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.10.10.10'
+ [[ -n \n[DONE] IP: 10.10.10.10 ]]
+ echo -en '\n[DONE] IP: 10.10.10.10'
+ return 0
+ ((  29 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 36393
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 36393)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 36393) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 36393)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36396
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 36396)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 36396) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 36396)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36401
+ ip=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 36401)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 36401) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 36401)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36405
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36410
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36416
+ ip=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 36416)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 36416) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 36416)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36420
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36427
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36432
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36439
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36448
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36462
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36470
+ ip=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 36470)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 36470) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 36470)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36483
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36494
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 36494)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 36494) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 36494)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36509
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 36509)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 36509) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 36509)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36528
+ ip=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 36528)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 36528) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 36528)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36545
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36558
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36573
+ ip=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 36573)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 36573) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 36573)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36598
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36629
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36655
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36681
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36725
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36771
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36817
+ ip=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 36817)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 36817) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 36817)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36840
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 36881
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.31.255.254'
+ [[ -n \n[DONE] IP: 172.31.255.254 ]]
+ echo -en '\n[DONE] IP: 172.31.255.254'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.0.5'
+ [[ -n \n[DONE] IP: 172.16.0.5 ]]
+ echo -en '\n[DONE] IP: 172.16.0.5'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.100.100'
+ [[ -n \n[DONE] IP: 192.168.100.100 ]]
+ echo -en '\n[DONE] IP: 192.168.100.100'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.18.1.20'
+ [[ -n \n[DONE] IP: 172.18.1.20 ]]
+ echo -en '\n[DONE] IP: 172.18.1.20'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.0.5'
+ [[ -n \n[DONE] IP: 172.16.0.5 ]]
+ echo -en '\n[DONE] IP: 172.16.0.5'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.100.100'
+ [[ -n \n[DONE] IP: 192.168.100.100 ]]
+ echo -en '\n[DONE] IP: 192.168.100.100'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.11'
+ [[ -n \n[DONE] IP: 192.168.1.11 ]]
+ echo -en '\n[DONE] IP: 192.168.1.11'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.18.1.20'
+ [[ -n \n[DONE] IP: 172.18.1.20 ]]
+ echo -en '\n[DONE] IP: 172.18.1.20'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.0.2.50'
+ [[ -n \n[DONE] IP: 192.0.2.50 ]]
+ echo -en '\n[DONE] IP: 192.0.2.50'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.0.2.50'
+ [[ -n \n[DONE] IP: 192.0.2.50 ]]
+ echo -en '\n[DONE] IP: 192.0.2.50'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.11'
+ [[ -n \n[DONE] IP: 192.168.1.11 ]]
+ echo -en '\n[DONE] IP: 192.168.1.11'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 198.51.100.75'
+ [[ -n \n[DONE] IP: 198.51.100.75 ]]
+ echo -en '\n[DONE] IP: 198.51.100.75'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 198.51.100.75'
+ [[ -n \n[DONE] IP: 198.51.100.75 ]]
+ echo -en '\n[DONE] IP: 198.51.100.75'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.1.6'
+ [[ -n \n[DONE] IP: 172.16.1.6 ]]
+ echo -en '\n[DONE] IP: 172.16.1.6'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.1.6'
+ [[ -n \n[DONE] IP: 172.16.1.6 ]]
+ echo -en '\n[DONE] IP: 172.16.1.6'
+ return 0
+ ((  19 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 36405
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 36405)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 36405) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 36405)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36410
+ ip=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 36410)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 36410) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 36410)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36420
+ ip=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 36420)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 36420) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 36420)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36427
+ ip=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 36427)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 36427) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 36427)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36432
+ ip=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 36432)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 36432) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 36432)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36439
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 36439)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 36439) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 36439)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36448
+ ip=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 36448)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 36448) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 36448)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36462
+ ip=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 36462)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 36462) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 36462)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36483
+ ip=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 36483)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 36483) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 36483)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36545
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 36545)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 36545) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 36545)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36558
+ ip=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 36558)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 36558) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 36558)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36598
+ ip=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 36598)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 36598) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 36598)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36629
+ ip=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 36629)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 36629) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 36629)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36655
+ ip=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 36655)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 36655) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 36655)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36681
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 36681)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 36681) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 36681)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36725
+ ip=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 36725)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 36725) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 36725)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36771
+ ip=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 36771)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 36771) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 36771)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36840
+ ip=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 36840)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 36840) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 36840)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 36881
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 36881)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 36881) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 36881)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ generate_csvoutput
+ local json_dir=reports/json
+ [[ ! -d reports/json ]]
+ find reports/json -type f -name '*.json'
+ sort
reports/json/10.0.0.1.json
reports/json/10.0.1.2.json
reports/json/10.0.2.3.json
reports/json/10.10.10.10.json
reports/json/172.16.0.5.json
reports/json/172.16.1.6.json
reports/json/172.18.1.20.json
reports/json/172.31.255.254.json
reports/json/192.0.2.50.json
reports/json/192.168.1.10.json
reports/json/192.168.1.11.json
reports/json/192.168.100.100.json
reports/json/192.168.2.12.json
reports/json/198.51.100.75.json
reports/json/203.0.113.25.json
+ find reports/json -type f -name '*.json'
+ sort
+ read -r json
+ message 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ local 'message=Processing reports/json/10.0.0.1.json'
+ print 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ echo -en 'Processing reports/json/10.0.0.1.json'
Processing reports/json/10.0.0.1.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.0.1.json
+ read -r json
+ message 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ local 'message=Processing reports/json/10.0.1.2.json'
+ print 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ echo -en 'Processing reports/json/10.0.1.2.json'
Processing reports/json/10.0.1.2.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.1.2.json
+ read -r json
+ message 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ local 'message=Processing reports/json/10.0.2.3.json'
+ print 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ echo -en 'Processing reports/json/10.0.2.3.json'
Processing reports/json/10.0.2.3.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.2.3.json
+ read -r json
+ message 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ local 'message=Processing reports/json/10.10.10.10.json'
+ print 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ echo -en 'Processing reports/json/10.10.10.10.json'
Processing reports/json/10.10.10.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.10.10.10.json
+ read -r json
+ message 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ local 'message=Processing reports/json/172.16.0.5.json'
+ print 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ echo -en 'Processing reports/json/172.16.0.5.json'
Processing reports/json/172.16.0.5.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.0.5.json
+ read -r json
+ message 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ local 'message=Processing reports/json/172.16.1.6.json'
+ print 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ echo -en 'Processing reports/json/172.16.1.6.json'
Processing reports/json/172.16.1.6.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.1.6.json
+ read -r json
+ message 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ local 'message=Processing reports/json/172.18.1.20.json'
+ print 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ echo -en 'Processing reports/json/172.18.1.20.json'
Processing reports/json/172.18.1.20.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.18.1.20.json
+ read -r json
+ message 'Processing reports/json/172.31.255.254.json'
+ [[ -n Processing reports/json/172.31.255.254.json ]]
+ local 'message=Processing reports/json/172.31.255.254.json'
+ print 'Processing reports/json/172.31.255.254.json'
+ [[ -n Processing reports/json/172.31.255.254.json ]]
+ echo -en 'Processing reports/json/172.31.255.254.json'
Processing reports/json/172.31.255.254.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.31.255.254.json
+ read -r json
+ message 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ local 'message=Processing reports/json/192.0.2.50.json'
+ print 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ echo -en 'Processing reports/json/192.0.2.50.json'
Processing reports/json/192.0.2.50.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.0.2.50.json
+ read -r json
+ message 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ local 'message=Processing reports/json/192.168.1.10.json'
+ print 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ echo -en 'Processing reports/json/192.168.1.10.json'
Processing reports/json/192.168.1.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.10.json
+ read -r json
+ message 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ local 'message=Processing reports/json/192.168.1.11.json'
+ print 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ echo -en 'Processing reports/json/192.168.1.11.json'
Processing reports/json/192.168.1.11.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.11.json
+ read -r json
+ message 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ local 'message=Processing reports/json/192.168.100.100.json'
+ print 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ echo -en 'Processing reports/json/192.168.100.100.json'
Processing reports/json/192.168.100.100.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.100.100.json
+ read -r json
+ message 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ local 'message=Processing reports/json/192.168.2.12.json'
+ print 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ echo -en 'Processing reports/json/192.168.2.12.json'
Processing reports/json/192.168.2.12.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.2.12.json
+ read -r json
+ message 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ local 'message=Processing reports/json/198.51.100.75.json'
+ print 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ echo -en 'Processing reports/json/198.51.100.75.json'
Processing reports/json/198.51.100.75.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/198.51.100.75.json
+ read -r json
+ message 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ local 'message=Processing reports/json/203.0.113.25.json'
+ print 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ echo -en 'Processing reports/json/203.0.113.25.json'
Processing reports/json/203.0.113.25.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/203.0.113.25.json
+ read -r json
+ return 0
+ [[ 10 -lt 8 ]]
+ local json_dir=reports/json
+ expected_reports=29
+ message 'Expected Reports: 29'
+ [[ -n Expected Reports: 29 ]]
+ local 'message=Expected Reports: 29'
+ print 'Expected Reports: 29'
+ [[ -n Expected Reports: 29 ]]
+ echo -en 'Expected Reports: 29'
Expected Reports: 29+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=15
+ message 'Actual Reports: 29'
+ [[ -n Actual Reports: 29 ]]
+ local 'message=Actual Reports: 29'
+ print 'Actual Reports: 29'
+ [[ -n Actual Reports: 29 ]]
+ echo -en 'Actual Reports: 29'
Actual Reports: 29+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for site in "${site_folders[@]}"
+ filtered_target_listing=()
+ oIFS=' 
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /misc/ .cache/configs.list
++ printf '\0'
+ IFS=' 
'
+ total_files=4
+ [[ true == true ]]
+ message '[BATCH] Processing folder: [misc]'
+ [[ -n [BATCH] Processing folder: [misc] ]]
+ local 'message=[BATCH] Processing folder: [misc]'
+ print '[BATCH] Processing folder: [misc]'
+ [[ -n [BATCH] Processing folder: [misc] ]]
+ echo -en '[BATCH] Processing folder: [misc]'
[BATCH] Processing folder: [misc]+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message '[BATCH] Found 4 config files'
+ [[ -n [BATCH] Found 4 config files ]]
+ local 'message=[BATCH] Found 4 config files'
+ print '[BATCH] Found 4 config files'
+ [[ -n [BATCH] Found 4 config files ]]
+ echo -en '[BATCH] Found 4 config files'
[BATCH] Found 4 config files+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ rm -rf ./targets
+ [[ -d ./targets ]]
+ [[ -d ./targets ]]
+ rm -rf .local/jobs
+ [[ -d .local/jobs ]]
+ [[ -d .local/jobs ]]
+ stat_flush_success=true
+ find .local/stats/ -type f -name '*.jobs'
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ timestamp='[2025-05-17T01:31:10Z] Flushed'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ printf '%s\n' '[2025-05-17T01:31:10Z] Flushed'
+ grep -qF '[2025-05-17T01:31:10Z] Flushed' .local/stats/targets.jobs
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ timestamp='[2025-05-17T01:31:10Z] Flushed'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ printf '%s\n' '[2025-05-17T01:31:10Z] Flushed'
+ grep -qF '[2025-05-17T01:31:10Z] Flushed' .local/stats/reports.jobs
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ timestamp='[2025-05-17T01:31:10Z] Flushed'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ printf '%s\n' '[2025-05-17T01:31:10Z] Flushed'
+ grep -qF '[2025-05-17T01:31:10Z] Flushed' .local/stats/success.jobs
+ read -r stat_file
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ timestamp='[2025-05-17T01:31:10Z] Flushed'
++ date -u +%Y-%m-%dT%H:%M:%SZ
+ UTC_NOW=2025-05-17T01:31:10Z
+ printf '%s\n' '[2025-05-17T01:31:10Z] Flushed'
+ grep -qF '[2025-05-17T01:31:10Z] Flushed' .local/stats/started.jobs
+ read -r stat_file
+ [[ true != true ]]
+ mkdir -p targets .local/errors .local/jobs .local/stats
+ offset=0
+ [[ 0 -lt 4 ]]
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747445470652638000 14795
+ export batch_id=MTc0NzQ0NTQ3
+ batch_id=MTc0NzQ0NTQ3
++ date +%s
+ batch_suffix=1747445470-30958
+ batch_configs_list=configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ BATCH_CONFIGS=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ export BATCH_CONFIGS
+ touch /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ printf '%s\n' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ range_first=1
+ range_last=4
+ message '[ MTc0NzQ0NTQ3 ] Files 1 -> 4'
+ [[ -n [ MTc0NzQ0NTQ3 ] Files 1 -> 4 ]]
+ local 'message=[ MTc0NzQ0NTQ3 ] Files 1 -> 4'
+ print '[ MTc0NzQ0NTQ3 ] Files 1 -> 4'
+ [[ -n [ MTc0NzQ0NTQ3 ] Files 1 -> 4 ]]
+ echo -en '[ MTc0NzQ0NTQ3 ] Files 1 -> 4'
[ MTc0NzQ0NTQ3 ] Files 1 -> 4+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ list_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ basename /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local base=configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ dirname /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local parent=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzQ0NTQ3-1747445470-30958.list
'
+ format_common+='Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzQ0NTQ3-1747445470-30958.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzQ0NTQ3-1747445470-30958.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
File: configs--MTc0NzQ0NTQ3-1747445470-30958.list
Parent: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry
Size: 104 bytes
Blocks/Inode: 8 / 18422884
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 16 18:31:10 2025
Modify: May 16 18:31:10 2025
Change: May 16 18:31:10 2025
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list] ]]
+ local 'message=Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list]'
+ print 'Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list]'
+ [[ -n Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list] ]]
+ echo -en 'Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list]'
Batch-Config file: [configs--MTc0NzQ0NTQ3-1747445470-30958.list]+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ [[ -n /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ local target_file=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ [[ true == true ]]
+ [[ -f /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ case "${target_file}" in
+ cat /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
configs/misc/switch1.conf
configs/misc/switch2.conf
configs/misc/switch3.conf
configs/misc/switch4.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ message '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ local 'message=[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list'
+ print '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list'
+ [[ -n [matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list ]]
+ echo -en '[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list'
[matching_configs] Configurations File: /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=40972
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 40972)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 40972) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 40972)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local 'matched_files=configs/misc/switch1.conf
configs/misc/switch3.conf'
+ [[ -n configs/misc/switch1.conf
configs/misc/switch3.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ job_pid=40978
+ config_file=misc/switch1.conf
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 40978)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 40978) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 40978)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ wc -l
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      14'
+ local 'matched_files=configs/misc/switch1.conf
configs/misc/switch4.conf'
+ [[ -n configs/misc/switch1.conf
configs/misc/switch4.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch1.conf
+ ip_cleaned=10.0.2.3
+ target_file=targets/10.0.2.3.json
+ job_pid=40988
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 40988)'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch1.conf
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ wc -l
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 40988) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 40988)'
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ tr -d ' '
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ tr -d '\r'
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
+ match_count=1
+ site=misc
+ device=switch1.conf
+ config_lines='      14'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ local matched_files=configs/misc/switch2.conf
+ [[ -n configs/misc/switch2.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch2.conf
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch1.conf
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ ip_cleaned=192.168.1.10
+ target_file=targets/192.168.1.10.json
++ wc -l
+ job_pid=41006
+ job_pids+=("${job_pid}")
++ tr -d ' '
++ wc -l
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 41006)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 41006) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 41006)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ tr -d '\r'
++ print 192.168.1.11
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
+ match_count=1
+ config_lines='      14'
+ site=misc
+ device=switch1.conf
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/switch2.conf
++ wc -l
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ tr -d ' '
+ job_pid=41020
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 41020)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 41020) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 41020)'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local 'matched_files=configs/misc/switch1.conf
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
configs/misc/switch4.conf'
+ newline
+ [[ -n configs/misc/switch1.conf
+ local count=1
configs/misc/switch4.conf ]]
+ (( i = 0 ))
+ config_json='[]'
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r config_file
+ for ip_addr in "${target_listing[@]}"
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch1.conf
+ config_file=misc/switch3.conf
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ wc -l
++ wc -l
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ match_count=1
+ site=misc
+ device=switch2.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ config_lines='      11'
+ config_lines='      14'
++ jq --arg site misc --arg device switch2.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=configs/misc/switch2.conf
+ [[ -n configs/misc/switch2.conf ]]
+ config_json='[]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ IFS=
+ config_file=misc/switch4.conf
+ read -r config_file
+ config_file=misc/switch2.conf
+ ip_cleaned=192.168.2.12
+ target_file=targets/192.168.2.12.json
++ wc -l
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/misc/switch1.conf
++ tr -d ' '
+ job_pid=41041
+ job_pids+=("${job_pid}")
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch3.conf
++ wc -l
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 41041)'
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 41041) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 41041)'
++ wc -l
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ wc -l
++ tr -d ' '
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ match_count=1
+ site=misc
+ device=switch1.conf
+ config_lines='      14'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      14'
+ match_count=2
+ site=misc
+ device=switch3.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch4.conf
++ true
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
++ wc -l
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ tr -d ' '
+ local matched_files=
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
+ [[ -n '' ]]
++ jq '{ configs: . }'
+ return 0
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/misc/switch2.conf
+ job_pid=41066
+ job_pids+=("${job_pid}")
++ jq --arg site misc --arg device switch3.conf --argjson lines '      11' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ job_ip_map["$job_pid"]=172.16.0.5
++ wc -l
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 41066)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 41066) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 41066)'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ tr -d ' '
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ match_count=1
+ site=misc
+ device=switch4.conf
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch2.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ config_json='[
+ jq -r
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch4.conf
+ match_count=1
+ site=misc
+ device=switch2.conf
++ jq --arg site misc --arg device switch4.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ wc -l
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
++ [[ -n [] ]]
    "lines": 11,
    "count": 2
  }
]'
++ echo -en '[]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
]'
+ local matched_files=configs/misc/switch4.conf
+ [[ -n configs/misc/switch4.conf ]]
+ config_json='[]'
++ jq '{ configs: . }'
++ jq --arg site misc --arg device switch2.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch4.conf
+ ip_cleaned=172.16.1.6
+ target_file=targets/172.16.1.6.json
+ job_pid=41086
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 41086)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 41086) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 41086)'
++ wc -l
+ newline
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local ip_addr=172.16.1.6
+ echo

+ (( i++ ))
+ local target_file=targets/172.16.1.6.json
+ (( i < count ))
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ tr -d '\r'
++ print 192.0.2.50
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ config_lines='      14'
+ read -r config_file
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/misc/switch4.conf
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
+ print '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
    },
    "lines": 14,
    "count": 1
  }
]'
+ config_lines='      14'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.2.3 at targets/10.0.2.3.json'
++ wc -l
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
+ return 0
    "lines": 14,
++ jq '{ configs: . }'
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ tr -d ' '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch3.conf"
      },
      "lines": 11,
      "count": 2
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/misc/switch4.conf
++ wc -l
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
++ tr -d ' '
+ local matched_files=configs/misc/switch3.conf
+ [[ -n configs/misc/switch3.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch3.conf
+ job_pid=41107
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 41107)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 41107) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 41107)'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ jq '{ configs: . }'
+ newline
++ wc -l
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
  }
]'
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ match_count=1
+ site=misc
+ device=switch4.conf
++ tr -d '\r'
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
+ match_count=1
++ echo -en 203.0.113.25
+ site=misc
+ device=switch4.conf
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch4.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch4.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_lines='      11'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch4.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ true
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ local matched_files=
+ return 0
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/misc/switch3.conf
++ wc -l
+ job_pid=41127
+ final_json='{
+ job_pids+=("${job_pid}")
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch2.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ job_ip_map["$job_pid"]=203.0.113.25
+ jq -r
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 41127)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 41127) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 41127)'
++ tr -d ' '
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ newline
+ local ip_addr=203.0.113.25
+ local count=1
+ local target_file=targets/203.0.113.25.json
+ (( i = 0 ))
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ match_count=1
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
+ site=misc
+ device=switch3.conf
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ true
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=41141
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 41141)'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 41141) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 41141)'
++ print '[]'
+ newline
++ [[ -n [] ]]
++ echo -en '[]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ print '[
++ jq '{ configs: . }'
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch3.conf --argjson lines '      11' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ print '\n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.11 at targets/192.168.1.11.json'
+ return 0
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ true
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=41150
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 41150)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 41150) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 41150)'
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=172.18.1.20
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
+ local target_file=targets/172.18.1.20.json
        "device": "switch4.conf"
      },
      "lines": 14,
+ config_json='[
      "count": 1
  {
    }
    "config": {
  ]
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 1
  }
]'
}'
+ IFS=
+ newline
+ read -r config_file
+ jq -r
+ local count=1
+ (( i = 0 ))
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch4.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 1
  }
]'
++ tr -d '\r'
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
+ ip_cleaned=10.10.10.10
+ target_file=targets/10.10.10.10.json
+ local matched_files=configs/misc/switch4.conf
+ [[ -n configs/misc/switch4.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch4.conf
+ job_pid=41161
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 41161)'
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 41161) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 41161)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ wc -l
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
++ print 192.168.100.100
+ return 0
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch3.conf"
      },
      "lines": 11,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.16.0.5 at targets/172.16.0.5.json'
+ return 0
++ tr -d '\r'
+ config_lines='      14'
+ ip_cleaned=192.168.100.100
+ target_file=targets/192.168.100.100.json
+ local matched_files=configs/misc/switch2.conf
+ [[ -n configs/misc/switch2.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch2.conf
+ job_pid=41171
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 41171)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 41171) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 41171)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
++ grep -oE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/misc/switch4.conf
++ wc -l
++ tr -d ' '
++ wc -l
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ print '\n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.16.1.6 at targets/172.16.1.6.json'
+ return 0
+ config_lines='      14'
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
+ local matched_files=configs/misc/switch2.conf
+ [[ -n configs/misc/switch2.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch2.conf
+ job_pid=41182
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 41182)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 41182) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 41182)'
+ newline
++ wc -l
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  15 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 40972
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ ip_address=10.0.0.1
+ local ip_addr=172.31.255.254
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 40972)'
+ local target_file=targets/172.31.255.254.json
+ local source_configs_list=/var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry/configs--MTc0NzQ0NTQ3-1747445470-30958.list
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 40972) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 40972)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 40978
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 40978)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 40978) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 40978)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 40988
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 40988)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 40988) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 40988)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ match_count=1
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41006
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 41006)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 41006) ]]
+ site=misc
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 41006)'
+ newline
+ local count=1
+ device=switch4.conf
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41020
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 41020)'
++ grep -lE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 41020) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 41020)'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/misc/switch2.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41041
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 41041)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 41041) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 41041)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41066
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 41066)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 41066) ]]
++ wc -l
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 41066)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41086
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 41086)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 41086) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 41086)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41107
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 41107)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 41107) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 41107)'
++ tr -d ' '
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41127
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 41127)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 41127) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 41127)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41141
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 41141)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 41141) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 41141)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41150
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41161
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41171
++ print '[]'
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41182
++ [[ -n [] ]]
+ valid_job_pids+=("$pid")
++ echo -en '[]'
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ jq --arg site misc --arg device switch4.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      14'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/misc/switch2.conf
+ local matched_files=configs/misc/switch1.conf
+ [[ -n configs/misc/switch1.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch1.conf
++ wc -l
+ match_count=1
+ site=misc
++ tr -d ' '
+ device=switch2.conf
++ wc -l
++ jq --arg site misc --arg device switch2.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
+ match_count=1
+ site=misc
+ device=switch2.conf
+ config_lines='      14'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ grep -oE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/misc/switch1.conf
++ jq --arg site misc --arg device switch2.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ print '[
  {
++ wc -l
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ match_count=1
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ site=misc
+ device=switch1.conf
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch4.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
++ jq '{ configs: . }'
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch2.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ print '\n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.18.1.20 at targets/172.18.1.20.json'
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch2.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.10.10.10 at targets/10.10.10.10.json'
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.100.100 at targets/192.168.100.100.json'
+ return 0
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ return 0
+ ((  4 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 41150
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 41150)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 41150) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 41150)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41161
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 41161)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 41161) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 41161)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41171
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 41171)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 41171) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 41171)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41182
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 41182)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 41182) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 41182)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=11
+ message 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ local 'message=Total IPs requested: 15'
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Total IPs mapped:    11'
+ [[ -n Total IPs mapped:    11 ]]
+ local 'message=Total IPs mapped:    11'
+ print 'Total IPs mapped:    11'
+ [[ -n Total IPs mapped:    11 ]]
+ echo -en 'Total IPs mapped:    11'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '\nUnmapped IPs:        4'
+ [[ -n \nUnmapped IPs:        4 ]]
+ local 'message=\nUnmapped IPs:        4'
+ print '\nUnmapped IPs:        4'
+ [[ -n \nUnmapped IPs:        4 ]]
+ echo -en '\nUnmapped IPs:        4'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ print '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ echo -en '  - 203.0.113.25'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=11
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %02d 1
+ padded_index=01
+ job_pid=41345
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 41345)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 41345) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 41345)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.0.1 01
+ local ip_addr=10.0.0.1
+ local padded_index=01
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ printf %02d 2
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=02
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=41348
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 41348)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 41348) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 41348)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.0.1.2 02
+ local ip_addr=10.0.1.2
+ local padded_index=02
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ printf %02d 3
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=03
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=41352
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 41352)'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 41352) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 41352)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ parse_configs 10.0.2.3 03
+ local ip_addr=10.0.2.3
+ local padded_index=03
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=01 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ padded_index=04
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=41357
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 41357)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 41357) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 41357)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ parse_configs 192.168.1.10 04
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ local ip_addr=192.168.1.10
+ local padded_index=04
+ ip_addr=192.168.1.11
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=02 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ printf %02d 5
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=05
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=41362
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 41362)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 41362) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 41362)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
+ parse_configs 192.168.1.11 05
+ local ip_addr=192.168.1.11
+ local padded_index=05
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 6
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=06
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=04 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=41367
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 41367)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 41367) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 41367)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.1.6
+ parse_configs 172.16.0.5 06
+ logfile=.local/jobs/10.0.2.3.job
+ local ip_addr=172.16.0.5
+ [[ true == true ]]
+ local padded_index=06
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=03 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 7
+ logfile=.local/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=05 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ padded_index=07
+ job_pid=41375
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 41375)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 41375) ]]
+ parse_configs 172.16.1.6 07
+ local ip_addr=172.16.1.6
+ local padded_index=07
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 41375)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 8
+ padded_index=08
+ logfile=.local/jobs/172.16.0.5.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=06 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=41379
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ [[ false == true ]]
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 41379)'
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 41379) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 41379)'
+ [[ true == true ]]
+ newline
+ mkdir -p .local/jobs .local/errors
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 172.18.1.20 08
+ local ip_addr=172.18.1.20
+ local padded_index=08
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %02d 9
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=09
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=41385
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 41385)'
+ parse_configs 10.10.10.10 09
+ local ip_addr=10.10.10.10
+ local padded_index=09
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.local/jobs/172.16.1.6.job
+ [[ true == true ]]
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 41385) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 41385)'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=07 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
++ printf %02d 10
+ padded_index=10
+ logfile=.local/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=08 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=41394
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 41394)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 41394) ]]
+ parse_configs 192.168.100.100 10
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 41394)'
+ local ip_addr=192.168.100.100
+ local padded_index=10
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.31.255.254
+ logfile=.local/jobs/10.10.10.10.job
+ [[ true == true ]]
++ IFS=,
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=09 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %02d 11
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=11
+ job_pid=41404
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 41404)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 41404) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 41404)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ((  11 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 41345
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41348
+ parse_configs 172.31.255.254 11
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41352
+ local ip_addr=172.31.255.254
+ valid_job_pids+=("$pid")
+ local padded_index=11
+ for pid in "${job_pids[@]}"
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ kill -0 41357
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41362
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41367
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41375
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41379
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41385
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41394
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 41404
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=10 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/172.31.255.254.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=11 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.18.1.20'
+ [[ -n \n[DONE] IP: 172.18.1.20 ]]
+ echo -en '\n[DONE] IP: 172.18.1.20'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.0.5'
+ [[ -n \n[DONE] IP: 172.16.0.5 ]]
+ echo -en '\n[DONE] IP: 172.16.0.5'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.16.1.6'
+ [[ -n \n[DONE] IP: 172.16.1.6 ]]
+ echo -en '\n[DONE] IP: 172.16.1.6'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.11'
+ [[ -n \n[DONE] IP: 192.168.1.11 ]]
+ echo -en '\n[DONE] IP: 192.168.1.11'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.100.100'
+ [[ -n \n[DONE] IP: 192.168.100.100 ]]
+ echo -en '\n[DONE] IP: 192.168.100.100'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.10.10.10'
+ local status=0
+ [[ -n \n[DONE] IP: 10.10.10.10 ]]
+ echo -en '\n[DONE] IP: 10.10.10.10'
+ ((  status != 0  ))
+ return 0
+ print '\n[DONE] IP: 10.0.2.3'
+ [[ -n \n[DONE] IP: 10.0.2.3 ]]
+ echo -en '\n[DONE] IP: 10.0.2.3'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 172.31.255.254'
+ [[ -n \n[DONE] IP: 172.31.255.254 ]]
+ echo -en '\n[DONE] IP: 172.31.255.254'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ ((  11 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 41345
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 41345)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 41345) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 41345)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41348
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 41348)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 41348) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 41348)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41352
+ ip=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 41352)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 41352) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 41352)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41357
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 41357)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 41357) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 41357)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41362
+ ip=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 41362)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 41362) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 41362)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41367
+ ip=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 41367)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 41367) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 41367)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41375
+ ip=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 41375)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 41375) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 41375)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41379
+ ip=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 41379)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 41379) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 41379)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41385
+ ip=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 41385)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 41385) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 41385)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41394
+ ip=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 41394)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 41394) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 41394)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 41404
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 41404)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 41404) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 41404)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ generate_csvoutput
+ local json_dir=reports/json
+ [[ ! -d reports/json ]]
+ find reports/json -type f -name '*.json'
+ sort
reports/json/10.0.0.1.json
reports/json/10.0.1.2.json
reports/json/10.0.2.3.json
reports/json/10.10.10.10.json
reports/json/172.16.0.5.json
reports/json/172.16.1.6.json
reports/json/172.18.1.20.json
reports/json/172.31.255.254.json
reports/json/192.0.2.50.json
reports/json/192.168.1.10.json
reports/json/192.168.1.11.json
reports/json/192.168.100.100.json
reports/json/192.168.2.12.json
reports/json/198.51.100.75.json
reports/json/203.0.113.25.json
+ find reports/json -type f -name '*.json'
+ sort
+ read -r json
+ message 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ local 'message=Processing reports/json/10.0.0.1.json'
+ print 'Processing reports/json/10.0.0.1.json'
+ [[ -n Processing reports/json/10.0.0.1.json ]]
+ echo -en 'Processing reports/json/10.0.0.1.json'
Processing reports/json/10.0.0.1.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.0.1.json
+ read -r json
+ message 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ local 'message=Processing reports/json/10.0.1.2.json'
+ print 'Processing reports/json/10.0.1.2.json'
+ [[ -n Processing reports/json/10.0.1.2.json ]]
+ echo -en 'Processing reports/json/10.0.1.2.json'
Processing reports/json/10.0.1.2.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.1.2.json
+ read -r json
+ message 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ local 'message=Processing reports/json/10.0.2.3.json'
+ print 'Processing reports/json/10.0.2.3.json'
+ [[ -n Processing reports/json/10.0.2.3.json ]]
+ echo -en 'Processing reports/json/10.0.2.3.json'
Processing reports/json/10.0.2.3.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.0.2.3.json
+ read -r json
+ message 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ local 'message=Processing reports/json/10.10.10.10.json'
+ print 'Processing reports/json/10.10.10.10.json'
+ [[ -n Processing reports/json/10.10.10.10.json ]]
+ echo -en 'Processing reports/json/10.10.10.10.json'
Processing reports/json/10.10.10.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/10.10.10.10.json
+ read -r json
+ message 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ local 'message=Processing reports/json/172.16.0.5.json'
+ print 'Processing reports/json/172.16.0.5.json'
+ [[ -n Processing reports/json/172.16.0.5.json ]]
+ echo -en 'Processing reports/json/172.16.0.5.json'
Processing reports/json/172.16.0.5.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.0.5.json
+ read -r json
+ message 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ local 'message=Processing reports/json/172.16.1.6.json'
+ print 'Processing reports/json/172.16.1.6.json'
+ [[ -n Processing reports/json/172.16.1.6.json ]]
+ echo -en 'Processing reports/json/172.16.1.6.json'
Processing reports/json/172.16.1.6.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.16.1.6.json
+ read -r json
+ message 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ local 'message=Processing reports/json/172.18.1.20.json'
+ print 'Processing reports/json/172.18.1.20.json'
+ [[ -n Processing reports/json/172.18.1.20.json ]]
+ echo -en 'Processing reports/json/172.18.1.20.json'
Processing reports/json/172.18.1.20.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.18.1.20.json
+ read -r json
+ message 'Processing reports/json/172.31.255.254.json'
+ [[ -n Processing reports/json/172.31.255.254.json ]]
+ local 'message=Processing reports/json/172.31.255.254.json'
+ print 'Processing reports/json/172.31.255.254.json'
+ [[ -n Processing reports/json/172.31.255.254.json ]]
+ echo -en 'Processing reports/json/172.31.255.254.json'
Processing reports/json/172.31.255.254.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/172.31.255.254.json
+ read -r json
+ message 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ local 'message=Processing reports/json/192.0.2.50.json'
+ print 'Processing reports/json/192.0.2.50.json'
+ [[ -n Processing reports/json/192.0.2.50.json ]]
+ echo -en 'Processing reports/json/192.0.2.50.json'
Processing reports/json/192.0.2.50.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.0.2.50.json
+ read -r json
+ message 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ local 'message=Processing reports/json/192.168.1.10.json'
+ print 'Processing reports/json/192.168.1.10.json'
+ [[ -n Processing reports/json/192.168.1.10.json ]]
+ echo -en 'Processing reports/json/192.168.1.10.json'
Processing reports/json/192.168.1.10.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.10.json
+ read -r json
+ message 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ local 'message=Processing reports/json/192.168.1.11.json'
+ print 'Processing reports/json/192.168.1.11.json'
+ [[ -n Processing reports/json/192.168.1.11.json ]]
+ echo -en 'Processing reports/json/192.168.1.11.json'
Processing reports/json/192.168.1.11.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.1.11.json
+ read -r json
+ message 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ local 'message=Processing reports/json/192.168.100.100.json'
+ print 'Processing reports/json/192.168.100.100.json'
+ [[ -n Processing reports/json/192.168.100.100.json ]]
+ echo -en 'Processing reports/json/192.168.100.100.json'
Processing reports/json/192.168.100.100.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.100.100.json
+ read -r json
+ message 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ local 'message=Processing reports/json/192.168.2.12.json'
+ print 'Processing reports/json/192.168.2.12.json'
+ [[ -n Processing reports/json/192.168.2.12.json ]]
+ echo -en 'Processing reports/json/192.168.2.12.json'
Processing reports/json/192.168.2.12.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/192.168.2.12.json
+ read -r json
+ message 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ local 'message=Processing reports/json/198.51.100.75.json'
+ print 'Processing reports/json/198.51.100.75.json'
+ [[ -n Processing reports/json/198.51.100.75.json ]]
+ echo -en 'Processing reports/json/198.51.100.75.json'
Processing reports/json/198.51.100.75.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/198.51.100.75.json
+ read -r json
+ message 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ local 'message=Processing reports/json/203.0.113.25.json'
+ print 'Processing reports/json/203.0.113.25.json'
+ [[ -n Processing reports/json/203.0.113.25.json ]]
+ echo -en 'Processing reports/json/203.0.113.25.json'
Processing reports/json/203.0.113.25.json+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq_json2csv='
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv'
+ jq -e -r '
        .target as $target
        | .configs[] as $cfg
        | select( $cfg.objects != null and ( $cfg.objects | type == "array" and length > 0 ) )
        | $cfg.objects[]
        | [
            $target,
            ( $cfg.site // "none" ),
            ( $cfg.device // "none" ),
            ( .object // "none" ),
            ( .entries[0] // "none" ),
            ( .description // "none" ),
            ( .group // "none" )
          ] | @csv' reports/json/203.0.113.25.json
+ read -r json
+ return 0
+ [[ 5 -lt 4 ]]
+ local json_dir=reports/json
+ expected_reports=11
+ message 'Expected Reports: 11'
+ [[ -n Expected Reports: 11 ]]
+ local 'message=Expected Reports: 11'
+ print 'Expected Reports: 11'
+ [[ -n Expected Reports: 11 ]]
+ echo -en 'Expected Reports: 11'
Expected Reports: 11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=15
+ message 'Actual Reports: 11'
+ [[ -n Actual Reports: 11 ]]
+ local 'message=Actual Reports: 11'
+ print 'Actual Reports: 11'
+ [[ -n Actual Reports: 11 ]]
+ echo -en 'Actual Reports: 11'
Actual Reports: 11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ print 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ echo -en 'CSV Report Summary (tabulated):'
CSV Report Summary (tabulated):+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ cat reports/reports.csv
target,site,device,object,entry,description,group
"10.0.0.1","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.0.1 any","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object","host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.1.2 any","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object","host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw4.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.2.3 any","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object","host 10.0.2.3","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"10.10.10.10","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.10.10.10 any","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip any host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object","host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"172.16.1.6","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","access-list","access-list OUTSIDE extended permit ip host 172.16.1.6 any","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object","host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"172.18.1.20","cisco","fw4.cfg","object","host 172.18.1.20","false","Unclassified"
"172.18.1.20","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"192.0.2.50","cisco","fw1.cfg","object","host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"192.168.1.10","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"192.168.1.10","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"192.168.1.11","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"192.168.1.11","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"192.168.100.100","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"192.168.100.100","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"192.168.100.100","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"192.168.2.12","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.0.1 any","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object","host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw8.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.1.2 any","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object","host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw4.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw6.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.2.3 any","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object","host 10.0.2.3","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"10.0.2.3","cisco","fw7.cfg","object-group","network-object host 172.31.255.254","false","Unclassified"
"10.10.10.10","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.10.10.10 any","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"10.10.10.10","cisco","fw6.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip any host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object","host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"172.16.0.5","cisco","fw8.cfg","object","host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw8.cfg","object-group","network-object host 172.16.0.5","false","Unclassified"
"172.16.1.6","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","access-list","access-list OUTSIDE extended permit ip host 172.16.1.6 any","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object","host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"172.18.1.20","cisco","fw4.cfg","object","host 172.18.1.20","false","Unclassified"
"172.18.1.20","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"172.31.255.254","cisco","fw7.cfg","object-group","network-object host 172.31.255.254","false","Unclassified"
"192.0.2.50","cisco","fw1.cfg","object","host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw7.cfg","object","host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw7.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"192.168.1.10","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"192.168.1.10","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"192.168.1.10","cisco","fw6.cfg","object","host 192.168.1.10","false","Unclassified"
"192.168.1.10","cisco","fw6.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"192.168.1.11","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"192.168.1.11","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"192.168.100.100","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"192.168.100.100","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"192.168.100.100","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"192.168.100.100","cisco","fw7.cfg","object","host 192.168.100.100","false","Unclassified"
"192.168.100.100","cisco","fw7.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"192.168.2.12","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"192.168.2.12","cisco","fw8.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw6.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw6.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw8.cfg","object","host 203.0.113.25","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.0.1 any","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object","host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","cisco","fw8.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","misc","switch1.conf","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.0.1","misc","switch3.conf","interface","ip address 10.0.0.1 255.255.255.0","false","Business-Unit-Networks"
"10.0.0.1","misc","switch3.conf","object-group","network-object host 10.0.0.1","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.1.2 any","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object","host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw4.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.1.2","cisco","fw6.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"10.0.1.2","misc","switch1.conf","interface","ip address 10.0.1.2 255.255.255.0","false","Unclassified"
"10.0.1.2","misc","switch4.conf","object-group","network-object host 10.0.1.2","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.0.2.3 any","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object","host 10.0.2.3","false","Unclassified"
"10.0.2.3","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"10.0.2.3","cisco","fw7.cfg","object-group","network-object host 172.31.255.254","false","Unclassified"
"10.0.2.3","misc","switch2.conf","object-group","network-object host 10.0.2.3","false","Unclassified"
"10.10.10.10","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip host 10.10.10.10 any","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw3.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object","host 10.10.10.10","false","Unclassified"
"10.10.10.10","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"10.10.10.10","cisco","fw6.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"10.10.10.10","misc","switch2.conf","interface","ip address 10.10.10.10 255.255.255.0","false","Business-Unit-Networks"
"172.16.0.5","cisco","fw3.cfg","access-list","access-list OUTSIDE extended permit ip any host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object","host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"172.16.0.5","cisco","fw8.cfg","object","host 172.16.0.5","false","Unclassified"
"172.16.0.5","cisco","fw8.cfg","object-group","network-object host 172.16.0.5","false","Unclassified"
"172.16.0.5","misc","switch4.conf","interface","ip address 172.16.0.5 255.255.255.0","false","Unclassified"
"172.16.1.6","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","access-list","access-list OUTSIDE extended permit ip host 172.16.1.6 any","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object","host 172.16.1.6","false","Unclassified"
"172.16.1.6","cisco","fw5.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"172.16.1.6","misc","switch3.conf","interface","ip address 172.16.1.6 255.255.255.0","false","Business-Unit-Networks"
"172.18.1.20","cisco","fw4.cfg","object","host 172.18.1.20","false","Unclassified"
"172.18.1.20","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"172.18.1.20","misc","switch4.conf","interface","ip address 172.18.1.20 255.255.255.0","false","Business-Unit-Networks"
"172.31.255.254","cisco","fw7.cfg","object-group","network-object host 172.31.255.254","false","Unclassified"
"172.31.255.254","misc","switch1.conf","interface","ip address 172.31.255.254 255.255.255.0","false","Business-Unit-Networks"
"192.0.2.50","cisco","fw1.cfg","object","host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw7.cfg","object","host 192.0.2.50","false","Unclassified"
"192.0.2.50","cisco","fw7.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"192.168.1.10","cisco","fw1.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"192.168.1.10","cisco","fw3.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"192.168.1.10","cisco","fw6.cfg","object","host 192.168.1.10","false","Unclassified"
"192.168.1.10","cisco","fw6.cfg","object-group","network-object host 192.168.1.10","false","Unclassified"
"192.168.1.10","misc","switch1.conf","interface","ip address 192.168.1.10 255.255.255.0","false","Unclassified"
"192.168.1.10","misc","switch4.conf","interface","ip address 192.168.1.10 255.255.255.0","false","Business-Unit-Networks"
"192.168.1.11","cisco","fw2.cfg","object-group","network-object host 10.0.1.2","false","Unclassified"
"192.168.1.11","cisco","fw4.cfg","object-group","network-object host 172.18.1.20","false","Unclassified"
"192.168.1.11","misc","switch2.conf","interface","ip address 192.168.1.11 255.255.255.0","false","Business-Unit-Networks"
"192.168.100.100","cisco","fw1.cfg","object-group","network-object host 10.10.10.10","false","Unclassified"
"192.168.100.100","cisco","fw2.cfg","object-group","network-object host 172.16.1.6","false","Unclassified"
"192.168.100.100","cisco","fw4.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"192.168.100.100","cisco","fw7.cfg","object","host 192.168.100.100","false","Unclassified"
"192.168.100.100","cisco","fw7.cfg","object-group","network-object host 192.168.100.100","false","Unclassified"
"192.168.100.100","misc","switch2.conf","interface","ip address 192.168.100.100 255.255.255.0","false","Unclassified"
"192.168.2.12","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"192.168.2.12","cisco","fw8.cfg","object-group","network-object host 10.0.0.1","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object","host 198.51.100.75","false","Unclassified"
"198.51.100.75","cisco","fw5.cfg","object-group","network-object host 192.168.2.12","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw1.cfg","object-group","network-object host 192.0.2.50","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","access-list","access-list OUTSIDE extended permit ip any host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw2.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw3.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw6.cfg","object","host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw6.cfg","object-group","network-object host 203.0.113.25","false","Unclassified"
"203.0.113.25","cisco","fw8.cfg","object","host 203.0.113.25","false","Unclassified"
+ local elapsed=8
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ printf '[INFO] Started at: %s\n' '2025-05-16 18:31:04'
[INFO] Started at: 2025-05-16 18:31:04
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 8
[INFO] Total runtime: 00:00:08
+ return 0
+ [[ -d /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry ]]
+ rm -rf /var/folders/c8/432hrczx7zdbrwp9ypjq5sf80000gn/T/tmp.Y5hhojX1ry

{
  "target": "10.0.0.1",
  "configs": [
    {
      "site": "cisco",
      "device": "fw1.cfg",
      "objects": [
        {
          "object": "access-list",
          "type": false,
          "description": "false",
          "entries": [
            "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
          ],
          "group": "Unclassified"
        },
        {
          "object": "object",
          "type": false,
          "description": "false",
          "entries": [
            "host 10.0.0.1"
          ],
          "group": "Unclassified"
        },
        {
          "object": "object-group",
          "type": "network Stark-Core",
          "description": "false",
          "entries": [
            "network-object host 10.0.0.1",
            "network-object host 192.168.1.10",
            "network-object 192.168.1.0 255.255.255.0"
          ],
          "group": "Unclassified"
        }
      ]
    },
    {
      "site": "cisco",
      "device": "fw5.cfg",
      "objects": [
        {
          "object": "object-group",
          "type": "network RedRoom-Core",
          "description": "false",
          "entries": [
            "network-object host 10.0.0.1",
            "network-object host 172.16.1.6"
          ],
          "group": "Unclassified"
        }
      ]
    },
    {
      "site": "cisco",
      "device": "fw8.cfg",
      "objects": [
        {
          "object": "object-group",
          "type": "network Hellfire-Internal",
          "description": "false",
          "entries": [
            "network-object host 10.0.0.1",
            "network-object 192.168.2.12"
          ],
          "group": "Unclassified"
        }
      ]
    },
    {
      "site": "misc",
      "device": "switch1.conf",
      "objects": [
        {
          "object": "object-group",
          "type": "network Avengers-Office",
          "description": "false",
          "entries": [
            "network-object host 10.0.0.1",
            "network-object 192.168.12.0 255.255.255.0"
          ],
          "group": "Unclassified"
        }
      ]
    },
    {
      "site": "misc",
      "device": "switch3.conf",
      "objects": [
        {
          "object": "interface",
          "type": false,
          "description": "false",
          "entries": [
            "ip address 10.0.0.1 255.255.255.0"
          ],
          "group": "Business-Unit-Networks"
        },
        {
          "object": "object-group",
          "type": "network Spider-Net",
          "description": "false",
          "entries": [
            "network-object host 10.0.0.1",
            "network-object 192.168.12.0 255.255.255.0"
          ],
          "group": "Unclassified"
        }
      ]
    }
  ]
}
devops: network-resources (master *=) $ 
