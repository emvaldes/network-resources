$ rm -rf ./reports ./targets ./.cache ./.local ;
$ bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs ;
$ cat -n ./.local/jobs/10.0.0.1.job ;
# cat -n ./reports/json/10.0.0.1.json ;

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e89zR8LbZT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e89zR8LbZT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzExMjg4NDUzMDM3MjAwMAo
++ divisor=MTc0NzExMjg4NDUzMDM3MjAwMAo
++ print 'DEBUG: divisor = '\''MTc0NzExMjg4NDUzMDM3MjAwMAo'\'''
++ [[ -n DEBUG: divisor = 'MTc0NzExMjg4NDUzMDM3MjAwMAo' ]]
++ echo -en 'DEBUG: divisor = '\''MTc0NzExMjg4NDUzMDM3MjAwMAo'\'''
DEBUG: divisor = 'MTc0NzExMjg4NDUzMDM3MjAwMAo'+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ filtered_target_listing=()
+ declare -a filtered_target_listing
+ [[ 4 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ [[ -z '' ]]
+ delaying_factor=0.05
+ [[ -z '' ]]
+ listing_filename=ips.list
+ [[ -z '' ]]
+ parallel_threads=100
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-12 22:08:04'
+ SECONDS=0
+ [[ -z true ]]
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ local configs_list_cache=.cache/configs.list
+ mkdir -p .cache
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
+ sort
+ [[ true == true ]]
+ print 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ echo -en 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ :
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ ! -f ips.list ]]
+ mapfile -t target_listing
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ [[ 15 -eq 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'IPS/CIDR Blocks: '
+ [[ -n IPS/CIDR Blocks:  ]]
+ echo -en 'IPS/CIDR Blocks: '
IPS/CIDR Blocks: + newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ echo -en '  - 10.0.0.1'
  - 10.0.0.1+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ echo -en '  - 10.0.1.2'
  - 10.0.1.2+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
  - 10.0.2.3+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
  - 10.10.10.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
  - 172.16.0.5+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
  - 172.16.1.6+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
  - 172.18.1.20+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ echo -en '  - 172.31.255.254'
  - 172.31.255.254+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
  - 192.0.2.50+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ echo -en '  - 192.168.1.10'
  - 192.168.1.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
  - 192.168.1.11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
  - 192.168.2.12+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
  - 192.168.100.100+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
  - 198.51.100.75+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ echo -en '  - 203.0.113.25'
  - 203.0.113.25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ mkdir -p targets
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'Mapping IPs to config files (pre-scan phase)...'
+ [[ -n Mapping IPs to config files (pre-scan phase)... ]]
+ echo -en 'Mapping IPs to config files (pre-scan phase)...'
Mapping IPs to config files (pre-scan phase)...+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ matching_configs
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=3148
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 3148)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 3148) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 3148)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
++ grep -lF 10.0.0.1 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=3154
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 3154)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 3154) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 3154)'
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=10.0.1.2
+ for ip_addr in "${target_listing[@]}"
+ local target_file=targets/10.0.1.2.json
++ wc -l
++ grep -lF 10.0.1.2 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      29'
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ ip_cleaned=10.0.2.3
+ target_file=targets/10.0.2.3.json
+ config_file=cisco/fw1.cfg
++ grep -oFw 10.0.0.1 configs/cisco/fw1.cfg
++ wc -l
+ job_pid=3165
++ tr -d ' '
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.2.3
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 3165)'
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json
++ wc -l
+ local ip_addr=10.0.2.3
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 3165) ]]
+ local target_file=targets/10.0.2.3.json
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 3165)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.0.2.3 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ match_count=2
+ site=cisco
+ device=fw1.cfg
+ config_lines='      29'
++ true
++ print '[]'
+ local matched_files=
+ [[ -n '' ]]
++ grep -oFw 10.0.1.2 configs/cisco/fw1.cfg
+ return 0
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 2 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ wc -l
+ ip_cleaned=10.10.10.10
+ target_file=targets/10.10.10.10.json
++ tr -d ' '
+ job_pid=3181
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 3181)'
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 3181) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 3181)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 10.10.10.10 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ ip_cleaned=172.16.0.5
+ target_file=targets/172.16.0.5.json
+ config_file=misc/switch.conf
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=3191
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 3191)'
++ wc -l
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 3191) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 3191)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.16.0.5 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ config_lines='      10'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ true
+ local matched_files=
++ grep -oFw 10.0.0.1 configs/misc/switch.conf
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.16.1.6
+ target_file=targets/172.16.1.6.json
++ wc -l
++ wc -l
+ job_pid=3205
++ tr -d ' '
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 3205)'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 3205) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 3205)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.16.1.6 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ match_count=1
+ site=misc
+ device=switch.conf
+ config_lines='      10'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
++ grep -oFw 10.0.1.2 configs/misc/switch.conf
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ wc -l
++ tr -d ' '
++ true
+ local matched_files=
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
+ [[ -n '' ]]
+ return 0
+ job_pid=3219
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 3219)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 3219) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 3219)'
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 172.18.1.20 configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=misc
+ device=switch.conf
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
+ job_pid=3231
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
+ job_pids+=("${job_pid}")
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ job_ip_map["$job_pid"]=172.31.255.254
++ jq '{configs: .}'
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 3231)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 3231) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 3231)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=172.31.255.254
+ local target_file=targets/172.31.255.254.json
++ grep -lF 172.31.255.254 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
++ jq '{configs: .}'
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
+ local matched_files=configs/misc/switch.conf
+ [[ -n configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=3240
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 3240)'
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 3240) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 3240)'
+ local ip_addr=192.0.2.50
++ wc -l
+ local target_file=targets/192.0.2.50.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.0.2.50 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ config_lines='      10'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
++ grep -oFw 172.31.255.254 configs/misc/switch.conf
++ true
+ ip_cleaned=192.168.1.10
++ wc -l
+ target_file=targets/192.168.1.10.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ tr -d ' '
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ job_pid=3255
+ job_pids+=("${job_pid}")
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 3255)'
+ return 0
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 3255) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 3255)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.1.10 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
+ match_count=1
+ site=misc
++ tr -d '\r'
+ device=switch.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ IFS=
+ read -r config_file
+ return 0
+ config_file=cisco/fw1.cfg
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ job_pid=3265
+ job_pids+=("${job_pid}")
++ wc -l
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 3265)'
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 3265) ]]
+ local ip_addr=192.168.1.11
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 3265)'
+ local target_file=targets/192.168.1.11.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.1.11 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
++ grep -oFw 192.168.1.10 configs/cisco/fw1.cfg
+ local matched_files=
++ wc -l
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=192.168.2.12
+ target_file=targets/192.168.2.12.json
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ tr -d ' '
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ job_pid=3279
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 3279)'
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 3279) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 3279)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.2.12 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ tr -d '\r'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ ip_cleaned=192.168.100.100
+ local matched_files=
+ [[ -n '' ]]
+ target_file=targets/192.168.100.100.json
+ return 0
+ job_pid=3289
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 3289)'
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 3289) ]]
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 3289)'
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 192.168.100.100 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
++ jq '{configs: .}'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
+ return 0
+ job_pid=3298
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 3298)'
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 3298) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 3298)'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local ip_addr=198.51.100.75
+ echo

+ (( i++ ))
+ (( i < count ))
+ local target_file=targets/198.51.100.75.json
+ for ip_addr in "${target_listing[@]}"
++ grep -lF 198.51.100.75 configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ true
+ ip_cleaned=203.0.113.25
+ local matched_files=
+ final_json='{
+ [[ -n '' ]]
+ target_file=targets/203.0.113.25.json
  "configs": [
    {
      "config": {
        "site": "cisco",
+ return 0
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=3304
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 3304)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 3304) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 3304)'
+ newline
+ local count=1
+ (( i = 0 ))
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=203.0.113.25
+ ((  15 > 0  ))
+ valid_job_pids=()
+ local target_file=targets/203.0.113.25.json
+ for pid in "${job_pids[@]}"
+ kill -0 3148
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 3148)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 3148) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 3148)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3154
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 3154)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 3154) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 3154)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -lF 203.0.113.25 configs/cisco/fw1.cfg configs/misc/switch.conf
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3165
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 3165)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 3165) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 3165)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3181
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 3181)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 3181) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 3181)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3191
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 3191)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 3191) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 3191)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3205
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 3205)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 3205) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 3205)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3219
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 3219)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 3219) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 3219)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3231
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 3231)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 3231) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 3231)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3240
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 3240)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 3240) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 3240)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3255
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 3265
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 3265)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 3265) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 3265)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3279
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 3279)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 3279) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 3279)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3289
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 3289)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 3289) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 3289)'
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ newline
+ local count=1
+ IFS=
+ (( i = 0 ))
+ read -r config_file
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3298
+ config_file=cisco/fw1.cfg
+ ip_address=198.51.100.75
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 3298)'
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 3298) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 3298)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3304
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ wc -l
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ return 0
+ config_lines='      29'
++ grep -oFw 203.0.113.25 configs/cisco/fw1.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      29' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ return 0
+ ((  2 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 3255
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 3255)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 3255) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 3255)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3304
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 3304)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 3304) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 3304)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs mapped:    5'
+ [[ -n Total IPs mapped:    5 ]]
+ echo -en 'Total IPs mapped:    5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:        10'
+ [[ -n Unmapped IPs:        10 ]]
+ echo -en 'Unmapped IPs:        10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:'
+ [[ -n Unmapped IPs: ]]
+ echo -en 'Unmapped IPs:'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ tr -d '\r'
++ echo -en 10.10.10.10
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=3433
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 3433)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 3433) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 3433)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=2
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=3436
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 3436)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 3436) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 3436)'
+ parse_configs 10.0.1.2 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local ip_addr=10.0.1.2
+ echo

+ (( i++ ))
+ (( i < count ))
+ local padded_index=2
+ ((  ip_index < total_ips  ))
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ ip_addr=172.31.255.254
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ padded_index=3
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=3440
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 3440)'
+ parse_configs 172.31.255.254 3
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 3440) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 3440)'
+ local ip_addr=172.31.255.254
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ padded_index=4
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=3446
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 3446)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 3446) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 3446)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ parse_configs 192.168.1.10 4
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ local ip_addr=192.168.1.10
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ printf %01d 5
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/172.31.255.254.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ job_pid=3450
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 3450)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 3450) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 3450)'
+ parse_configs 203.0.113.25 5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local ip_addr=203.0.113.25
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ local padded_index=5
+ ((  5 > 0  ))
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 3433
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 3436
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 3440
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 3446
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 3450
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 3433
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 3433)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 3433) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 3433)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3436
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 3436)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 3436) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 3436)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3440
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 3440)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 3440) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 3440)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3446
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 3446)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 3446) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 3446)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 3450
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 3450)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 3450) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 3450)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ local json_dir=reports/json
+ local master_json=reports/reports.json
+ expected_reports=5
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=0
+ timeout=5
+ elapsed=0
+ ((  actual_reports < expected_reports && elapsed < timeout * 10  ))
+ sleep 0.1
+ ((  elapsed++  ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e89zR8LbZT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e89zR8LbZT

     1	+ set -euo pipefail
     2	+ export LC_ALL=C
     3	+ LC_ALL=C
     4	++ mktemp -d
     5	+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j
     6	+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j
     7	+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
     8	+ source ./scripts/tools-devops.shell
     9	++ [[ -n '' ]]
    10	++ readonly __TOOLS_DEVOPS_SOURCED=1
    11	++ __TOOLS_DEVOPS_SOURCED=1
    12	++ [[ 5 -lt 4 ]]
    13	++ alias log-info=log_info
    14	++ alias log-warn=log_warn
    15	++ alias log-error=log_error
    16	++ alias error-message=error_message
    17	++ alias exit-error=exit_error
    18	++ alias detect-platform=detect_platform
    19	++ alias install-packages=install_packages
    20	++ alias install-missing=install_missing
    21	++ alias display-help=display_help_generic
    22	++ alias relative-configpath=relative_configpath
    23	++ alias validate-address=validate_address
    24	++ export LC_ALL=C
    25	++ LC_ALL=C
    26	++ export 'nl=\n'
    27	++ nl='\n'
    28	++ local_state_dir=.local
    29	++ mkdir -p .local/errors .local/jobs .local/stats
    30	++ export stats_folder=.local/stats/
    31	++ stats_folder=.local/stats/
    32	++ export reports_logsfile=.local/stats//reports.jobs
    33	++ reports_logsfile=.local/stats//reports.jobs
    34	++ export started_logsfile=.local/stats//started.jobs
    35	++ started_logsfile=.local/stats//started.jobs
    36	++ export success_logsfile=.local/stats//success.jobs
    37	++ success_logsfile=.local/stats//success.jobs
    38	++ export targets_logsfile=.local/stats//targets.jobs
    39	++ targets_logsfile=.local/stats//targets.jobs
    40	+++ date +%s%N
    41	+++ base64
    42	+++ tr -dc a-zA-Z0-9
    43	++ export divisor=MTc0NzExMjg4NTgzNTg3NDAwMAo
    44	++ divisor=MTc0NzExMjg4NTgzNTg3NDAwMAo
    45	++ print 'DEBUG: divisor = '\''MTc0NzExMjg4NTgzNTg3NDAwMAo'\'''
    46	++ [[ -n DEBUG: divisor = 'MTc0NzExMjg4NTgzNTg3NDAwMAo' ]]
    47	++ echo -en 'DEBUG: divisor = '\''MTc0NzExMjg4NTgzNTg3NDAwMAo'\'''
    48	DEBUG: divisor = 'MTc0NzExMjg4NTgzNTg3NDAwMAo'+ source ./scripts/tools-extraction.shell
    49	++ [[ -n '' ]]
    50	++ readonly __TOOLS_EXTRACTION_SOURCED=1
    51	++ __TOOLS_EXTRACTION_SOURCED=1
    52	++ alias extract-configs=extract_configs
    53	++ alias process-configs=process_configs
    54	+ alias parse-configs=main
    55	+ matched_blocks_byfile=()
    56	+ declare -gA matched_blocks_byfile
    57	+ export script_name=./scripts/parse-configs.shell
    58	+ script_name=./scripts/parse-configs.shell
    59	+ [[ 9 -ge 1 ]]
    60	+ [[ --configs=configs =~ ^-*(h|help)$ ]]
    61	+ main --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
    62	+ file_extensions=()
    63	+ declare -a file_extensions
    64	+ oIFS='
    65	'
    66	+ for xitem in "${@}"
    67	+ IFS==
    68	+ read -r key value
    69	++ echo -e --configs=configs
    70	++ sed -e '1s|^\(-\)\{1,\}||'
    71	+ [[ configs =~ ^(classify|g)$ ]]
    72	+ [[ configs =~ ^(file-ext|x)$ ]]
    73	+ [[ configs =~ ^(configs|c)$ ]]
    74	+ export configs_dirpath=configs
    75	+ configs_dirpath=configs
    76	+ [[ configs =~ ^(index|n)$ ]]
    77	+ [[ configs =~ ^(ip-addr|i)$ ]]
    78	+ [[ configs =~ ^(logs|o)$ ]]
    79	+ [[ configs =~ ^(matrix|m)$ ]]
    80	+ [[ configs =~ ^(reports|r)$ ]]
    81	+ [[ configs =~ ^(validate|v)$ ]]
    82	+ [[ configs == \h\e\l\p ]]
    83	+ [[ configs == \d\e\b\u\g ]]
    84	+ [[ configs == \d\r\y\-\r\u\n ]]
    85	+ [[ configs == \v\e\r\b\o\s\e ]]
    86	+ for xitem in "${@}"
    87	+ IFS==
    88	+ read -r key value
    89	++ echo -e --ip-addr=10.0.0.1
    90	++ sed -e '1s|^\(-\)\{1,\}||'
    91	+ [[ ip-addr =~ ^(classify|g)$ ]]
    92	+ [[ ip-addr =~ ^(file-ext|x)$ ]]
    93	+ [[ ip-addr =~ ^(configs|c)$ ]]
    94	+ [[ ip-addr =~ ^(index|n)$ ]]
    95	+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
    96	+ local target_address=10.0.0.1
    97	+ [[ ip-addr =~ ^(logs|o)$ ]]
    98	+ [[ ip-addr =~ ^(matrix|m)$ ]]
    99	+ [[ ip-addr =~ ^(reports|r)$ ]]
   100	+ [[ ip-addr =~ ^(validate|v)$ ]]
   101	+ [[ ip-addr == \h\e\l\p ]]
   102	+ [[ ip-addr == \d\e\b\u\g ]]
   103	+ [[ ip-addr == \d\r\y\-\r\u\n ]]
   104	+ [[ ip-addr == \v\e\r\b\o\s\e ]]
   105	+ for xitem in "${@}"
   106	+ IFS==
   107	+ read -r key value
   108	++ echo -e --index=1
   109	++ sed -e '1s|^\(-\)\{1,\}||'
   110	+ [[ index =~ ^(classify|g)$ ]]
   111	+ [[ index =~ ^(file-ext|x)$ ]]
   112	+ [[ index =~ ^(configs|c)$ ]]
   113	+ [[ index =~ ^(index|n)$ ]]
   114	+ local target_index=1
   115	+ [[ index =~ ^(ip-addr|i)$ ]]
   116	+ [[ index =~ ^(logs|o)$ ]]
   117	+ [[ index =~ ^(matrix|m)$ ]]
   118	+ [[ index =~ ^(reports|r)$ ]]
   119	+ [[ index =~ ^(validate|v)$ ]]
   120	+ [[ index == \h\e\l\p ]]
   121	+ [[ index == \d\e\b\u\g ]]
   122	+ [[ index == \d\r\y\-\r\u\n ]]
   123	+ [[ index == \v\e\r\b\o\s\e ]]
   124	+ for xitem in "${@}"
   125	+ IFS==
   126	+ read -r key value
   127	++ echo -e --matrix=matrix.json
   128	++ sed -e '1s|^\(-\)\{1,\}||'
   129	+ [[ matrix =~ ^(classify|g)$ ]]
   130	+ [[ matrix =~ ^(file-ext|x)$ ]]
   131	+ [[ matrix =~ ^(configs|c)$ ]]
   132	+ [[ matrix =~ ^(index|n)$ ]]
   133	+ [[ matrix =~ ^(ip-addr|i)$ ]]
   134	+ [[ matrix =~ ^(logs|o)$ ]]
   135	+ [[ matrix =~ ^(matrix|m)$ ]]
   136	+ local matrix_filename=matrix.json
   137	+ [[ matrix =~ ^(reports|r)$ ]]
   138	+ [[ matrix =~ ^(validate|v)$ ]]
   139	+ [[ matrix == \h\e\l\p ]]
   140	+ [[ matrix == \d\e\b\u\g ]]
   141	+ [[ matrix == \d\r\y\-\r\u\n ]]
   142	+ [[ matrix == \v\e\r\b\o\s\e ]]
   143	+ for xitem in "${@}"
   144	+ IFS==
   145	+ read -r key value
   146	++ echo -e --reports=reports
   147	++ sed -e '1s|^\(-\)\{1,\}||'
   148	+ [[ reports =~ ^(classify|g)$ ]]
   149	+ [[ reports =~ ^(file-ext|x)$ ]]
   150	+ [[ reports =~ ^(configs|c)$ ]]
   151	+ [[ reports =~ ^(index|n)$ ]]
   152	+ [[ reports =~ ^(ip-addr|i)$ ]]
   153	+ [[ reports =~ ^(logs|o)$ ]]
   154	+ [[ reports =~ ^(matrix|m)$ ]]
   155	+ [[ reports =~ ^(reports|r)$ ]]
   156	+ local reports_folder=reports
   157	+ [[ reports =~ ^(validate|v)$ ]]
   158	+ [[ reports == \h\e\l\p ]]
   159	+ [[ reports == \d\e\b\u\g ]]
   160	+ [[ reports == \d\r\y\-\r\u\n ]]
   161	+ [[ reports == \v\e\r\b\o\s\e ]]
   162	+ for xitem in "${@}"
   163	+ IFS==
   164	+ read -r key value
   165	++ echo -e --file-ext=cfg,conf,cnf
   166	++ sed -e '1s|^\(-\)\{1,\}||'
   167	+ [[ file-ext =~ ^(classify|g)$ ]]
   168	+ [[ file-ext =~ ^(file-ext|x)$ ]]
   169	+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
   170	++ print cfg,conf,cnf
   171	++ [[ -n cfg,conf,cnf ]]
   172	++ echo -en cfg,conf,cnf
   173	++ tr ':,;\n ' '\n'
   174	+ [[ file-ext =~ ^(configs|c)$ ]]
   175	+ [[ file-ext =~ ^(index|n)$ ]]
   176	+ [[ file-ext =~ ^(ip-addr|i)$ ]]
   177	+ [[ file-ext =~ ^(logs|o)$ ]]
   178	+ [[ file-ext =~ ^(matrix|m)$ ]]
   179	+ [[ file-ext =~ ^(reports|r)$ ]]
   180	+ [[ file-ext =~ ^(validate|v)$ ]]
   181	+ [[ file-ext == \h\e\l\p ]]
   182	+ [[ file-ext == \d\e\b\u\g ]]
   183	+ [[ file-ext == \d\r\y\-\r\u\n ]]
   184	+ [[ file-ext == \v\e\r\b\o\s\e ]]
   185	+ for xitem in "${@}"
   186	+ IFS==
   187	+ read -r key value
   188	++ echo -e --classify
   189	++ sed -e '1s|^\(-\)\{1,\}||'
   190	+ [[ classify =~ ^(classify|g)$ ]]
   191	+ export classify_targets=true
   192	+ classify_targets=true
   193	+ [[ classify =~ ^(file-ext|x)$ ]]
   194	+ [[ classify =~ ^(configs|c)$ ]]
   195	+ [[ classify =~ ^(index|n)$ ]]
   196	+ [[ classify =~ ^(ip-addr|i)$ ]]
   197	+ [[ classify =~ ^(logs|o)$ ]]
   198	+ [[ classify =~ ^(matrix|m)$ ]]
   199	+ [[ classify =~ ^(reports|r)$ ]]
   200	+ [[ classify =~ ^(validate|v)$ ]]
   201	+ [[ classify == \h\e\l\p ]]
   202	+ [[ classify == \d\e\b\u\g ]]
   203	+ [[ classify == \d\r\y\-\r\u\n ]]
   204	+ [[ classify == \v\e\r\b\o\s\e ]]
   205	+ for xitem in "${@}"
   206	+ IFS==
   207	+ read -r key value
   208	++ echo -e --verbose
   209	++ sed -e '1s|^\(-\)\{1,\}||'
   210	+ [[ verbose =~ ^(classify|g)$ ]]
   211	+ [[ verbose =~ ^(file-ext|x)$ ]]
   212	+ [[ verbose =~ ^(configs|c)$ ]]
   213	+ [[ verbose =~ ^(index|n)$ ]]
   214	+ [[ verbose =~ ^(ip-addr|i)$ ]]
   215	+ [[ verbose =~ ^(logs|o)$ ]]
   216	+ [[ verbose =~ ^(matrix|m)$ ]]
   217	+ [[ verbose =~ ^(reports|r)$ ]]
   218	+ [[ verbose =~ ^(validate|v)$ ]]
   219	+ [[ verbose == \h\e\l\p ]]
   220	+ [[ verbose == \d\e\b\u\g ]]
   221	+ [[ verbose == \d\r\y\-\r\u\n ]]
   222	+ [[ verbose == \v\e\r\b\o\s\e ]]
   223	+ export verbose=true
   224	+ verbose=true
   225	+ for xitem in "${@}"
   226	+ IFS==
   227	+ read -r key value
   228	++ echo -e --debug
   229	++ sed -e '1s|^\(-\)\{1,\}||'
   230	+ [[ debug =~ ^(classify|g)$ ]]
   231	+ [[ debug =~ ^(file-ext|x)$ ]]
   232	+ [[ debug =~ ^(configs|c)$ ]]
   233	+ [[ debug =~ ^(index|n)$ ]]
   234	+ [[ debug =~ ^(ip-addr|i)$ ]]
   235	+ [[ debug =~ ^(logs|o)$ ]]
   236	+ [[ debug =~ ^(matrix|m)$ ]]
   237	+ [[ debug =~ ^(reports|r)$ ]]
   238	+ [[ debug =~ ^(validate|v)$ ]]
   239	+ [[ debug == \h\e\l\p ]]
   240	+ [[ debug == \d\e\b\u\g ]]
   241	+ export debug=true
   242	+ debug=true
   243	+ [[ debug == \d\r\y\-\r\u\n ]]
   244	+ [[ debug == \v\e\r\b\o\s\e ]]
   245	+ IFS='
   246	'
   247	+ [[ -z true ]]
   248	+ [[ -z true ]]
   249	+ [[ '' == true ]]
   250	+ [[ -z true ]]
   251	+ [[ -z x ]]
   252	+ [[ 3 -eq 0 ]]
   253	+ export configs_dirpath=configs
   254	+ configs_dirpath=configs
   255	+ source_configs=()
   256	+ declare -ga source_configs
   257	+ target_configlist_json=targets/10.0.0.1.json
   258	+ [[ ! -f targets/10.0.0.1.json ]]
   259	+ mapfile -t source_configs
   260	++ jq -r '.configs[] | "\(.config.site)/\(.config.device)"' targets/10.0.0.1.json
   261	+ for i in "${!source_configs[@]}"
   262	+ [[ cisco/fw1.cfg != \c\o\n\f\i\g\s\/* ]]
   263	+ source_configs[$i]=configs/cisco/fw1.cfg
   264	+ for i in "${!source_configs[@]}"
   265	+ [[ misc/switch.conf != \c\o\n\f\i\g\s\/* ]]
   266	+ source_configs[$i]=configs/misc/switch.conf
   267	+ [[ true == true ]]
   268	+ print 'Config JSON file used: targets/10.0.0.1.json'
   269	+ [[ -n Config JSON file used: targets/10.0.0.1.json ]]
   270	+ echo -en 'Config JSON file used: targets/10.0.0.1.json'
   271	Config JSON file used: targets/10.0.0.1.json+ print 'Extracted config paths from JSON:'
   272	+ [[ -n Extracted config paths from JSON: ]]
   273	+ echo -en 'Extracted config paths from JSON:'
   274	Extracted config paths from JSON:+ for cfg in "${source_configs[@]}"
   275	+ print ' - configs/cisco/fw1.cfg'
   276	+ [[ -n  - configs/cisco/fw1.cfg ]]
   277	+ echo -en ' - configs/cisco/fw1.cfg'
   278	 - configs/cisco/fw1.cfg+ for cfg in "${source_configs[@]}"
   279	+ print ' - configs/misc/switch.conf'
   280	+ [[ -n  - configs/misc/switch.conf ]]
   281	+ echo -en ' - configs/misc/switch.conf'
   282	 - configs/misc/switch.conf+ newline
   283	+ local count=1
   284	+ (( i = 0 ))
   285	+ (( i < count ))
   286	+ echo
   287
   288	+ (( i++ ))
   289	+ (( i < count ))
   290	+ local matrix_filename=matrix.json
   291	+ [[ ! -f matrix.json ]]
   292	+ jq -e 'length > 0' matrix.json
   293	++ cat matrix.json
   294	+ export 'matrix_configs=[
   295	  {
   296	    "match": ["BU1-NETWORK", "SOME-THING"],
   297	    "group": "Identified Matching Entries"
   298	  },
   299	  {
   300	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   301	    "group": "Business-Unit-HQ"
   302	  },
   303	  {
   304	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   305	    "group": "Business-Unit-Remote"
   306	  },
   307	  {
   308	    "match": ["HQ-Server", "Production-Servers"],
   309	    "group": "Business-Unit-Production"
   310	  },
   311	  {
   312	    "match": ["Web-Server", "Data-Backup"],
   313	    "group": "Business-Unit-Backup"
   314	  },
   315	  {
   316	    "match": ["web_pool", "db_pool"],
   317	    "group": "Business-Unit-Apps"
   318	  },
   319	  {
   320	    "match": ["Vlan1", "Vlan2"],
   321	    "group": "Business-Unit-Networks"
   322	  },
   323	  {
   324	    "match": ["External-203-0-113-25"],
   325	    "group": "Business-Unit-External"
   326	  },
   327	  {
   328	    "match": ["Unused-Host"],
   329	    "group": "Business-Unit-Orphan"
   330	  }
   331	]'
   332	+ matrix_configs='[
   333	  {
   334	    "match": ["BU1-NETWORK", "SOME-THING"],
   335	    "group": "Identified Matching Entries"
   336	  },
   337	  {
   338	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   339	    "group": "Business-Unit-HQ"
   340	  },
   341	  {
   342	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   343	    "group": "Business-Unit-Remote"
   344	  },
   345	  {
   346	    "match": ["HQ-Server", "Production-Servers"],
   347	    "group": "Business-Unit-Production"
   348	  },
   349	  {
   350	    "match": ["Web-Server", "Data-Backup"],
   351	    "group": "Business-Unit-Backup"
   352	  },
   353	  {
   354	    "match": ["web_pool", "db_pool"],
   355	    "group": "Business-Unit-Apps"
   356	  },
   357	  {
   358	    "match": ["Vlan1", "Vlan2"],
   359	    "group": "Business-Unit-Networks"
   360	  },
   361	  {
   362	    "match": ["External-203-0-113-25"],
   363	    "group": "Business-Unit-External"
   364	  },
   365	  {
   366	    "match": ["Unused-Host"],
   367	    "group": "Business-Unit-Orphan"
   368	  }
   369	]'
   370	+ export reports_folder=reports
   371	+ reports_folder=reports
   372	+ mkdir -p reports/json reports/objects
   373	+ [[ -z 1 ]]
   374	+ [[ -z false ]]
   375	+ [[ -z 10.0.0.1 ]]
   376	++ print 10.0.0.1
   377	++ [[ -n 10.0.0.1 ]]
   378	++ sed -E 's/[[:space:]]+//g'
   379	++ echo -en 10.0.0.1
   380	++ tr -d '\r'
   381	+ target_address=10.0.0.1
   382	+ [[ false == true ]]
   383	+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
   384	+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
   385	+ for cfg_file in "${source_configs[@]}"
   386	+ extract_configs configs/cisco/fw1.cfg 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
   387	+ local config_file=configs/cisco/fw1.cfg
   388	+ local target_pattern=10.0.0.1
   389	+ local target_listing=targets/10.0.0.1.json
   390	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
   391	+ [[ ! -f configs/cisco/fw1.cfg ]]
   392	+ message '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   393	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   394	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   395	+ print '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   396	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   397	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   398	[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg+ newline
   399	+ local count=1
   400	+ (( i = 0 ))
   401	+ (( i < count ))
   402	+ echo
   403
   404	+ (( i++ ))
   405	+ (( i < count ))
   406	+ [[ ! -s configs/cisco/fw1.cfg ]]
   407	++ stat -c%s configs/cisco/fw1.cfg
   408	stat: illegal option -- c
   409	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
   410	+ message '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   411	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   412	+ local 'message=[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   413	+ print '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   414	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   415	+ echo -en '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   416	[OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes+ newline
   417	+ local count=1
   418	+ (( i = 0 ))
   419	+ (( i < count ))
   420	+ echo
   421
   422	+ (( i++ ))
   423	+ (( i < count ))
   424	+ local 'imported_content=object-group network BU1-NETWORK
   425	 description Corporate HQ Subnets
   426	 network-object host 10.0.0.1
   427	 network-object host 10.0.1.2
   428	 network-object 192.168.1.0 255.255.255.0
   429	!
   430
   431
   432
   433	object network Server-192-168-1-10
   434	 host 192.168.1.10
   435	 description Main Application Server
   436	!
   437	!!!!!
   438
   439	!
   440
   441
   442
   443	object network External-203-0-113-25
   444	 host 203.0.113.25
   445	!
   446
   447
   448	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   449	access-list OUTSIDE extended deny ip any any
   450	!
   451	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   452	!'
   453	+ [[ true == true ]]
   454	+ message 'Imported Content: object-group network BU1-NETWORK
   455	 description Corporate HQ Subnets
   456	 network-object host 10.0.0.1
   457	 network-object host 10.0.1.2
   458	 network-object 192.168.1.0 255.255.255.0
   459	!
   460
   461
   462
   463	object network Server-192-168-1-10
   464	 host 192.168.1.10
   465	 description Main Application Server
   466	!
   467	!!!!!
   468
   469	!
   470
   471
   472
   473	object network External-203-0-113-25
   474	 host 203.0.113.25
   475	!
   476
   477
   478	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   479	access-list OUTSIDE extended deny ip any any
   480	!
   481	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   482	!'
   483	+ [[ -n Imported Content: object-group network BU1-NETWORK
   484	 description Corporate HQ Subnets
   485	 network-object host 10.0.0.1
   486	 network-object host 10.0.1.2
   487	 network-object 192.168.1.0 255.255.255.0
   488	!
   489
   490
   491
   492	object network Server-192-168-1-10
   493	 host 192.168.1.10
   494	 description Main Application Server
   495	!
   496	!!!!!
   497
   498	!
   499
   500
   501
   502	object network External-203-0-113-25
   503	 host 203.0.113.25
   504	!
   505
   506
   507	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   508	access-list OUTSIDE extended deny ip any any
   509	!
   510	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   511	! ]]
   512	+ local 'message=Imported Content: object-group network BU1-NETWORK
   513	 description Corporate HQ Subnets
   514	 network-object host 10.0.0.1
   515	 network-object host 10.0.1.2
   516	 network-object 192.168.1.0 255.255.255.0
   517	!
   518
   519
   520
   521	object network Server-192-168-1-10
   522	 host 192.168.1.10
   523	 description Main Application Server
   524	!
   525	!!!!!
   526
   527	!
   528
   529
   530
   531	object network External-203-0-113-25
   532	 host 203.0.113.25
   533	!
   534
   535
   536	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   537	access-list OUTSIDE extended deny ip any any
   538	!
   539	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   540	!'
   541	+ print 'Imported Content: object-group network BU1-NETWORK
   542	 description Corporate HQ Subnets
   543	 network-object host 10.0.0.1
   544	 network-object host 10.0.1.2
   545	 network-object 192.168.1.0 255.255.255.0
   546	!
   547
   548
   549
   550	object network Server-192-168-1-10
   551	 host 192.168.1.10
   552	 description Main Application Server
   553	!
   554	!!!!!
   555
   556	!
   557
   558
   559
   560	object network External-203-0-113-25
   561	 host 203.0.113.25
   562	!
   563
   564
   565	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   566	access-list OUTSIDE extended deny ip any any
   567	!
   568	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   569	!'
   570	+ [[ -n Imported Content: object-group network BU1-NETWORK
   571	 description Corporate HQ Subnets
   572	 network-object host 10.0.0.1
   573	 network-object host 10.0.1.2
   574	 network-object 192.168.1.0 255.255.255.0
   575	!
   576
   577
   578
   579	object network Server-192-168-1-10
   580	 host 192.168.1.10
   581	 description Main Application Server
   582	!
   583	!!!!!
   584
   585	!
   586
   587
   588
   589	object network External-203-0-113-25
   590	 host 203.0.113.25
   591	!
   592
   593
   594	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   595	access-list OUTSIDE extended deny ip any any
   596	!
   597	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   598	! ]]
   599	+ echo -en 'Imported Content: object-group network BU1-NETWORK
   600	 description Corporate HQ Subnets
   601	 network-object host 10.0.0.1
   602	 network-object host 10.0.1.2
   603	 network-object 192.168.1.0 255.255.255.0
   604	!
   605
   606
   607
   608	object network Server-192-168-1-10
   609	 host 192.168.1.10
   610	 description Main Application Server
   611	!
   612	!!!!!
   613
   614	!
   615
   616
   617
   618	object network External-203-0-113-25
   619	 host 203.0.113.25
   620	!
   621
   622
   623	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   624	access-list OUTSIDE extended deny ip any any
   625	!
   626	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   627	!'
   628	Imported Content: object-group network BU1-NETWORK
   629	 description Corporate HQ Subnets
   630	 network-object host 10.0.0.1
   631	 network-object host 10.0.1.2
   632	 network-object 192.168.1.0 255.255.255.0
   633	!
   634
   635
   636
   637	object network Server-192-168-1-10
   638	 host 192.168.1.10
   639	 description Main Application Server
   640	!
   641	!!!!!
   642
   643	!
   644
   645
   646
   647	object network External-203-0-113-25
   648	 host 203.0.113.25
   649	!
   650
   651
   652	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   653	access-list OUTSIDE extended deny ip any any
   654	!
   655	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   656	!+ newline
   657	+ local count=1
   658	+ (( i = 0 ))
   659	+ (( i < count ))
   660	+ echo
   661
   662	+ (( i++ ))
   663	+ (( i < count ))
   664	++ sed '/^\s*$/d;/^\s*!.*$/d'
   665	+ local 'sanitized_content=object-group network BU1-NETWORK
   666	 description Corporate HQ Subnets
   667	 network-object host 10.0.0.1
   668	 network-object host 10.0.1.2
   669	 network-object 192.168.1.0 255.255.255.0
   670	object network Server-192-168-1-10
   671	 host 192.168.1.10
   672	 description Main Application Server
   673	object network External-203-0-113-25
   674	 host 203.0.113.25
   675	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   676	access-list OUTSIDE extended deny ip any any
   677	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   678	+ [[ true == true ]]
   679	+ message 'Sanitized Content: object-group network BU1-NETWORK
   680	 description Corporate HQ Subnets
   681	 network-object host 10.0.0.1
   682	 network-object host 10.0.1.2
   683	 network-object 192.168.1.0 255.255.255.0
   684	object network Server-192-168-1-10
   685	 host 192.168.1.10
   686	 description Main Application Server
   687	object network External-203-0-113-25
   688	 host 203.0.113.25
   689	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   690	access-list OUTSIDE extended deny ip any any
   691	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   692	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   693	 description Corporate HQ Subnets
   694	 network-object host 10.0.0.1
   695	 network-object host 10.0.1.2
   696	 network-object 192.168.1.0 255.255.255.0
   697	object network Server-192-168-1-10
   698	 host 192.168.1.10
   699	 description Main Application Server
   700	object network External-203-0-113-25
   701	 host 203.0.113.25
   702	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   703	access-list OUTSIDE extended deny ip any any
   704	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   705	+ local 'message=Sanitized Content: object-group network BU1-NETWORK
   706	 description Corporate HQ Subnets
   707	 network-object host 10.0.0.1
   708	 network-object host 10.0.1.2
   709	 network-object 192.168.1.0 255.255.255.0
   710	object network Server-192-168-1-10
   711	 host 192.168.1.10
   712	 description Main Application Server
   713	object network External-203-0-113-25
   714	 host 203.0.113.25
   715	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   716	access-list OUTSIDE extended deny ip any any
   717	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   718	+ print 'Sanitized Content: object-group network BU1-NETWORK
   719	 description Corporate HQ Subnets
   720	 network-object host 10.0.0.1
   721	 network-object host 10.0.1.2
   722	 network-object 192.168.1.0 255.255.255.0
   723	object network Server-192-168-1-10
   724	 host 192.168.1.10
   725	 description Main Application Server
   726	object network External-203-0-113-25
   727	 host 203.0.113.25
   728	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   729	access-list OUTSIDE extended deny ip any any
   730	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   731	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   732	 description Corporate HQ Subnets
   733	 network-object host 10.0.0.1
   734	 network-object host 10.0.1.2
   735	 network-object 192.168.1.0 255.255.255.0
   736	object network Server-192-168-1-10
   737	 host 192.168.1.10
   738	 description Main Application Server
   739	object network External-203-0-113-25
   740	 host 203.0.113.25
   741	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   742	access-list OUTSIDE extended deny ip any any
   743	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   744	+ echo -en 'Sanitized Content: object-group network BU1-NETWORK
   745	 description Corporate HQ Subnets
   746	 network-object host 10.0.0.1
   747	 network-object host 10.0.1.2
   748	 network-object 192.168.1.0 255.255.255.0
   749	object network Server-192-168-1-10
   750	 host 192.168.1.10
   751	 description Main Application Server
   752	object network External-203-0-113-25
   753	 host 203.0.113.25
   754	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   755	access-list OUTSIDE extended deny ip any any
   756	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   757	Sanitized Content: object-group network BU1-NETWORK
   758	 description Corporate HQ Subnets
   759	 network-object host 10.0.0.1
   760	 network-object host 10.0.1.2
   761	 network-object 192.168.1.0 255.255.255.0
   762	object network Server-192-168-1-10
   763	 host 192.168.1.10
   764	 description Main Application Server
   765	object network External-203-0-113-25
   766	 host 203.0.113.25
   767	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   768	access-list OUTSIDE extended deny ip any any
   769	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25+ newline
   770	+ local count=1
   771	+ (( i = 0 ))
   772	+ (( i < count ))
   773	+ echo
   774
   775	+ (( i++ ))
   776	+ (( i < count ))
   777	++ perl -pe 's/\n/MTc0NzExMjg4NTgzNTg3NDAwMAo/g'
   778	+ local 'serialized_objects=object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   779	+ [[ true == true ]]
   780	+ message 'Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   781	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo ]]
   782	+ local 'message=Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   783	+ print 'Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   784	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo ]]
   785	+ echo -en 'Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   786	Serialized Objects: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzExMjg4NTgzNTg3NDAwMAoobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application ServerMTc0NzExMjg4NTgzNTg3NDAwMAoobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25MTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzExMjg4NTgzNTg3NDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzExMjg4NTgzNTg3NDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo+ newline
   787	+ local count=1
   788	+ (( i = 0 ))
   789	+ (( i < count ))
   790	+ echo
   791
   792	+ (( i++ ))
   793	+ (( i < count ))
   794	++ sed -E 's/MTc0NzExMjg4NTgzNTg3NDAwMAo([^[:space:]])/\n\1/g'
   795	+ local 'restored_lines=object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0
   796	object network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server
   797	object network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25
   798	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   799	access-list OUTSIDE extended deny ip any any
   800	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   801	+ restored_lines+='
   802	'
   803	+ IFS='
   804	'
   805	+ read -r -d '' -a config_objects
   806	++ printf '%s\0' 'object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0
   807	object network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server
   808	object network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25
   809	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   810	access-list OUTSIDE extended deny ip any any
   811	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo
   812	'
   813	+ [[ true == true ]]
   814	+ message 'Loaded 6 config blocks'
   815	+ [[ -n Loaded 6 config blocks ]]
   816	+ local 'message=Loaded 6 config blocks'
   817	+ print 'Loaded 6 config blocks'
   818	+ [[ -n Loaded 6 config blocks ]]
   819	+ echo -en 'Loaded 6 config blocks'
   820	Loaded 6 config blocks+ newline
   821	+ local count=1
   822	+ (( i = 0 ))
   823	+ (( i < count ))
   824	+ echo
   825
   826	+ (( i++ ))
   827	+ (( i < count ))
   828	+ for i in "${!config_objects[@]}"
   829	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   830	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   831	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   832	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   833	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   834	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   835	|---> Block [0]
   836	object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0+ newline
   837	+ local count=1
   838	+ (( i = 0 ))
   839	+ (( i < count ))
   840	+ echo
   841
   842	+ (( i++ ))
   843	+ (( i < count ))
   844	+ for i in "${!config_objects[@]}"
   845	+ message '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server'
   846	+ [[ -n |---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server ]]
   847	+ local 'message=|---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server'
   848	+ print '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server'
   849	+ [[ -n |---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server ]]
   850	+ echo -en '|---> Block [1]\nobject network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server'
   851	|---> Block [1]
   852	object network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server+ newline
   853	+ local count=1
   854	+ (( i = 0 ))
   855	+ (( i < count ))
   856	+ echo
   857
   858	+ (( i++ ))
   859	+ (( i < count ))
   860	+ for i in "${!config_objects[@]}"
   861	+ message '|---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25'
   862	+ [[ -n |---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25 ]]
   863	+ local 'message=|---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25'
   864	+ print '|---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25'
   865	+ [[ -n |---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25 ]]
   866	+ echo -en '|---> Block [2]\nobject network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25'
   867	|---> Block [2]
   868	object network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25+ newline
   869	+ local count=1
   870	+ (( i = 0 ))
   871	+ (( i < count ))
   872	+ echo
   873
   874	+ (( i++ ))
   875	+ (( i < count ))
   876	+ for i in "${!config_objects[@]}"
   877	+ message '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   878	+ [[ -n |---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   879	+ local 'message=|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   880	+ print '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   881	+ [[ -n |---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   882	+ echo -en '|---> Block [3]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   883	|---> Block [3]
   884	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
   885	+ local count=1
   886	+ (( i = 0 ))
   887	+ (( i < count ))
   888	+ echo
   889
   890	+ (( i++ ))
   891	+ (( i < count ))
   892	+ for i in "${!config_objects[@]}"
   893	+ message '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   894	+ [[ -n |---> Block [4]\naccess-list OUTSIDE extended deny ip any any ]]
   895	+ local 'message=|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   896	+ print '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   897	+ [[ -n |---> Block [4]\naccess-list OUTSIDE extended deny ip any any ]]
   898	+ echo -en '|---> Block [4]\naccess-list OUTSIDE extended deny ip any any'
   899	|---> Block [4]
   900	access-list OUTSIDE extended deny ip any any+ newline
   901	+ local count=1
   902	+ (( i = 0 ))
   903	+ (( i < count ))
   904	+ echo
   905
   906	+ (( i++ ))
   907	+ (( i < count ))
   908	+ for i in "${!config_objects[@]}"
   909	+ message '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   910	+ [[ -n |---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo ]]
   911	+ local 'message=|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   912	+ print '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   913	+ [[ -n |---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo ]]
   914	+ echo -en '|---> Block [5]\nnat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   915	|---> Block [5]
   916	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo+ newline
   917	+ local count=1
   918	+ (( i = 0 ))
   919	+ (( i < count ))
   920	+ echo
   921
   922	+ (( i++ ))
   923	+ (( i < count ))
   924	+ newline
   925	+ local count=1
   926	+ (( i = 0 ))
   927	+ (( i < count ))
   928	+ echo
   929
   930	+ (( i++ ))
   931	+ (( i < count ))
   932	+ oIFS='
   933	'
   934	+ IFS='
   935	'
   936	++ printf '%s\n' 'object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0' 'object network Server-192-168-1-10MTc0NzExMjg4NTgzNTg3NDAwMAo host 192.168.1.10MTc0NzExMjg4NTgzNTg3NDAwMAo description Main Application Server' 'object network External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo host 203.0.113.25' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' 'access-list OUTSIDE extended deny ip any any' 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzExMjg4NTgzNTg3NDAwMAo'
   937	++ grep -F 10.0.0.1
   938	+ matched_objects=('object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any')
   939	+ declare -a matched_objects
   940	+ IFS='
   941	'
   942	+ [[ true == true ]]
   943	+ message 'Loaded 2 config blocks'
   944	+ [[ -n Loaded 2 config blocks ]]
   945	+ local 'message=Loaded 2 config blocks'
   946	+ print 'Loaded 2 config blocks'
   947	+ [[ -n Loaded 2 config blocks ]]
   948	+ echo -en 'Loaded 2 config blocks'
   949	Loaded 2 config blocks+ newline
   950	+ local count=1
   951	+ (( i = 0 ))
   952	+ (( i < count ))
   953	+ echo
   954
   955	+ (( i++ ))
   956	+ (( i < count ))
   957	+ for i in "${!matched_objects[@]}"
   958	+ message '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   959	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   960	+ local 'message=|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   961	+ print '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   962	+ [[ -n |---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
   963	+ echo -en '|---> Block [0]\nobject-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
   964	|---> Block [0]
   965	object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0+ newline
   966	+ local count=1
   967	+ (( i = 0 ))
   968	+ (( i < count ))
   969	+ echo
   970
   971	+ (( i++ ))
   972	+ (( i < count ))
   973	+ for i in "${!matched_objects[@]}"
   974	+ message '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   975	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   976	+ local 'message=|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   977	+ print '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   978	+ [[ -n |---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
   979	+ echo -en '|---> Block [1]\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
   980	|---> Block [1]
   981	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
   982	+ local count=1
   983	+ (( i = 0 ))
   984	+ (( i < count ))
   985	+ echo
   986
   987	+ (( i++ ))
   988	+ (( i < count ))
   989	+ newline
   990	+ local count=1
   991	+ (( i = 0 ))
   992	+ (( i < count ))
   993	+ echo
   994
   995	+ (( i++ ))
   996	+ (( i < count ))
   997	+ local site_part=configs/cisco
   998	+ local file_part=fw1.cfg
   999	++ jq -r --arg site cisco --arg file fw1.cfg '.configs[] | select(.config.site == $site and .config.device == $file) | .count' targets/10.0.0.1.json
  1000	+ local expected_count=2
  1001	+ [[ true == true ]]
  1002	+ message 'Expected Matches (Count): 2'
  1003	+ [[ -n Expected Matches (Count): 2 ]]
  1004	+ local 'message=Expected Matches (Count): 2'
  1005	+ print 'Expected Matches (Count): 2'
  1006	+ [[ -n Expected Matches (Count): 2 ]]
  1007	+ echo -en 'Expected Matches (Count): 2'
  1008	Expected Matches (Count): 2+ newline
  1009	+ local count=1
  1010	+ (( i = 0 ))
  1011	+ (( i < count ))
  1012	+ echo
  1013
  1014	+ (( i++ ))
  1015	+ (( i < count ))
  1016	+ actual_count=2
  1017	+ [[ 2 != \2 ]]
  1018	+ restored_block=()
  1019	+ declare -a restored_block
  1020	+ for serialized_line in "${matched_objects[@]}"
  1021	+ [[ true == true ]]
  1022	+ message 'Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
  1023	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1024	+ local 'message=Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
  1025	+ print 'Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
  1026	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1027	+ echo -en 'Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0'
  1028	Serialized Line: object-group network BU1-NETWORKMTc0NzExMjg4NTgzNTg3NDAwMAo description Corporate HQ SubnetsMTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.0.1MTc0NzExMjg4NTgzNTg3NDAwMAo network-object host 10.0.1.2MTc0NzExMjg4NTgzNTg3NDAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1029	+ local count=1
  1030	+ (( i = 0 ))
  1031	+ (( i < count ))
  1032	+ echo
  1033
  1034	+ (( i++ ))
  1035	+ (( i < count ))
  1036	++ perl -pe 's/MTc0NzExMjg4NTgzNTg3NDAwMAo/\n/g'
  1037	+ restored_block='object-group network BU1-NETWORK
  1038	 description Corporate HQ Subnets
  1039	 network-object host 10.0.0.1
  1040	 network-object host 10.0.1.2
  1041	 network-object 192.168.1.0 255.255.255.0'
  1042	+ [[ true == true ]]
  1043	+ message 'Restored Configuration:\nobject-group network BU1-NETWORK
  1044	 description Corporate HQ Subnets
  1045	 network-object host 10.0.0.1
  1046	 network-object host 10.0.1.2
  1047	 network-object 192.168.1.0 255.255.255.0'
  1048	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1049	 description Corporate HQ Subnets
  1050	 network-object host 10.0.0.1
  1051	 network-object host 10.0.1.2
  1052	 network-object 192.168.1.0 255.255.255.0 ]]
  1053	+ local 'message=Restored Configuration:\nobject-group network BU1-NETWORK
  1054	 description Corporate HQ Subnets
  1055	 network-object host 10.0.0.1
  1056	 network-object host 10.0.1.2
  1057	 network-object 192.168.1.0 255.255.255.0'
  1058	+ print 'Restored Configuration:\nobject-group network BU1-NETWORK
  1059	 description Corporate HQ Subnets
  1060	 network-object host 10.0.0.1
  1061	 network-object host 10.0.1.2
  1062	 network-object 192.168.1.0 255.255.255.0'
  1063	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1064	 description Corporate HQ Subnets
  1065	 network-object host 10.0.0.1
  1066	 network-object host 10.0.1.2
  1067	 network-object 192.168.1.0 255.255.255.0 ]]
  1068	+ echo -en 'Restored Configuration:\nobject-group network BU1-NETWORK
  1069	 description Corporate HQ Subnets
  1070	 network-object host 10.0.0.1
  1071	 network-object host 10.0.1.2
  1072	 network-object 192.168.1.0 255.255.255.0'
  1073	Restored Configuration:
  1074	object-group network BU1-NETWORK
  1075	 description Corporate HQ Subnets
  1076	 network-object host 10.0.0.1
  1077	 network-object host 10.0.1.2
  1078	 network-object 192.168.1.0 255.255.255.0+ newline
  1079	+ local count=1
  1080	+ (( i = 0 ))
  1081	+ (( i < count ))
  1082	+ echo
  1083
  1084	+ (( i++ ))
  1085	+ (( i < count ))
  1086	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'object-group network BU1-NETWORK
  1087	 description Corporate HQ Subnets
  1088	 network-object host 10.0.0.1
  1089	 network-object host 10.0.1.2
  1090	 network-object 192.168.1.0 255.255.255.0' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
  1091	+ local target_pattern=10.0.0.1
  1092	+ local config_path=configs/cisco/fw1.cfg
  1093	+ local 'restored_block=object-group network BU1-NETWORK
  1094	 description Corporate HQ Subnets
  1095	 network-object host 10.0.0.1
  1096	 network-object host 10.0.1.2
  1097	 network-object 192.168.1.0 255.255.255.0'
  1098	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
  1099	+ local cleaned_block
  1100	++ sed '/^[[:space:]]*$/d'
  1101	+ cleaned_block='object-group network BU1-NETWORK
  1102	 description Corporate HQ Subnets
  1103	 network-object host 10.0.0.1
  1104	 network-object host 10.0.1.2
  1105	 network-object 192.168.1.0 255.255.255.0'
  1106	+ [[ -z object-group network BU1-NETWORK
  1107	 description Corporate HQ Subnets
  1108	 network-object host 10.0.0.1
  1109	 network-object host 10.0.1.2
  1110	 network-object 192.168.1.0 255.255.255.0 ]]
  1111	+ [[ true == true ]]
  1112	+ message '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1113	 description Corporate HQ Subnets
  1114	 network-object host 10.0.0.1
  1115	 network-object host 10.0.1.2
  1116	 network-object 192.168.1.0 255.255.255.0'
  1117	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1118	 description Corporate HQ Subnets
  1119	 network-object host 10.0.0.1
  1120	 network-object host 10.0.1.2
  1121	 network-object 192.168.1.0 255.255.255.0 ]]
  1122	+ local 'message=[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1123	 description Corporate HQ Subnets
  1124	 network-object host 10.0.0.1
  1125	 network-object host 10.0.1.2
  1126	 network-object 192.168.1.0 255.255.255.0'
  1127	+ print '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1128	 description Corporate HQ Subnets
  1129	 network-object host 10.0.0.1
  1130	 network-object host 10.0.1.2
  1131	 network-object 192.168.1.0 255.255.255.0'
  1132	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1133	 description Corporate HQ Subnets
  1134	 network-object host 10.0.0.1
  1135	 network-object host 10.0.1.2
  1136	 network-object 192.168.1.0 255.255.255.0 ]]
  1137	+ echo -en '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1138	 description Corporate HQ Subnets
  1139	 network-object host 10.0.0.1
  1140	 network-object host 10.0.1.2
  1141	 network-object 192.168.1.0 255.255.255.0'
  1142	[process_configs] Raw Block:
  1143	object-group network BU1-NETWORK
  1144	 description Corporate HQ Subnets
  1145	 network-object host 10.0.0.1
  1146	 network-object host 10.0.1.2
  1147	 network-object 192.168.1.0 255.255.255.0+ newline
  1148	+ local count=1
  1149	+ (( i = 0 ))
  1150	+ (( i < count ))
  1151	+ echo
  1152
  1153	+ (( i++ ))
  1154	+ (( i < count ))
  1155	+ local object_line
  1156	++ head -n 1
  1157	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1158	+ object_line='object-group network BU1-NETWORK'
  1159	+ [[ -z object-group network BU1-NETWORK ]]
  1160	+ local object_keyword type_value
  1161	++ awk '{print $1}'
  1162	+ object_keyword=object-group
  1163	++ awk '{$1=""; print substr($0,2)}'
  1164	+ type_value='network BU1-NETWORK'
  1165	+ [[ true == true ]]
  1166	+ print '[process_configs] object   : object-group'
  1167	+ [[ -n [process_configs] object   : object-group ]]
  1168	+ echo -en '[process_configs] object   : object-group'
  1169	[process_configs] object   : object-group+ print '[process_configs] type     : network BU1-NETWORK'
  1170	+ [[ -n [process_configs] type     : network BU1-NETWORK ]]
  1171	+ echo -en '[process_configs] type     : network BU1-NETWORK'
  1172	[process_configs] type     : network BU1-NETWORK+ entries=()
  1173	+ local -a entries
  1174	+ IFS=
  1175	+ read -r line
  1176	+ local trimmed
  1177	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1178	+ trimmed='object-group network BU1-NETWORK'
  1179	+ [[ -z object-group network BU1-NETWORK ]]
  1180	+ [[ object-group network bu1-network =~ ^description[[:space:]] ]]
  1181	+ entries+=("${trimmed}")
  1182	+ IFS=
  1183	+ read -r line
  1184	+ local trimmed
  1185	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1186	+ trimmed='description Corporate HQ Subnets'
  1187	+ [[ -z description Corporate HQ Subnets ]]
  1188	+ [[ description corporate hq subnets =~ ^description[[:space:]] ]]
  1189	+ continue
  1190	+ IFS=
  1191	+ read -r line
  1192	+ local trimmed
  1193	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1194	+ trimmed='network-object host 10.0.0.1'
  1195	+ [[ -z network-object host 10.0.0.1 ]]
  1196	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  1197	+ entries+=("${trimmed}")
  1198	+ IFS=
  1199	+ read -r line
  1200	+ local trimmed
  1201	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1202	+ trimmed='network-object host 10.0.1.2'
  1203	+ [[ -z network-object host 10.0.1.2 ]]
  1204	+ [[ network-object host 10.0.1.2 =~ ^description[[:space:]] ]]
  1205	+ entries+=("${trimmed}")
  1206	+ IFS=
  1207	+ read -r line
  1208	+ local trimmed
  1209	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1210	+ trimmed='network-object 192.168.1.0 255.255.255.0'
  1211	+ [[ -z network-object 192.168.1.0 255.255.255.0 ]]
  1212	+ [[ network-object 192.168.1.0 255.255.255.0 =~ ^description[[:space:]] ]]
  1213	+ entries+=("${trimmed}")
  1214	+ IFS=
  1215	+ read -r line
  1216	+ ((  4 > 1  ))
  1217	+ entries=("${entries[@]:1}")
  1218	+ [[ true == true ]]
  1219	+ message '[process_configs] Entries:'
  1220	+ [[ -n [process_configs] Entries: ]]
  1221	+ local 'message=[process_configs] Entries:'
  1222	+ print '[process_configs] Entries:'
  1223	+ [[ -n [process_configs] Entries: ]]
  1224	+ echo -en '[process_configs] Entries:'
  1225	[process_configs] Entries:+ newline
  1226	+ local count=1
  1227	+ (( i = 0 ))
  1228	+ (( i < count ))
  1229	+ echo
  1230
  1231	+ (( i++ ))
  1232	+ (( i < count ))
  1233	+ for e in "${entries[@]}"
  1234	+ print '  - network-object host 10.0.0.1'
  1235	+ [[ -n   - network-object host 10.0.0.1 ]]
  1236	+ echo -en '  - network-object host 10.0.0.1'
  1237	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  1238	+ print '  - network-object host 10.0.1.2'
  1239	+ [[ -n   - network-object host 10.0.1.2 ]]
  1240	+ echo -en '  - network-object host 10.0.1.2'
  1241	  - network-object host 10.0.1.2+ for e in "${entries[@]}"
  1242	+ print '  - network-object 192.168.1.0 255.255.255.0'
  1243	+ [[ -n   - network-object 192.168.1.0 255.255.255.0 ]]
  1244	+ echo -en '  - network-object 192.168.1.0 255.255.255.0'
  1245	  - network-object 192.168.1.0 255.255.255.0+ local matched_line
  1246	++ grep -wF 10.0.0.1
  1247	++ head -n 1
  1248	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1249	+ matched_line='network-object host 10.0.0.1'
  1250	+ [[ -z network-object host 10.0.0.1 ]]
  1251	+ [[ true == true ]]
  1252	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  1253	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1254	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  1255	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  1256	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1257	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  1258	[process_configs] Matched: network-object host 10.0.0.1+ newline
  1259	+ local count=1
  1260	+ (( i = 0 ))
  1261	+ (( i < count ))
  1262	+ echo
  1263
  1264	+ (( i++ ))
  1265	+ (( i < count ))
  1266	+ local desc_val=false
  1267	+ [[ -z false ]]
  1268	+ [[ true == true ]]
  1269	+ message '[process_configs] Description: false'
  1270	+ [[ -n [process_configs] Description: false ]]
  1271	+ local 'message=[process_configs] Description: false'
  1272	+ print '[process_configs] Description: false'
  1273	+ [[ -n [process_configs] Description: false ]]
  1274	+ echo -en '[process_configs] Description: false'
  1275	[process_configs] Description: false+ newline
  1276	+ local count=1
  1277	+ (( i = 0 ))
  1278	+ (( i < count ))
  1279	+ echo
  1280
  1281	+ (( i++ ))
  1282	+ (( i < count ))
  1283	+ local group_val=Unclassified
  1284	+ [[ true == true ]]
  1285	+ local object_key
  1286	++ awk '{print $NF}'
  1287	++ sed -E 's/[[:punct:]]*$//'
  1288	+ object_key=BU1-NETWORK
  1289	++ jq -r --arg key BU1-NETWORK 'map(select(.match[]? | contains($key))) | .[0].group'
  1290	+ group_val='Identified Matching Entries'
  1291	+ [[ -z Identified Matching Entries ]]
  1292	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1293	+ [[ -z Identified Matching Entries ]]
  1294	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1295	+ [[ true == true ]]
  1296	+ message '[process_configs] Group: Identified Matching Entries'
  1297	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1298	+ local 'message=[process_configs] Group: Identified Matching Entries'
  1299	+ print '[process_configs] Group: Identified Matching Entries'
  1300	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1301	+ echo -en '[process_configs] Group: Identified Matching Entries'
  1302	[process_configs] Group: Identified Matching Entries+ newline
  1303	+ local count=1
  1304	+ (( i = 0 ))
  1305	+ (( i < count ))
  1306	+ echo
  1307
  1308	+ (( i++ ))
  1309	+ (( i < count ))
  1310	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object host 10.0.1.2' 'network-object 192.168.1.0 255.255.255.0'
  1311	++ jq -R .
  1312	++ jq -s .
  1313	+ local 'entries_2json=[
  1314	  "network-object host 10.0.0.1",
  1315	  "network-object host 10.0.1.2",
  1316	  "network-object 192.168.1.0 255.255.255.0"
  1317	]'
  1318	+ export target_object
  1319	+ [[ 3 -eq 1 ]]
  1320	++ jq -n --arg object object-group --arg type 'network BU1-NETWORK' --arg description false --argjson entries '[
  1321	  "network-object host 10.0.0.1",
  1322	  "network-object host 10.0.1.2",
  1323	  "network-object 192.168.1.0 255.255.255.0"
  1324	]' --arg group 'Identified Matching Entries' '{
  1325	                  object: $object,
  1326	                  type: $type,
  1327	                  description: ($description | select(. != "" and . != "null") // false),
  1328	                  entries: $entries,
  1329	                  group: $group
  1330	                }'
  1331	+ target_object='{
  1332	  "object": "object-group",
  1333	  "type": "network BU1-NETWORK",
  1334	  "description": "false",
  1335	  "entries": [
  1336	    "network-object host 10.0.0.1",
  1337	    "network-object host 10.0.1.2",
  1338	    "network-object 192.168.1.0 255.255.255.0"
  1339	  ],
  1340	  "group": "Identified Matching Entries"
  1341	}'
  1342	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json ]]
  1343	+ [[ -n {
  1344	  "object": "object-group",
  1345	  "type": "network BU1-NETWORK",
  1346	  "description": "false",
  1347	  "entries": [
  1348	    "network-object host 10.0.0.1",
  1349	    "network-object host 10.0.1.2",
  1350	    "network-object 192.168.1.0 255.255.255.0"
  1351	  ],
  1352	  "group": "Identified Matching Entries"
  1353	} ]]
  1354	+ print '{
  1355	  "object": "object-group",
  1356	  "type": "network BU1-NETWORK",
  1357	  "description": "false",
  1358	  "entries": [
  1359	    "network-object host 10.0.0.1",
  1360	    "network-object host 10.0.1.2",
  1361	    "network-object 192.168.1.0 255.255.255.0"
  1362	  ],
  1363	  "group": "Identified Matching Entries"
  1364	}'
  1365	+ [[ -n {
  1366	  "object": "object-group",
  1367	  "type": "network BU1-NETWORK",
  1368	  "description": "false",
  1369	  "entries": [
  1370	    "network-object host 10.0.0.1",
  1371	    "network-object host 10.0.1.2",
  1372	    "network-object 192.168.1.0 255.255.255.0"
  1373	  ],
  1374	  "group": "Identified Matching Entries"
  1375	} ]]
  1376	+ echo -en '{
  1377	  "object": "object-group",
  1378	  "type": "network BU1-NETWORK",
  1379	  "description": "false",
  1380	  "entries": [
  1381	    "network-object host 10.0.0.1",
  1382	    "network-object host 10.0.1.2",
  1383	    "network-object 192.168.1.0 255.255.255.0"
  1384	  ],
  1385	  "group": "Identified Matching Entries"
  1386	}'
  1387	+ [[ true == true ]]
  1388	+ message '[process_configs] JSON Object (output):'
  1389	+ [[ -n [process_configs] JSON Object (output): ]]
  1390	+ local 'message=[process_configs] JSON Object (output):'
  1391	+ print '[process_configs] JSON Object (output):'
  1392	+ [[ -n [process_configs] JSON Object (output): ]]
  1393	+ echo -en '[process_configs] JSON Object (output):'
  1394	[process_configs] JSON Object (output):+ newline
  1395	+ local count=1
  1396	+ (( i = 0 ))
  1397	+ (( i < count ))
  1398	+ echo
  1399
  1400	+ (( i++ ))
  1401	+ (( i < count ))
  1402	+ print '{
  1403	  "object": "object-group",
  1404	  "type": "network BU1-NETWORK",
  1405	  "description": "false",
  1406	  "entries": [
  1407	    "network-object host 10.0.0.1",
  1408	    "network-object host 10.0.1.2",
  1409	    "network-object 192.168.1.0 255.255.255.0"
  1410	  ],
  1411	  "group": "Identified Matching Entries"
  1412	}'
  1413	+ [[ -n {
  1414	  "object": "object-group",
  1415	  "type": "network BU1-NETWORK",
  1416	  "description": "false",
  1417	  "entries": [
  1418	    "network-object host 10.0.0.1",
  1419	    "network-object host 10.0.1.2",
  1420	    "network-object 192.168.1.0 255.255.255.0"
  1421	  ],
  1422	  "group": "Identified Matching Entries"
  1423	} ]]
  1424	+ echo -en '{
  1425	  "object": "object-group",
  1426	  "type": "network BU1-NETWORK",
  1427	  "description": "false",
  1428	  "entries": [
  1429	    "network-object host 10.0.0.1",
  1430	    "network-object host 10.0.1.2",
  1431	    "network-object 192.168.1.0 255.255.255.0"
  1432	  ],
  1433	  "group": "Identified Matching Entries"
  1434	}'
  1435	+ jq .
  1436	{
  1437	  "object": "object-group",
  1438	  "type": "network BU1-NETWORK",
  1439	  "description": "false",
  1440	  "entries": [
  1441	    "network-object host 10.0.0.1",
  1442	    "network-object host 10.0.1.2",
  1443	    "network-object 192.168.1.0 255.255.255.0"
  1444	  ],
  1445	  "group": "Identified Matching Entries"
  1446	}
  1447	+ newline
  1448	+ local count=1
  1449	+ (( i = 0 ))
  1450	+ (( i < count ))
  1451	+ echo
  1452
  1453	+ (( i++ ))
  1454	+ (( i < count ))
  1455	+ return 0
  1456	+ for serialized_line in "${matched_objects[@]}"
  1457	+ [[ true == true ]]
  1458	+ message 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1459	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1460	+ local 'message=Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1461	+ print 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1462	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1463	+ echo -en 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1464	Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1465	+ local count=1
  1466	+ (( i = 0 ))
  1467	+ (( i < count ))
  1468	+ echo
  1469
  1470	+ (( i++ ))
  1471	+ (( i < count ))
  1472	++ perl -pe 's/MTc0NzExMjg4NTgzNTg3NDAwMAo/\n/g'
  1473	+ restored_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1474	+ [[ true == true ]]
  1475	+ message 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1476	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1477	+ local 'message=Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1478	+ print 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1479	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1480	+ echo -en 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1481	Restored Configuration:
  1482	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1483	+ local count=1
  1484	+ (( i = 0 ))
  1485	+ (( i < count ))
  1486	+ echo
  1487
  1488	+ (( i++ ))
  1489	+ (( i < count ))
  1490	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
  1491	+ local target_pattern=10.0.0.1
  1492	+ local config_path=configs/cisco/fw1.cfg
  1493	+ local 'restored_block=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1494	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json
  1495	+ local cleaned_block
  1496	++ sed '/^[[:space:]]*$/d'
  1497	+ cleaned_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1498	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1499	+ [[ true == true ]]
  1500	+ message '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1501	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1502	+ local 'message=[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1503	+ print '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1504	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1505	+ echo -en '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1506	[process_configs] Raw Block:
  1507	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1508	+ local count=1
  1509	+ (( i = 0 ))
  1510	+ (( i < count ))
  1511	+ echo
  1512
  1513	+ (( i++ ))
  1514	+ (( i < count ))
  1515	+ local object_line
  1516	++ head -n 1
  1517	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1518	+ object_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1519	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1520	+ local object_keyword type_value
  1521	++ awk '{print $1}'
  1522	+ object_keyword=access-list
  1523	++ awk '{$1=""; print substr($0,2)}'
  1524	+ type_value='OUTSIDE extended permit ip host 10.0.0.1 any'
  1525	+ [[ true == true ]]
  1526	+ print '[process_configs] object   : access-list'
  1527	+ [[ -n [process_configs] object   : access-list ]]
  1528	+ echo -en '[process_configs] object   : access-list'
  1529	[process_configs] object   : access-list+ print '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  1530	+ [[ -n [process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1531	+ echo -en '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  1532	[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any+ entries=()
  1533	+ local -a entries
  1534	+ IFS=
  1535	+ read -r line
  1536	+ local trimmed
  1537	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1538	+ trimmed='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1539	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1540	+ [[ access-list outside extended permit ip host 10.0.0.1 any =~ ^description[[:space:]] ]]
  1541	+ entries+=("${trimmed}")
  1542	+ IFS=
  1543	+ read -r line
  1544	+ ((  1 > 1  ))
  1545	+ [[ true == true ]]
  1546	+ message '[process_configs] Entries:'
  1547	+ [[ -n [process_configs] Entries: ]]
  1548	+ local 'message=[process_configs] Entries:'
  1549	+ print '[process_configs] Entries:'
  1550	+ [[ -n [process_configs] Entries: ]]
  1551	+ echo -en '[process_configs] Entries:'
  1552	[process_configs] Entries:+ newline
  1553	+ local count=1
  1554	+ (( i = 0 ))
  1555	+ (( i < count ))
  1556	+ echo
  1557
  1558	+ (( i++ ))
  1559	+ (( i < count ))
  1560	+ for e in "${entries[@]}"
  1561	+ print '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1562	+ [[ -n   - access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1563	+ echo -en '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1564	  - access-list OUTSIDE extended permit ip host 10.0.0.1 any+ local matched_line
  1565	++ grep -wF 10.0.0.1
  1566	++ head -n 1
  1567	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1568	+ matched_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1569	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1570	+ [[ true == true ]]
  1571	+ message '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1572	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1573	+ local 'message=[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1574	+ print '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1575	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1576	+ echo -en '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1577	[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1578	+ local count=1
  1579	+ (( i = 0 ))
  1580	+ (( i < count ))
  1581	+ echo
  1582
  1583	+ (( i++ ))
  1584	+ (( i < count ))
  1585	+ local desc_val=false
  1586	+ [[ -z false ]]
  1587	+ [[ true == true ]]
  1588	+ message '[process_configs] Description: false'
  1589	+ [[ -n [process_configs] Description: false ]]
  1590	+ local 'message=[process_configs] Description: false'
  1591	+ print '[process_configs] Description: false'
  1592	+ [[ -n [process_configs] Description: false ]]
  1593	+ echo -en '[process_configs] Description: false'
  1594	[process_configs] Description: false+ newline
  1595	+ local count=1
  1596	+ (( i = 0 ))
  1597	+ (( i < count ))
  1598	+ echo
  1599
  1600	+ (( i++ ))
  1601	+ (( i < count ))
  1602	+ local group_val=Unclassified
  1603	+ [[ true == true ]]
  1604	+ local object_key
  1605	++ awk '{print $NF}'
  1606	++ sed -E 's/[[:punct:]]*$//'
  1607	+ object_key=any
  1608	++ jq -r --arg key any 'map(select(.match[]? | contains($key))) | .[0].group'
  1609	+ group_val=null
  1610	+ [[ -z null ]]
  1611	+ [[ null == \n\u\l\l ]]
  1612	++ jq -r --arg desc false 'map(select(.match[]? == $desc)) | .[0].group'
  1613	+ group_val=null
  1614	+ [[ -z null ]]
  1615	+ [[ null == \n\u\l\l ]]
  1616	+ group_val=Unclassified
  1617	+ [[ true == true ]]
  1618	+ message '[process_configs] Group: Unclassified'
  1619	+ [[ -n [process_configs] Group: Unclassified ]]
  1620	+ local 'message=[process_configs] Group: Unclassified'
  1621	+ print '[process_configs] Group: Unclassified'
  1622	+ [[ -n [process_configs] Group: Unclassified ]]
  1623	+ echo -en '[process_configs] Group: Unclassified'
  1624	[process_configs] Group: Unclassified+ newline
  1625	+ local count=1
  1626	+ (( i = 0 ))
  1627	+ (( i < count ))
  1628	+ echo
  1629
  1630	+ (( i++ ))
  1631	+ (( i < count ))
  1632	++ printf '%s\n' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1633	++ jq -R .
  1634	++ jq -s .
  1635	+ local 'entries_2json=[
  1636	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1637	]'
  1638	+ export target_object
  1639	+ [[ 1 -eq 1 ]]
  1640	++ jq -n --arg object access-list --arg description false --argjson entries '[
  1641	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1642	]' --arg group Unclassified '{
  1643	                  object: $object,
  1644	                  type: false,
  1645	                  description: ($description | select(. != "" and . != "null") // false),
  1646	                  entries: $entries,
  1647	                  group: $group
  1648	                }'
  1649	+ target_object='{
  1650	  "object": "access-list",
  1651	  "type": false,
  1652	  "description": "false",
  1653	  "entries": [
  1654	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1655	  ],
  1656	  "group": "Unclassified"
  1657	}'
  1658	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j/fragments.json ]]
  1659	+ [[ -n {
  1660	  "object": "access-list",
  1661	  "type": false,
  1662	  "description": "false",
  1663	  "entries": [
  1664	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1665	  ],
  1666	  "group": "Unclassified"
  1667	} ]]
  1668	+ print '{
  1669	  "object": "access-list",
  1670	  "type": false,
  1671	  "description": "false",
  1672	  "entries": [
  1673	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1674	  ],
  1675	  "group": "Unclassified"
  1676	}'
  1677	+ [[ -n {
  1678	  "object": "access-list",
  1679	  "type": false,
  1680	  "description": "false",
  1681	  "entries": [
  1682	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1683	  ],
  1684	  "group": "Unclassified"
  1685	} ]]
  1686	+ echo -en '{
  1687	  "object": "access-list",
  1688	  "type": false,
  1689	  "description": "false",
  1690	  "entries": [
  1691	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1692	  ],
  1693	  "group": "Unclassified"
  1694	}'
  1695	+ [[ true == true ]]
  1696	+ message '[process_configs] JSON Object (output):'
  1697	+ [[ -n [process_configs] JSON Object (output): ]]
  1698	+ local 'message=[process_configs] JSON Object (output):'
  1699	+ print '[process_configs] JSON Object (output):'
  1700	+ [[ -n [process_configs] JSON Object (output): ]]
  1701	+ echo -en '[process_configs] JSON Object (output):'
  1702	[process_configs] JSON Object (output):+ newline
  1703	+ local count=1
  1704	+ (( i = 0 ))
  1705	+ (( i < count ))
  1706	+ echo
  1707
  1708	+ (( i++ ))
  1709	+ (( i < count ))
  1710	+ print '{
  1711	  "object": "access-list",
  1712	  "type": false,
  1713	  "description": "false",
  1714	  "entries": [
  1715	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1716	  ],
  1717	  "group": "Unclassified"
  1718	}'
  1719	+ [[ -n {
  1720	  "object": "access-list",
  1721	  "type": false,
  1722	  "description": "false",
  1723	  "entries": [
  1724	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1725	  ],
  1726	  "group": "Unclassified"
  1727	} ]]
  1728	+ jq .
  1729	+ echo -en '{
  1730	  "object": "access-list",
  1731	  "type": false,
  1732	  "description": "false",
  1733	  "entries": [
  1734	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1735	  ],
  1736	  "group": "Unclassified"
  1737	}'
  1738	{
  1739	  "object": "access-list",
  1740	  "type": false,
  1741	  "description": "false",
  1742	  "entries": [
  1743	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  1744	  ],
  1745	  "group": "Unclassified"
  1746	}
  1747	+ newline
  1748	+ local count=1
  1749	+ (( i = 0 ))
  1750	+ (( i < count ))
  1751	+ echo
  1752
  1753	+ (( i++ ))
  1754	+ (( i < count ))
  1755	+ return 0
  1756	./scripts/tools-extraction.shell: line 154: target_output: unbound variable
  1757	++ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j ]]
  1758	++ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FikF4rF06j

cat: ./reports/json/10.0.0.1.json: No such file or directory
devops: network-resources (master *$%=) $
