devops: network-resources (master *$%=) $ date && echo ; rm -rf ./reports ./targets ./.cache ./.local && echo ; bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs --ips-list=ips.list ;
Tue May 20 22:22:37 MST 2025


+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias pause=pause
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=.logs
++ logs_location=.logs
++ export targets_location=targets
++ targets_location=targets
+++ pwd
++ export actions_logsfile=/Users/emvaldes/.repos/github/networking/network-resources/actions.output
++ actions_logsfile=/Users/emvaldes/.repos/github/networking/network-resources/actions.output
++ export targets_logsfile=.logs/targets.jobs
++ targets_logsfile=.logs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzgwNDk1NzIwNTA0ODAwMAo
++ divisor=MTc0NzgwNDk1NzIwNTA0ODAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ :
+ rm -rf .cache
+ mkdir -p .cache/jobs .cache/targets
+ rm -rf .logs
+ mkdir -p .logs/errors .logs/jobs
+ rm -rf targets
+ mkdir -p targets
+ [[ -z '' ]]
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ [[ 5 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs --ips-list=ips.list
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export delaying_factor=0.05
+ delaying_factor=0.05
+ [[ -z ips.list ]]
+ [[ -z '' ]]
+ export target_devices=false
+ target_devices=false
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z '' ]]
+ export target_sites=false
+ target_sites=false
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-20 22:22:37'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n false ]]
+ [[ -f false ]]
+ [[ false =~ ^[0-9] ]]
+ message 'Project Target Devices-Listing file not found: false'
+ [[ -n Project Target Devices-Listing file not found: false ]]
+ local 'message=Project Target Devices-Listing file not found: false'
+ echo -e 'Project Target Devices-Listing file not found: false'
Project Target Devices-Listing file not found: false
+ return 0
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-20 22:22:37'
+ [[ -n [INFO] Date: 2025-05-20 22:22:37 ]]
+ local 'message=[INFO] Date: 2025-05-20 22:22:37'
+ echo -e '[INFO] Date: 2025-05-20 22:22:37'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ return 0
+ message '[INFO] PID: 7007'
+ [[ -n [INFO] PID: 7007 ]]
+ local 'message=[INFO] PID: 7007'
+ echo -e '[INFO] PID: 7007'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
+ return 0
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ return 0
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ return 0
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Logging Output Directory: .logs'
+ [[ -n [INFO] Logging Output Directory: .logs ]]
+ local 'message=[INFO] Logging Output Directory: .logs'
+ echo -e '[INFO] Logging Output Directory: .logs'
+ return 0
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Classify Targets: true'
+ [[ -n [INFO] Classify Targets: true ]]
+ local 'message=[INFO] Classify Targets: true'
+ echo -e '[INFO] Classify Targets: true'
+ return 0
+ message '[INFO] configs'
+ [[ -n [INFO] configs ]]
+ local 'message=[INFO] configs'
+ echo -e '[INFO] configs'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] File Extensions: cfg'
+ [[ -n [INFO] File Extensions: cfg ]]
+ local 'message=[INFO] File Extensions: cfg'
+ echo -e '[INFO] File Extensions: cfg'
+ return 0
+ message '[INFO] 0.05'
+ [[ -n [INFO] 0.05 ]]
+ local 'message=[INFO] 0.05'
+ echo -e '[INFO] 0.05'
+ return 0
+ message '[INFO] ips.list'
+ [[ -n [INFO] ips.list ]]
+ local 'message=[INFO] ips.list'
+ echo -e '[INFO] ips.list'
+ return 0
+ message '[INFO] Enable Logging: true'
+ [[ -n [INFO] Enable Logging: true ]]
+ local 'message=[INFO] Enable Logging: true'
+ echo -e '[INFO] Enable Logging: true'
+ return 0
+ message '[INFO] 100'
+ [[ -n [INFO] 100 ]]
+ local 'message=[INFO] 100'
+ echo -e '[INFO] 100'
+ return 0
+ message '[INFO] Matrix Filename: matrix.json'
+ [[ -n [INFO] Matrix Filename: matrix.json ]]
+ local 'message=[INFO] Matrix Filename: matrix.json'
+ echo -e '[INFO] Matrix Filename: matrix.json'
+ return 0
+ message '[INFO] Reports Folder: reports'
+ [[ -n [INFO] Reports Folder: reports ]]
+ local 'message=[INFO] Reports Folder: reports'
+ echo -e '[INFO] Reports Folder: reports'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] Validate Address: false'
+ [[ -n [INFO] Validate Address: false ]]
+ local 'message=[INFO] Validate Address: false'
+ echo -e '[INFO] Validate Address: false'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] Debug: true'
+ [[ -n [INFO] Debug: true ]]
+ local 'message=[INFO] Debug: true'
+ echo -e '[INFO] Debug: true'
+ return 0
+ message '[INFO] false'
+ [[ -n [INFO] false ]]
+ local 'message=[INFO] false'
+ echo -e '[INFO] false'
+ return 0
+ message '[INFO] Verbose: true'
+ [[ -n [INFO] Verbose: true ]]
+ local 'message=[INFO] Verbose: true'
+ echo -e '[INFO] Verbose: true'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ message 'Target (false) (count): 0'
+ [[ -n Target (false) (count): 0 ]]
+ local 'message=Target (false) (count): 0'
+ echo -e 'Target (false) (count): 0'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local configs_list_cache=.cache/configs.list
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ discovered_files=()
+ declare -a discovered_files
+ IFS=
+ read -r fullpath
++ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
++ sort
++ basename configs/cisco/fw1.cfg
+ filename=fw1.cfg
+ device_name=fw1
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw4.cfg
+ filename=fw4.cfg
+ device_name=fw4
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw7.cfg
+ filename=fw7.cfg
+ device_name=fw7
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/fw8.cfg
+ filename=fw8.cfg
+ device_name=fw8
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw1.cfg
+ filename=fw1.cfg
+ device_name=fw1
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch1.conf
+ filename=switch1.conf
+ device_name=switch1
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch2.conf
+ filename=switch2.conf
+ device_name=switch2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch3.conf
+ filename=switch3.conf
+ device_name=switch3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch4.conf
+ filename=switch4.conf
+ device_name=switch4
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ [[ true == true ]]
+ message 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ local 'message=Generated configs.list at .cache/configs.list'
+ echo -e 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n false ]]
+ [[ false != \f\a\l\s\e ]]
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ target_listing=()
+ declare -a target_listing
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=10 0 0 1'
+ local fixed_address=10.0.0.1
+ [[ -n '' ]]
+ [[ 10.0.0.1 != \1\0\.\0\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.1.2
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.1.2 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '1' '2')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ local 'segments=10 0 1 2'
+ local fixed_address=10.0.1.2
+ [[ -n '' ]]
+ [[ 10.0.1.2 != \1\0\.\0\.\1\.\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.2.3
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.2.3 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '2' '3')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 3
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=3
+ [[ 3 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=3
+ local 'segments=10 0 2 3'
+ local fixed_address=10.0.2.3
+ [[ -n '' ]]
+ [[ 10.0.2.3 != \1\0\.\0\.\2\.\3 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.10.10.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.10.10.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '10' '10' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=10 10 10 10'
+ local fixed_address=10.10.10.10
+ [[ -n '' ]]
+ [[ 10.10.10.10 != \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.0.5
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.0.5 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '0' '5')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 5
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=5
+ [[ 5 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=5
+ local 'segments=172 16 0 5'
+ local fixed_address=172.16.0.5
+ [[ -n '' ]]
+ [[ 172.16.0.5 != \1\7\2\.\1\6\.\0\.\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.1.6
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.1.6 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '1' '6')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 6
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=6
+ [[ 6 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=6
+ local 'segments=172 16 1 6'
+ local fixed_address=172.16.1.6
+ [[ -n '' ]]
+ [[ 172.16.1.6 != \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.18.1.20
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.18.1.20 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '18' '1' '20')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 18
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=18
+ [[ 18 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=18
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 20
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=20
+ [[ 20 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=20
+ local 'segments=172 18 1 20'
+ local fixed_address=172.18.1.20
+ [[ -n '' ]]
+ [[ 172.18.1.20 != \1\7\2\.\1\8\.\1\.\2\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.31.255.254
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.31.255.254 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '31' '255' '254')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 31
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=31
+ [[ 31 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=31
+ for i in "${!segments[@]}"
++ echo -en 255
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=255
+ [[ 255 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=255
+ for i in "${!segments[@]}"
++ echo -en 254
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=254
+ [[ 254 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=254
+ local 'segments=172 31 255 254'
+ local fixed_address=172.31.255.254
+ [[ -n '' ]]
+ [[ 172.31.255.254 != \1\7\2\.\3\1\.\2\5\5\.\2\5\4 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.0.2.50
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.0.2.50 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '0' '2' '50')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 50
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=50
+ [[ 50 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=50
+ local 'segments=192 0 2 50'
+ local fixed_address=192.0.2.50
+ [[ -n '' ]]
+ [[ 192.0.2.50 != \1\9\2\.\0\.\2\.\5\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=192 168 0 1'
+ local fixed_address=192.168.0.1
+ [[ -n '' ]]
+ [[ 192.168.0.1 != \1\9\2\.\1\6\8\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 0 100'
+ local fixed_address=192.168.0.100
+ [[ -n '' ]]
+ [[ 192.168.0.100 != \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=192 168 1 10'
+ local fixed_address=192.168.1.10
+ [[ -n '' ]]
+ [[ 192.168.1.10 != \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.11
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.11 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '11')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 11
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=11
+ [[ 11 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=11
+ local 'segments=192 168 1 11'
+ local fixed_address=192.168.1.11
+ [[ -n '' ]]
+ [[ 192.168.1.11 != \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.2.12
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.2.12 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '2' '12')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 12
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=12
+ [[ 12 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=12
+ local 'segments=192 168 2 12'
+ local fixed_address=192.168.2.12
+ [[ -n '' ]]
+ [[ 192.168.2.12 != \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.100.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.100.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '100' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 100 100'
+ local fixed_address=192.168.100.100
+ [[ -n '' ]]
+ [[ 192.168.100.100 != \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=198.51.100.75
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 198.51.100.75 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('198' '51' '100' '75')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 198
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=198
+ [[ 198 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=198
+ for i in "${!segments[@]}"
++ echo -en 51
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=51
+ [[ 51 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=51
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 75
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=75
+ [[ 75 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=75
+ local 'segments=198 51 100 75'
+ local fixed_address=198.51.100.75
+ [[ -n '' ]]
+ [[ 198.51.100.75 != \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=203.0.113.25
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 203.0.113.25 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('203' '0' '113' '25')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 203
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=203
+ [[ 203 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=203
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 113
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=113
+ [[ 113 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=113
+ for i in "${!segments[@]}"
++ echo -en 25
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=25
+ [[ 25 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=25
+ local 'segments=203 0 113 25'
+ local fixed_address=203.0.113.25
+ [[ -n '' ]]
+ [[ 203.0.113.25 != \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ ip_batch_size=10
+ total_ips=17
+ (( ip_offset=0 ))
+ (( ip_offset<total_ips ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ mapfile -t site_folders
++ cut -d/ -f2 .cache/configs.list
++ sort -u
+ local batch_size=5
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ return 0
+ message 'Batch size: 5'
+ [[ -n Batch size: 5 ]]
+ local 'message=Batch size: 5'
+ echo -e 'Batch size: 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Parallel threads:   100'
+ [[ -n Parallel threads:   100 ]]
+ local 'message=Parallel threads:   100'
+ echo -e 'Parallel threads:   100'
+ return 0
+ message 'Target IPs (count): 10'
+ [[ -n Target IPs (count): 10 ]]
+ local 'message=Target IPs (count): 10'
+ echo -e 'Target IPs (count): 10'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /cisco/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=8
+ [[ true == true ]]
+ message 'Target Site:   cisco'
+ [[ -n Target Site:   cisco ]]
+ local 'message=Target Site:   cisco'
+ echo -e 'Target Site:   cisco'
+ return 0
+ message 'Total Configs: 8'
+ [[ -n Total Configs: 8 ]]
+ local 'message=Total Configs: 8'
+ echo -e 'Total Configs: 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ find targets -maxdepth 1 -type f -name '*.json' -delete
+ compgen -G './targets/*.json'
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747804957657612000 29443
+ export batch_id=MTc0NzgwNDk1
+ batch_id=MTc0NzgwNDk1
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1747804957-23759
+ batch_configs_list=configs--MTc0NzgwNDk1-1747804957-23759.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ printf '%s\n' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzgwNDk1'
+ [[ -n Batch ID: MTc0NzgwNDk1 ]]
+ local 'message=Batch ID: MTc0NzgwNDk1'
+ echo -e 'Batch ID: MTc0NzgwNDk1'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747804957-23759'
+ [[ -n Batch Suffix:   1747804957-23759 ]]
+ local 'message=Batch Suffix:   1747804957-23759'
+ echo -e 'Batch Suffix:   1747804957-23759'
+ return 0
+ message 'Batch FileName: configs--MTc0NzgwNDk1-1747804957-23759.list'
+ [[ -n Batch FileName: configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local 'message=Batch FileName: configs--MTc0NzgwNDk1-1747804957-23759.list'
+ echo -e 'Batch FileName: configs--MTc0NzgwNDk1-1747804957-23759.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local base=configs--MTc0NzgwNDk1-1747804957-23759.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzgwNDk1-1747804957-23759.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzgwNDk1-1747804957-23759.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzgwNDk1-1747804957-23759.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\4\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw4.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\4\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw4.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\4\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw4.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw4.cfg
+ [[ :configs/cisco/fw4.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\4\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw4.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg:configs/cisco/fw4.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw3.cfg:configs/cisco/fw4.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\4\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg
+ [[ :configs/cisco/fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw5.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg
+ [[ :configs/cisco/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/fw5.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw2.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw2.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw1.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw1.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw2.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw5.cfg
+ entry='access-list OUTSIDE extended permit ip host 172.16.1.6 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw2.cfg:configs/cisco/fw5.cfg
+ [[ :configs/cisco/fw2.cfg:configs/cisco/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw4.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw5.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg:configs/cisco/fw4.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg:configs/cisco/fw4.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg:configs/cisco/fw5.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw4.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw5.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw1.cfg:configs/cisco/fw3.cfg:configs/cisco/fw4.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg:configs/cisco/fw4.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw2.cfg:configs/cisco/fw5.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.0.2.50.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.0.2.50
+ tracing_record=targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/192.0.2.50
+ touch targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json
+ job_pid=7432
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.18.1.20.json
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/172.18.1.20
+ tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/172.18.1.20
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
++ wc -l
+ touch targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json
+ config_lines='      81'
++ grep -oE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ tr -d ' '
+ job_pid=7446
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.0.5.json
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=5
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/172.16.0.5
+ tracing_record=targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/172.16.0.5
+ local matched_files=configs/cisco/fw4.cfg
+ [[ -n configs/cisco/fw4.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
++ wc -l
+ touch targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw4.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
+ job_pid=7465
+ targets_jobs_pid+=("${job_pid}")
++ tr -d ' '
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.0.1.json
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 5
  }
]'
++ return 0
++ jq '{ configs: . }'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=fw4.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.0.0.1
+ tracing_record=targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/10.0.0.1
+ local matched_files=configs/cisco/fw3.cfg
+ [[ -n configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 5
    }
  ]
}'
+ jq -r
++ wc -l
+ touch targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json
+ config_lines='      55'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ tr -d ' '
+ job_pid=7485
+ targets_jobs_pid+=("${job_pid}")
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ [[ -n targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json ]]
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ jq -s '{ configs: map(.configs) | add }' targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json targets/192.0.2.50.json
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
+ for ip_addr in "${target_listing[@]}"
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ return 0
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json
+ target_file=targets/10.10.10.10.json
+ local ip_addr=10.0.0.1
++ jq '{ configs: . }'
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=3
+ site=cisco
+ device=fw3.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/10.10.10.10
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw5.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw5.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 2
    }
  ]
}'
+ jq -r
+ mv -f targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json.tmp targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk1.json
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json
+ message 'Generated Config-File: targets/192.0.2.50.json'
+ [[ -n Generated Config-File: targets/192.0.2.50.json ]]
+ local 'message=Generated Config-File: targets/192.0.2.50.json'
+ echo -e 'Generated Config-File: targets/192.0.2.50.json'
+ return 0
+ return 0
+ config_lines='      81'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ jq '{ configs: . }'
++ return 0
+ [[ -n targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json ]]
++ tr -d ' '
+ [[ -f targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json targets/172.18.1.20.json
+ job_pid=7510
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=3
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ site_name=cisco
+ jq -r
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/10.0.2.3
+ local 'matched_files=configs/cisco/fw1.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg'
+ [[ -n configs/cisco/fw1.cfg
configs/cisco/fw3.cfg
configs/cisco/fw4.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ mv -f targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json.tmp targets/172.18.1.20/172.18.1.20--cisco--MTc0NzgwNDk1.json
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json
+ message 'Generated Config-File: targets/172.18.1.20.json'
+ [[ -n Generated Config-File: targets/172.18.1.20.json ]]
+ local 'message=Generated Config-File: targets/172.18.1.20.json'
+ echo -e 'Generated Config-File: targets/172.18.1.20.json'
+ return 0
+ return 0
+ config_lines='      81'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json ]]
+ config_file=cisco/fw5.cfg
+ jq -s '{ configs: map(.configs) | add }' targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json targets/172.16.0.5.json
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ wc -l
++ tr -d ' '
+ job_pid=7532
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=3
+ site=cisco
+ device=fw1.cfg
+ config_lines='      40'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ site_name=cisco
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw5.cfg
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      81' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ target_dirpath=targets/10.0.1.2
+ tracing_record=targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/10.0.1.2
++ wc -l
++ tr -d ' '
+ mv -f targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json.tmp targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk1.json
+ local matched_files=configs/cisco/fw3.cfg
+ [[ -n configs/cisco/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
++ wc -l
+ match_count=3
+ site=cisco
+ device=fw5.cfg
+ touch targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json
+ message 'Generated Config-File: targets/172.16.0.5.json'
+ [[ -n Generated Config-File: targets/172.16.0.5.json ]]
+ local 'message=Generated Config-File: targets/172.16.0.5.json'
+ echo -e 'Generated Config-File: targets/172.16.0.5.json'
+ return 0
+ return 0
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
+ config_lines='      55'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ return 0
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw3.cfg
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ wc -l
++ tr -d ' '
+ job_pid=7560
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.1.6.json
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed -E 's|^configs/||'
+ match_count=3
++ cut -d/ -f1
+ site=cisco
+ device=fw3.cfg
+ config_lines='      55'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw3.cfg
++ wc -l
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ return 0
++ jq '{ configs: . }'
+ site_name=cisco
+ target_dirpath=targets/172.16.1.6
+ tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json
+ mkdir -p targets/172.16.1.6
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw4.cfg'
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw4.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
++ wc -l
+ match_count=5
+ site=cisco
+ device=fw3.cfg
+ touch targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  }
]'
++ return 0
++ jq --arg site cisco --arg device fw3.cfg --argjson lines '      55' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
+ final_json='{
]'
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 3
    }
  ]
}'
+ IFS=
+ read -r config_file
+ jq -r
+ config_lines='      43'
+ job_pid=7587
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw2.cfg
+ targets_jobs_pid+=("${job_pid}")
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ [[ true == true ]]
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ wc -l
++ return 0
++ jq '{ configs: . }'
+ message 'Matched IPs to [cisco] configs (8):'
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json
+ [[ -n Matched IPs to [cisco] configs (8): ]]
+ local 'message=Matched IPs to [cisco] configs (8):'
++ tr -d ' '
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk1-1747804957-23759.list
+ local tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json
+ echo -e 'Matched IPs to [cisco] configs (8):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.0.2.50
+ config_raw=configs/cisco/fw1.cfg
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw1.cfg configs/cisco/fw2.cfg configs/cisco/fw3.cfg configs/cisco/fw4.cfg configs/cisco/fw5.cfg
++ sed 's|configs/cisco/||g'
+ match_count=3
+ site=cisco
+ device=fw2.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
++ wc -l
++ print '[]'
+ [[ -n targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json ]]
++ [[ -n [] ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json targets/10.0.0.1.json
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=fw1.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ printf '%-6s | %-15s => %s\n' 7432 192.0.2.50 fw1.cfg
+ jq -r
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.0.1
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw5.cfg
+ local 'matched_files=configs/cisco/fw2.cfg
configs/cisco/fw5.cfg'
+ [[ -n configs/cisco/fw2.cfg
configs/cisco/fw5.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw2.cfg
++ sed 's|configs/cisco/||g'
++ wc -l
+ config_lines='      29'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw4.cfg
++ wc -l
++ tr -d ' '
+ config_lines='      43'
+ config_cleaned=fw1.cfg:fw5.cfg
+ printf '%-6s | %-15s => %s\n' 7485 10.0.0.1 fw1.cfg:fw5.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ config_raw=configs/cisco/fw2.cfg:configs/cisco/fw5.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw4.cfg
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw2.cfg
+ mv -f targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json.tmp targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk1.json
++ wc -l
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json ]]
++ tr -d ' '
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json targets/10.0.2.3.json
++ sed 's|configs/cisco/||g'
++ wc -l
+ match_count=2
+ site=cisco
+ device=fw4.cfg
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
+ return 0
+ return 0
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  }
]'
+ match_count=1
++ return 0
+ site=cisco
+ device=fw2.cfg
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_lines='      29'
+ config_cleaned=fw2.cfg:fw5.cfg
+ printf '%-6s | %-15s => %s\n' 7587 172.16.1.6 fw2.cfg:fw5.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.0.5
+ config_raw=configs/cisco/fw3.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw2.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ sed 's|configs/cisco/||g'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw4.cfg
++ wc -l
++ tr -d ' '
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk1.json
+ match_count=1
+ config_cleaned=fw3.cfg
+ site=cisco
+ device=fw4.cfg
+ printf '%-6s | %-15s => %s\n' 7465 172.16.0.5 fw3.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.18.1.20
+ config_raw=configs/cisco/fw4.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
++ sed 's|configs/cisco/||g'
+ return 0
+ return 0
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ jq --arg site cisco --arg device fw4.cfg --argjson lines '      29' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_file=cisco/fw5.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
++ wc -l
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 81,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 5
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ return 0
++ jq '{ configs: . }'
+ config_cleaned=fw4.cfg
+ printf '%-6s | %-15s => %s\n' 7446 172.18.1.20 fw4.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=configs/cisco/fw1.cfg:configs/cisco/fw3.cfg:configs/cisco/fw4.cfg
+ config_lines='      40'
++ sed 's|configs/cisco/||g'
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw5.cfg
++ wc -l
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ tr -d ' '
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 81,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 5
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 2
    }
  ]
}'
+ jq -r
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw4.cfg"
    },
    "lines": 29,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
+ config_cleaned=fw1.cfg:fw3.cfg:fw4.cfg
+ printf '%-6s | %-15s => %s\n' 7510 10.10.10.10 fw1.cfg:fw3.cfg:fw4.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_raw=configs/cisco/fw2.cfg:configs/cisco/fw4.cfg
+ match_count=5
+ site=cisco
+ device=fw5.cfg
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ return 0
++ jq --arg site cisco --arg device fw5.cfg --argjson lines '      40' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json targets/10.10.10.10.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw4.cfg"
      },
      "lines": 29,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_cleaned=fw2.cfg:fw4.cfg
+ printf '%-6s | %-15s => %s\n' 7560 10.0.1.2 fw2.cfg:fw4.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/fw3.cfg
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 5
++ jq '{ configs: . }'
  }
]'
++ return 0
+ config_cleaned=fw3.cfg
+ printf '%-6s | %-15s => %s\n' 7532 10.0.2.3 fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  8 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7432
+ ip_address=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7446
+ ip_address=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7465
+ ip_address=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7485
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk1.json
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7510
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7532
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7560
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7587
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ [[ -n targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json targets/10.0.1.2.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 5
    }
  ]
}'
+ jq -r
+ mv -f targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json.tmp targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk1.json
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ [[ -n targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json ]]
+ [[ -f targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json targets/172.16.1.6.json
+ mv -f targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json.tmp targets/172.16.1.6/172.16.1.6--cisco--MTc0NzgwNDk1.json
+ message 'Generated Config-File: targets/172.16.1.6.json'
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
+ return 0
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7510
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7560
+ ip_address=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 7587
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\0\.\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\0\.\2\.\5\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\1\.\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 9 -gt 0 ]]
+ message 'Unmapped IPs (count): 9'
+ [[ -n Unmapped IPs (count): 9 ]]
+ local 'message=Unmapped IPs (count): 9'
+ echo -e 'Unmapped IPs (count): 9'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=8
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
++ printf %01d 1
+ padded_index=1
+ job_pid=7675
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.0.2.50
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
+ parse_configs 192.0.2.50 1
+ local ip_addr=192.0.2.50
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ job_pid=7678
+ execute+=(--classify)
+ [[ false == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=172.18.1.20
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
+ parse_configs 172.18.1.20 2
+ local ip_addr=172.18.1.20
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=7682
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.0.5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
+ parse_configs 172.16.0.5 3
+ local ip_addr=172.16.0.5
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.logs/jobs/192.0.2.50.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 4
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=7687
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 10.0.0.1 4
+ logfile=.logs/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local ip_addr=10.0.0.1
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=7692
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ logfile=.logs/jobs/172.16.0.5.job
+ parse_configs 10.10.10.10 5
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local ip_addr=10.10.10.10
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 6
++ IFS=,
+ padded_index=6
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=7697
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 6
+ local ip_addr=10.0.2.3
+ logfile=.logs/jobs/10.0.0.1.job
+ [[ true == true ]]
+ local padded_index=6
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 7
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=7
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=7702
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ logfile=.logs/jobs/10.10.10.10.job
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ ip_addr=172.16.1.6
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.1.2 7
+ local ip_addr=10.0.1.2
+ local padded_index=7
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 8
+ padded_index=8
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=7708
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ true == true ]]
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ execute+=(--classify)
+ return 0
+ [[ false == true ]]
+ message 'PID   | IP Address (8)'
+ [[ true == true ]]
+ [[ -n PID   | IP Address (8) ]]
+ execute+=(--verbose)
+ local 'message=PID   | IP Address (8)'
+ echo -e 'PID   | IP Address (8)'
+ [[ true == true ]]
+ execute+=(--debug)
+ return 0
+ [[ true == true ]]
+ message -------------------------
+ mkdir -p .logs/jobs .logs/errors
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7687 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7682 172.16.0.5
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ parse_configs 172.16.1.6 8
+ printf '%-5s | %s\n' 7702 10.0.1.2
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7708 172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7675 192.0.2.50
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7678 172.18.1.20
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7692 10.10.10.10
+ local ip_addr=172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 7697 10.0.2.3
+ local padded_index=8
+ newline
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=6 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7675
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7678
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7682
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7687
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7692
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7697
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7702
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7708
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=7 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=8 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7675
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7678
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7682
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7687
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7692
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7697
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7702
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7708
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  8 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7675
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7678
+ ip=172.18.1.20
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7682
+ ip=172.16.0.5
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7687
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7692
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7697
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7702
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7708
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7675
+ ip=192.0.2.50
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7687
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7692
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7702
+ ip=10.0.1.2
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7708
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 7692
+ ip=10.10.10.10
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747804961689377000 31550
+ export batch_id=MTc0NzgwNDk2
+ batch_id=MTc0NzgwNDk2
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1747804961-3867
+ batch_configs_list=configs--MTc0NzgwNDk2-1747804961-3867.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ printf '%s\n' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ range_first=6
+ range_last=8
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzgwNDk2'
+ [[ -n Batch ID: MTc0NzgwNDk2 ]]
+ local 'message=Batch ID: MTc0NzgwNDk2'
+ echo -e 'Batch ID: MTc0NzgwNDk2'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1747804961-3867'
+ [[ -n Batch Suffix:   1747804961-3867 ]]
+ local 'message=Batch Suffix:   1747804961-3867'
+ echo -e 'Batch Suffix:   1747804961-3867'
+ return 0
+ message 'Batch FileName: configs--MTc0NzgwNDk2-1747804961-3867.list'
+ [[ -n Batch FileName: configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local 'message=Batch FileName: configs--MTc0NzgwNDk2-1747804961-3867.list'
+ echo -e 'Batch FileName: configs--MTc0NzgwNDk2-1747804961-3867.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local base=configs--MTc0NzgwNDk2-1747804961-3867.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzgwNDk2-1747804961-3867.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzgwNDk2-1747804961-3867.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzgwNDk2-1747804961-3867.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   6 -> 8'
+ [[ -n Batch Ranges:   6 -> 8 ]]
+ local 'message=Batch Ranges:   6 -> 8'
+ echo -e 'Batch Ranges:   6 -> 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\6\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw6.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\6\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw6.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' network-object host 172.31.255.254'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' network-object 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw7.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw7.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw7.cfg
+ [[ :configs/cisco/fw7.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw7.cfg
+ [[ :configs/cisco/fw7.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw7.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw8.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\8\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw8.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw8.cfg
+ entry=' network-object 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw8.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\8\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/fw8.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw8.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/fw8.cfg
+ [[ :configs/cisco/fw8.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\f\w\8\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/fw8.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw7.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw8.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw8.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw6.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw7.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw6.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw7.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw8.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw8.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw6.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw7.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/fw6.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.0.2.50.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.0.2.50
+ tracing_record=targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json
+ mkdir -p targets/192.0.2.50
+ touch targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json
+ job_pid=10436
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.0.5.json
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json
+ local ip_addr=192.0.2.50
+ local target_file=targets/192.0.2.50.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/172.16.0.5
+ tracing_record=targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json
+ mkdir -p targets/172.16.0.5
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw7.cfg
++ wc -l
+ touch targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json
+ config_lines='      31'
++ grep -oE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw7.cfg
++ wc -l
++ tr -d ' '
+ job_pid=10450
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.0.1.json
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json
+ local ip_addr=172.16.0.5
+ local target_file=targets/172.16.0.5.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ match_count=3
+ site=cisco
+ device=fw7.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=configs/cisco/fw8.cfg
+ [[ -n configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ site_name=cisco
+ IFS=
+ read -r config_file
+ target_dirpath=targets/10.0.0.1
+ tracing_record=targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json
+ config_file=cisco/fw8.cfg
+ mkdir -p targets/10.0.0.1
++ wc -l
+ touch targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      21'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 3
  }
]'
++ return 0
++ jq '{ configs: . }'
++ grep -oE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw8.cfg
++ wc -l
++ tr -d ' '
+ job_pid=10470
+ targets_jobs_pid+=("${job_pid}")
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json
+ target_file=targets/10.10.10.10.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ sed -E 's|^configs/||'
+ match_count=2
+ site=cisco
+ device=fw8.cfg
++ cut -d/ -f1
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 3
    }
  ]
}'
+ jq -r
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json
+ mkdir -p targets/10.10.10.10
+ local matched_files=configs/cisco/fw8.cfg
+ [[ -n configs/cisco/fw8.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw8.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json
+ config_lines='      21'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json targets/192.0.2.50.json
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw8.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 2
  }
]'
++ return 0
++ jq '{ configs: . }'
++ tr -d ' '
+ job_pid=10492
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ match_count=1
++ sed -E 's|^configs/||'
+ site=cisco
+ device=fw8.cfg
++ cut -d/ -f1
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw8.cfg --argjson lines '      21' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw8.cfg"
      },
      "lines": 21,
      "count": 2
    }
  ]
}'
+ jq -r
+ mv -f targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json.tmp targets/192.0.2.50/192.0.2.50--cisco--MTc0NzgwNDk2.json
+ site_name=cisco
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.2.3
+ local matched_files=configs/cisco/fw6.cfg
+ [[ -n configs/cisco/fw6.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw6.cfg
++ wc -l
+ message 'Generated Config-File: targets/192.0.2.50.json'
+ [[ -n Generated Config-File: targets/192.0.2.50.json ]]
+ local 'message=Generated Config-File: targets/192.0.2.50.json'
+ echo -e 'Generated Config-File: targets/192.0.2.50.json'
+ return 0
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      26'
+ [[ -n targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json targets/172.16.0.5.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw8.cfg"
    },
    "lines": 21,
    "count": 1
  }
]'
++ return 0
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw6.cfg
++ wc -l
++ tr -d ' '
+ job_pid=10515
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=fw6.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw8.cfg"
      },
      "lines": 21,
      "count": 1
    }
  ]
}'
+ jq -r
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ mv -f targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json.tmp targets/172.16.0.5/172.16.0.5--cisco--MTc0NzgwNDk2.json
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ local matched_files=configs/cisco/fw7.cfg
+ [[ -n configs/cisco/fw7.cfg ]]
+ target_dirpath=targets/10.0.1.2
+ config_json='[]'
+ tracing_record=targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.1.2
+ IFS=
+ read -r config_file
+ config_file=cisco/fw7.cfg
++ wc -l
+ message 'Generated Config-File: targets/172.16.0.5.json'
+ [[ -n Generated Config-File: targets/172.16.0.5.json ]]
+ local 'message=Generated Config-File: targets/172.16.0.5.json'
+ echo -e 'Generated Config-File: targets/172.16.0.5.json'
+ return 0
+ return 0
+ touch targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json
+ [[ -n targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json ]]
+ config_lines='      31'
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json targets/10.0.0.1.json
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw7.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ wc -l
++ return 0
++ jq '{ configs: . }'
++ tr -d ' '
+ job_pid=10538
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ [[ true == true ]]
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804961-3867.list
+ local tracing_record=targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json
+ message 'Matched IPs to [cisco] configs (6):'
+ [[ -n Matched IPs to [cisco] configs (6): ]]
+ local 'message=Matched IPs to [cisco] configs (6):'
+ echo -e 'Matched IPs to [cisco] configs (6):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.0.1
+ config_raw=configs/cisco/fw8.cfg
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw6.cfg configs/cisco/fw7.cfg configs/cisco/fw8.cfg
+ match_count=1
+ site=cisco
+ device=fw7.cfg
++ sed 's|configs/cisco/||g'
+ mv -f targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json.tmp targets/10.0.0.1/10.0.0.1--cisco--MTc0NzgwNDk2.json
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw7.cfg --argjson lines '      31' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 1
    }
  ]
}'
+ jq -r
+ local matched_files=configs/cisco/fw6.cfg
+ config_cleaned=fw8.cfg
+ [[ -n configs/cisco/fw6.cfg ]]
+ config_json='[]'
+ printf '%-6s | %-15s => %s\n' 10470 10.0.0.1 fw8.cfg
+ IFS=
+ read -r config_file
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_file=cisco/fw6.cfg
+ config_raw=configs/cisco/fw6.cfg
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
+ return 0
+ return 0
++ wc -l
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json targets/10.10.10.10.json
+ config_lines='      26'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ config_cleaned=fw6.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
] ]]
+ printf '%-6s | %-15s => %s\n' 10538 10.0.1.2 fw6.cfg
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw7.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ return 0
+ ip=10.10.10.10
+ config_raw=configs/cisco/fw6.cfg
++ sed 's|configs/cisco/||g'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw6.cfg
++ wc -l
++ tr -d ' '
+ config_cleaned=fw6.cfg
+ printf '%-6s | %-15s => %s\n' 10492 10.10.10.10 fw6.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/fw7.cfg
+ match_count=1
+ site=cisco
+ device=fw6.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw7.cfg"
      },
      "lines": 31,
      "count": 1
    }
  ]
}'
++ sed 's|configs/cisco/||g'
+ jq -r
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0NzgwNDk2.json
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device fw6.cfg --argjson lines '      26' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ config_cleaned=fw7.cfg
+ return 0
+ printf '%-6s | %-15s => %s\n' 10515 10.0.2.3 fw7.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.0.2.50
+ return 0
+ config_raw=configs/cisco/fw7.cfg
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json targets/10.0.2.3.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ return 0
+ config_cleaned=fw7.cfg
+ printf '%-6s | %-15s => %s\n' 10436 192.0.2.50 fw7.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.0.5
+ config_raw=configs/cisco/fw8.cfg
++ sed 's|configs/cisco/||g'
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0NzgwNDk2.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_cleaned=fw8.cfg
+ printf '%-6s | %-15s => %s\n' 10450 172.16.0.5 fw8.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  6 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10436
+ ip_address=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10450
+ ip_address=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10470
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10492
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10515
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10538
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ [[ -n targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json targets/10.0.1.2.json
+ mv -f targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json.tmp targets/10.0.1.2/10.0.1.2--cisco--MTc0NzgwNDk2.json
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10515
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 10538
+ ip_address=10.0.1.2
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\0\.\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\0\.\2\.\5\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\0\.\2\.\5\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\6\.\0\.\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 11 -gt 0 ]]
+ message 'Unmapped IPs (count): 11'
+ [[ -n Unmapped IPs (count): 11 ]]
+ local 'message=Unmapped IPs (count): 11'
+ echo -e 'Unmapped IPs (count): 11'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=6
+ ((  ip_index < total_ips  ))
+ ip_addr=192.0.2.50
++ printf %01d 1
+ padded_index=1
+ job_pid=10584
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.0.2.50
+ ((  ip_index < total_ips  ))
+ ip_addr=172.16.0.5
+ parse_configs 192.0.2.50 1
+ local ip_addr=192.0.2.50
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=10587
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=172.16.0.5
+ execute+=(--classify)
+ ((  ip_index < total_ips  ))
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ ip_addr=10.0.0.1
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 172.16.0.5 2
+ local ip_addr=172.16.0.5
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=10591
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 10.0.0.1 3
+ local ip_addr=10.0.0.1
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 4
+ logfile=.logs/jobs/192.0.2.50.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.0.2.50 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
+ padded_index=4
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=10596
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.10.10.10 4
+ local ip_addr=10.10.10.10
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ logfile=.logs/jobs/172.16.0.5.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.0.5 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 5
++ IFS=,
+ padded_index=5
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=10601
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 5
+ logfile=.logs/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local ip_addr=10.0.2.3
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 6
++ return 0
+ padded_index=6
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=10606
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ ((  ip_index < total_ips  ))
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ parse_configs 10.0.1.2 6
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ local ip_addr=10.0.1.2
+ local padded_index=6
+ return 0
+ message 'PID   | IP Address (6)'
+ [[ -n PID   | IP Address (6) ]]
+ local 'message=PID   | IP Address (6)'
+ echo -e 'PID   | IP Address (6)'
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10591 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10596 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10587 172.16.0.5
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10584 192.0.2.50
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10601 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 10606 10.0.1.2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  6 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10584
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10587
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10591
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10596
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10601
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10606
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=6 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  6 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10584
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10587
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10591
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10596
+ ip=10.10.10.10
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10601
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10606
+ ip=10.0.1.2
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10584
+ ip=192.0.2.50
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 10587
+ ip=172.16.0.5
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 8 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5aJBhecGB3
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5aJBhecGB3
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5aJBhecGB3
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.0.1/
+ ip=10.0.0.1
+ final_file=.cache/targets/10.0.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.0.0.1//10.0.0.1--cisco--MTc0NzgwNDk1.json targets/10.0.0.1//10.0.0.1--cisco--MTc0NzgwNDk2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.1.2/
+ ip=10.0.1.2
+ final_file=.cache/targets/10.0.1.2.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.1.2.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.0.1.2//10.0.1.2--cisco--MTc0NzgwNDk1.json targets/10.0.1.2//10.0.1.2--cisco--MTc0NzgwNDk2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.0.2.3//10.0.2.3--cisco--MTc0NzgwNDk1.json targets/10.0.2.3//10.0.2.3--cisco--MTc0NzgwNDk2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.10.10.10//10.10.10.10--cisco--MTc0NzgwNDk1.json targets/10.10.10.10//10.10.10.10--cisco--MTc0NzgwNDk2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.16.0.5/
+ ip=172.16.0.5
+ final_file=.cache/targets/172.16.0.5.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/172.16.0.5.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.16.0.5//172.16.0.5--cisco--MTc0NzgwNDk1.json targets/172.16.0.5//172.16.0.5--cisco--MTc0NzgwNDk2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.16.1.6/
+ ip=172.16.1.6
+ final_file=.cache/targets/172.16.1.6.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.16.1.6.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.16.1.6//172.16.1.6--cisco--MTc0NzgwNDk1.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.18.1.20/
+ ip=172.18.1.20
+ final_file=.cache/targets/172.18.1.20.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.18.1.20.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.18.1.20//172.18.1.20--cisco--MTc0NzgwNDk1.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.0.2.50/
+ ip=192.0.2.50
+ final_file=.cache/targets/192.0.2.50.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/192.0.2.50.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.0.2.50//192.0.2.50--cisco--MTc0NzgwNDk1.json targets/192.0.2.50//192.0.2.50--cisco--MTc0NzgwNDk2.json
+ shopt -u nullglob
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /fortinet/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=3
+ [[ true == true ]]
+ message 'Target Site:   fortinet'
+ [[ -n Target Site:   fortinet ]]
+ local 'message=Target Site:   fortinet'
+ echo -e 'Target Site:   fortinet'
+ return 0
+ message 'Total Configs: 3'
+ [[ -n Total Configs: 3 ]]
+ local 'message=Total Configs: 3'
+ echo -e 'Total Configs: 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 3 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747804964666319000 3771
+ export batch_id=MTc0NzgwNDk2
+ batch_id=MTc0NzgwNDk2
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1747804964-23238
+ batch_configs_list=configs--MTc0NzgwNDk2-1747804964-23238.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ printf '%s\n' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ range_first=1
+ range_last=3
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzgwNDk2'
+ [[ -n Batch ID: MTc0NzgwNDk2 ]]
+ local 'message=Batch ID: MTc0NzgwNDk2'
+ echo -e 'Batch ID: MTc0NzgwNDk2'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747804964-23238'
+ [[ -n Batch Suffix:   1747804964-23238 ]]
+ local 'message=Batch Suffix:   1747804964-23238'
+ echo -e 'Batch Suffix:   1747804964-23238'
+ return 0
+ message 'Batch FileName: configs--MTc0NzgwNDk2-1747804964-23238.list'
+ [[ -n Batch FileName: configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local 'message=Batch FileName: configs--MTc0NzgwNDk2-1747804964-23238.list'
+ echo -e 'Batch FileName: configs--MTc0NzgwNDk2-1747804964-23238.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ local base=configs--MTc0NzgwNDk2-1747804964-23238.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzgwNDk2-1747804964-23238.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzgwNDk2-1747804964-23238.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzgwNDk2-1747804964-23238.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   1 -> 3'
+ [[ -n Batch Ranges:   1 -> 3 ]]
+ local 'message=Batch Ranges:   1 -> 3'
+ echo -e 'Batch Ranges:   1 -> 3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg configs/fortinet/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw1.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw1.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fw2.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw2.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fw3.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw1.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.0.1.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/10.0.0.1
+ tracing_record=targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.0.1
+ touch targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json
+ job_pid=11607
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ local tracing_record=targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.2.3
+ local matched_files=configs/fortinet/fw2.cfg
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw2.cfg
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json
+ config_lines='     103'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/fortinet/fw2.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=fortinet
+ device=fw2.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ job_pid=11624
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/10.0.1.2
+ tracing_record=targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.1.2
+ local matched_files=configs/fortinet/fw1.cfg
+ [[ -n configs/fortinet/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw1.cfg
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ wc -l
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
+ touch targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json
+ config_lines='      67'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fw1.cfg
++ wc -l
++ tr -d ' '
+ job_pid=11641
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (3):'
+ [[ -n Matched IPs to [fortinet] configs (3): ]]
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json
+ local 'message=Matched IPs to [fortinet] configs (3):'
+ echo -e 'Matched IPs to [fortinet] configs (3):'
+ local ip_addr=10.0.1.2
+ local target_file=targets/10.0.1.2.json
+ return 0
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804964-23238.list
+ final_json='{
  "configs": [
+ message -------------------------------------
    {
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
+ local tracing_record=targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json
      },
      "lines": 103,
+ [[ -n ------------------------------------- ]]
      "count": 1
    }
  ]
}'
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ jq -r
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_raw=configs/fortinet/fw2.cfg
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/fortinet/fw1.cfg configs/fortinet/fw2.cfg
+ match_count=1
+ site=fortinet
+ device=fw1.cfg
++ sed 's|configs/fortinet/||g'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fw1.cfg --argjson lines '      67' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=fw2.cfg
+ printf '%-6s | %-15s => %s\n' 11641 10.0.1.2 fw2.cfg
+ local matched_files=configs/fortinet/fw2.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ [[ -n configs/fortinet/fw2.cfg ]]
+ config_json='[]'
+ ip=10.0.2.3
+ config_raw=configs/fortinet/fw1.cfg
+ IFS=
+ read -r config_file
+ config_file=fortinet/fw2.cfg
++ sed 's|configs/fortinet/||g'
++ wc -l
+ [[ -n targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json targets/10.0.0.1.json
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_cleaned=fw1.cfg
+ config_lines='     103'
+ printf '%-6s | %-15s => %s\n' 11624 10.0.2.3 fw1.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.0.1
+ config_raw=configs/fortinet/fw2.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw1.cfg"
    },
    "lines": 67,
    "count": 1
++ jq '{ configs: . }'
  }
]'
++ return 0
++ sed 's|configs/fortinet/||g'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/fortinet/fw2.cfg
++ wc -l
++ tr -d ' '
+ mv -f targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json.tmp targets/10.0.0.1/10.0.0.1--fortinet--MTc0NzgwNDk2.json
+ config_cleaned=fw2.cfg
+ match_count=1
+ printf '%-6s | %-15s => %s\n' 11607 10.0.0.1 fw2.cfg
+ site=fortinet
+ device=fw2.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11607
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11624
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11641
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw1.cfg"
      },
      "lines": 67,
      "count": 1
    }
  ]
}'
+ jq -r
++ print '[]'
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ return 0
+ return 0
++ jq --arg site fortinet --arg device fw2.cfg --argjson lines '     103' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ [[ -n targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json targets/10.0.2.3.json
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
++ jq '{ configs: . }'
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fw2.cfg"
    },
    "lines": 103,
    "count": 1
  }
]'
++ return 0
+ mv -f targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json.tmp targets/10.0.2.3/10.0.2.3--fortinet--MTc0NzgwNDk2.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fw2.cfg"
      },
      "lines": 103,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ [[ -n targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json targets/10.0.1.2.json
+ mv -f targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json.tmp targets/10.0.1.2/10.0.1.2--fortinet--MTc0NzgwNDk2.json
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11607
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11624
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 11641
+ ip_address=10.0.1.2
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 14 -gt 0 ]]
+ message 'Unmapped IPs (count): 14'
+ [[ -n Unmapped IPs (count): 14 ]]
+ local 'message=Unmapped IPs (count): 14'
+ echo -e 'Unmapped IPs (count): 14'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=11681
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=2
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=11684
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 2
+ local ip_addr=10.0.2.3
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
+ padded_index=3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=11688
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ parse_configs 10.0.1.2 3
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ local ip_addr=10.0.1.2
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (3)'
+ [[ -n PID   | IP Address (3) ]]
+ local 'message=PID   | IP Address (3)'
+ echo -e 'PID   | IP Address (3)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 11684 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 11681 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 11688 10.0.1.2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11681
+ logfile=.logs/jobs/10.0.0.1.job
+ [[ true == true ]]
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ kill -0 11684
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11688
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11681
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11684
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11688
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11681
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 11688
+ ip=10.0.1.2
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 3 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovWQ9geVjX
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovWQ9geVjX
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ovWQ9geVjX
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.0.1/
+ ip=10.0.0.1
+ final_file=.cache/targets/10.0.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.0.1.json targets/10.0.0.1//10.0.0.1--fortinet--MTc0NzgwNDk2.json
+ mv -f .cache/targets/10.0.0.1.json.tmp .cache/targets/10.0.0.1.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.1.2/
+ ip=10.0.1.2
+ final_file=.cache/targets/10.0.1.2.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.1.2.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.1.2.json targets/10.0.1.2//10.0.1.2--fortinet--MTc0NzgwNDk2.json
+ mv -f .cache/targets/10.0.1.2.json.tmp .cache/targets/10.0.1.2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.2.3.json targets/10.0.2.3//10.0.2.3--fortinet--MTc0NzgwNDk2.json
+ mv -f .cache/targets/10.0.2.3.json.tmp .cache/targets/10.0.2.3.json
+ shopt -u nullglob
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /misc/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=8
+ [[ true == true ]]
+ message 'Target Site:   misc'
+ [[ -n Target Site:   misc ]]
+ local 'message=Target Site:   misc'
+ echo -e 'Target Site:   misc'
+ return 0
+ message 'Total Configs: 8'
+ [[ -n Total Configs: 8 ]]
+ local 'message=Total Configs: 8'
+ echo -e 'Total Configs: 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747804967480707000 22539
+ export batch_id=MTc0NzgwNDk2
+ batch_id=MTc0NzgwNDk2
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1747804967-25802
+ batch_configs_list=configs--MTc0NzgwNDk2-1747804967-25802.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ printf '%s\n' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzgwNDk2'
+ [[ -n Batch ID: MTc0NzgwNDk2 ]]
+ local 'message=Batch ID: MTc0NzgwNDk2'
+ echo -e 'Batch ID: MTc0NzgwNDk2'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1747804967-25802'
+ [[ -n Batch Suffix:   1747804967-25802 ]]
+ local 'message=Batch Suffix:   1747804967-25802'
+ echo -e 'Batch Suffix:   1747804967-25802'
+ return 0
+ message 'Batch FileName: configs--MTc0NzgwNDk2-1747804967-25802.list'
+ [[ -n Batch FileName: configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local 'message=Batch FileName: configs--MTc0NzgwNDk2-1747804967-25802.list'
+ echo -e 'Batch FileName: configs--MTc0NzgwNDk2-1747804967-25802.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local base=configs--MTc0NzgwNDk2-1747804967-25802.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzgwNDk2-1747804967-25802.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzgwNDk2-1747804967-25802.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzgwNDk2-1747804967-25802.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw2.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw3.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw3.cfg
+ [[ :configs/misc/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw3.cfg
+ [[ :configs/misc/fw3.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\5\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/misc/fw5.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw5.cfg
+ [[ :configs/misc/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw5.cfg
+ [[ :configs/misc/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\5\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry='access-list OUTSIDE extended permit ip host 172.16.1.6 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg
+ [[ :configs/misc/fw2.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\f\w\6\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/misc/fw6.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw2.cfg:configs/misc/fw6.cfg
+ [[ :configs/misc/fw2.cfg:configs/misc/fw6.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\1\.\c\o\n\f\:* ]]
+ ip2files["$token"]+=:configs/misc/switch1.conf
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/fw5.cfg
+ [[ :configs/misc/fw5.cfg: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\1\.\c\o\n\f\:* ]]
+ ip2files["$token"]+=:configs/misc/switch1.conf
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw5.cfg:configs/misc/switch1.conf ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg:configs/misc/fw6.cfg:configs/misc/switch1.conf ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw5.cfg:configs/misc/switch1.conf ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw3.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/fw2.cfg:configs/misc/fw6.cfg:configs/misc/switch1.conf ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.0.1.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/10.0.0.1
+ tracing_record=targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.0.1
+ touch targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json
+ job_pid=12532
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local tracing_record=targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.2.3
+ local 'matched_files=configs/misc/fw5.cfg
configs/misc/switch1.conf'
+ [[ -n configs/misc/fw5.cfg
configs/misc/switch1.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw5.cfg
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json
+ config_lines='      40'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/fw5.cfg
++ wc -l
++ tr -d ' '
+ job_pid=12546
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=3
+ site=misc
+ device=fw5.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device fw5.cfg --argjson lines '      40' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=misc
+ target_dirpath=targets/10.0.1.2
+ tracing_record=targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json
+ mkdir -p targets/10.0.1.2
+ local matched_files=configs/misc/fw3.cfg
+ [[ -n configs/misc/fw3.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw3.cfg
++ wc -l
+ touch targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json
+ config_lines='      55'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch1.conf
++ wc -l
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/fw3.cfg
++ wc -l
++ tr -d ' '
+ job_pid=12565
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (3):'
+ [[ -n Matched IPs to [misc] configs (3): ]]
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json
+ local ip_addr=10.0.1.2
+ local 'message=Matched IPs to [misc] configs (3):'
+ local target_file=targets/10.0.1.2.json
+ echo -e 'Matched IPs to [misc] configs (3):'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk2-1747804967-25802.list
+ local tracing_record=targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_raw=configs/misc/fw2.cfg:configs/misc/fw6.cfg:configs/misc/switch1.conf
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
++ sed 's|configs/misc/||g'
+ config_lines='      14'
+ match_count=3
+ site=misc
+ device=fw3.cfg
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch1.conf
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device fw3.cfg --argjson lines '      55' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=fw2.cfg:fw6.cfg:switch1.conf
+ local 'matched_files=configs/misc/fw2.cfg
configs/misc/fw6.cfg
configs/misc/switch1.conf'
+ printf '%-6s | %-15s => %s\n' 12565 10.0.1.2 fw2.cfg:fw6.cfg:switch1.conf
+ [[ -n configs/misc/fw2.cfg
configs/misc/fw6.cfg
configs/misc/switch1.conf ]]
+ config_json='[]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ IFS=
+ read -r config_file
+ ip=10.0.0.1
+ config_raw=configs/misc/fw5.cfg:configs/misc/switch1.conf
+ config_file=misc/fw2.cfg
+ match_count=1
++ wc -l
+ site=misc
+ device=switch1.conf
++ sed 's|configs/misc/||g'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ return 0
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      43'
+ config_cleaned=fw5.cfg:switch1.conf
+ printf '%-6s | %-15s => %s\n' 12532 10.0.0.1 fw5.cfg:switch1.conf
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/misc/fw3.cfg
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/fw2.cfg
++ sed 's|configs/misc/||g'
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
++ wc -l
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw3.cfg"
    },
    "lines": 55,
    "count": 3
  }
]'
++ return 0
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_cleaned=fw3.cfg
+ match_count=3
+ printf '%-6s | %-15s => %s\n' 12546 10.0.2.3 fw3.cfg
+ site=misc
+ device=fw2.cfg
+ newline
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw5.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12532
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12546
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12565
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device fw2.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw3.cfg"
      },
      "lines": 55,
      "count": 3
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw5.cfg"
      },
      "lines": 40,
      "count": 3
    },
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/fw6.cfg
++ wc -l
+ [[ -n targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json targets/10.0.2.3.json
+ config_lines='      26'
+ [[ -n targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json targets/10.0.0.1.json
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/fw6.cfg
++ wc -l
++ tr -d ' '
+ mv -f targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json.tmp targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk2.json
+ match_count=1
+ site=misc
+ device=fw6.cfg
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
+ return 0
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
++ jq --arg site misc --arg device fw6.cfg --argjson lines '      26' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ mv -f targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json.tmp targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk2.json
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
+ return 0
+ return 0
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch1.conf
++ wc -l
+ config_lines='      14'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch1.conf
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=misc
+ device=switch1.conf
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  }
]'
++ return 0
++ jq --arg site misc --arg device switch1.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
++ jq '{ configs: . }'
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "fw2.cfg"
    },
    "lines": 43,
    "count": 3
  },
  {
    "config": {
      "site": "misc",
      "device": "fw6.cfg"
    },
    "lines": 26,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch1.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "fw2.cfg"
      },
      "lines": 43,
      "count": 3
    },
    {
      "config": {
        "site": "misc",
        "device": "fw6.cfg"
      },
      "lines": 26,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch1.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json ]]
+ [[ -f targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json targets/10.0.1.2.json
+ mv -f targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json.tmp targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk2.json
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12532
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12546
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 12565
+ ip_address=10.0.1.2
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 14 -gt 0 ]]
+ message 'Unmapped IPs (count): 14'
+ [[ -n Unmapped IPs (count): 14 ]]
+ local 'message=Unmapped IPs (count): 14'
+ echo -e 'Unmapped IPs (count): 14'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=12632
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=2
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=12635
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 2
+ local ip_addr=10.0.2.3
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
+ padded_index=3
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=12639
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ execute+=(--classify)
+ ((  ip_index < total_ips  ))
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ parse_configs 10.0.1.2 3
+ local ip_addr=10.0.1.2
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (3)'
+ [[ -n PID   | IP Address (3) ]]
+ local 'message=PID   | IP Address (3)'
+ echo -e 'PID   | IP Address (3)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 12639 10.0.1.2
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 12632 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 12635 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ logfile=.logs/jobs/10.0.0.1.job
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12632
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12635
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12639
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12632
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12635
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12639
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12632
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12635
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 12639
+ ip=10.0.1.2
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1747804970300033000 15681
+ export batch_id=MTc0NzgwNDk3
+ batch_id=MTc0NzgwNDk3
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1747804970-11859
+ batch_configs_list=configs--MTc0NzgwNDk3-1747804970-11859.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ printf '%s\n' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ range_first=6
+ range_last=8
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0NzgwNDk3'
+ [[ -n Batch ID: MTc0NzgwNDk3 ]]
+ local 'message=Batch ID: MTc0NzgwNDk3'
+ echo -e 'Batch ID: MTc0NzgwNDk3'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1747804970-11859'
+ [[ -n Batch Suffix:   1747804970-11859 ]]
+ local 'message=Batch Suffix:   1747804970-11859'
+ echo -e 'Batch Suffix:   1747804970-11859'
+ return 0
+ message 'Batch FileName: configs--MTc0NzgwNDk3-1747804970-11859.list'
+ [[ -n Batch FileName: configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local 'message=Batch FileName: configs--MTc0NzgwNDk3-1747804970-11859.list'
+ echo -e 'Batch FileName: configs--MTc0NzgwNDk3-1747804970-11859.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ local base=configs--MTc0NzgwNDk3-1747804970-11859.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0NzgwNDk3-1747804970-11859.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0NzgwNDk3-1747804970-11859.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0NzgwNDk3-1747804970-11859.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   6 -> 8'
+ [[ -n Batch Ranges:   6 -> 8 ]]
+ local 'message=Batch Ranges:   6 -> 8'
+ echo -e 'Batch Ranges:   6 -> 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\2\.\c\o\n\f\:* ]]
+ ip2files["$token"]+=configs/misc/switch2.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\3\.\c\o\n\f\:* ]]
+ ip2files["$token"]+=configs/misc/switch3.conf
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/misc/switch3.conf
+ [[ :configs/misc/switch3.conf: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\3\.\c\o\n\f\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.18.1.20 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\m\i\s\c\/\s\w\i\t\c\h\4\.\c\o\n\f\:* ]]
+ ip2files["$token"]+=configs/misc/switch4.conf
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch3.conf ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch2.conf ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch4.conf ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch3.conf ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch2.conf ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/misc/switch4.conf ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.0.1.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/10.0.0.1
+ tracing_record=targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json
+ mkdir -p targets/10.0.0.1
+ touch targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json
+ job_pid=13595
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ local tracing_record=targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=misc
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json
+ mkdir -p targets/10.0.2.3
+ local matched_files=configs/misc/switch3.conf
+ [[ -n configs/misc/switch3.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch3.conf
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json
+ config_lines='      11'
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch3.conf
++ wc -l
++ tr -d ' '
+ job_pid=13609
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.1.2.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ sed -E 's|^configs/||'
+ match_count=2
++ cut -d/ -f1
+ site=misc
+ device=switch3.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device switch3.conf --argjson lines '      11' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=misc
+ target_dirpath=targets/10.0.1.2
+ tracing_record=targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json
+ mkdir -p targets/10.0.1.2
+ local matched_files=configs/misc/switch2.conf
+ [[ -n configs/misc/switch2.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch2.conf
++ wc -l
+ touch targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
]'
+ config_lines='      14'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/misc/switch2.conf
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
]'
++ wc -l
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch3.conf"
    },
    "lines": 11,
    "count": 2
  }
]'
++ return 0
++ jq '{ configs: . }'
++ tr -d ' '
+ job_pid=13629
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (3):'
+ [[ -n Matched IPs to [misc] configs (3): ]]
+ local 'message=Matched IPs to [misc] configs (3):'
+ echo -e 'Matched IPs to [misc] configs (3):'
+ return 0
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ local ip_addr=10.0.1.2
+ return 0
+ message -------------------------------------
+ local target_file=targets/10.0.1.2.json
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf/configs--MTc0NzgwNDk3-1747804970-11859.list
+ echo -e -------------------------------------
+ local tracing_record=targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/misc/switch2.conf
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
++ sed 's|configs/misc/||g'
+ match_count=1
+ site=misc
+ device=switch2.conf
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site misc --arg device switch2.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch3.conf"
      },
      "lines": 11,
      "count": 2
    }
  ]
}'
+ jq -r
+ local matched_files=configs/misc/switch4.conf
+ config_cleaned=switch2.conf
+ [[ -n configs/misc/switch4.conf ]]
+ config_json='[]'
+ printf '%-6s | %-15s => %s\n' 13609 10.0.2.3 switch2.conf
+ IFS=
+ read -r config_file
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.1.2
+ config_file=misc/switch4.conf
+ config_raw=configs/misc/switch4.conf
++ wc -l
++ sed 's|configs/misc/||g'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      14'
+ config_cleaned=switch4.conf
+ printf '%-6s | %-15s => %s\n' 13629 10.0.1.2 switch4.conf
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ [[ -n targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json ]]
+ [[ -f targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json ]]
+ ip=10.0.0.1
+ config_raw=configs/misc/switch3.conf
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json targets/10.0.0.1.json
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch2.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch4.conf
++ sed 's|configs/misc/||g'
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=misc
+ device=switch4.conf
+ config_cleaned=switch3.conf
+ printf '%-6s | %-15s => %s\n' 13595 10.0.0.1 switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13595
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13609
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13629
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ print '[]'
++ jq --arg site misc --arg device switch4.conf --argjson lines '      14' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
+ mv -f targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json.tmp targets/10.0.0.1/10.0.0.1--misc--MTc0NzgwNDk3.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch2.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/10.0.0.1.json'
+ [[ -n Generated Config-File: targets/10.0.0.1.json ]]
+ local 'message=Generated Config-File: targets/10.0.0.1.json'
+ echo -e 'Generated Config-File: targets/10.0.0.1.json'
+ return 0
+ return 0
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json targets/10.0.2.3.json
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch4.conf"
    },
    "lines": 14,
    "count": 1
  }
]'
++ return 0
++ jq '{ configs: . }'
+ mv -f targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json.tmp targets/10.0.2.3/10.0.2.3--misc--MTc0NzgwNDk3.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch4.conf"
      },
      "lines": 14,
      "count": 1
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ [[ -n targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json ]]
+ [[ -f targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json targets/10.0.1.2.json
+ mv -f targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json.tmp targets/10.0.1.2/10.0.1.2--misc--MTc0NzgwNDk3.json
+ message 'Generated Config-File: targets/10.0.1.2.json'
+ [[ -n Generated Config-File: targets/10.0.1.2.json ]]
+ local 'message=Generated Config-File: targets/10.0.1.2.json'
+ echo -e 'Generated Config-File: targets/10.0.1.2.json'
+ return 0
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13595
+ ip_address=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13609
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13629
+ ip_address=10.0.1.2
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\1\.\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\1\.\2 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 14 -gt 0 ]]
+ message 'Unmapped IPs (count): 14'
+ [[ -n Unmapped IPs (count): 14 ]]
+ local 'message=Unmapped IPs (count): 14'
+ echo -e 'Unmapped IPs (count): 14'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ total_ips=3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=13668
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=2
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=13671
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.2.3 2
+ local ip_addr=10.0.2.3
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=3
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=13675
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.1.2
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ parse_configs 10.0.1.2 3
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ local ip_addr=10.0.1.2
+ echo -e 'Background Jobs -> Managed Configs:'
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ return 0
+ logfile=.logs/jobs/10.0.0.1.job
+ [[ true == true ]]
+ message 'PID   | IP Address (3)'
+ [[ -n PID   | IP Address (3) ]]
+ local 'message=PID   | IP Address (3)'
+ echo -e 'PID   | IP Address (3)'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 13668 10.0.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 13671 10.0.2.3
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 13675 10.0.1.2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13668
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13671
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13675
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.0.1.2.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13668
+ ip=10.0.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13671
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 13675
+ ip=10.0.1.2
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 8 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1RRDXRRFb
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.0.1/10.0.0.1.json'
+ [[ -n Processing reports/10.0.0.1/10.0.0.1.json ]]
+ local 'message=Processing reports/10.0.0.1/10.0.0.1.json'
+ echo -e 'Processing reports/10.0.0.1/10.0.0.1.json'
Processing reports/10.0.0.1/10.0.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.0.1/10.0.0.1.json
+ read -r json
+ message 'Processing reports/10.0.1.2/10.0.1.2.json'
+ [[ -n Processing reports/10.0.1.2/10.0.1.2.json ]]
+ local 'message=Processing reports/10.0.1.2/10.0.1.2.json'
+ echo -e 'Processing reports/10.0.1.2/10.0.1.2.json'
Processing reports/10.0.1.2/10.0.1.2.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.1.2/10.0.1.2.json
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.0.5/172.16.0.5.json'
+ [[ -n Processing reports/172.16.0.5/172.16.0.5.json ]]
+ local 'message=Processing reports/172.16.0.5/172.16.0.5.json'
+ echo -e 'Processing reports/172.16.0.5/172.16.0.5.json'
Processing reports/172.16.0.5/172.16.0.5.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.0.5/172.16.0.5.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.0.2.50/192.0.2.50.json'
+ [[ -n Processing reports/192.0.2.50/192.0.2.50.json ]]
+ local 'message=Processing reports/192.0.2.50/192.0.2.50.json'
+ echo -e 'Processing reports/192.0.2.50/192.0.2.50.json'
Processing reports/192.0.2.50/192.0.2.50.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.0.2.50/192.0.2.50.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1RRDXRRFb
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.N1RRDXRRFb
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.0.1/
+ ip=10.0.0.1
+ final_file=.cache/targets/10.0.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.0.1.json targets/10.0.0.1//10.0.0.1--misc--MTc0NzgwNDk2.json targets/10.0.0.1//10.0.0.1--misc--MTc0NzgwNDk3.json
+ mv -f .cache/targets/10.0.0.1.json.tmp .cache/targets/10.0.0.1.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.1.2/
+ ip=10.0.1.2
+ final_file=.cache/targets/10.0.1.2.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.1.2.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.1.2.json targets/10.0.1.2//10.0.1.2--misc--MTc0NzgwNDk2.json targets/10.0.1.2//10.0.1.2--misc--MTc0NzgwNDk3.json
+ mv -f .cache/targets/10.0.1.2.json.tmp .cache/targets/10.0.1.2.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 2 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.2.3.json targets/10.0.2.3//10.0.2.3--misc--MTc0NzgwNDk2.json targets/10.0.2.3//10.0.2.3--misc--MTc0NzgwNDk3.json
+ mv -f .cache/targets/10.0.2.3.json.tmp .cache/targets/10.0.2.3.json
+ shopt -u nullglob
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ echo -e 'CSV Report Summary (tabulated):'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ print_file reports/reports.csv
+ [[ -n reports/reports.csv ]]
+ local target_file=reports/reports.csv
+ cat -n
+ [[ true == true ]]
+ [[ -f reports/reports.csv ]]
+ case "${target_file}" in
+ cat reports/reports.csv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local elapsed=15
+ message 'Session Summary:'
+ [[ -n Session Summary: ]]
+ local 'message=Session Summary:'
+ echo -e 'Session Summary:'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ message 'Started at: 2025-05-20 22:22:37'
+ [[ -n Started at: 2025-05-20 22:22:37 ]]
+ local 'message=Started at: 2025-05-20 22:22:37'
+ echo -e 'Started at: 2025-05-20 22:22:37'
+ return 0
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 15
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ggQJqAdlPf

$ ls -1 ./reports ;

1	10.0.0.1
2	10.0.1.2
3	10.0.2.3
4	10.10.10.10
5	172.16.0.5
6	172.16.1.6
7	172.18.1.20
8	192.0.2.50
