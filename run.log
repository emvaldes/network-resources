$ rm -rf ./reports ./targets ./.cache ./.local ;
$ bash -x ./scripts/parse-listings.shell --verbose --debug --classify --logs ;
$ cat -n ./.local/jobs/10.0.0.1.job ;
# jq -r . ./reports/json/10.0.0.1.json ;

Tue May 13 16:47:50 MST 2025

+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SMAydT4y9o
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SMAydT4y9o
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzE4MDA3MDU4MTIyNjAwMAo
++ divisor=MTc0NzE4MDA3MDU4MTIyNjAwMAo
++ print 'DEBUG: divisor = '\''MTc0NzE4MDA3MDU4MTIyNjAwMAo'\'''
++ [[ -n DEBUG: divisor = 'MTc0NzE4MDA3MDU4MTIyNjAwMAo' ]]
++ echo -en 'DEBUG: divisor = '\''MTc0NzE4MDA3MDU4MTIyNjAwMAo'\'''
DEBUG: divisor = 'MTc0NzE4MDA3MDU4MTIyNjAwMAo'+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ file_extensions=()
+ declare -a file_extensions
+ filtered_target_listing=()
+ declare -a filtered_target_listing
+ [[ 4 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --classify --logs
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ [[ -z '' ]]
+ delaying_factor=0.05
+ [[ -z '' ]]
+ listing_filename=ips.list
+ [[ -z '' ]]
+ parallel_threads=100
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-13 16:47:50'
+ SECONDS=0
+ [[ -z true ]]
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ local configs_list_cache=.cache/configs.list
+ mkdir -p .cache
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
+ sort
+ [[ true == true ]]
+ print 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ echo -en 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ :
+ [[ true == true ]]
+ list_file .local/stats//reports.jobs
+ [[ -n .local/stats//reports.jobs ]]
+ local target_file=.local/stats//reports.jobs
++ basename .local/stats//reports.jobs
+ local base=reports.jobs
++ dirname .local/stats//reports.jobs
+ local parent=.local/stats
+ [[ true == true ]]
+ [[ -f .local/stats//reports.jobs ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: reports.jobs
'
+ format_common+='Parent: .local/stats
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/stats//reports.jobs
File: reports.jobs
Parent: .local/stats
Size: 0 bytes
Blocks/Inode: 0 / 236567225
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
+ return 0
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ ! -f ips.list ]]
+ mapfile -t target_listing
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n
+ [[ 15 -eq 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'IPS/CIDR Blocks: '
+ [[ -n IPS/CIDR Blocks:  ]]
+ echo -en 'IPS/CIDR Blocks: '
IPS/CIDR Blocks: + newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ echo -en '  - 10.0.0.1'
  - 10.0.0.1+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ echo -en '  - 10.0.1.2'
  - 10.0.1.2+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
  - 10.0.2.3+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
  - 10.10.10.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
  - 172.16.0.5+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
  - 172.16.1.6+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
  - 172.18.1.20+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ echo -en '  - 172.31.255.254'
  - 172.31.255.254+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
  - 192.0.2.50+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ echo -en '  - 192.168.1.10'
  - 192.168.1.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
  - 192.168.1.11+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
  - 192.168.2.12+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
  - 192.168.100.100+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
  - 198.51.100.75+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for target in "${target_listing[@]}"
+ print '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ echo -en '  - 203.0.113.25'
  - 203.0.113.25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ mkdir -p targets
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print 'Mapping IPs to config files (pre-scan phase)...'
+ [[ -n Mapping IPs to config files (pre-scan phase)... ]]
+ echo -en 'Mapping IPs to config files (pre-scan phase)...'
Mapping IPs to config files (pre-scan phase)...+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ matching_configs
+ job_pids=()
+ declare -a job_pids
+ declare -A job_ip_map
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ target_file=targets/10.0.0.1.json
+ job_pid=96650
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 96650)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 96650) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 96650)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 10.0.0.1 targets/10.0.0.1.json
+ local ip_addr=10.0.0.1
+ local target_file=targets/10.0.0.1.json
++ grep -lE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ target_file=targets/10.0.1.2.json
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=96656
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 96656)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 96656) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 96656)'
+ generate_configslist 10.0.1.2 targets/10.0.1.2.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ local ip_addr=10.0.1.2
++ wc -l
+ local target_file=targets/10.0.1.2.json
++ grep -lE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ config_lines='      45'
+ ip_cleaned=10.0.2.3
+ local 'matched_files=configs/cisco/fw1.cfg
configs/misc/switch.conf'
+ target_file=targets/10.0.2.3.json
+ [[ -n configs/cisco/fw1.cfg
configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ job_pid=96666
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
+ job_pids+=("${job_pid}")
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ job_ip_map["$job_pid"]=10.0.2.3
++ wc -l
++ tr -d ' '
+ print '\n[INFO] Started IP: 10.0.2.3 (PID: 96666)'
+ [[ -n \n[INFO] Started IP: 10.0.2.3 (PID: 96666) ]]
+ echo -en '\n[INFO] Started IP: 10.0.2.3 (PID: 96666)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ match_count=2
+ site=cisco
+ device=fw1.cfg
+ config_lines='      45'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ true
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 2 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/cisco/fw1.cfg
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=10.10.10.10
+ target_file=targets/10.10.10.10.json
++ wc -l
++ tr -d ' '
+ job_pid=96683
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.10.10.10
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json
+ print '\n[INFO] Started IP: 10.10.10.10 (PID: 96683)'
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ [[ -n \n[INFO] Started IP: 10.10.10.10 (PID: 96683) ]]
+ echo -en '\n[INFO] Started IP: 10.10.10.10 (PID: 96683)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.0.5
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.16.0.5
++ wc -l
+ target_file=targets/172.16.0.5.json
+ job_pid=96693
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.0.5
+ print '\n[INFO] Started IP: 172.16.0.5 (PID: 96693)'
+ [[ -n \n[INFO] Started IP: 172.16.0.5 (PID: 96693) ]]
+ echo -en '\n[INFO] Started IP: 172.16.0.5 (PID: 96693)'
+ generate_configslist 172.16.0.5 targets/172.16.0.5.json
+ local ip_addr=172.16.0.5
+ newline
+ local count=1
+ (( i = 0 ))
+ local target_file=targets/172.16.0.5.json
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.16\.0\.5([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ config_lines='      10'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
++ grep -oE '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)' configs/misc/switch.conf
++ wc -l
++ tr -d ' '
++ wc -l
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.16.1.6
+ target_file=targets/172.16.1.6.json
+ job_pid=96706
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.16.1.6
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ print '\n[INFO] Started IP: 172.16.1.6 (PID: 96706)'
+ [[ -n \n[INFO] Started IP: 172.16.1.6 (PID: 96706) ]]
+ echo -en '\n[INFO] Started IP: 172.16.1.6 (PID: 96706)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ match_count=1
+ site=misc
+ device=switch.conf
+ config_lines='      10'
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ grep -oE '(^|[^0-9.])10\.0\.1\.2([^0-9.]|$)' configs/misc/switch.conf
++ wc -l
++ tr -d ' '
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=172.18.1.20
+ target_file=targets/172.18.1.20.json
+ job_pid=96719
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.18.1.20
+ print '\n[INFO] Started IP: 172.18.1.20 (PID: 96719)'
+ [[ -n \n[INFO] Started IP: 172.18.1.20 (PID: 96719) ]]
+ echo -en '\n[INFO] Started IP: 172.18.1.20 (PID: 96719)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ match_count=1
+ site=misc
+ device=switch.conf
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ tr -d '\r'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 2
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ jq '{configs: .}'
++ true
+ ip_cleaned=172.31.255.254
+ target_file=targets/172.31.255.254.json
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ job_pid=96731
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 96731)'
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 96731) ]]
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 96731)'
+ generate_configslist 172.31.255.254 targets/172.31.255.254.json
+ local ip_addr=172.31.255.254
+ newline
+ local count=1
+ local target_file=targets/172.31.255.254.json
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.0.2.50
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
++ [[ -n 192.0.2.50 ]]
  }
]'
++ echo -en 192.0.2.50
+ IFS=
+ read -r config_file
++ tr -d '\r'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  },
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ jq '{configs: .}'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 2
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ ip_cleaned=192.0.2.50
+ target_file=targets/192.0.2.50.json
+ local matched_files=configs/misc/switch.conf
+ [[ -n configs/misc/switch.conf ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=misc/switch.conf
+ job_pid=96741
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.0.2.50
+ print '\n[INFO] Started IP: 192.0.2.50 (PID: 96741)'
+ [[ -n \n[INFO] Started IP: 192.0.2.50 (PID: 96741) ]]
+ echo -en '\n[INFO] Started IP: 192.0.2.50 (PID: 96741)'
+ generate_configslist 192.0.2.50 targets/192.0.2.50.json
+ newline
+ local ip_addr=192.0.2.50
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=targets/192.0.2.50.json
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ wc -l
++ grep -lE '(^|[^0-9.])192\.0\.2\.50([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_lines='      10'
+ print_file targets/10.0.0.1.json
+ [[ -n targets/10.0.0.1.json ]]
+ local target_file=targets/10.0.0.1.json
+ [[ true == true ]]
+ [[ -f targets/10.0.0.1.json ]]
+ list_file targets/10.0.0.1.json
+ [[ -n targets/10.0.0.1.json ]]
+ local target_file=targets/10.0.0.1.json
++ true
+ local matched_files=
+ ip_cleaned=192.168.1.10
+ [[ -n '' ]]
+ return 0
+ target_file=targets/192.168.1.10.json
++ grep -oE '(^|[^0-9.])172\.31\.255\.254([^0-9.]|$)' configs/misc/switch.conf
++ basename targets/10.0.0.1.json
++ wc -l
++ tr -d ' '
+ job_pid=96755
+ job_pids+=("${job_pid}")
+ generate_configslist 192.168.1.10 targets/192.168.1.10.json
+ local ip_addr=192.168.1.10
+ local target_file=targets/192.168.1.10.json
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 96755)'
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 96755) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 96755)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ local base=10.0.0.1.json
++ print 192.168.1.11
+ match_count=1
+ site=misc
++ tr -d '\r'
+ device=switch.conf
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ dirname targets/10.0.0.1.json
+ print_file targets/10.0.1.2.json
+ [[ -n targets/10.0.1.2.json ]]
+ local target_file=targets/10.0.1.2.json
+ [[ true == true ]]
+ [[ -f targets/10.0.1.2.json ]]
+ list_file targets/10.0.1.2.json
+ [[ -n targets/10.0.1.2.json ]]
+ local target_file=targets/10.0.1.2.json
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site misc --arg device switch.conf --argjson lines '      10' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ basename targets/10.0.1.2.json
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ ip_cleaned=192.168.1.11
+ target_file=targets/192.168.1.11.json
+ local parent=targets
+ [[ true == true ]]
+ [[ -f targets/10.0.0.1.json ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 10.0.0.1.json
'
+ format_common+='Parent: targets
'
+ job_pid=96767
+ job_pids+=("${job_pid}")
++ wc -l
+ job_ip_map["$job_pid"]=192.168.1.11
+ print '\n[INFO] Started IP: 192.168.1.11 (PID: 96767)'
+ [[ -n \n[INFO] Started IP: 192.168.1.11 (PID: 96767) ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.11 (PID: 96767)'
++ uname
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local ip_addr=192.168.1.11
+ for ip_addr in "${target_listing[@]}"
+ local target_file=targets/192.168.1.11.json
+ local base=10.0.1.2.json
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
++ dirname targets/10.0.1.2.json
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 10.0.0.1.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 10.0.0.1.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' targets/10.0.0.1.json
+ config_lines='      45'
+ config_json='[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ local parent=targets
+ [[ true == true ]]
+ [[ -f targets/10.0.1.2.json ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 10.0.1.2.json
'
+ format_common+='Parent: targets
'
++ true
+ local matched_files=
+ [[ -n '' ]]
+ ip_cleaned=192.168.2.12
+ return 0
++ grep -oE '(^|[^0-9.])192\.168\.1\.10([^0-9.]|$)' configs/cisco/fw1.cfg
+ target_file=targets/192.168.2.12.json
++ uname
++ wc -l
++ print '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "misc",
      "device": "switch.conf"
    },
    "lines": 10,
    "count": 1
  }
]'
+ job_pid=96784
+ job_pids+=("${job_pid}")
++ tr -d ' '
++ jq '{configs: .}'
+ job_ip_map["$job_pid"]=192.168.2.12
+ print '\n[INFO] Started IP: 192.168.2.12 (PID: 96784)'
File: 10.0.0.1.json
Parent: targets
Size: 283 bytes
Blocks/Inode: 8 / 236567229
Mode: -rw-r--r--
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ [[ -n \n[INFO] Started IP: 192.168.2.12 (PID: 96784) ]]
+ echo -en '\n[INFO] Started IP: 192.168.2.12 (PID: 96784)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
UID/GID: 501 / 20
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
++ print 192.168.100.100
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 10.0.1.2.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 10.0.1.2.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' targets/10.0.1.2.json
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
++ tr -d '\r'
+ return 0
+ case "${target_file}" in
+ jq . targets/10.0.0.1.json
+ match_count=1
+ site=cisco
+ device=fw1.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
++ true
+ ip_cleaned=192.168.100.100
File: 10.0.1.2.json
Parent: targets
+ target_file=targets/192.168.100.100.json
Size: 283 bytes
Blocks/Inode: 8 / 236567230
Mode: -rw-r--r--
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=96797
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.100.100
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json
+ print '\n[INFO] Started IP: 192.168.100.100 (PID: 96797)'
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ [[ -n \n[INFO] Started IP: 192.168.100.100 (PID: 96797) ]]
+ echo -en '\n[INFO] Started IP: 192.168.100.100 (PID: 96797)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
UID/GID: 501 / 20
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
+ return 0
+ case "${target_file}" in
+ jq . targets/10.0.1.2.json
{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 2
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
+ newline
++ tr -d '\r'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.0.1 at targets/10.0.0.1.json'
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=198.51.100.75
+ target_file=targets/198.51.100.75.json
+ print_file targets/172.31.255.254.json
+ [[ -n targets/172.31.255.254.json ]]
+ local target_file=targets/172.31.255.254.json
+ [[ true == true ]]
+ [[ -f targets/172.31.255.254.json ]]
+ list_file targets/172.31.255.254.json
+ [[ -n targets/172.31.255.254.json ]]
+ local target_file=targets/172.31.255.254.json
+ job_pid=96806
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=198.51.100.75
+ print '\n[INFO] Started IP: 198.51.100.75 (PID: 96806)'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
+ local ip_addr=198.51.100.75
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ local target_file=targets/198.51.100.75.json
++ basename targets/172.31.255.254.json
+ [[ -n \n[INFO] Started IP: 198.51.100.75 (PID: 96806) ]]
+ echo -en '\n[INFO] Started IP: 198.51.100.75 (PID: 96806)'
++ jq '{configs: .}'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for ip_addr in "${target_listing[@]}"
{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
+ [[ -n \n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 10.0.1.2 at targets/10.0.1.2.json'
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ return 0
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ local base=172.31.255.254.json
++ dirname targets/172.31.255.254.json
++ true
+ local matched_files=
+ [[ -n '' ]]
+ return 0
+ ip_cleaned=203.0.113.25
+ target_file=targets/203.0.113.25.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ jq -r
+ job_pid=96816
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=203.0.113.25
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 96816)'
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json
+ local parent=targets
+ [[ true == true ]]
+ [[ -f targets/172.31.255.254.json ]]
+ local format_common=
+ local format_os=
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 96816) ]]
+ local format=
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 96816)'
+ format_common+='File: 172.31.255.254.json
'
+ format_common+='Parent: targets
'
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  15 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 96650
+ ip_address=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 96650)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 96650) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 96650)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96656
++ uname
+ ip_address=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 96656)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 96656) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 96656)'
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg configs/misc/switch.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96666
+ ip_address=10.0.2.3
+ print '\n[INFO] Completed IP: 10.0.2.3 (PID: 96666)'
+ [[ -n \n[INFO] Completed IP: 10.0.2.3 (PID: 96666) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.2.3 (PID: 96666)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96683
+ ip_address=10.10.10.10
+ print '\n[INFO] Completed IP: 10.10.10.10 (PID: 96683)'
+ [[ -n \n[INFO] Completed IP: 10.10.10.10 (PID: 96683) ]]
+ echo -en '\n[INFO] Completed IP: 10.10.10.10 (PID: 96683)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96693
+ ip_address=172.16.0.5
+ print '\n[INFO] Completed IP: 172.16.0.5 (PID: 96693)'
+ [[ -n \n[INFO] Completed IP: 172.16.0.5 (PID: 96693) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.0.5 (PID: 96693)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96706
+ ip_address=172.16.1.6
+ print '\n[INFO] Completed IP: 172.16.1.6 (PID: 96706)'
+ [[ -n \n[INFO] Completed IP: 172.16.1.6 (PID: 96706) ]]
+ echo -en '\n[INFO] Completed IP: 172.16.1.6 (PID: 96706)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96719
+ ip_address=172.18.1.20
+ print '\n[INFO] Completed IP: 172.18.1.20 (PID: 96719)'
+ [[ -n \n[INFO] Completed IP: 172.18.1.20 (PID: 96719) ]]
+ echo -en '\n[INFO] Completed IP: 172.18.1.20 (PID: 96719)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96731
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 96741
+ ip_address=192.0.2.50
+ print '\n[INFO] Completed IP: 192.0.2.50 (PID: 96741)'
+ [[ -n \n[INFO] Completed IP: 192.0.2.50 (PID: 96741) ]]
+ echo -en '\n[INFO] Completed IP: 192.0.2.50 (PID: 96741)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96755
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 172.31.255.254.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ valid_job_pids+=("$pid")
+ stat -f 'File: 172.31.255.254.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
+ for pid in "${job_pids[@]}"
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' targets/172.31.255.254.json
+ kill -0 96767
+ ip_address=192.168.1.11
+ print '\n[INFO] Completed IP: 192.168.1.11 (PID: 96767)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.11 (PID: 96767) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.11 (PID: 96767)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96784
+ ip_address=192.168.2.12
+ print '\n[INFO] Completed IP: 192.168.2.12 (PID: 96784)'
+ [[ -n \n[INFO] Completed IP: 192.168.2.12 (PID: 96784) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.2.12 (PID: 96784)'
+ local matched_files=configs/cisco/fw1.cfg
+ [[ -n configs/cisco/fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96797
+ ip_address=192.168.100.100
+ print '\n[INFO] Completed IP: 192.168.100.100 (PID: 96797)'
+ [[ -n \n[INFO] Completed IP: 192.168.100.100 (PID: 96797) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.100.100 (PID: 96797)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96806
++ wc -l
+ print_file targets/192.168.1.10.json
+ [[ -n targets/192.168.1.10.json ]]
+ ip_address=198.51.100.75
+ local target_file=targets/192.168.1.10.json
+ print '\n[INFO] Completed IP: 198.51.100.75 (PID: 96806)'
+ [[ true == true ]]
+ [[ -f targets/192.168.1.10.json ]]
+ list_file targets/192.168.1.10.json
+ [[ -n targets/192.168.1.10.json ]]
+ local target_file=targets/192.168.1.10.json
+ [[ -n \n[INFO] Completed IP: 198.51.100.75 (PID: 96806) ]]
+ echo -en '\n[INFO] Completed IP: 198.51.100.75 (PID: 96806)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96816
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
File: 172.31.255.254.json
Parent: targets
Size: 154 bytes
Blocks/Inode: 8 / 236567231
Mode: -rw-r--r--
++ basename targets/192.168.1.10.json
UID/GID: 501 / 20
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
+ return 0
+ case "${target_file}" in
+ jq . targets/172.31.255.254.json
+ config_lines='      45'
+ local base=192.168.1.10.json
++ dirname targets/192.168.1.10.json
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/fw1.cfg
++ wc -l
++ tr -d ' '
+ local parent=targets
+ [[ true == true ]]
+ [[ -f targets/192.168.1.10.json ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 192.168.1.10.json
'
+ format_common+='Parent: targets
'
+ match_count=1
++ uname
+ site=cisco
+ device=fw1.cfg
{
  "configs": [
    {
      "config": {
        "site": "misc",
        "device": "switch.conf"
      },
      "lines": 10,
      "count": 1
    }
  ]
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
+ [[ -n \n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json ]]
++ print '[]'
+ echo -en '\n[INFO] Generated JSON for IP: 172.31.255.254 at targets/172.31.255.254.json'
++ [[ -n [] ]]
++ echo -en '[]'
+ return 0
++ jq --arg site cisco --arg device fw1.cfg --argjson lines '      45' --argjson count 1 '. += [{"config": {"site": $site, "device": $device}, "lines": $lines, "count": $count}]'
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 192.168.1.10.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 192.168.1.10.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' targets/192.168.1.10.json
File: 192.168.1.10.json
Parent: targets
Size: 151 bytes
Blocks/Inode: 8 / 236567233
Mode: -rw-r--r--
UID/GID: 501 / 20
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
+ return 0
+ case "${target_file}" in
+ jq . targets/192.168.1.10.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "lines": 45,
    "count": 1
  }
]'
++ jq '{configs: .}'
{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}'
+ [[ -n \n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json ]]
+ jq -r
+ echo -en '\n[INFO] Generated JSON for IP: 192.168.1.10 at targets/192.168.1.10.json'
+ return 0
+ print_file targets/203.0.113.25.json
+ [[ -n targets/203.0.113.25.json ]]
+ local target_file=targets/203.0.113.25.json
+ [[ true == true ]]
+ [[ -f targets/203.0.113.25.json ]]
+ list_file targets/203.0.113.25.json
+ [[ -n targets/203.0.113.25.json ]]
+ local target_file=targets/203.0.113.25.json
++ basename targets/203.0.113.25.json
+ local base=203.0.113.25.json
++ dirname targets/203.0.113.25.json
+ local parent=targets
+ [[ true == true ]]
+ [[ -f targets/203.0.113.25.json ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 203.0.113.25.json
'
+ format_common+='Parent: targets
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 203.0.113.25.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 203.0.113.25.json
Parent: targets
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' targets/203.0.113.25.json
File: 203.0.113.25.json
Parent: targets
Size: 151 bytes
Blocks/Inode: 8 / 236567235
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:50 2025
Modify: May 13 16:47:50 2025
Change: May 13 16:47:50 2025
+ return 0
+ case "${target_file}" in
+ jq . targets/203.0.113.25.json
{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "lines": 45,
      "count": 1
    }
  ]
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ [[ -n \n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json ]]
+ echo -en '\n[INFO] Generated JSON for IP: 203.0.113.25 at targets/203.0.113.25.json'
+ return 0
+ ((  3 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 96731
+ ip_address=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 96731)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 96731) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 96731)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96755
+ ip_address=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 96755)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 96755) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 96755)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96816
+ ip_address=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 96816)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 96816) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 96816)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
+ ip_cleaned=10.0.0.1
+ [[ -f targets/10.0.0.1.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
+ ip_cleaned=10.0.1.2
+ [[ -f targets/10.0.1.2.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
+ ip_cleaned=10.0.2.3
+ [[ -f targets/10.0.2.3.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
+ ip_cleaned=10.10.10.10
+ [[ -f targets/10.10.10.10.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
+ ip_cleaned=172.16.0.5
+ [[ -f targets/172.16.0.5.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
+ ip_cleaned=172.16.1.6
+ [[ -f targets/172.16.1.6.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
+ ip_cleaned=172.18.1.20
+ [[ -f targets/172.18.1.20.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
+ ip_cleaned=172.31.255.254
+ [[ -f targets/172.31.255.254.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
+ ip_cleaned=192.0.2.50
+ [[ -f targets/192.0.2.50.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ ip_cleaned=192.168.1.10
+ [[ -f targets/192.168.1.10.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ ip_cleaned=192.168.1.11
+ [[ -f targets/192.168.1.11.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
+ ip_cleaned=192.168.2.12
+ [[ -f targets/192.168.2.12.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
+ ip_cleaned=192.168.100.100
+ [[ -f targets/192.168.100.100.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
+ ip_cleaned=198.51.100.75
+ [[ -f targets/198.51.100.75.json ]]
+ for ip_addr in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
+ ip_cleaned=203.0.113.25
+ [[ -f targets/203.0.113.25.json ]]
+ filtered_target_listing+=("${ip_cleaned}")
+ local total_requested=15
+ local total_mapped=5
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs requested: 15'
+ [[ -n Total IPs requested: 15 ]]
+ echo -en 'Total IPs requested: 15'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Total IPs mapped:    5'
+ [[ -n Total IPs mapped:    5 ]]
+ echo -en 'Total IPs mapped:    5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print 'Unmapped IPs:        10'
+ [[ -n Unmapped IPs:        10 ]]
+ echo -en 'Unmapped IPs:        10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file .local/stats//reports.jobs
+ [[ -n .local/stats//reports.jobs ]]
+ local target_file=.local/stats//reports.jobs
+ [[ true == true ]]
+ [[ -f .local/stats//reports.jobs ]]
+ list_file .local/stats//reports.jobs
+ [[ -n .local/stats//reports.jobs ]]
+ local target_file=.local/stats//reports.jobs
++ basename .local/stats//reports.jobs
+ local base=reports.jobs
++ dirname .local/stats//reports.jobs
+ local parent=.local/stats
+ [[ true == true ]]
+ [[ -f .local/stats//reports.jobs ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: reports.jobs
'
+ format_common+='Parent: .local/stats
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/stats//reports.jobs
File: reports.jobs
Parent: .local/stats
Size: 73 bytes
Blocks/Inode: 8 / 236567225
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:50 2025
Modify: May 13 16:47:51 2025
Change: May 13 16:47:51 2025
+ return 0
+ case "${target_file}" in
+ cat .local/stats//reports.jobs

Total IPs requested: 15
Total IPs mapped:    5
Unmapped IPs:        10

+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ print 'Unmapped IPs:'
+ [[ -n Unmapped IPs: ]]
+ echo -en 'Unmapped IPs:'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.0.0.1
++ [[ -n 10.0.0.1 ]]
++ echo -en 10.0.0.1
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.0.1
+ [[ -n 10.0.0.1 ]]
+ [[ ! -f targets/10.0.0.1.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.1.2
+ [[ -n 10.0.1.2 ]]
+ [[ ! -f targets/10.0.1.2.json ]]
+ for ip in "${target_listing[@]}"
++ print 10.0.2.3
++ [[ -n 10.0.2.3 ]]
++ echo -en 10.0.2.3
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.0.2.3
+ [[ -n 10.0.2.3 ]]
+ [[ ! -f targets/10.0.2.3.json ]]
+ print '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ echo -en '  - 10.0.2.3'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 10.10.10.10
++ [[ -n 10.10.10.10 ]]
++ echo -en 10.10.10.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=10.10.10.10
+ [[ -n 10.10.10.10 ]]
+ [[ ! -f targets/10.10.10.10.json ]]
+ print '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ echo -en '  - 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.0.5
++ [[ -n 172.16.0.5 ]]
++ echo -en 172.16.0.5
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.0.5
+ [[ -n 172.16.0.5 ]]
+ [[ ! -f targets/172.16.0.5.json ]]
+ print '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ echo -en '  - 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.16.1.6
++ [[ -n 172.16.1.6 ]]
++ echo -en 172.16.1.6
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.16.1.6
+ [[ -n 172.16.1.6 ]]
+ [[ ! -f targets/172.16.1.6.json ]]
+ print '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ echo -en '  - 172.16.1.6'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.18.1.20
++ [[ -n 172.18.1.20 ]]
++ echo -en 172.18.1.20
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.18.1.20
+ [[ -n 172.18.1.20 ]]
+ [[ ! -f targets/172.18.1.20.json ]]
+ print '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ echo -en '  - 172.18.1.20'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 172.31.255.254
++ [[ -n 172.31.255.254 ]]
++ echo -en 172.31.255.254
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=172.31.255.254
+ [[ -n 172.31.255.254 ]]
+ [[ ! -f targets/172.31.255.254.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.0.2.50
++ [[ -n 192.0.2.50 ]]
++ echo -en 192.0.2.50
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.0.2.50
+ [[ -n 192.0.2.50 ]]
+ [[ ! -f targets/192.0.2.50.json ]]
+ print '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ echo -en '  - 192.0.2.50'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.10
+ [[ -n 192.168.1.10 ]]
+ [[ ! -f targets/192.168.1.10.json ]]
+ for ip in "${target_listing[@]}"
++ print 192.168.1.11
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.1.11
+ [[ -n 192.168.1.11 ]]
+ [[ ! -f targets/192.168.1.11.json ]]
+ print '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ echo -en '  - 192.168.1.11'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.2.12
++ [[ -n 192.168.2.12 ]]
++ echo -en 192.168.2.12
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.2.12
+ [[ -n 192.168.2.12 ]]
+ [[ ! -f targets/192.168.2.12.json ]]
+ print '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ echo -en '  - 192.168.2.12'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 192.168.100.100
++ [[ -n 192.168.100.100 ]]
++ echo -en 192.168.100.100
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=192.168.100.100
+ [[ -n 192.168.100.100 ]]
+ [[ ! -f targets/192.168.100.100.json ]]
+ print '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ echo -en '  - 192.168.100.100'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 198.51.100.75
++ [[ -n 198.51.100.75 ]]
++ echo -en 198.51.100.75
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=198.51.100.75
+ [[ -n 198.51.100.75 ]]
+ [[ ! -f targets/198.51.100.75.json ]]
+ print '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ echo -en '  - 198.51.100.75'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for ip in "${target_listing[@]}"
++ print 203.0.113.25
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
+ ip_cleaned=203.0.113.25
+ [[ -n 203.0.113.25 ]]
+ [[ ! -f targets/203.0.113.25.json ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file .local/stats//reports.jobs
+ [[ -n .local/stats//reports.jobs ]]
+ local target_file=.local/stats//reports.jobs
+ [[ true == true ]]
+ [[ -f .local/stats//reports.jobs ]]
+ list_file .local/stats//reports.jobs
+ [[ -n .local/stats//reports.jobs ]]
+ local target_file=.local/stats//reports.jobs
++ basename .local/stats//reports.jobs
+ local base=reports.jobs
++ dirname .local/stats//reports.jobs
+ local parent=.local/stats
+ [[ true == true ]]
+ [[ -f .local/stats//reports.jobs ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: reports.jobs
'
+ format_common+='Parent: .local/stats
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: reports.jobs
Parent: .local/stats
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/stats//reports.jobs
File: reports.jobs
Parent: .local/stats
Size: 251 bytes
Blocks/Inode: 8 / 236567225
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:51 2025
Change: May 13 16:47:51 2025
+ return 0
+ case "${target_file}" in
+ cat .local/stats//reports.jobs

Total IPs requested: 15
Total IPs mapped:    5
Unmapped IPs:        10

Unmapped IPs:

  - 10.0.2.3
  - 10.10.10.10
  - 172.16.0.5
  - 172.16.1.6
  - 172.18.1.20
  - 192.0.2.50
  - 192.168.1.11
  - 192.168.2.12
  - 192.168.100.100
  - 198.51.100.75

+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ job_pids=()
+ declare -a job_pids
+ job_ip_map=()
+ declare -A job_ip_map
+ ip_index=0
+ total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=96968
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=10.0.0.1
+ print '\n[INFO] Started IP: 10.0.0.1 (PID: 96968)'
+ [[ -n \n[INFO] Started IP: 10.0.0.1 (PID: 96968) ]]
+ echo -en '\n[INFO] Started IP: 10.0.0.1 (PID: 96968)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.1.2
+ parse_configs 10.0.0.1 1
+ local ip_addr=10.0.0.1
+ local padded_index=1
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=2
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ job_pid=96971
+ [[ true == true ]]
+ execute+=(--debug)
+ job_pids+=("${job_pid}")
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_ip_map["$job_pid"]=10.0.1.2
+ print '\n[INFO] Started IP: 10.0.1.2 (PID: 96971)'
+ [[ -n \n[INFO] Started IP: 10.0.1.2 (PID: 96971) ]]
+ echo -en '\n[INFO] Started IP: 10.0.1.2 (PID: 96971)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=172.31.255.254
+ parse_configs 10.0.1.2 2
+ local ip_addr=10.0.1.2
+ local padded_index=2
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ padded_index=3
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=96975
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=172.31.255.254
+ print '\n[INFO] Started IP: 172.31.255.254 (PID: 96975)'
+ parse_configs 172.31.255.254 3
+ [[ -n \n[INFO] Started IP: 172.31.255.254 (PID: 96975) ]]
+ local ip_addr=172.31.255.254
+ echo -en '\n[INFO] Started IP: 172.31.255.254 (PID: 96975)'
+ local padded_index=3
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.10
+ logfile=.local/jobs/10.0.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ printf %01d 4
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ padded_index=4
+ job_pid=96981
+ job_pids+=("${job_pid}")
+ job_ip_map["$job_pid"]=192.168.1.10
+ print '\n[INFO] Started IP: 192.168.1.10 (PID: 96981)'
+ logfile=.local/jobs/10.0.1.2.job
+ [[ -n \n[INFO] Started IP: 192.168.1.10 (PID: 96981) ]]
+ [[ true == true ]]
+ echo -en '\n[INFO] Started IP: 192.168.1.10 (PID: 96981)'
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.1.2 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ newline
+ local count=1
+ (( i = 0 ))
+ parse_configs 192.168.1.10 4
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ local ip_addr=192.168.1.10
+ local padded_index=4
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
++ printf %01d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=5
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ job_pid=96985
+ logfile=.local/jobs/172.31.255.254.job
+ job_pids+=("${job_pid}")
+ [[ true == true ]]
+ job_ip_map["$job_pid"]=203.0.113.25
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.31.255.254 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ print '\n[INFO] Started IP: 203.0.113.25 (PID: 96985)'
+ [[ -n \n[INFO] Started IP: 203.0.113.25 (PID: 96985) ]]
+ echo -en '\n[INFO] Started IP: 203.0.113.25 (PID: 96985)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ parse_configs 203.0.113.25 5
+ ((  ip_index < total_ips  ))
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 96968
+ valid_job_pids+=("$pid")
+ local ip_addr=203.0.113.25
+ for pid in "${job_pids[@]}"
+ kill -0 96971
+ local padded_index=5
+ execute=(./scripts/parse-configs.shell --configs="${configs_dirpath}" --ip-addr="${ip_addr}" --index="${padded_index}" --matrix="${matrix_filename}" --reports="${reports_folder}" --file-ext="$(IFS=,; print "${file_extensions[*]}")")
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 96975
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 96981
+ valid_job_pids+=("$pid")
+ for pid in "${job_pids[@]}"
+ kill -0 96985
+ valid_job_pids+=("$pid")
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .local/jobs .local/errors
+ logfile=.local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.local/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ list_file .local/jobs/172.31.255.254.job
+ [[ -n .local/jobs/172.31.255.254.job ]]
+ local target_file=.local/jobs/172.31.255.254.job
++ basename .local/jobs/172.31.255.254.job
+ local base=172.31.255.254.job
++ dirname .local/jobs/172.31.255.254.job
+ local parent=.local/jobs
+ [[ true == true ]]
+ [[ -f .local/jobs/172.31.255.254.job ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 172.31.255.254.job
'
+ format_common+='Parent: .local/jobs
'
++ uname
+ list_file .local/jobs/203.0.113.25.job
+ [[ -n .local/jobs/203.0.113.25.job ]]
+ local target_file=.local/jobs/203.0.113.25.job
++ basename .local/jobs/203.0.113.25.job
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 172.31.255.254.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 172.31.255.254.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/jobs/172.31.255.254.job
+ local base=203.0.113.25.job
File: 172.31.255.254.job
Parent: .local/jobs
++ dirname .local/jobs/203.0.113.25.job
Size: 45841 bytes
Blocks/Inode: 96 / 236567239
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ local parent=.local/jobs
+ list_file .local/jobs/192.168.1.10.job
+ [[ true == true ]]
+ [[ -f .local/jobs/203.0.113.25.job ]]
+ local status=0
+ ((  status != 0  ))
+ local format_common=
+ local format_os=
+ local format=
+ print '\n[DONE] IP: 172.31.255.254'
+ [[ -n .local/jobs/192.168.1.10.job ]]
+ format_common+='File: 203.0.113.25.job
+ local target_file=.local/jobs/192.168.1.10.job
'
+ format_common+='Parent: .local/jobs
'
+ [[ -n \n[DONE] IP: 172.31.255.254 ]]
+ echo -en '\n[DONE] IP: 172.31.255.254'
+ return 0
++ uname
++ basename .local/jobs/192.168.1.10.job
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 203.0.113.25.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 203.0.113.25.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/jobs/203.0.113.25.job
+ local base=192.168.1.10.job
++ dirname .local/jobs/192.168.1.10.job
File: 203.0.113.25.job
Parent: .local/jobs
Size: 70556 bytes
Blocks/Inode: 144 / 236567241
Mode: -rw-r--r--
+ local parent=.local/jobs
+ [[ true == true ]]
+ [[ -f .local/jobs/192.168.1.10.job ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 192.168.1.10.job
'
+ format_common+='Parent: .local/jobs
'
++ uname
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 203.0.113.25'
+ [[ -n \n[DONE] IP: 203.0.113.25 ]]
+ echo -en '\n[DONE] IP: 203.0.113.25'
+ return 0
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 192.168.1.10.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 192.168.1.10.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/jobs/192.168.1.10.job
File: 192.168.1.10.job
Parent: .local/jobs
Size: 71702 bytes
Blocks/Inode: 144 / 236567240
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 192.168.1.10'
+ [[ -n \n[DONE] IP: 192.168.1.10 ]]
+ echo -en '\n[DONE] IP: 192.168.1.10'
+ return 0
+ list_file .local/jobs/10.0.1.2.job
+ [[ -n .local/jobs/10.0.1.2.job ]]
+ local target_file=.local/jobs/10.0.1.2.job
++ basename .local/jobs/10.0.1.2.job
+ local base=10.0.1.2.job
++ dirname .local/jobs/10.0.1.2.job
+ local parent=.local/jobs
+ [[ true == true ]]
+ [[ -f .local/jobs/10.0.1.2.job ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 10.0.1.2.job
'
+ format_common+='Parent: .local/jobs
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 10.0.1.2.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 10.0.1.2.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/jobs/10.0.1.2.job
File: 10.0.1.2.job
Parent: .local/jobs
Size: 111868 bytes
Blocks/Inode: 224 / 236567238
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.1.2'
+ [[ -n \n[DONE] IP: 10.0.1.2 ]]
+ echo -en '\n[DONE] IP: 10.0.1.2'
+ return 0
+ list_file .local/jobs/10.0.0.1.job
+ [[ -n .local/jobs/10.0.0.1.job ]]
+ local target_file=.local/jobs/10.0.0.1.job
++ basename .local/jobs/10.0.0.1.job
+ local base=10.0.0.1.job
++ dirname .local/jobs/10.0.0.1.job
+ local parent=.local/jobs
+ [[ true == true ]]
+ [[ -f .local/jobs/10.0.0.1.job ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: 10.0.0.1.job
'
+ format_common+='Parent: .local/jobs
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: 10.0.0.1.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: 10.0.0.1.job
Parent: .local/jobs
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' .local/jobs/10.0.0.1.job
File: 10.0.0.1.job
Parent: .local/jobs
Size: 138130 bytes
Blocks/Inode: 272 / 236567237
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:51 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ local status=0
+ ((  status != 0  ))
+ print '\n[DONE] IP: 10.0.0.1'
+ [[ -n \n[DONE] IP: 10.0.0.1 ]]
+ echo -en '\n[DONE] IP: 10.0.0.1'
+ return 0
+ ((  5 > 0  ))
+ valid_job_pids=()
+ for pid in "${job_pids[@]}"
+ kill -0 96968
+ ip=10.0.0.1
+ print '\n[INFO] Completed IP: 10.0.0.1 (PID: 96968)'
+ [[ -n \n[INFO] Completed IP: 10.0.0.1 (PID: 96968) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.0.1 (PID: 96968)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96971
+ ip=10.0.1.2
+ print '\n[INFO] Completed IP: 10.0.1.2 (PID: 96971)'
+ [[ -n \n[INFO] Completed IP: 10.0.1.2 (PID: 96971) ]]
+ echo -en '\n[INFO] Completed IP: 10.0.1.2 (PID: 96971)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96975
+ ip=172.31.255.254
+ print '\n[INFO] Completed IP: 172.31.255.254 (PID: 96975)'
+ [[ -n \n[INFO] Completed IP: 172.31.255.254 (PID: 96975) ]]
+ echo -en '\n[INFO] Completed IP: 172.31.255.254 (PID: 96975)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96981
+ ip=192.168.1.10
+ print '\n[INFO] Completed IP: 192.168.1.10 (PID: 96981)'
+ [[ -n \n[INFO] Completed IP: 192.168.1.10 (PID: 96981) ]]
+ echo -en '\n[INFO] Completed IP: 192.168.1.10 (PID: 96981)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for pid in "${job_pids[@]}"
+ kill -0 96985
+ ip=203.0.113.25
+ print '\n[INFO] Completed IP: 203.0.113.25 (PID: 96985)'
+ [[ -n \n[INFO] Completed IP: 203.0.113.25 (PID: 96985) ]]
+ echo -en '\n[INFO] Completed IP: 203.0.113.25 (PID: 96985)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ job_pids=("${valid_job_pids[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ local json_dir=reports/json
+ local master_json=reports/reports.json
+ expected_reports=5
++ find reports/json -type f -name '*.json'
++ wc -l
++ sed -e 's|\ ||g'
+ actual_reports=5
+ timeout=5
+ elapsed=0
+ ((  actual_reports < expected_reports && elapsed < timeout * 10  ))
+ ((  actual_reports < expected_reports  ))
+ [[ -d reports/json ]]
+ mapfile -t json_files
++ find reports/json -type f -name '*.json'
++ sort
+ ((  5 > 0  ))
+ jq -s . reports/json/10.0.0.1.json reports/json/10.0.1.2.json reports/json/172.31.255.254.json reports/json/192.168.1.10.json reports/json/203.0.113.25.json
+ print_file reports/reports.json
+ [[ -n reports/reports.json ]]
+ local target_file=reports/reports.json
+ [[ true == true ]]
+ [[ -f reports/reports.json ]]
+ list_file reports/reports.json
+ [[ -n reports/reports.json ]]
+ local target_file=reports/reports.json
++ basename reports/reports.json
+ local base=reports.json
++ dirname reports/reports.json
+ local parent=reports
+ [[ true == true ]]
+ [[ -f reports/reports.json ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: reports.json
'
+ format_common+='Parent: reports
'
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: reports.json
Parent: reports
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: reports.json
Parent: reports
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' reports/reports.json
File: reports.json
Parent: reports
Size: 3949 bytes
Blocks/Inode: 8 / 236567260
Mode: -rw-r--r--
UID/GID: 501 / 20
Access: May 13 16:47:52 2025
Modify: May 13 16:47:52 2025
Change: May 13 16:47:52 2025
+ return 0
+ case "${target_file}" in
+ jq . reports/reports.json
[
  {
    "target": "10.0.0.1",
    "configs": [
      {
        "config": {
          "site": "cisco",
          "device": "fw1.cfg",
          "objects": [
            {
              "object": "object-group",
              "type": "network BU1-NETWORK",
              "description": "false",
              "entries": [
                "network-object host 10.0.0.1",
                "network-object host 10.0.1.2",
                "network-object 192.168.1.0 255.255.255.0"
              ],
              "group": "Identified Matching Entries"
            }
          ]
        }
      },
      {
        "config": {
          "site": "cisco",
          "device": "fw1.cfg",
          "objects": [
            {
              "object": "access-list",
              "type": false,
              "description": "false",
              "entries": [
                "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
              ],
              "group": "Unclassified"
            }
          ]
        }
      },
      {
        "config": {
          "site": "misc",
          "device": "switch.conf",
          "objects": [
            {
              "object": "object-group",
              "type": "network SOME-THING",
              "description": "false",
              "entries": [
                "network-object host 10.0.0.1",
                "network-object 192.168.12.0 255.255.255.0"
              ],
              "group": "Identified Matching Entries"
            }
          ]
        }
      }
    ]
  },
  {
    "target": "10.0.1.2",
    "configs": [
      {
        "config": {
          "site": "cisco",
          "device": "fw1.cfg",
          "objects": [
            {
              "object": "object-group",
              "type": "network BU1-NETWORK",
              "description": "false",
              "entries": [
                "network-object host 10.0.0.1",
                "network-object host 10.0.1.2",
                "network-object 192.168.1.0 255.255.255.0"
              ],
              "group": "Identified Matching Entries"
            }
          ]
        }
      },
      {
        "config": {
          "site": "misc",
          "device": "switch.conf",
          "objects": [
            {
              "object": "interface",
              "type": false,
              "description": "false",
              "entries": [
                "ip address 10.0.1.2 255.255.255.0"
              ],
              "group": "Business-Unit-Networks"
            }
          ]
        }
      }
    ]
  },
  {
    "target": "172.31.255.254",
    "configs": [
      {
        "config": {
          "site": "misc",
          "device": "switch.conf",
          "objects": [
            {
              "object": "interface",
              "type": false,
              "description": "false",
              "entries": [
                "ip address 172.31.255.254 255.255.255.0"
              ],
              "group": "Business-Unit-Networks"
            }
          ]
        }
      }
    ]
  },
  {
    "target": "192.168.1.10",
    "configs": [
      {
        "config": {
          "site": "cisco",
          "device": "fw1.cfg",
          "objects": [
            {
              "object": "object",
              "type": false,
              "description": "false",
              "entries": [
                "host 192.168.1.10"
              ],
              "group": "Business-Unit-HQ"
            }
          ]
        }
      }
    ]
  },
  {
    "target": "203.0.113.25",
    "configs": [
      {
        "config": {
          "site": "cisco",
          "device": "fw1.cfg",
          "objects": [
            {
              "object": "object",
              "type": false,
              "description": "false",
              "entries": [
                "host 203.0.113.25"
              ],
              "group": "Business-Unit-External"
            }
          ]
        }
      }
    ]
  }
]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ return 0
+ generate_csvoutput
+ local input_json=reports/reports.json
+ local output_csv=reports/reports.csv
+ [[ ! -f reports/reports.json ]]
+ message target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ local message=target,site,device,object,entry,description,group
+ print target,site,device,object,entry,description,group
+ [[ -n target,site,device,object,entry,description,group ]]
+ echo -en target,site,device,object,entry,description,group
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ jq -r '
        .[] as $entry
        | $entry.configs[]
        | .config as $cfg
        | .objects[]
        | [
            $entry.target,
            $cfg.site,
            $cfg.device,
            (.object // "none"),
            (.entries[0] // "none"),  # assuming you want the first entry
            (.description // "none"),
            (.group // "none")
          ]
        | @csv' reports/reports.json
jq: error (at reports/reports.json:168): Cannot iterate over null (null)
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SMAydT4y9o ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SMAydT4y9o

     1	+ set -euo pipefail
     2	+ export LC_ALL=C
     3	+ LC_ALL=C
     4	++ mktemp -d
     5	+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
     6	+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
     7	+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
     8	+ source ./scripts/tools-devops.shell
     9	++ [[ -n '' ]]
    10	++ readonly __TOOLS_DEVOPS_SOURCED=1
    11	++ __TOOLS_DEVOPS_SOURCED=1
    12	++ [[ 5 -lt 4 ]]
    13	++ alias log-info=log_info
    14	++ alias log-warn=log_warn
    15	++ alias log-error=log_error
    16	++ alias error-message=error_message
    17	++ alias exit-error=exit_error
    18	++ alias list-file=list_file
    19	++ alias print-file=print_file
    20	++ alias detect-platform=detect_platform
    21	++ alias install-packages=install_packages
    22	++ alias install-missing=install_missing
    23	++ alias display-help=display_help_generic
    24	++ alias relative-configpath=relative_configpath
    25	++ alias validate-address=validate_address
    26	++ export LC_ALL=C
    27	++ LC_ALL=C
    28	++ export 'nl=\n'
    29	++ nl='\n'
    30	++ local_state_dir=.local
    31	++ mkdir -p .local/errors .local/jobs .local/stats
    32	++ export stats_folder=.local/stats/
    33	++ stats_folder=.local/stats/
    34	++ export reports_logsfile=.local/stats//reports.jobs
    35	++ reports_logsfile=.local/stats//reports.jobs
    36	++ export started_logsfile=.local/stats//started.jobs
    37	++ started_logsfile=.local/stats//started.jobs
    38	++ export success_logsfile=.local/stats//success.jobs
    39	++ success_logsfile=.local/stats//success.jobs
    40	++ export targets_logsfile=.local/stats//targets.jobs
    41	++ targets_logsfile=.local/stats//targets.jobs
    42	+++ date +%s%N
    43	+++ base64
    44	+++ tr -dc a-zA-Z0-9
    45	++ export divisor=MTc0NzE4MDA3MTkyNzU4MDAwMAo
    46	++ divisor=MTc0NzE4MDA3MTkyNzU4MDAwMAo
    47	++ print 'DEBUG: divisor = '\''MTc0NzE4MDA3MTkyNzU4MDAwMAo'\'''
    48	++ [[ -n DEBUG: divisor = 'MTc0NzE4MDA3MTkyNzU4MDAwMAo' ]]
    49	++ echo -en 'DEBUG: divisor = '\''MTc0NzE4MDA3MTkyNzU4MDAwMAo'\'''
    50	DEBUG: divisor = 'MTc0NzE4MDA3MTkyNzU4MDAwMAo'+ source ./scripts/tools-extraction.shell
    51	++ [[ -n '' ]]
    52	++ readonly __TOOLS_EXTRACTION_SOURCED=1
    53	++ __TOOLS_EXTRACTION_SOURCED=1
    54	++ alias extract-configs=extract_configs
    55	++ alias process-configs=process_configs
    56	+ alias parse-configs=main
    57	+ matched_blocks_byfile=()
    58	+ declare -gA matched_blocks_byfile
    59	+ export script_name=./scripts/parse-configs.shell
    60	+ script_name=./scripts/parse-configs.shell
    61	+ [[ 9 -ge 1 ]]
    62	+ [[ --configs=configs =~ ^-*(h|help)$ ]]
    63	+ main --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
    64	+ file_extensions=()
    65	+ declare -a file_extensions
    66	+ oIFS='
    67	'
    68	+ for xitem in "${@}"
    69	+ IFS==
    70	+ read -r key value
    71	++ echo -e --configs=configs
    72	++ sed -e '1s|^\(-\)\{1,\}||'
    73	+ [[ configs =~ ^(classify|g)$ ]]
    74	+ [[ configs =~ ^(file-ext|x)$ ]]
    75	+ [[ configs =~ ^(configs|c)$ ]]
    76	+ export configs_dirpath=configs
    77	+ configs_dirpath=configs
    78	+ [[ configs =~ ^(index|n)$ ]]
    79	+ [[ configs =~ ^(ip-addr|i)$ ]]
    80	+ [[ configs =~ ^(logs|o)$ ]]
    81	+ [[ configs =~ ^(matrix|m)$ ]]
    82	+ [[ configs =~ ^(reports|r)$ ]]
    83	+ [[ configs =~ ^(validate|v)$ ]]
    84	+ [[ configs == \h\e\l\p ]]
    85	+ [[ configs == \d\e\b\u\g ]]
    86	+ [[ configs == \d\r\y\-\r\u\n ]]
    87	+ [[ configs == \v\e\r\b\o\s\e ]]
    88	+ for xitem in "${@}"
    89	+ IFS==
    90	+ read -r key value
    91	++ echo -e --ip-addr=10.0.0.1
    92	++ sed -e '1s|^\(-\)\{1,\}||'
    93	+ [[ ip-addr =~ ^(classify|g)$ ]]
    94	+ [[ ip-addr =~ ^(file-ext|x)$ ]]
    95	+ [[ ip-addr =~ ^(configs|c)$ ]]
    96	+ [[ ip-addr =~ ^(index|n)$ ]]
    97	+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
    98	+ local target_address=10.0.0.1
    99	+ [[ ip-addr =~ ^(logs|o)$ ]]
   100	+ [[ ip-addr =~ ^(matrix|m)$ ]]
   101	+ [[ ip-addr =~ ^(reports|r)$ ]]
   102	+ [[ ip-addr =~ ^(validate|v)$ ]]
   103	+ [[ ip-addr == \h\e\l\p ]]
   104	+ [[ ip-addr == \d\e\b\u\g ]]
   105	+ [[ ip-addr == \d\r\y\-\r\u\n ]]
   106	+ [[ ip-addr == \v\e\r\b\o\s\e ]]
   107	+ for xitem in "${@}"
   108	+ IFS==
   109	+ read -r key value
   110	++ echo -e --index=1
   111	++ sed -e '1s|^\(-\)\{1,\}||'
   112	+ [[ index =~ ^(classify|g)$ ]]
   113	+ [[ index =~ ^(file-ext|x)$ ]]
   114	+ [[ index =~ ^(configs|c)$ ]]
   115	+ [[ index =~ ^(index|n)$ ]]
   116	+ local target_index=1
   117	+ [[ index =~ ^(ip-addr|i)$ ]]
   118	+ [[ index =~ ^(logs|o)$ ]]
   119	+ [[ index =~ ^(matrix|m)$ ]]
   120	+ [[ index =~ ^(reports|r)$ ]]
   121	+ [[ index =~ ^(validate|v)$ ]]
   122	+ [[ index == \h\e\l\p ]]
   123	+ [[ index == \d\e\b\u\g ]]
   124	+ [[ index == \d\r\y\-\r\u\n ]]
   125	+ [[ index == \v\e\r\b\o\s\e ]]
   126	+ for xitem in "${@}"
   127	+ IFS==
   128	+ read -r key value
   129	++ echo -e --matrix=matrix.json
   130	++ sed -e '1s|^\(-\)\{1,\}||'
   131	+ [[ matrix =~ ^(classify|g)$ ]]
   132	+ [[ matrix =~ ^(file-ext|x)$ ]]
   133	+ [[ matrix =~ ^(configs|c)$ ]]
   134	+ [[ matrix =~ ^(index|n)$ ]]
   135	+ [[ matrix =~ ^(ip-addr|i)$ ]]
   136	+ [[ matrix =~ ^(logs|o)$ ]]
   137	+ [[ matrix =~ ^(matrix|m)$ ]]
   138	+ local matrix_filename=matrix.json
   139	+ [[ matrix =~ ^(reports|r)$ ]]
   140	+ [[ matrix =~ ^(validate|v)$ ]]
   141	+ [[ matrix == \h\e\l\p ]]
   142	+ [[ matrix == \d\e\b\u\g ]]
   143	+ [[ matrix == \d\r\y\-\r\u\n ]]
   144	+ [[ matrix == \v\e\r\b\o\s\e ]]
   145	+ for xitem in "${@}"
   146	+ IFS==
   147	+ read -r key value
   148	++ echo -e --reports=reports
   149	++ sed -e '1s|^\(-\)\{1,\}||'
   150	+ [[ reports =~ ^(classify|g)$ ]]
   151	+ [[ reports =~ ^(file-ext|x)$ ]]
   152	+ [[ reports =~ ^(configs|c)$ ]]
   153	+ [[ reports =~ ^(index|n)$ ]]
   154	+ [[ reports =~ ^(ip-addr|i)$ ]]
   155	+ [[ reports =~ ^(logs|o)$ ]]
   156	+ [[ reports =~ ^(matrix|m)$ ]]
   157	+ [[ reports =~ ^(reports|r)$ ]]
   158	+ local reports_folder=reports
   159	+ [[ reports =~ ^(validate|v)$ ]]
   160	+ [[ reports == \h\e\l\p ]]
   161	+ [[ reports == \d\e\b\u\g ]]
   162	+ [[ reports == \d\r\y\-\r\u\n ]]
   163	+ [[ reports == \v\e\r\b\o\s\e ]]
   164	+ for xitem in "${@}"
   165	+ IFS==
   166	+ read -r key value
   167	++ echo -e --file-ext=cfg,conf,cnf
   168	++ sed -e '1s|^\(-\)\{1,\}||'
   169	+ [[ file-ext =~ ^(classify|g)$ ]]
   170	+ [[ file-ext =~ ^(file-ext|x)$ ]]
   171	+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
   172	++ print cfg,conf,cnf
   173	++ [[ -n cfg,conf,cnf ]]
   174	++ echo -en cfg,conf,cnf
   175	++ tr ':,;\n ' '\n'
   176	+ [[ file-ext =~ ^(configs|c)$ ]]
   177	+ [[ file-ext =~ ^(index|n)$ ]]
   178	+ [[ file-ext =~ ^(ip-addr|i)$ ]]
   179	+ [[ file-ext =~ ^(logs|o)$ ]]
   180	+ [[ file-ext =~ ^(matrix|m)$ ]]
   181	+ [[ file-ext =~ ^(reports|r)$ ]]
   182	+ [[ file-ext =~ ^(validate|v)$ ]]
   183	+ [[ file-ext == \h\e\l\p ]]
   184	+ [[ file-ext == \d\e\b\u\g ]]
   185	+ [[ file-ext == \d\r\y\-\r\u\n ]]
   186	+ [[ file-ext == \v\e\r\b\o\s\e ]]
   187	+ for xitem in "${@}"
   188	+ IFS==
   189	+ read -r key value
   190	++ echo -e --classify
   191	++ sed -e '1s|^\(-\)\{1,\}||'
   192	+ [[ classify =~ ^(classify|g)$ ]]
   193	+ export classify_targets=true
   194	+ classify_targets=true
   195	+ [[ classify =~ ^(file-ext|x)$ ]]
   196	+ [[ classify =~ ^(configs|c)$ ]]
   197	+ [[ classify =~ ^(index|n)$ ]]
   198	+ [[ classify =~ ^(ip-addr|i)$ ]]
   199	+ [[ classify =~ ^(logs|o)$ ]]
   200	+ [[ classify =~ ^(matrix|m)$ ]]
   201	+ [[ classify =~ ^(reports|r)$ ]]
   202	+ [[ classify =~ ^(validate|v)$ ]]
   203	+ [[ classify == \h\e\l\p ]]
   204	+ [[ classify == \d\e\b\u\g ]]
   205	+ [[ classify == \d\r\y\-\r\u\n ]]
   206	+ [[ classify == \v\e\r\b\o\s\e ]]
   207	+ for xitem in "${@}"
   208	+ IFS==
   209	+ read -r key value
   210	++ echo -e --verbose
   211	++ sed -e '1s|^\(-\)\{1,\}||'
   212	+ [[ verbose =~ ^(classify|g)$ ]]
   213	+ [[ verbose =~ ^(file-ext|x)$ ]]
   214	+ [[ verbose =~ ^(configs|c)$ ]]
   215	+ [[ verbose =~ ^(index|n)$ ]]
   216	+ [[ verbose =~ ^(ip-addr|i)$ ]]
   217	+ [[ verbose =~ ^(logs|o)$ ]]
   218	+ [[ verbose =~ ^(matrix|m)$ ]]
   219	+ [[ verbose =~ ^(reports|r)$ ]]
   220	+ [[ verbose =~ ^(validate|v)$ ]]
   221	+ [[ verbose == \h\e\l\p ]]
   222	+ [[ verbose == \d\e\b\u\g ]]
   223	+ [[ verbose == \d\r\y\-\r\u\n ]]
   224	+ [[ verbose == \v\e\r\b\o\s\e ]]
   225	+ export verbose=true
   226	+ verbose=true
   227	+ for xitem in "${@}"
   228	+ IFS==
   229	+ read -r key value
   230	++ echo -e --debug
   231	++ sed -e '1s|^\(-\)\{1,\}||'
   232	+ [[ debug =~ ^(classify|g)$ ]]
   233	+ [[ debug =~ ^(file-ext|x)$ ]]
   234	+ [[ debug =~ ^(configs|c)$ ]]
   235	+ [[ debug =~ ^(index|n)$ ]]
   236	+ [[ debug =~ ^(ip-addr|i)$ ]]
   237	+ [[ debug =~ ^(logs|o)$ ]]
   238	+ [[ debug =~ ^(matrix|m)$ ]]
   239	+ [[ debug =~ ^(reports|r)$ ]]
   240	+ [[ debug =~ ^(validate|v)$ ]]
   241	+ [[ debug == \h\e\l\p ]]
   242	+ [[ debug == \d\e\b\u\g ]]
   243	+ export debug=true
   244	+ debug=true
   245	+ [[ debug == \d\r\y\-\r\u\n ]]
   246	+ [[ debug == \v\e\r\b\o\s\e ]]
   247	+ IFS='
   248	'
   249	+ [[ -z true ]]
   250	+ [[ -z true ]]
   251	+ [[ '' == true ]]
   252	+ [[ -z true ]]
   253	+ [[ -z x ]]
   254	+ [[ 3 -eq 0 ]]
   255	+ export configs_dirpath=configs
   256	+ configs_dirpath=configs
   257	+ source_configs=()
   258	+ declare -ga source_configs
   259	+ target_configlist_json=targets/10.0.0.1.json
   260	+ [[ ! -f targets/10.0.0.1.json ]]
   261	+ mapfile -t source_configs
   262	++ jq -r '.configs[] | "\(.config.site)/\(.config.device)"' targets/10.0.0.1.json
   263	+ for i in "${!source_configs[@]}"
   264	+ [[ cisco/fw1.cfg != \c\o\n\f\i\g\s\/* ]]
   265	+ source_configs[$i]=configs/cisco/fw1.cfg
   266	+ for i in "${!source_configs[@]}"
   267	+ [[ misc/switch.conf != \c\o\n\f\i\g\s\/* ]]
   268	+ source_configs[$i]=configs/misc/switch.conf
   269	+ [[ true == true ]]
   270	+ print 'Config JSON file used: targets/10.0.0.1.json'
   271	+ [[ -n Config JSON file used: targets/10.0.0.1.json ]]
   272	+ echo -en 'Config JSON file used: targets/10.0.0.1.json'
   273	Config JSON file used: targets/10.0.0.1.json+ print 'Extracted config paths from JSON:'
   274	+ [[ -n Extracted config paths from JSON: ]]
   275	+ echo -en 'Extracted config paths from JSON:'
   276	Extracted config paths from JSON:+ for cfg in "${source_configs[@]}"
   277	+ print ' - configs/cisco/fw1.cfg'
   278	+ [[ -n  - configs/cisco/fw1.cfg ]]
   279	+ echo -en ' - configs/cisco/fw1.cfg'
   280	 - configs/cisco/fw1.cfg+ for cfg in "${source_configs[@]}"
   281	+ print ' - configs/misc/switch.conf'
   282	+ [[ -n  - configs/misc/switch.conf ]]
   283	+ echo -en ' - configs/misc/switch.conf'
   284	 - configs/misc/switch.conf+ newline
   285	+ local count=1
   286	+ (( i = 0 ))
   287	+ (( i < count ))
   288	+ echo
   289
   290	+ (( i++ ))
   291	+ (( i < count ))
   292	+ local matrix_filename=matrix.json
   293	+ [[ ! -f matrix.json ]]
   294	+ jq -e 'length > 0' matrix.json
   295	++ cat matrix.json
   296	+ export 'matrix_configs=[
   297	  {
   298	    "match": ["BU1-NETWORK", "SOME-THING"],
   299	    "group": "Identified Matching Entries"
   300	  },
   301	  {
   302	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   303	    "group": "Business-Unit-HQ"
   304	  },
   305	  {
   306	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   307	    "group": "Business-Unit-Remote"
   308	  },
   309	  {
   310	    "match": ["HQ-Server", "Production-Servers"],
   311	    "group": "Business-Unit-Production"
   312	  },
   313	  {
   314	    "match": ["Web-Server", "Data-Backup"],
   315	    "group": "Business-Unit-Backup"
   316	  },
   317	  {
   318	    "match": ["web_pool", "db_pool"],
   319	    "group": "Business-Unit-Apps"
   320	  },
   321	  {
   322	    "match": ["Vlan1", "Vlan2"],
   323	    "group": "Business-Unit-Networks"
   324	  },
   325	  {
   326	    "match": ["External-203-0-113-25"],
   327	    "group": "Business-Unit-External"
   328	  },
   329	  {
   330	    "match": ["Unused-Host"],
   331	    "group": "Business-Unit-Orphan"
   332	  }
   333	]'
   334	+ matrix_configs='[
   335	  {
   336	    "match": ["BU1-NETWORK", "SOME-THING"],
   337	    "group": "Identified Matching Entries"
   338	  },
   339	  {
   340	    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
   341	    "group": "Business-Unit-HQ"
   342	  },
   343	  {
   344	    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
   345	    "group": "Business-Unit-Remote"
   346	  },
   347	  {
   348	    "match": ["HQ-Server", "Production-Servers"],
   349	    "group": "Business-Unit-Production"
   350	  },
   351	  {
   352	    "match": ["Web-Server", "Data-Backup"],
   353	    "group": "Business-Unit-Backup"
   354	  },
   355	  {
   356	    "match": ["web_pool", "db_pool"],
   357	    "group": "Business-Unit-Apps"
   358	  },
   359	  {
   360	    "match": ["Vlan1", "Vlan2"],
   361	    "group": "Business-Unit-Networks"
   362	  },
   363	  {
   364	    "match": ["External-203-0-113-25"],
   365	    "group": "Business-Unit-External"
   366	  },
   367	  {
   368	    "match": ["Unused-Host"],
   369	    "group": "Business-Unit-Orphan"
   370	  }
   371	]'
   372	+ export reports_folder=reports
   373	+ reports_folder=reports
   374	+ mkdir -p reports/json reports/objects
   375	+ [[ -z 1 ]]
   376	+ [[ -z false ]]
   377	+ [[ -z 10.0.0.1 ]]
   378	++ print 10.0.0.1
   379	++ [[ -n 10.0.0.1 ]]
   380	++ echo -en 10.0.0.1
   381	++ sed -E 's/[[:space:]]+//g'
   382	++ tr -d '\r'
   383	+ target_address=10.0.0.1
   384	+ [[ false == true ]]
   385	+ export tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
   386	+ tmp_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
   387	+ for cfg_file in "${source_configs[@]}"
   388	+ extract_configs configs/cisco/fw1.cfg 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
   389	+ local config_file=configs/cisco/fw1.cfg
   390	+ local target_pattern=10.0.0.1
   391	+ local target_listing=targets/10.0.0.1.json
   392	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
   393	+ [[ ! -f configs/cisco/fw1.cfg ]]
   394	+ message '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   395	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   396	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   397	+ print '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   398	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg ]]
   399	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg'
   400	[DEBUG] Checking if config file exists and is readable: configs/cisco/fw1.cfg+ newline
   401	+ local count=1
   402	+ (( i = 0 ))
   403	+ (( i < count ))
   404	+ echo
   405
   406	+ (( i++ ))
   407	+ (( i < count ))
   408	+ [[ ! -s configs/cisco/fw1.cfg ]]
   409	++ stat -c%s configs/cisco/fw1.cfg
   410	stat: illegal option -- c
   411	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
   412	+ message '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   413	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   414	+ local 'message=[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   415	+ print '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   416	+ [[ -n [OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes ]]
   417	+ echo -en '[OK] File '\''configs/cisco/fw1.cfg'\'' is readable and size is  bytes'
   418	[OK] File 'configs/cisco/fw1.cfg' is readable and size is  bytes+ newline
   419	+ local count=1
   420	+ (( i = 0 ))
   421	+ (( i < count ))
   422	+ echo
   423
   424	+ (( i++ ))
   425	+ (( i < count ))
   426	+ local 'imported_content=object-group network BU1-NETWORK
   427	 description Corporate HQ Subnets
   428	 network-object host 10.0.0.1
   429	 network-object host 10.0.1.2
   430	 network-object 192.168.1.0 255.255.255.0
   431	!
   432
   433	object-group network BU2-WIRELESS
   434	 description Corporate HQ Subnets
   435	 network-object host 10.0.0.10
   436	 network-object host 10.0.1.200
   437	 network-object 192.168.1.0 255.255.255.0
   438
   439	object-group network BU3-WAN
   440	 description Corporate HQ Subnets
   441	 network-object host 10.0.0.11
   442	 network-object host 10.0.1.112
   443	 network-object 192.168.1.0 255.255.255.0
   444
   445	object-group network BU4-LAN
   446	 description Corporate HQ Subnets
   447	 network-object host 10.0.0.100
   448	 network-object host 10.0.1.12
   449	 network-object 192.168.1.0 255.255.255.0
   450
   451	object network Server-192-168-1-10
   452	 host 192.168.1.10
   453	 description Main Application Server
   454	!
   455	!!!!!
   456
   457	!
   458
   459
   460
   461	object network External-203-0-113-25
   462	 host 203.0.113.25
   463	!
   464
   465
   466	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   467	access-list OUTSIDE extended deny ip any any
   468	!
   469	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   470	!'
   471	+ [[ true == true ]]
   472	+ message 'Imported Content: object-group network BU1-NETWORK
   473	 description Corporate HQ Subnets
   474	 network-object host 10.0.0.1
   475	 network-object host 10.0.1.2
   476	 network-object 192.168.1.0 255.255.255.0
   477	!
   478
   479	object-group network BU2-WIRELESS
   480	 description Corporate HQ Subnets
   481	 network-object host 10.0.0.10
   482	 network-object host 10.0.1.200
   483	 network-object 192.168.1.0 255.255.255.0
   484
   485	object-group network BU3-WAN
   486	 description Corporate HQ Subnets
   487	 network-object host 10.0.0.11
   488	 network-object host 10.0.1.112
   489	 network-object 192.168.1.0 255.255.255.0
   490
   491	object-group network BU4-LAN
   492	 description Corporate HQ Subnets
   493	 network-object host 10.0.0.100
   494	 network-object host 10.0.1.12
   495	 network-object 192.168.1.0 255.255.255.0
   496
   497	object network Server-192-168-1-10
   498	 host 192.168.1.10
   499	 description Main Application Server
   500	!
   501	!!!!!
   502
   503	!
   504
   505
   506
   507	object network External-203-0-113-25
   508	 host 203.0.113.25
   509	!
   510
   511
   512	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   513	access-list OUTSIDE extended deny ip any any
   514	!
   515	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   516	!'
   517	+ [[ -n Imported Content: object-group network BU1-NETWORK
   518	 description Corporate HQ Subnets
   519	 network-object host 10.0.0.1
   520	 network-object host 10.0.1.2
   521	 network-object 192.168.1.0 255.255.255.0
   522	!
   523
   524	object-group network BU2-WIRELESS
   525	 description Corporate HQ Subnets
   526	 network-object host 10.0.0.10
   527	 network-object host 10.0.1.200
   528	 network-object 192.168.1.0 255.255.255.0
   529
   530	object-group network BU3-WAN
   531	 description Corporate HQ Subnets
   532	 network-object host 10.0.0.11
   533	 network-object host 10.0.1.112
   534	 network-object 192.168.1.0 255.255.255.0
   535
   536	object-group network BU4-LAN
   537	 description Corporate HQ Subnets
   538	 network-object host 10.0.0.100
   539	 network-object host 10.0.1.12
   540	 network-object 192.168.1.0 255.255.255.0
   541
   542	object network Server-192-168-1-10
   543	 host 192.168.1.10
   544	 description Main Application Server
   545	!
   546	!!!!!
   547
   548	!
   549
   550
   551
   552	object network External-203-0-113-25
   553	 host 203.0.113.25
   554	!
   555
   556
   557	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   558	access-list OUTSIDE extended deny ip any any
   559	!
   560	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   561	! ]]
   562	+ local 'message=Imported Content: object-group network BU1-NETWORK
   563	 description Corporate HQ Subnets
   564	 network-object host 10.0.0.1
   565	 network-object host 10.0.1.2
   566	 network-object 192.168.1.0 255.255.255.0
   567	!
   568
   569	object-group network BU2-WIRELESS
   570	 description Corporate HQ Subnets
   571	 network-object host 10.0.0.10
   572	 network-object host 10.0.1.200
   573	 network-object 192.168.1.0 255.255.255.0
   574
   575	object-group network BU3-WAN
   576	 description Corporate HQ Subnets
   577	 network-object host 10.0.0.11
   578	 network-object host 10.0.1.112
   579	 network-object 192.168.1.0 255.255.255.0
   580
   581	object-group network BU4-LAN
   582	 description Corporate HQ Subnets
   583	 network-object host 10.0.0.100
   584	 network-object host 10.0.1.12
   585	 network-object 192.168.1.0 255.255.255.0
   586
   587	object network Server-192-168-1-10
   588	 host 192.168.1.10
   589	 description Main Application Server
   590	!
   591	!!!!!
   592
   593	!
   594
   595
   596
   597	object network External-203-0-113-25
   598	 host 203.0.113.25
   599	!
   600
   601
   602	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   603	access-list OUTSIDE extended deny ip any any
   604	!
   605	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   606	!'
   607	+ print 'Imported Content: object-group network BU1-NETWORK
   608	 description Corporate HQ Subnets
   609	 network-object host 10.0.0.1
   610	 network-object host 10.0.1.2
   611	 network-object 192.168.1.0 255.255.255.0
   612	!
   613
   614	object-group network BU2-WIRELESS
   615	 description Corporate HQ Subnets
   616	 network-object host 10.0.0.10
   617	 network-object host 10.0.1.200
   618	 network-object 192.168.1.0 255.255.255.0
   619
   620	object-group network BU3-WAN
   621	 description Corporate HQ Subnets
   622	 network-object host 10.0.0.11
   623	 network-object host 10.0.1.112
   624	 network-object 192.168.1.0 255.255.255.0
   625
   626	object-group network BU4-LAN
   627	 description Corporate HQ Subnets
   628	 network-object host 10.0.0.100
   629	 network-object host 10.0.1.12
   630	 network-object 192.168.1.0 255.255.255.0
   631
   632	object network Server-192-168-1-10
   633	 host 192.168.1.10
   634	 description Main Application Server
   635	!
   636	!!!!!
   637
   638	!
   639
   640
   641
   642	object network External-203-0-113-25
   643	 host 203.0.113.25
   644	!
   645
   646
   647	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   648	access-list OUTSIDE extended deny ip any any
   649	!
   650	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   651	!'
   652	+ [[ -n Imported Content: object-group network BU1-NETWORK
   653	 description Corporate HQ Subnets
   654	 network-object host 10.0.0.1
   655	 network-object host 10.0.1.2
   656	 network-object 192.168.1.0 255.255.255.0
   657	!
   658
   659	object-group network BU2-WIRELESS
   660	 description Corporate HQ Subnets
   661	 network-object host 10.0.0.10
   662	 network-object host 10.0.1.200
   663	 network-object 192.168.1.0 255.255.255.0
   664
   665	object-group network BU3-WAN
   666	 description Corporate HQ Subnets
   667	 network-object host 10.0.0.11
   668	 network-object host 10.0.1.112
   669	 network-object 192.168.1.0 255.255.255.0
   670
   671	object-group network BU4-LAN
   672	 description Corporate HQ Subnets
   673	 network-object host 10.0.0.100
   674	 network-object host 10.0.1.12
   675	 network-object 192.168.1.0 255.255.255.0
   676
   677	object network Server-192-168-1-10
   678	 host 192.168.1.10
   679	 description Main Application Server
   680	!
   681	!!!!!
   682
   683	!
   684
   685
   686
   687	object network External-203-0-113-25
   688	 host 203.0.113.25
   689	!
   690
   691
   692	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   693	access-list OUTSIDE extended deny ip any any
   694	!
   695	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   696	! ]]
   697	+ echo -en 'Imported Content: object-group network BU1-NETWORK
   698	 description Corporate HQ Subnets
   699	 network-object host 10.0.0.1
   700	 network-object host 10.0.1.2
   701	 network-object 192.168.1.0 255.255.255.0
   702	!
   703
   704	object-group network BU2-WIRELESS
   705	 description Corporate HQ Subnets
   706	 network-object host 10.0.0.10
   707	 network-object host 10.0.1.200
   708	 network-object 192.168.1.0 255.255.255.0
   709
   710	object-group network BU3-WAN
   711	 description Corporate HQ Subnets
   712	 network-object host 10.0.0.11
   713	 network-object host 10.0.1.112
   714	 network-object 192.168.1.0 255.255.255.0
   715
   716	object-group network BU4-LAN
   717	 description Corporate HQ Subnets
   718	 network-object host 10.0.0.100
   719	 network-object host 10.0.1.12
   720	 network-object 192.168.1.0 255.255.255.0
   721
   722	object network Server-192-168-1-10
   723	 host 192.168.1.10
   724	 description Main Application Server
   725	!
   726	!!!!!
   727
   728	!
   729
   730
   731
   732	object network External-203-0-113-25
   733	 host 203.0.113.25
   734	!
   735
   736
   737	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   738	access-list OUTSIDE extended deny ip any any
   739	!
   740	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   741	!'
   742	Imported Content: object-group network BU1-NETWORK
   743	 description Corporate HQ Subnets
   744	 network-object host 10.0.0.1
   745	 network-object host 10.0.1.2
   746	 network-object 192.168.1.0 255.255.255.0
   747	!
   748
   749	object-group network BU2-WIRELESS
   750	 description Corporate HQ Subnets
   751	 network-object host 10.0.0.10
   752	 network-object host 10.0.1.200
   753	 network-object 192.168.1.0 255.255.255.0
   754
   755	object-group network BU3-WAN
   756	 description Corporate HQ Subnets
   757	 network-object host 10.0.0.11
   758	 network-object host 10.0.1.112
   759	 network-object 192.168.1.0 255.255.255.0
   760
   761	object-group network BU4-LAN
   762	 description Corporate HQ Subnets
   763	 network-object host 10.0.0.100
   764	 network-object host 10.0.1.12
   765	 network-object 192.168.1.0 255.255.255.0
   766
   767	object network Server-192-168-1-10
   768	 host 192.168.1.10
   769	 description Main Application Server
   770	!
   771	!!!!!
   772
   773	!
   774
   775
   776
   777	object network External-203-0-113-25
   778	 host 203.0.113.25
   779	!
   780
   781
   782	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   783	access-list OUTSIDE extended deny ip any any
   784	!
   785	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
   786	!+ newline
   787	+ local count=1
   788	+ (( i = 0 ))
   789	+ (( i < count ))
   790	+ echo
   791
   792	+ (( i++ ))
   793	+ (( i < count ))
   794	++ sed '/^\s*$/d;/^\s*!.*$/d'
   795	+ local 'sanitized_content=object-group network BU1-NETWORK
   796	 description Corporate HQ Subnets
   797	 network-object host 10.0.0.1
   798	 network-object host 10.0.1.2
   799	 network-object 192.168.1.0 255.255.255.0
   800	object-group network BU2-WIRELESS
   801	 description Corporate HQ Subnets
   802	 network-object host 10.0.0.10
   803	 network-object host 10.0.1.200
   804	 network-object 192.168.1.0 255.255.255.0
   805	object-group network BU3-WAN
   806	 description Corporate HQ Subnets
   807	 network-object host 10.0.0.11
   808	 network-object host 10.0.1.112
   809	 network-object 192.168.1.0 255.255.255.0
   810	object-group network BU4-LAN
   811	 description Corporate HQ Subnets
   812	 network-object host 10.0.0.100
   813	 network-object host 10.0.1.12
   814	 network-object 192.168.1.0 255.255.255.0
   815	object network Server-192-168-1-10
   816	 host 192.168.1.10
   817	 description Main Application Server
   818	object network External-203-0-113-25
   819	 host 203.0.113.25
   820	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   821	access-list OUTSIDE extended deny ip any any
   822	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   823	+ [[ true == true ]]
   824	+ message 'Sanitized Content: object-group network BU1-NETWORK
   825	 description Corporate HQ Subnets
   826	 network-object host 10.0.0.1
   827	 network-object host 10.0.1.2
   828	 network-object 192.168.1.0 255.255.255.0
   829	object-group network BU2-WIRELESS
   830	 description Corporate HQ Subnets
   831	 network-object host 10.0.0.10
   832	 network-object host 10.0.1.200
   833	 network-object 192.168.1.0 255.255.255.0
   834	object-group network BU3-WAN
   835	 description Corporate HQ Subnets
   836	 network-object host 10.0.0.11
   837	 network-object host 10.0.1.112
   838	 network-object 192.168.1.0 255.255.255.0
   839	object-group network BU4-LAN
   840	 description Corporate HQ Subnets
   841	 network-object host 10.0.0.100
   842	 network-object host 10.0.1.12
   843	 network-object 192.168.1.0 255.255.255.0
   844	object network Server-192-168-1-10
   845	 host 192.168.1.10
   846	 description Main Application Server
   847	object network External-203-0-113-25
   848	 host 203.0.113.25
   849	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   850	access-list OUTSIDE extended deny ip any any
   851	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   852	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   853	 description Corporate HQ Subnets
   854	 network-object host 10.0.0.1
   855	 network-object host 10.0.1.2
   856	 network-object 192.168.1.0 255.255.255.0
   857	object-group network BU2-WIRELESS
   858	 description Corporate HQ Subnets
   859	 network-object host 10.0.0.10
   860	 network-object host 10.0.1.200
   861	 network-object 192.168.1.0 255.255.255.0
   862	object-group network BU3-WAN
   863	 description Corporate HQ Subnets
   864	 network-object host 10.0.0.11
   865	 network-object host 10.0.1.112
   866	 network-object 192.168.1.0 255.255.255.0
   867	object-group network BU4-LAN
   868	 description Corporate HQ Subnets
   869	 network-object host 10.0.0.100
   870	 network-object host 10.0.1.12
   871	 network-object 192.168.1.0 255.255.255.0
   872	object network Server-192-168-1-10
   873	 host 192.168.1.10
   874	 description Main Application Server
   875	object network External-203-0-113-25
   876	 host 203.0.113.25
   877	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   878	access-list OUTSIDE extended deny ip any any
   879	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   880	+ local 'message=Sanitized Content: object-group network BU1-NETWORK
   881	 description Corporate HQ Subnets
   882	 network-object host 10.0.0.1
   883	 network-object host 10.0.1.2
   884	 network-object 192.168.1.0 255.255.255.0
   885	object-group network BU2-WIRELESS
   886	 description Corporate HQ Subnets
   887	 network-object host 10.0.0.10
   888	 network-object host 10.0.1.200
   889	 network-object 192.168.1.0 255.255.255.0
   890	object-group network BU3-WAN
   891	 description Corporate HQ Subnets
   892	 network-object host 10.0.0.11
   893	 network-object host 10.0.1.112
   894	 network-object 192.168.1.0 255.255.255.0
   895	object-group network BU4-LAN
   896	 description Corporate HQ Subnets
   897	 network-object host 10.0.0.100
   898	 network-object host 10.0.1.12
   899	 network-object 192.168.1.0 255.255.255.0
   900	object network Server-192-168-1-10
   901	 host 192.168.1.10
   902	 description Main Application Server
   903	object network External-203-0-113-25
   904	 host 203.0.113.25
   905	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   906	access-list OUTSIDE extended deny ip any any
   907	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   908	+ print 'Sanitized Content: object-group network BU1-NETWORK
   909	 description Corporate HQ Subnets
   910	 network-object host 10.0.0.1
   911	 network-object host 10.0.1.2
   912	 network-object 192.168.1.0 255.255.255.0
   913	object-group network BU2-WIRELESS
   914	 description Corporate HQ Subnets
   915	 network-object host 10.0.0.10
   916	 network-object host 10.0.1.200
   917	 network-object 192.168.1.0 255.255.255.0
   918	object-group network BU3-WAN
   919	 description Corporate HQ Subnets
   920	 network-object host 10.0.0.11
   921	 network-object host 10.0.1.112
   922	 network-object 192.168.1.0 255.255.255.0
   923	object-group network BU4-LAN
   924	 description Corporate HQ Subnets
   925	 network-object host 10.0.0.100
   926	 network-object host 10.0.1.12
   927	 network-object 192.168.1.0 255.255.255.0
   928	object network Server-192-168-1-10
   929	 host 192.168.1.10
   930	 description Main Application Server
   931	object network External-203-0-113-25
   932	 host 203.0.113.25
   933	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   934	access-list OUTSIDE extended deny ip any any
   935	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   936	+ [[ -n Sanitized Content: object-group network BU1-NETWORK
   937	 description Corporate HQ Subnets
   938	 network-object host 10.0.0.1
   939	 network-object host 10.0.1.2
   940	 network-object 192.168.1.0 255.255.255.0
   941	object-group network BU2-WIRELESS
   942	 description Corporate HQ Subnets
   943	 network-object host 10.0.0.10
   944	 network-object host 10.0.1.200
   945	 network-object 192.168.1.0 255.255.255.0
   946	object-group network BU3-WAN
   947	 description Corporate HQ Subnets
   948	 network-object host 10.0.0.11
   949	 network-object host 10.0.1.112
   950	 network-object 192.168.1.0 255.255.255.0
   951	object-group network BU4-LAN
   952	 description Corporate HQ Subnets
   953	 network-object host 10.0.0.100
   954	 network-object host 10.0.1.12
   955	 network-object 192.168.1.0 255.255.255.0
   956	object network Server-192-168-1-10
   957	 host 192.168.1.10
   958	 description Main Application Server
   959	object network External-203-0-113-25
   960	 host 203.0.113.25
   961	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   962	access-list OUTSIDE extended deny ip any any
   963	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
   964	+ echo -en 'Sanitized Content: object-group network BU1-NETWORK
   965	 description Corporate HQ Subnets
   966	 network-object host 10.0.0.1
   967	 network-object host 10.0.1.2
   968	 network-object 192.168.1.0 255.255.255.0
   969	object-group network BU2-WIRELESS
   970	 description Corporate HQ Subnets
   971	 network-object host 10.0.0.10
   972	 network-object host 10.0.1.200
   973	 network-object 192.168.1.0 255.255.255.0
   974	object-group network BU3-WAN
   975	 description Corporate HQ Subnets
   976	 network-object host 10.0.0.11
   977	 network-object host 10.0.1.112
   978	 network-object 192.168.1.0 255.255.255.0
   979	object-group network BU4-LAN
   980	 description Corporate HQ Subnets
   981	 network-object host 10.0.0.100
   982	 network-object host 10.0.1.12
   983	 network-object 192.168.1.0 255.255.255.0
   984	object network Server-192-168-1-10
   985	 host 192.168.1.10
   986	 description Main Application Server
   987	object network External-203-0-113-25
   988	 host 203.0.113.25
   989	access-list OUTSIDE extended permit ip host 10.0.0.1 any
   990	access-list OUTSIDE extended deny ip any any
   991	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
   992	Sanitized Content: object-group network BU1-NETWORK
   993	 description Corporate HQ Subnets
   994	 network-object host 10.0.0.1
   995	 network-object host 10.0.1.2
   996	 network-object 192.168.1.0 255.255.255.0
   997	object-group network BU2-WIRELESS
   998	 description Corporate HQ Subnets
   999	 network-object host 10.0.0.10
  1000	 network-object host 10.0.1.200
  1001	 network-object 192.168.1.0 255.255.255.0
  1002	object-group network BU3-WAN
  1003	 description Corporate HQ Subnets
  1004	 network-object host 10.0.0.11
  1005	 network-object host 10.0.1.112
  1006	 network-object 192.168.1.0 255.255.255.0
  1007	object-group network BU4-LAN
  1008	 description Corporate HQ Subnets
  1009	 network-object host 10.0.0.100
  1010	 network-object host 10.0.1.12
  1011	 network-object 192.168.1.0 255.255.255.0
  1012	object network Server-192-168-1-10
  1013	 host 192.168.1.10
  1014	 description Main Application Server
  1015	object network External-203-0-113-25
  1016	 host 203.0.113.25
  1017	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1018	access-list OUTSIDE extended deny ip any any
  1019	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25+ newline
  1020	+ local count=1
  1021	+ (( i = 0 ))
  1022	+ (( i < count ))
  1023	+ echo
  1024
  1025	+ (( i++ ))
  1026	+ (( i < count ))
  1027	++ perl -pe 's/\n/MTc0NzE4MDA3MTkyNzU4MDAwMAo/g'
  1028	+ local 'serialized_objects=object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1029	+ [[ true == true ]]
  1030	+ message 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1031	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  1032	+ local 'message=Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1033	+ print 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1034	+ [[ -n Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  1035	+ echo -en 'Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1036	Serialized Objects: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application ServerMTc0NzE4MDA3MTkyNzU4MDAwMAoobject network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25MTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NzE4MDA3MTkyNzU4MDAwMAoaccess-list OUTSIDE extended deny ip any anyMTc0NzE4MDA3MTkyNzU4MDAwMAonat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo+ newline
  1037	+ local count=1
  1038	+ (( i = 0 ))
  1039	+ (( i < count ))
  1040	+ echo
  1041
  1042	+ (( i++ ))
  1043	+ (( i < count ))
  1044	++ sed -E 's/MTc0NzE4MDA3MTkyNzU4MDAwMAo([^[:space:]])/\n\1/g'
  1045	+ local 'restored_lines=object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1046	object-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1047	object-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1048	object-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1049	object network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application Server
  1050	object network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25
  1051	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1052	access-list OUTSIDE extended deny ip any any
  1053	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1054	+ restored_lines+='
  1055	'
  1056	+ IFS='
  1057	'
  1058	+ read -r -d '' -a config_objects
  1059	++ printf '%s\0' 'object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1060	object-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1061	object-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1062	object-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0
  1063	object network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application Server
  1064	object network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25
  1065	access-list OUTSIDE extended permit ip host 10.0.0.1 any
  1066	access-list OUTSIDE extended deny ip any any
  1067	nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo
  1068	'
  1069	+ [[ true == true ]]
  1070	+ message 'Loaded 9 config blocks'
  1071	+ [[ -n Loaded 9 config blocks ]]
  1072	+ local 'message=Loaded 9 config blocks'
  1073	+ print 'Loaded 9 config blocks'
  1074	+ [[ -n Loaded 9 config blocks ]]
  1075	+ echo -en 'Loaded 9 config blocks'
  1076	Loaded 9 config blocks+ newline
  1077	+ local count=1
  1078	+ (( i = 0 ))
  1079	+ (( i < count ))
  1080	+ echo
  1081
  1082	+ (( i++ ))
  1083	+ (( i < count ))
  1084	+ oIFS='
  1085	'
  1086	+ IFS='
  1087	'
  1088	++ printf '%s\n' 'object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU2-WIRELESSMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.10MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.200MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU3-WANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.11MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.112MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0' 'object-group network BU4-LANMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.100MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.12MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0' 'object network Server-192-168-1-10MTc0NzE4MDA3MTkyNzU4MDAwMAo host 192.168.1.10MTc0NzE4MDA3MTkyNzU4MDAwMAo description Main Application Server' 'object network External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo host 203.0.113.25' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' 'access-list OUTSIDE extended deny ip any any' 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  1089	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  1090	+ matched_objects=('object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any')
  1091	+ declare -a matched_objects
  1092	+ IFS='
  1093	'
  1094	+ [[ true == true ]]
  1095	+ message 'Loaded 2 config blocks'
  1096	+ [[ -n Loaded 2 config blocks ]]
  1097	+ local 'message=Loaded 2 config blocks'
  1098	+ print 'Loaded 2 config blocks'
  1099	+ [[ -n Loaded 2 config blocks ]]
  1100	+ echo -en 'Loaded 2 config blocks'
  1101	Loaded 2 config blocks+ newline
  1102	+ local count=1
  1103	+ (( i = 0 ))
  1104	+ (( i < count ))
  1105	+ echo
  1106
  1107	+ (( i++ ))
  1108	+ (( i < count ))
  1109	+ restored_block=()
  1110	+ declare -a restored_block
  1111	+ for serialized_line in "${matched_objects[@]}"
  1112	+ [[ true == true ]]
  1113	+ message 'Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0'
  1114	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1115	+ local 'message=Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0'
  1116	+ print 'Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0'
  1117	+ [[ -n Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0 ]]
  1118	+ echo -en 'Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0'
  1119	Serialized Line: object-group network BU1-NETWORKMTc0NzE4MDA3MTkyNzU4MDAwMAo description Corporate HQ SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object host 10.0.1.2MTc0NzE4MDA3MTkyNzU4MDAwMAo network-object 192.168.1.0 255.255.255.0+ newline
  1120	+ local count=1
  1121	+ (( i = 0 ))
  1122	+ (( i < count ))
  1123	+ echo
  1124
  1125	+ (( i++ ))
  1126	+ (( i < count ))
  1127	++ perl -pe 's/MTc0NzE4MDA3MTkyNzU4MDAwMAo/\n/g'
  1128	+ restored_block='object-group network BU1-NETWORK
  1129	 description Corporate HQ Subnets
  1130	 network-object host 10.0.0.1
  1131	 network-object host 10.0.1.2
  1132	 network-object 192.168.1.0 255.255.255.0'
  1133	+ [[ true == true ]]
  1134	+ message 'Restored Configuration:\nobject-group network BU1-NETWORK
  1135	 description Corporate HQ Subnets
  1136	 network-object host 10.0.0.1
  1137	 network-object host 10.0.1.2
  1138	 network-object 192.168.1.0 255.255.255.0'
  1139	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1140	 description Corporate HQ Subnets
  1141	 network-object host 10.0.0.1
  1142	 network-object host 10.0.1.2
  1143	 network-object 192.168.1.0 255.255.255.0 ]]
  1144	+ local 'message=Restored Configuration:\nobject-group network BU1-NETWORK
  1145	 description Corporate HQ Subnets
  1146	 network-object host 10.0.0.1
  1147	 network-object host 10.0.1.2
  1148	 network-object 192.168.1.0 255.255.255.0'
  1149	+ print 'Restored Configuration:\nobject-group network BU1-NETWORK
  1150	 description Corporate HQ Subnets
  1151	 network-object host 10.0.0.1
  1152	 network-object host 10.0.1.2
  1153	 network-object 192.168.1.0 255.255.255.0'
  1154	+ [[ -n Restored Configuration:\nobject-group network BU1-NETWORK
  1155	 description Corporate HQ Subnets
  1156	 network-object host 10.0.0.1
  1157	 network-object host 10.0.1.2
  1158	 network-object 192.168.1.0 255.255.255.0 ]]
  1159	+ echo -en 'Restored Configuration:\nobject-group network BU1-NETWORK
  1160	 description Corporate HQ Subnets
  1161	 network-object host 10.0.0.1
  1162	 network-object host 10.0.1.2
  1163	 network-object 192.168.1.0 255.255.255.0'
  1164	Restored Configuration:
  1165	object-group network BU1-NETWORK
  1166	 description Corporate HQ Subnets
  1167	 network-object host 10.0.0.1
  1168	 network-object host 10.0.1.2
  1169	 network-object 192.168.1.0 255.255.255.0+ newline
  1170	+ local count=1
  1171	+ (( i = 0 ))
  1172	+ (( i < count ))
  1173	+ echo
  1174
  1175	+ (( i++ ))
  1176	+ (( i < count ))
  1177	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'object-group network BU1-NETWORK
  1178	 description Corporate HQ Subnets
  1179	 network-object host 10.0.0.1
  1180	 network-object host 10.0.1.2
  1181	 network-object 192.168.1.0 255.255.255.0'
  1182	+ local target_pattern=10.0.0.1
  1183	+ local config_path=configs/cisco/fw1.cfg
  1184	+ local 'restored_block=object-group network BU1-NETWORK
  1185	 description Corporate HQ Subnets
  1186	 network-object host 10.0.0.1
  1187	 network-object host 10.0.1.2
  1188	 network-object 192.168.1.0 255.255.255.0'
  1189	+ local cleaned_block
  1190	++ sed '/^[[:space:]]*$/d'
  1191	+ cleaned_block='object-group network BU1-NETWORK
  1192	 description Corporate HQ Subnets
  1193	 network-object host 10.0.0.1
  1194	 network-object host 10.0.1.2
  1195	 network-object 192.168.1.0 255.255.255.0'
  1196	+ [[ -z object-group network BU1-NETWORK
  1197	 description Corporate HQ Subnets
  1198	 network-object host 10.0.0.1
  1199	 network-object host 10.0.1.2
  1200	 network-object 192.168.1.0 255.255.255.0 ]]
  1201	+ [[ true == true ]]
  1202	+ message '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1203	 description Corporate HQ Subnets
  1204	 network-object host 10.0.0.1
  1205	 network-object host 10.0.1.2
  1206	 network-object 192.168.1.0 255.255.255.0'
  1207	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1208	 description Corporate HQ Subnets
  1209	 network-object host 10.0.0.1
  1210	 network-object host 10.0.1.2
  1211	 network-object 192.168.1.0 255.255.255.0 ]]
  1212	+ local 'message=[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1213	 description Corporate HQ Subnets
  1214	 network-object host 10.0.0.1
  1215	 network-object host 10.0.1.2
  1216	 network-object 192.168.1.0 255.255.255.0'
  1217	+ print '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1218	 description Corporate HQ Subnets
  1219	 network-object host 10.0.0.1
  1220	 network-object host 10.0.1.2
  1221	 network-object 192.168.1.0 255.255.255.0'
  1222	+ [[ -n [process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1223	 description Corporate HQ Subnets
  1224	 network-object host 10.0.0.1
  1225	 network-object host 10.0.1.2
  1226	 network-object 192.168.1.0 255.255.255.0 ]]
  1227	+ echo -en '[process_configs] Raw Block:\nobject-group network BU1-NETWORK
  1228	 description Corporate HQ Subnets
  1229	 network-object host 10.0.0.1
  1230	 network-object host 10.0.1.2
  1231	 network-object 192.168.1.0 255.255.255.0'
  1232	[process_configs] Raw Block:
  1233	object-group network BU1-NETWORK
  1234	 description Corporate HQ Subnets
  1235	 network-object host 10.0.0.1
  1236	 network-object host 10.0.1.2
  1237	 network-object 192.168.1.0 255.255.255.0+ newline
  1238	+ local count=1
  1239	+ (( i = 0 ))
  1240	+ (( i < count ))
  1241	+ echo
  1242
  1243	+ (( i++ ))
  1244	+ (( i < count ))
  1245	+ local object_line
  1246	++ head -n 1
  1247	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1248	+ object_line='object-group network BU1-NETWORK'
  1249	+ [[ -z object-group network BU1-NETWORK ]]
  1250	+ local object_keyword type_value
  1251	++ awk '{print $1}'
  1252	+ object_keyword=object-group
  1253	++ awk '{$1=""; print substr($0,2)}'
  1254	+ type_value='network BU1-NETWORK'
  1255	+ [[ true == true ]]
  1256	+ print '[process_configs] object   : object-group'
  1257	+ [[ -n [process_configs] object   : object-group ]]
  1258	+ echo -en '[process_configs] object   : object-group'
  1259	[process_configs] object   : object-group+ print '[process_configs] type     : network BU1-NETWORK'
  1260	+ [[ -n [process_configs] type     : network BU1-NETWORK ]]
  1261	+ echo -en '[process_configs] type     : network BU1-NETWORK'
  1262	[process_configs] type     : network BU1-NETWORK+ entries=()
  1263	+ local -a entries
  1264	+ IFS=
  1265	+ read -r line
  1266	+ local trimmed
  1267	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1268	+ trimmed='object-group network BU1-NETWORK'
  1269	+ [[ -z object-group network BU1-NETWORK ]]
  1270	+ [[ object-group network bu1-network =~ ^description[[:space:]] ]]
  1271	+ entries+=("${trimmed}")
  1272	+ IFS=
  1273	+ read -r line
  1274	+ local trimmed
  1275	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1276	+ trimmed='description Corporate HQ Subnets'
  1277	+ [[ -z description Corporate HQ Subnets ]]
  1278	+ [[ description corporate hq subnets =~ ^description[[:space:]] ]]
  1279	+ continue
  1280	+ IFS=
  1281	+ read -r line
  1282	+ local trimmed
  1283	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1284	+ trimmed='network-object host 10.0.0.1'
  1285	+ [[ -z network-object host 10.0.0.1 ]]
  1286	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  1287	+ entries+=("${trimmed}")
  1288	+ IFS=
  1289	+ read -r line
  1290	+ local trimmed
  1291	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1292	+ trimmed='network-object host 10.0.1.2'
  1293	+ [[ -z network-object host 10.0.1.2 ]]
  1294	+ [[ network-object host 10.0.1.2 =~ ^description[[:space:]] ]]
  1295	+ entries+=("${trimmed}")
  1296	+ IFS=
  1297	+ read -r line
  1298	+ local trimmed
  1299	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1300	+ trimmed='network-object 192.168.1.0 255.255.255.0'
  1301	+ [[ -z network-object 192.168.1.0 255.255.255.0 ]]
  1302	+ [[ network-object 192.168.1.0 255.255.255.0 =~ ^description[[:space:]] ]]
  1303	+ entries+=("${trimmed}")
  1304	+ IFS=
  1305	+ read -r line
  1306	+ ((  4 > 1  ))
  1307	+ entries=("${entries[@]:1}")
  1308	+ [[ true == true ]]
  1309	+ message '[process_configs] Entries:'
  1310	+ [[ -n [process_configs] Entries: ]]
  1311	+ local 'message=[process_configs] Entries:'
  1312	+ print '[process_configs] Entries:'
  1313	+ [[ -n [process_configs] Entries: ]]
  1314	+ echo -en '[process_configs] Entries:'
  1315	[process_configs] Entries:+ newline
  1316	+ local count=1
  1317	+ (( i = 0 ))
  1318	+ (( i < count ))
  1319	+ echo
  1320
  1321	+ (( i++ ))
  1322	+ (( i < count ))
  1323	+ for e in "${entries[@]}"
  1324	+ print '  - network-object host 10.0.0.1'
  1325	+ [[ -n   - network-object host 10.0.0.1 ]]
  1326	+ echo -en '  - network-object host 10.0.0.1'
  1327	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  1328	+ print '  - network-object host 10.0.1.2'
  1329	+ [[ -n   - network-object host 10.0.1.2 ]]
  1330	+ echo -en '  - network-object host 10.0.1.2'
  1331	  - network-object host 10.0.1.2+ for e in "${entries[@]}"
  1332	+ print '  - network-object 192.168.1.0 255.255.255.0'
  1333	+ [[ -n   - network-object 192.168.1.0 255.255.255.0 ]]
  1334	+ echo -en '  - network-object 192.168.1.0 255.255.255.0'
  1335	  - network-object 192.168.1.0 255.255.255.0+ local matched_line
  1336	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  1337	++ head -n 1
  1338	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  1339	+ matched_line='network-object host 10.0.0.1'
  1340	+ [[ -z network-object host 10.0.0.1 ]]
  1341	+ [[ true == true ]]
  1342	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  1343	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1344	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  1345	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  1346	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  1347	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  1348	[process_configs] Matched: network-object host 10.0.0.1+ newline
  1349	+ local count=1
  1350	+ (( i = 0 ))
  1351	+ (( i < count ))
  1352	+ echo
  1353
  1354	+ (( i++ ))
  1355	+ (( i < count ))
  1356	+ local desc_val=false
  1357	+ [[ -z false ]]
  1358	+ [[ true == true ]]
  1359	+ message '[process_configs] Description: false'
  1360	+ [[ -n [process_configs] Description: false ]]
  1361	+ local 'message=[process_configs] Description: false'
  1362	+ print '[process_configs] Description: false'
  1363	+ [[ -n [process_configs] Description: false ]]
  1364	+ echo -en '[process_configs] Description: false'
  1365	[process_configs] Description: false+ newline
  1366	+ local count=1
  1367	+ (( i = 0 ))
  1368	+ (( i < count ))
  1369	+ echo
  1370
  1371	+ (( i++ ))
  1372	+ (( i < count ))
  1373	+ local group_val=Unclassified
  1374	+ [[ true == true ]]
  1375	+ local object_key
  1376	++ awk '{print $NF}'
  1377	++ sed -E 's/[[:punct:]]*$//'
  1378	+ object_key=BU1-NETWORK
  1379	++ jq -r --arg key BU1-NETWORK 'map(select(.match[]? | contains($key))) | .[0].group'
  1380	+ group_val='Identified Matching Entries'
  1381	+ [[ -z Identified Matching Entries ]]
  1382	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1383	+ [[ -z Identified Matching Entries ]]
  1384	+ [[ Identified Matching Entries == \n\u\l\l ]]
  1385	+ [[ true == true ]]
  1386	+ message '[process_configs] Group: Identified Matching Entries'
  1387	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1388	+ local 'message=[process_configs] Group: Identified Matching Entries'
  1389	+ print '[process_configs] Group: Identified Matching Entries'
  1390	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  1391	+ echo -en '[process_configs] Group: Identified Matching Entries'
  1392	[process_configs] Group: Identified Matching Entries+ newline
  1393	+ local count=1
  1394	+ (( i = 0 ))
  1395	+ (( i < count ))
  1396	+ echo
  1397
  1398	+ (( i++ ))
  1399	+ (( i < count ))
  1400	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object host 10.0.1.2' 'network-object 192.168.1.0 255.255.255.0'
  1401	++ jq -R .
  1402	++ jq -s .
  1403	+ local 'entries_2json=[
  1404	  "network-object host 10.0.0.1",
  1405	  "network-object host 10.0.1.2",
  1406	  "network-object 192.168.1.0 255.255.255.0"
  1407	]'
  1408	+ [[ 3 -eq 1 ]]
  1409	++ jq -n --arg object object-group --arg type 'network BU1-NETWORK' --arg description false --argjson entries '[
  1410	  "network-object host 10.0.0.1",
  1411	  "network-object host 10.0.1.2",
  1412	  "network-object 192.168.1.0 255.255.255.0"
  1413	]' --arg group 'Identified Matching Entries' '{
  1414	                  object: $object,
  1415	                  type: $type,
  1416	                  description: ($description | select(. != "" and . != "null") // false),
  1417	                  entries: $entries,
  1418	                  group: $group
  1419	                }'
  1420	+ target_object='{
  1421	  "object": "object-group",
  1422	  "type": "network BU1-NETWORK",
  1423	  "description": "false",
  1424	  "entries": [
  1425	    "network-object host 10.0.0.1",
  1426	    "network-object host 10.0.1.2",
  1427	    "network-object 192.168.1.0 255.255.255.0"
  1428	  ],
  1429	  "group": "Identified Matching Entries"
  1430	}'
  1431	+ export target_object
  1432	+ [[ true == true ]]
  1433	+ message '[process_configs] JSON Object (output):'
  1434	+ [[ -n [process_configs] JSON Object (output): ]]
  1435	+ local 'message=[process_configs] JSON Object (output):'
  1436	+ print '[process_configs] JSON Object (output):'
  1437	+ [[ -n [process_configs] JSON Object (output): ]]
  1438	+ echo -en '[process_configs] JSON Object (output):'
  1439	[process_configs] JSON Object (output):+ newline
  1440	+ local count=1
  1441	+ (( i = 0 ))
  1442	+ (( i < count ))
  1443	+ echo
  1444
  1445	+ (( i++ ))
  1446	+ (( i < count ))
  1447	+ print '{
  1448	  "object": "object-group",
  1449	  "type": "network BU1-NETWORK",
  1450	  "description": "false",
  1451	  "entries": [
  1452	    "network-object host 10.0.0.1",
  1453	    "network-object host 10.0.1.2",
  1454	    "network-object 192.168.1.0 255.255.255.0"
  1455	  ],
  1456	  "group": "Identified Matching Entries"
  1457	}'
  1458	+ jq .
  1459	+ [[ -n {
  1460	  "object": "object-group",
  1461	  "type": "network BU1-NETWORK",
  1462	  "description": "false",
  1463	  "entries": [
  1464	    "network-object host 10.0.0.1",
  1465	    "network-object host 10.0.1.2",
  1466	    "network-object 192.168.1.0 255.255.255.0"
  1467	  ],
  1468	  "group": "Identified Matching Entries"
  1469	} ]]
  1470	+ echo -en '{
  1471	  "object": "object-group",
  1472	  "type": "network BU1-NETWORK",
  1473	  "description": "false",
  1474	  "entries": [
  1475	    "network-object host 10.0.0.1",
  1476	    "network-object host 10.0.1.2",
  1477	    "network-object 192.168.1.0 255.255.255.0"
  1478	  ],
  1479	  "group": "Identified Matching Entries"
  1480	}'
  1481	{
  1482	  "object": "object-group",
  1483	  "type": "network BU1-NETWORK",
  1484	  "description": "false",
  1485	  "entries": [
  1486	    "network-object host 10.0.0.1",
  1487	    "network-object host 10.0.1.2",
  1488	    "network-object 192.168.1.0 255.255.255.0"
  1489	  ],
  1490	  "group": "Identified Matching Entries"
  1491	}
  1492	+ newline
  1493	+ local count=1
  1494	+ (( i = 0 ))
  1495	+ (( i < count ))
  1496	+ echo
  1497
  1498	+ (( i++ ))
  1499	+ (( i < count ))
  1500	+ return 0
  1501	+ [[ -n {
  1502	  "object": "object-group",
  1503	  "type": "network BU1-NETWORK",
  1504	  "description": "false",
  1505	  "entries": [
  1506	    "network-object host 10.0.0.1",
  1507	    "network-object host 10.0.1.2",
  1508	    "network-object 192.168.1.0 255.255.255.0"
  1509	  ],
  1510	  "group": "Identified Matching Entries"
  1511	} ]]
  1512	+ [[ true == true ]]
  1513	+ message '|-----> Target Objects: {
  1514	  "object": "object-group",
  1515	  "type": "network BU1-NETWORK",
  1516	  "description": "false",
  1517	  "entries": [
  1518	    "network-object host 10.0.0.1",
  1519	    "network-object host 10.0.1.2",
  1520	    "network-object 192.168.1.0 255.255.255.0"
  1521	  ],
  1522	  "group": "Identified Matching Entries"
  1523	}'
  1524	+ [[ -n |-----> Target Objects: {
  1525	  "object": "object-group",
  1526	  "type": "network BU1-NETWORK",
  1527	  "description": "false",
  1528	  "entries": [
  1529	    "network-object host 10.0.0.1",
  1530	    "network-object host 10.0.1.2",
  1531	    "network-object 192.168.1.0 255.255.255.0"
  1532	  ],
  1533	  "group": "Identified Matching Entries"
  1534	} ]]
  1535	+ local 'message=|-----> Target Objects: {
  1536	  "object": "object-group",
  1537	  "type": "network BU1-NETWORK",
  1538	  "description": "false",
  1539	  "entries": [
  1540	    "network-object host 10.0.0.1",
  1541	    "network-object host 10.0.1.2",
  1542	    "network-object 192.168.1.0 255.255.255.0"
  1543	  ],
  1544	  "group": "Identified Matching Entries"
  1545	}'
  1546	+ print '|-----> Target Objects: {
  1547	  "object": "object-group",
  1548	  "type": "network BU1-NETWORK",
  1549	  "description": "false",
  1550	  "entries": [
  1551	    "network-object host 10.0.0.1",
  1552	    "network-object host 10.0.1.2",
  1553	    "network-object 192.168.1.0 255.255.255.0"
  1554	  ],
  1555	  "group": "Identified Matching Entries"
  1556	}'
  1557	+ [[ -n |-----> Target Objects: {
  1558	  "object": "object-group",
  1559	  "type": "network BU1-NETWORK",
  1560	  "description": "false",
  1561	  "entries": [
  1562	    "network-object host 10.0.0.1",
  1563	    "network-object host 10.0.1.2",
  1564	    "network-object 192.168.1.0 255.255.255.0"
  1565	  ],
  1566	  "group": "Identified Matching Entries"
  1567	} ]]
  1568	+ echo -en '|-----> Target Objects: {
  1569	  "object": "object-group",
  1570	  "type": "network BU1-NETWORK",
  1571	  "description": "false",
  1572	  "entries": [
  1573	    "network-object host 10.0.0.1",
  1574	    "network-object host 10.0.1.2",
  1575	    "network-object 192.168.1.0 255.255.255.0"
  1576	  ],
  1577	  "group": "Identified Matching Entries"
  1578	}'
  1579	|-----> Target Objects: {
  1580	  "object": "object-group",
  1581	  "type": "network BU1-NETWORK",
  1582	  "description": "false",
  1583	  "entries": [
  1584	    "network-object host 10.0.0.1",
  1585	    "network-object host 10.0.1.2",
  1586	    "network-object 192.168.1.0 255.255.255.0"
  1587	  ],
  1588	  "group": "Identified Matching Entries"
  1589	}+ newline
  1590	+ local count=1
  1591	+ (( i = 0 ))
  1592	+ (( i < count ))
  1593	+ echo
  1594
  1595	+ (( i++ ))
  1596	+ (( i < count ))
  1597	+ [[ -n {
  1598	  "object": "object-group",
  1599	  "type": "network BU1-NETWORK",
  1600	  "description": "false",
  1601	  "entries": [
  1602	    "network-object host 10.0.0.1",
  1603	    "network-object host 10.0.1.2",
  1604	    "network-object 192.168.1.0 255.255.255.0"
  1605	  ],
  1606	  "group": "Identified Matching Entries"
  1607	} ]]
  1608	++ printf '%s\n' '{
  1609	  "object": "object-group",
  1610	  "type": "network BU1-NETWORK",
  1611	  "description": "false",
  1612	  "entries": [
  1613	    "network-object host 10.0.0.1",
  1614	    "network-object host 10.0.1.2",
  1615	    "network-object 192.168.1.0 255.255.255.0"
  1616	  ],
  1617	  "group": "Identified Matching Entries"
  1618	}'
  1619	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  1620	              config: {
  1621	                site: ($site | gsub("^.*/"; "")),
  1622	                device: $device,
  1623	                objects: .
  1624	              }
  1625	            }'
  1626	+ wrapped_block='{
  1627	  "config": {
  1628	    "site": "cisco",
  1629	    "device": "fw1.cfg",
  1630	    "objects": [
  1631	      {
  1632	        "object": "object-group",
  1633	        "type": "network BU1-NETWORK",
  1634	        "description": "false",
  1635	        "entries": [
  1636	          "network-object host 10.0.0.1",
  1637	          "network-object host 10.0.1.2",
  1638	          "network-object 192.168.1.0 255.255.255.0"
  1639	        ],
  1640	        "group": "Identified Matching Entries"
  1641	      }
  1642	    ]
  1643	  }
  1644	}'
  1645	+ [[ true == true ]]
  1646	+ message '|-----> Config Objects:\n{
  1647	  "config": {
  1648	    "site": "cisco",
  1649	    "device": "fw1.cfg",
  1650	    "objects": [
  1651	      {
  1652	        "object": "object-group",
  1653	        "type": "network BU1-NETWORK",
  1654	        "description": "false",
  1655	        "entries": [
  1656	          "network-object host 10.0.0.1",
  1657	          "network-object host 10.0.1.2",
  1658	          "network-object 192.168.1.0 255.255.255.0"
  1659	        ],
  1660	        "group": "Identified Matching Entries"
  1661	      }
  1662	    ]
  1663	  }
  1664	}'
  1665	+ [[ -n |-----> Config Objects:\n{
  1666	  "config": {
  1667	    "site": "cisco",
  1668	    "device": "fw1.cfg",
  1669	    "objects": [
  1670	      {
  1671	        "object": "object-group",
  1672	        "type": "network BU1-NETWORK",
  1673	        "description": "false",
  1674	        "entries": [
  1675	          "network-object host 10.0.0.1",
  1676	          "network-object host 10.0.1.2",
  1677	          "network-object 192.168.1.0 255.255.255.0"
  1678	        ],
  1679	        "group": "Identified Matching Entries"
  1680	      }
  1681	    ]
  1682	  }
  1683	} ]]
  1684	+ local 'message=|-----> Config Objects:\n{
  1685	  "config": {
  1686	    "site": "cisco",
  1687	    "device": "fw1.cfg",
  1688	    "objects": [
  1689	      {
  1690	        "object": "object-group",
  1691	        "type": "network BU1-NETWORK",
  1692	        "description": "false",
  1693	        "entries": [
  1694	          "network-object host 10.0.0.1",
  1695	          "network-object host 10.0.1.2",
  1696	          "network-object 192.168.1.0 255.255.255.0"
  1697	        ],
  1698	        "group": "Identified Matching Entries"
  1699	      }
  1700	    ]
  1701	  }
  1702	}'
  1703	+ print '|-----> Config Objects:\n{
  1704	  "config": {
  1705	    "site": "cisco",
  1706	    "device": "fw1.cfg",
  1707	    "objects": [
  1708	      {
  1709	        "object": "object-group",
  1710	        "type": "network BU1-NETWORK",
  1711	        "description": "false",
  1712	        "entries": [
  1713	          "network-object host 10.0.0.1",
  1714	          "network-object host 10.0.1.2",
  1715	          "network-object 192.168.1.0 255.255.255.0"
  1716	        ],
  1717	        "group": "Identified Matching Entries"
  1718	      }
  1719	    ]
  1720	  }
  1721	}'
  1722	+ [[ -n |-----> Config Objects:\n{
  1723	  "config": {
  1724	    "site": "cisco",
  1725	    "device": "fw1.cfg",
  1726	    "objects": [
  1727	      {
  1728	        "object": "object-group",
  1729	        "type": "network BU1-NETWORK",
  1730	        "description": "false",
  1731	        "entries": [
  1732	          "network-object host 10.0.0.1",
  1733	          "network-object host 10.0.1.2",
  1734	          "network-object 192.168.1.0 255.255.255.0"
  1735	        ],
  1736	        "group": "Identified Matching Entries"
  1737	      }
  1738	    ]
  1739	  }
  1740	} ]]
  1741	+ echo -en '|-----> Config Objects:\n{
  1742	  "config": {
  1743	    "site": "cisco",
  1744	    "device": "fw1.cfg",
  1745	    "objects": [
  1746	      {
  1747	        "object": "object-group",
  1748	        "type": "network BU1-NETWORK",
  1749	        "description": "false",
  1750	        "entries": [
  1751	          "network-object host 10.0.0.1",
  1752	          "network-object host 10.0.1.2",
  1753	          "network-object 192.168.1.0 255.255.255.0"
  1754	        ],
  1755	        "group": "Identified Matching Entries"
  1756	      }
  1757	    ]
  1758	  }
  1759	}'
  1760	|-----> Config Objects:
  1761	{
  1762	  "config": {
  1763	    "site": "cisco",
  1764	    "device": "fw1.cfg",
  1765	    "objects": [
  1766	      {
  1767	        "object": "object-group",
  1768	        "type": "network BU1-NETWORK",
  1769	        "description": "false",
  1770	        "entries": [
  1771	          "network-object host 10.0.0.1",
  1772	          "network-object host 10.0.1.2",
  1773	          "network-object 192.168.1.0 255.255.255.0"
  1774	        ],
  1775	        "group": "Identified Matching Entries"
  1776	      }
  1777	    ]
  1778	  }
  1779	}+ newline
  1780	+ local count=1
  1781	+ (( i = 0 ))
  1782	+ (( i < count ))
  1783	+ echo
  1784
  1785	+ (( i++ ))
  1786	+ (( i < count ))
  1787	+ print '{
  1788	  "config": {
  1789	    "site": "cisco",
  1790	    "device": "fw1.cfg",
  1791	    "objects": [
  1792	      {
  1793	        "object": "object-group",
  1794	        "type": "network BU1-NETWORK",
  1795	        "description": "false",
  1796	        "entries": [
  1797	          "network-object host 10.0.0.1",
  1798	          "network-object host 10.0.1.2",
  1799	          "network-object 192.168.1.0 255.255.255.0"
  1800	        ],
  1801	        "group": "Identified Matching Entries"
  1802	      }
  1803	    ]
  1804	  }
  1805	}'
  1806	+ [[ -n {
  1807	  "config": {
  1808	    "site": "cisco",
  1809	    "device": "fw1.cfg",
  1810	    "objects": [
  1811	      {
  1812	        "object": "object-group",
  1813	        "type": "network BU1-NETWORK",
  1814	        "description": "false",
  1815	        "entries": [
  1816	          "network-object host 10.0.0.1",
  1817	          "network-object host 10.0.1.2",
  1818	          "network-object 192.168.1.0 255.255.255.0"
  1819	        ],
  1820	        "group": "Identified Matching Entries"
  1821	      }
  1822	    ]
  1823	  }
  1824	} ]]
  1825	+ echo -en '{
  1826	  "config": {
  1827	    "site": "cisco",
  1828	    "device": "fw1.cfg",
  1829	    "objects": [
  1830	      {
  1831	        "object": "object-group",
  1832	        "type": "network BU1-NETWORK",
  1833	        "description": "false",
  1834	        "entries": [
  1835	          "network-object host 10.0.0.1",
  1836	          "network-object host 10.0.1.2",
  1837	          "network-object 192.168.1.0 255.255.255.0"
  1838	        ],
  1839	        "group": "Identified Matching Entries"
  1840	      }
  1841	    ]
  1842	  }
  1843	}'
  1844	+ [[ true == true ]]
  1845	+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1846	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  1847	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1848	+ [[ true == true ]]
  1849	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  1850	+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1851	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  1852	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1853	++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1854	+ local base=fragments.json
  1855	++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1856	+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  1857	+ [[ true == true ]]
  1858	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  1859	+ local format_common=
  1860	+ local format_os=
  1861	+ local format=
  1862	+ format_common+='File: fragments.json
  1863	'
  1864	+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  1865	'
  1866	++ uname
  1867	+ [[ Darwin == \D\a\r\w\i\n ]]
  1868	+ format_os+='Size: %z bytes
  1869	'
  1870	+ format_os+='Blocks/Inode: %b / %i
  1871	'
  1872	+ format_os+='Mode: %Sp
  1873	'
  1874	+ format_os+='UID/GID: %u / %g
  1875	'
  1876	+ format_os+='Access: %Sa
  1877	'
  1878	+ format_os+='Modify: %Sm
  1879	'
  1880	+ format_os+='Change: %Sc
  1881	'
  1882	+ format='File: fragments.json
  1883	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  1884	Size: %z bytes
  1885	Blocks/Inode: %b / %i
  1886	Mode: %Sp
  1887	UID/GID: %u / %g
  1888	Access: %Sa
  1889	Modify: %Sm
  1890	Change: %Sc
  1891	'
  1892	+ stat -f 'File: fragments.json
  1893	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  1894	Size: %z bytes
  1895	Blocks/Inode: %b / %i
  1896	Mode: %Sp
  1897	UID/GID: %u / %g
  1898	Access: %Sa
  1899	Modify: %Sm
  1900	Change: %Sc
  1901	' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1902	File: fragments.json
  1903	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  1904	Size: 427 bytes
  1905	Blocks/Inode: 8 / 236567253
  1906	Mode: -rw-r--r--
  1907	UID/GID: 501 / 20
  1908	Access: May 13 16:47:52 2025
  1909	Modify: May 13 16:47:52 2025
  1910	Change: May 13 16:47:52 2025
  1911	+ return 0
  1912	+ case "${target_file}" in
  1913	+ jq . /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  1914	{
  1915	  "config": {
  1916	    "site": "cisco",
  1917	    "device": "fw1.cfg",
  1918	    "objects": [
  1919	      {
  1920	        "object": "object-group",
  1921	        "type": "network BU1-NETWORK",
  1922	        "description": "false",
  1923	        "entries": [
  1924	          "network-object host 10.0.0.1",
  1925	          "network-object host 10.0.1.2",
  1926	          "network-object 192.168.1.0 255.255.255.0"
  1927	        ],
  1928	        "group": "Identified Matching Entries"
  1929	      }
  1930	    ]
  1931	  }
  1932	}
  1933	+ newline
  1934	+ local count=1
  1935	+ (( i = 0 ))
  1936	+ (( i < count ))
  1937	+ echo
  1938
  1939	+ (( i++ ))
  1940	+ (( i < count ))
  1941	+ return 0
  1942	+ for serialized_line in "${matched_objects[@]}"
  1943	+ [[ true == true ]]
  1944	+ message 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1945	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1946	+ local 'message=Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1947	+ print 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1948	+ [[ -n Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1949	+ echo -en 'Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1950	Serialized Line: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1951	+ local count=1
  1952	+ (( i = 0 ))
  1953	+ (( i < count ))
  1954	+ echo
  1955
  1956	+ (( i++ ))
  1957	+ (( i < count ))
  1958	++ perl -pe 's/MTc0NzE4MDA3MTkyNzU4MDAwMAo/\n/g'
  1959	+ restored_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1960	+ [[ true == true ]]
  1961	+ message 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1962	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1963	+ local 'message=Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1964	+ print 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1965	+ [[ -n Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1966	+ echo -en 'Restored Configuration:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1967	Restored Configuration:
  1968	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1969	+ local count=1
  1970	+ (( i = 0 ))
  1971	+ (( i < count ))
  1972	+ echo
  1973
  1974	+ (( i++ ))
  1975	+ (( i < count ))
  1976	+ process_configs 10.0.0.1 configs/cisco/fw1.cfg 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1977	+ local target_pattern=10.0.0.1
  1978	+ local config_path=configs/cisco/fw1.cfg
  1979	+ local 'restored_block=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1980	+ local cleaned_block
  1981	++ sed '/^[[:space:]]*$/d'
  1982	+ cleaned_block='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1983	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1984	+ [[ true == true ]]
  1985	+ message '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1986	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1987	+ local 'message=[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1988	+ print '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1989	+ [[ -n [process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  1990	+ echo -en '[process_configs] Raw Block:\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any'
  1991	[process_configs] Raw Block:
  1992	access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  1993	+ local count=1
  1994	+ (( i = 0 ))
  1995	+ (( i < count ))
  1996	+ echo
  1997
  1998	+ (( i++ ))
  1999	+ (( i < count ))
  2000	+ local object_line
  2001	++ head -n 1
  2002	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2003	+ object_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2004	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2005	+ local object_keyword type_value
  2006	++ awk '{print $1}'
  2007	+ object_keyword=access-list
  2008	++ awk '{$1=""; print substr($0,2)}'
  2009	+ type_value='OUTSIDE extended permit ip host 10.0.0.1 any'
  2010	+ [[ true == true ]]
  2011	+ print '[process_configs] object   : access-list'
  2012	+ [[ -n [process_configs] object   : access-list ]]
  2013	+ echo -en '[process_configs] object   : access-list'
  2014	[process_configs] object   : access-list+ print '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  2015	+ [[ -n [process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2016	+ echo -en '[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any'
  2017	[process_configs] type     : OUTSIDE extended permit ip host 10.0.0.1 any+ entries=()
  2018	+ local -a entries
  2019	+ IFS=
  2020	+ read -r line
  2021	+ local trimmed
  2022	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2023	+ trimmed='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2024	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2025	+ [[ access-list outside extended permit ip host 10.0.0.1 any =~ ^description[[:space:]] ]]
  2026	+ entries+=("${trimmed}")
  2027	+ IFS=
  2028	+ read -r line
  2029	+ ((  1 > 1  ))
  2030	+ [[ true == true ]]
  2031	+ message '[process_configs] Entries:'
  2032	+ [[ -n [process_configs] Entries: ]]
  2033	+ local 'message=[process_configs] Entries:'
  2034	+ print '[process_configs] Entries:'
  2035	+ [[ -n [process_configs] Entries: ]]
  2036	+ echo -en '[process_configs] Entries:'
  2037	[process_configs] Entries:+ newline
  2038	+ local count=1
  2039	+ (( i = 0 ))
  2040	+ (( i < count ))
  2041	+ echo
  2042
  2043	+ (( i++ ))
  2044	+ (( i < count ))
  2045	+ for e in "${entries[@]}"
  2046	+ print '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2047	+ [[ -n   - access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2048	+ echo -en '  - access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2049	  - access-list OUTSIDE extended permit ip host 10.0.0.1 any+ local matched_line
  2050	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  2051	++ head -n 1
  2052	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  2053	+ matched_line='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2054	+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2055	+ [[ true == true ]]
  2056	+ message '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2057	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2058	+ local 'message=[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2059	+ print '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2060	+ [[ -n [process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
  2061	+ echo -en '[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2062	[process_configs] Matched: access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
  2063	+ local count=1
  2064	+ (( i = 0 ))
  2065	+ (( i < count ))
  2066	+ echo
  2067
  2068	+ (( i++ ))
  2069	+ (( i < count ))
  2070	+ local desc_val=false
  2071	+ [[ -z false ]]
  2072	+ [[ true == true ]]
  2073	+ message '[process_configs] Description: false'
  2074	+ [[ -n [process_configs] Description: false ]]
  2075	+ local 'message=[process_configs] Description: false'
  2076	+ print '[process_configs] Description: false'
  2077	+ [[ -n [process_configs] Description: false ]]
  2078	+ echo -en '[process_configs] Description: false'
  2079	[process_configs] Description: false+ newline
  2080	+ local count=1
  2081	+ (( i = 0 ))
  2082	+ (( i < count ))
  2083	+ echo
  2084
  2085	+ (( i++ ))
  2086	+ (( i < count ))
  2087	+ local group_val=Unclassified
  2088	+ [[ true == true ]]
  2089	+ local object_key
  2090	++ awk '{print $NF}'
  2091	++ sed -E 's/[[:punct:]]*$//'
  2092	+ object_key=any
  2093	++ jq -r --arg key any 'map(select(.match[]? | contains($key))) | .[0].group'
  2094	+ group_val=null
  2095	+ [[ -z null ]]
  2096	+ [[ null == \n\u\l\l ]]
  2097	++ jq -r --arg desc false 'map(select(.match[]? == $desc)) | .[0].group'
  2098	+ group_val=null
  2099	+ [[ -z null ]]
  2100	+ [[ null == \n\u\l\l ]]
  2101	+ group_val=Unclassified
  2102	+ [[ true == true ]]
  2103	+ message '[process_configs] Group: Unclassified'
  2104	+ [[ -n [process_configs] Group: Unclassified ]]
  2105	+ local 'message=[process_configs] Group: Unclassified'
  2106	+ print '[process_configs] Group: Unclassified'
  2107	+ [[ -n [process_configs] Group: Unclassified ]]
  2108	+ echo -en '[process_configs] Group: Unclassified'
  2109	[process_configs] Group: Unclassified+ newline
  2110	+ local count=1
  2111	+ (( i = 0 ))
  2112	+ (( i < count ))
  2113	+ echo
  2114
  2115	+ (( i++ ))
  2116	+ (( i < count ))
  2117	++ printf '%s\n' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
  2118	++ jq -R .
  2119	++ jq -s .
  2120	+ local 'entries_2json=[
  2121	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2122	]'
  2123	+ [[ 1 -eq 1 ]]
  2124	++ jq -n --arg object access-list --arg description false --argjson entries '[
  2125	  "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2126	]' --arg group Unclassified '{
  2127	                  object: $object,
  2128	                  type: false,
  2129	                  description: ($description | select(. != "" and . != "null") // false),
  2130	                  entries: $entries,
  2131	                  group: $group
  2132	                }'
  2133	+ target_object='{
  2134	  "object": "access-list",
  2135	  "type": false,
  2136	  "description": "false",
  2137	  "entries": [
  2138	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2139	  ],
  2140	  "group": "Unclassified"
  2141	}'
  2142	+ export target_object
  2143	+ [[ true == true ]]
  2144	+ message '[process_configs] JSON Object (output):'
  2145	+ [[ -n [process_configs] JSON Object (output): ]]
  2146	+ local 'message=[process_configs] JSON Object (output):'
  2147	+ print '[process_configs] JSON Object (output):'
  2148	+ [[ -n [process_configs] JSON Object (output): ]]
  2149	+ echo -en '[process_configs] JSON Object (output):'
  2150	[process_configs] JSON Object (output):+ newline
  2151	+ local count=1
  2152	+ (( i = 0 ))
  2153	+ (( i < count ))
  2154	+ echo
  2155
  2156	+ (( i++ ))
  2157	+ (( i < count ))
  2158	+ print '{
  2159	  "object": "access-list",
  2160	  "type": false,
  2161	  "description": "false",
  2162	  "entries": [
  2163	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2164	  ],
  2165	  "group": "Unclassified"
  2166	}'
  2167	+ [[ -n {
  2168	  "object": "access-list",
  2169	  "type": false,
  2170	  "description": "false",
  2171	  "entries": [
  2172	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2173	  ],
  2174	  "group": "Unclassified"
  2175	} ]]
  2176	+ echo -en '{
  2177	  "object": "access-list",
  2178	  "type": false,
  2179	  "description": "false",
  2180	  "entries": [
  2181	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2182	+ jq .
  2183	  ],
  2184	  "group": "Unclassified"
  2185	}'
  2186	{
  2187	  "object": "access-list",
  2188	  "type": false,
  2189	  "description": "false",
  2190	  "entries": [
  2191	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2192	  ],
  2193	  "group": "Unclassified"
  2194	}
  2195	+ newline
  2196	+ local count=1
  2197	+ (( i = 0 ))
  2198	+ (( i < count ))
  2199	+ echo
  2200
  2201	+ (( i++ ))
  2202	+ (( i < count ))
  2203	+ return 0
  2204	+ [[ -n {
  2205	  "object": "access-list",
  2206	  "type": false,
  2207	  "description": "false",
  2208	  "entries": [
  2209	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2210	  ],
  2211	  "group": "Unclassified"
  2212	} ]]
  2213	+ [[ true == true ]]
  2214	+ message '|-----> Target Objects: {
  2215	  "object": "access-list",
  2216	  "type": false,
  2217	  "description": "false",
  2218	  "entries": [
  2219	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2220	  ],
  2221	  "group": "Unclassified"
  2222	}'
  2223	+ [[ -n |-----> Target Objects: {
  2224	  "object": "access-list",
  2225	  "type": false,
  2226	  "description": "false",
  2227	  "entries": [
  2228	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2229	  ],
  2230	  "group": "Unclassified"
  2231	} ]]
  2232	+ local 'message=|-----> Target Objects: {
  2233	  "object": "access-list",
  2234	  "type": false,
  2235	  "description": "false",
  2236	  "entries": [
  2237	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2238	  ],
  2239	  "group": "Unclassified"
  2240	}'
  2241	+ print '|-----> Target Objects: {
  2242	  "object": "access-list",
  2243	  "type": false,
  2244	  "description": "false",
  2245	  "entries": [
  2246	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2247	  ],
  2248	  "group": "Unclassified"
  2249	}'
  2250	+ [[ -n |-----> Target Objects: {
  2251	  "object": "access-list",
  2252	  "type": false,
  2253	  "description": "false",
  2254	  "entries": [
  2255	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2256	  ],
  2257	  "group": "Unclassified"
  2258	} ]]
  2259	+ echo -en '|-----> Target Objects: {
  2260	  "object": "access-list",
  2261	  "type": false,
  2262	  "description": "false",
  2263	  "entries": [
  2264	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2265	  ],
  2266	  "group": "Unclassified"
  2267	}'
  2268	|-----> Target Objects: {
  2269	  "object": "access-list",
  2270	  "type": false,
  2271	  "description": "false",
  2272	  "entries": [
  2273	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2274	  ],
  2275	  "group": "Unclassified"
  2276	}+ newline
  2277	+ local count=1
  2278	+ (( i = 0 ))
  2279	+ (( i < count ))
  2280	+ echo
  2281
  2282	+ (( i++ ))
  2283	+ (( i < count ))
  2284	+ [[ -n {
  2285	  "object": "access-list",
  2286	  "type": false,
  2287	  "description": "false",
  2288	  "entries": [
  2289	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2290	  ],
  2291	  "group": "Unclassified"
  2292	} ]]
  2293	++ printf '%s\n' '{
  2294	  "object": "access-list",
  2295	  "type": false,
  2296	  "description": "false",
  2297	  "entries": [
  2298	    "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2299	  ],
  2300	  "group": "Unclassified"
  2301	}'
  2302	++ jq -s --arg site configs/cisco --arg device fw1.cfg '{
  2303	              config: {
  2304	                site: ($site | gsub("^.*/"; "")),
  2305	                device: $device,
  2306	                objects: .
  2307	              }
  2308	            }'
  2309	+ wrapped_block='{
  2310	  "config": {
  2311	    "site": "cisco",
  2312	    "device": "fw1.cfg",
  2313	    "objects": [
  2314	      {
  2315	        "object": "access-list",
  2316	        "type": false,
  2317	        "description": "false",
  2318	        "entries": [
  2319	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2320	        ],
  2321	        "group": "Unclassified"
  2322	      }
  2323	    ]
  2324	  }
  2325	}'
  2326	+ [[ true == true ]]
  2327	+ message '|-----> Config Objects:\n{
  2328	  "config": {
  2329	    "site": "cisco",
  2330	    "device": "fw1.cfg",
  2331	    "objects": [
  2332	      {
  2333	        "object": "access-list",
  2334	        "type": false,
  2335	        "description": "false",
  2336	        "entries": [
  2337	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2338	        ],
  2339	        "group": "Unclassified"
  2340	      }
  2341	    ]
  2342	  }
  2343	}'
  2344	+ [[ -n |-----> Config Objects:\n{
  2345	  "config": {
  2346	    "site": "cisco",
  2347	    "device": "fw1.cfg",
  2348	    "objects": [
  2349	      {
  2350	        "object": "access-list",
  2351	        "type": false,
  2352	        "description": "false",
  2353	        "entries": [
  2354	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2355	        ],
  2356	        "group": "Unclassified"
  2357	      }
  2358	    ]
  2359	  }
  2360	} ]]
  2361	+ local 'message=|-----> Config Objects:\n{
  2362	  "config": {
  2363	    "site": "cisco",
  2364	    "device": "fw1.cfg",
  2365	    "objects": [
  2366	      {
  2367	        "object": "access-list",
  2368	        "type": false,
  2369	        "description": "false",
  2370	        "entries": [
  2371	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2372	        ],
  2373	        "group": "Unclassified"
  2374	      }
  2375	    ]
  2376	  }
  2377	}'
  2378	+ print '|-----> Config Objects:\n{
  2379	  "config": {
  2380	    "site": "cisco",
  2381	    "device": "fw1.cfg",
  2382	    "objects": [
  2383	      {
  2384	        "object": "access-list",
  2385	        "type": false,
  2386	        "description": "false",
  2387	        "entries": [
  2388	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2389	        ],
  2390	        "group": "Unclassified"
  2391	      }
  2392	    ]
  2393	  }
  2394	}'
  2395	+ [[ -n |-----> Config Objects:\n{
  2396	  "config": {
  2397	    "site": "cisco",
  2398	    "device": "fw1.cfg",
  2399	    "objects": [
  2400	      {
  2401	        "object": "access-list",
  2402	        "type": false,
  2403	        "description": "false",
  2404	        "entries": [
  2405	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2406	        ],
  2407	        "group": "Unclassified"
  2408	      }
  2409	    ]
  2410	  }
  2411	} ]]
  2412	+ echo -en '|-----> Config Objects:\n{
  2413	  "config": {
  2414	    "site": "cisco",
  2415	    "device": "fw1.cfg",
  2416	    "objects": [
  2417	      {
  2418	        "object": "access-list",
  2419	        "type": false,
  2420	        "description": "false",
  2421	        "entries": [
  2422	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2423	        ],
  2424	        "group": "Unclassified"
  2425	      }
  2426	    ]
  2427	  }
  2428	}'
  2429	|-----> Config Objects:
  2430	{
  2431	  "config": {
  2432	    "site": "cisco",
  2433	    "device": "fw1.cfg",
  2434	    "objects": [
  2435	      {
  2436	        "object": "access-list",
  2437	        "type": false,
  2438	        "description": "false",
  2439	        "entries": [
  2440	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2441	        ],
  2442	        "group": "Unclassified"
  2443	      }
  2444	    ]
  2445	  }
  2446	}+ newline
  2447	+ local count=1
  2448	+ (( i = 0 ))
  2449	+ (( i < count ))
  2450	+ echo
  2451
  2452	+ (( i++ ))
  2453	+ (( i < count ))
  2454	+ print '{
  2455	  "config": {
  2456	    "site": "cisco",
  2457	    "device": "fw1.cfg",
  2458	    "objects": [
  2459	      {
  2460	        "object": "access-list",
  2461	        "type": false,
  2462	        "description": "false",
  2463	        "entries": [
  2464	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2465	        ],
  2466	        "group": "Unclassified"
  2467	      }
  2468	    ]
  2469	  }
  2470	}'
  2471	+ [[ -n {
  2472	  "config": {
  2473	    "site": "cisco",
  2474	    "device": "fw1.cfg",
  2475	    "objects": [
  2476	      {
  2477	        "object": "access-list",
  2478	        "type": false,
  2479	        "description": "false",
  2480	        "entries": [
  2481	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2482	        ],
  2483	        "group": "Unclassified"
  2484	      }
  2485	    ]
  2486	  }
  2487	} ]]
  2488	+ echo -en '{
  2489	  "config": {
  2490	    "site": "cisco",
  2491	    "device": "fw1.cfg",
  2492	    "objects": [
  2493	      {
  2494	        "object": "access-list",
  2495	        "type": false,
  2496	        "description": "false",
  2497	        "entries": [
  2498	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2499	        ],
  2500	        "group": "Unclassified"
  2501	      }
  2502	    ]
  2503	  }
  2504	}'
  2505	+ [[ true == true ]]
  2506	+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2507	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  2508	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2509	+ [[ true == true ]]
  2510	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  2511	+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2512	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  2513	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2514	++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2515	+ local base=fragments.json
  2516	++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2517	+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  2518	+ [[ true == true ]]
  2519	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  2520	+ local format_common=
  2521	+ local format_os=
  2522	+ local format=
  2523	+ format_common+='File: fragments.json
  2524	'
  2525	+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  2526	'
  2527	++ uname
  2528	+ [[ Darwin == \D\a\r\w\i\n ]]
  2529	+ format_os+='Size: %z bytes
  2530	'
  2531	+ format_os+='Blocks/Inode: %b / %i
  2532	'
  2533	+ format_os+='Mode: %Sp
  2534	'
  2535	+ format_os+='UID/GID: %u / %g
  2536	'
  2537	+ format_os+='Access: %Sa
  2538	'
  2539	+ format_os+='Modify: %Sm
  2540	'
  2541	+ format_os+='Change: %Sc
  2542	'
  2543	+ format='File: fragments.json
  2544	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  2545	Size: %z bytes
  2546	Blocks/Inode: %b / %i
  2547	Mode: %Sp
  2548	UID/GID: %u / %g
  2549	Access: %Sa
  2550	Modify: %Sm
  2551	Change: %Sc
  2552	'
  2553	+ stat -f 'File: fragments.json
  2554	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  2555	Size: %z bytes
  2556	Blocks/Inode: %b / %i
  2557	Mode: %Sp
  2558	UID/GID: %u / %g
  2559	Access: %Sa
  2560	Modify: %Sm
  2561	Change: %Sc
  2562	' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2563	File: fragments.json
  2564	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  2565	Size: 754 bytes
  2566	Blocks/Inode: 8 / 236567253
  2567	Mode: -rw-r--r--
  2568	UID/GID: 501 / 20
  2569	Access: May 13 16:47:52 2025
  2570	Modify: May 13 16:47:52 2025
  2571	Change: May 13 16:47:52 2025
  2572	+ return 0
  2573	+ case "${target_file}" in
  2574	+ jq . /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2575	{
  2576	  "config": {
  2577	    "site": "cisco",
  2578	    "device": "fw1.cfg",
  2579	    "objects": [
  2580	      {
  2581	        "object": "object-group",
  2582	        "type": "network BU1-NETWORK",
  2583	        "description": "false",
  2584	        "entries": [
  2585	          "network-object host 10.0.0.1",
  2586	          "network-object host 10.0.1.2",
  2587	          "network-object 192.168.1.0 255.255.255.0"
  2588	        ],
  2589	        "group": "Identified Matching Entries"
  2590	      }
  2591	    ]
  2592	  }
  2593	}
  2594	{
  2595	  "config": {
  2596	    "site": "cisco",
  2597	    "device": "fw1.cfg",
  2598	    "objects": [
  2599	      {
  2600	        "object": "access-list",
  2601	        "type": false,
  2602	        "description": "false",
  2603	        "entries": [
  2604	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  2605	        ],
  2606	        "group": "Unclassified"
  2607	      }
  2608	    ]
  2609	  }
  2610	}
  2611	+ newline
  2612	+ local count=1
  2613	+ (( i = 0 ))
  2614	+ (( i < count ))
  2615	+ echo
  2616
  2617	+ (( i++ ))
  2618	+ (( i < count ))
  2619	+ return 0
  2620	+ return 0
  2621	+ for cfg_file in "${source_configs[@]}"
  2622	+ extract_configs configs/misc/switch.conf 10.0.0.1 targets/10.0.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2623	+ local config_file=configs/misc/switch.conf
  2624	+ local target_pattern=10.0.0.1
  2625	+ local target_listing=targets/10.0.0.1.json
  2626	+ local json_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  2627	+ [[ ! -f configs/misc/switch.conf ]]
  2628	+ message '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2629	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2630	+ local 'message=[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2631	+ print '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2632	+ [[ -n [DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf ]]
  2633	+ echo -en '[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf'
  2634	[DEBUG] Checking if config file exists and is readable: configs/misc/switch.conf+ newline
  2635	+ local count=1
  2636	+ (( i = 0 ))
  2637	+ (( i < count ))
  2638	+ echo
  2639
  2640	+ (( i++ ))
  2641	+ (( i < count ))
  2642	+ [[ ! -s configs/misc/switch.conf ]]
  2643	++ stat -c%s configs/misc/switch.conf
  2644	stat: illegal option -- c
  2645	usage: stat [-FLnq] [-f format | -l | -r | -s | -x] [-t timefmt] [file ...]
  2646	+ message '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2647	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2648	+ local 'message=[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2649	+ print '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2650	+ [[ -n [OK] File 'configs/misc/switch.conf' is readable and size is  bytes ]]
  2651	+ echo -en '[OK] File '\''configs/misc/switch.conf'\'' is readable and size is  bytes'
  2652	[OK] File 'configs/misc/switch.conf' is readable and size is  bytes+ newline
  2653	+ local count=1
  2654	+ (( i = 0 ))
  2655	+ (( i < count ))
  2656	+ echo
  2657
  2658	+ (( i++ ))
  2659	+ (( i < count ))
  2660	+ local 'imported_content=interface Vlan1
  2661	 ip address 172.31.255.254 255.255.255.0
  2662
  2663	interface Vlan2
  2664	 ip address 10.0.1.2 255.255.255.0
  2665
  2666	object-group network SOME-THING
  2667	  description Local Office Subnets
  2668	  network-object host 10.0.0.1
  2669	  network-object 192.168.12.0 255.255.255.0'
  2670	+ [[ true == true ]]
  2671	+ message 'Imported Content: interface Vlan1
  2672	 ip address 172.31.255.254 255.255.255.0
  2673
  2674	interface Vlan2
  2675	 ip address 10.0.1.2 255.255.255.0
  2676
  2677	object-group network SOME-THING
  2678	  description Local Office Subnets
  2679	  network-object host 10.0.0.1
  2680	  network-object 192.168.12.0 255.255.255.0'
  2681	+ [[ -n Imported Content: interface Vlan1
  2682	 ip address 172.31.255.254 255.255.255.0
  2683
  2684	interface Vlan2
  2685	 ip address 10.0.1.2 255.255.255.0
  2686
  2687	object-group network SOME-THING
  2688	  description Local Office Subnets
  2689	  network-object host 10.0.0.1
  2690	  network-object 192.168.12.0 255.255.255.0 ]]
  2691	+ local 'message=Imported Content: interface Vlan1
  2692	 ip address 172.31.255.254 255.255.255.0
  2693
  2694	interface Vlan2
  2695	 ip address 10.0.1.2 255.255.255.0
  2696
  2697	object-group network SOME-THING
  2698	  description Local Office Subnets
  2699	  network-object host 10.0.0.1
  2700	  network-object 192.168.12.0 255.255.255.0'
  2701	+ print 'Imported Content: interface Vlan1
  2702	 ip address 172.31.255.254 255.255.255.0
  2703
  2704	interface Vlan2
  2705	 ip address 10.0.1.2 255.255.255.0
  2706
  2707	object-group network SOME-THING
  2708	  description Local Office Subnets
  2709	  network-object host 10.0.0.1
  2710	  network-object 192.168.12.0 255.255.255.0'
  2711	+ [[ -n Imported Content: interface Vlan1
  2712	 ip address 172.31.255.254 255.255.255.0
  2713
  2714	interface Vlan2
  2715	 ip address 10.0.1.2 255.255.255.0
  2716
  2717	object-group network SOME-THING
  2718	  description Local Office Subnets
  2719	  network-object host 10.0.0.1
  2720	  network-object 192.168.12.0 255.255.255.0 ]]
  2721	+ echo -en 'Imported Content: interface Vlan1
  2722	 ip address 172.31.255.254 255.255.255.0
  2723
  2724	interface Vlan2
  2725	 ip address 10.0.1.2 255.255.255.0
  2726
  2727	object-group network SOME-THING
  2728	  description Local Office Subnets
  2729	  network-object host 10.0.0.1
  2730	  network-object 192.168.12.0 255.255.255.0'
  2731	Imported Content: interface Vlan1
  2732	 ip address 172.31.255.254 255.255.255.0
  2733
  2734	interface Vlan2
  2735	 ip address 10.0.1.2 255.255.255.0
  2736
  2737	object-group network SOME-THING
  2738	  description Local Office Subnets
  2739	  network-object host 10.0.0.1
  2740	  network-object 192.168.12.0 255.255.255.0+ newline
  2741	+ local count=1
  2742	+ (( i = 0 ))
  2743	+ (( i < count ))
  2744	+ echo
  2745
  2746	+ (( i++ ))
  2747	+ (( i < count ))
  2748	++ sed '/^\s*$/d;/^\s*!.*$/d'
  2749	+ local 'sanitized_content=interface Vlan1
  2750	 ip address 172.31.255.254 255.255.255.0
  2751	interface Vlan2
  2752	 ip address 10.0.1.2 255.255.255.0
  2753	object-group network SOME-THING
  2754	  description Local Office Subnets
  2755	  network-object host 10.0.0.1
  2756	  network-object 192.168.12.0 255.255.255.0'
  2757	+ [[ true == true ]]
  2758	+ message 'Sanitized Content: interface Vlan1
  2759	 ip address 172.31.255.254 255.255.255.0
  2760	interface Vlan2
  2761	 ip address 10.0.1.2 255.255.255.0
  2762	object-group network SOME-THING
  2763	  description Local Office Subnets
  2764	  network-object host 10.0.0.1
  2765	  network-object 192.168.12.0 255.255.255.0'
  2766	+ [[ -n Sanitized Content: interface Vlan1
  2767	 ip address 172.31.255.254 255.255.255.0
  2768	interface Vlan2
  2769	 ip address 10.0.1.2 255.255.255.0
  2770	object-group network SOME-THING
  2771	  description Local Office Subnets
  2772	  network-object host 10.0.0.1
  2773	  network-object 192.168.12.0 255.255.255.0 ]]
  2774	+ local 'message=Sanitized Content: interface Vlan1
  2775	 ip address 172.31.255.254 255.255.255.0
  2776	interface Vlan2
  2777	 ip address 10.0.1.2 255.255.255.0
  2778	object-group network SOME-THING
  2779	  description Local Office Subnets
  2780	  network-object host 10.0.0.1
  2781	  network-object 192.168.12.0 255.255.255.0'
  2782	+ print 'Sanitized Content: interface Vlan1
  2783	 ip address 172.31.255.254 255.255.255.0
  2784	interface Vlan2
  2785	 ip address 10.0.1.2 255.255.255.0
  2786	object-group network SOME-THING
  2787	  description Local Office Subnets
  2788	  network-object host 10.0.0.1
  2789	  network-object 192.168.12.0 255.255.255.0'
  2790	+ [[ -n Sanitized Content: interface Vlan1
  2791	 ip address 172.31.255.254 255.255.255.0
  2792	interface Vlan2
  2793	 ip address 10.0.1.2 255.255.255.0
  2794	object-group network SOME-THING
  2795	  description Local Office Subnets
  2796	  network-object host 10.0.0.1
  2797	  network-object 192.168.12.0 255.255.255.0 ]]
  2798	+ echo -en 'Sanitized Content: interface Vlan1
  2799	 ip address 172.31.255.254 255.255.255.0
  2800	interface Vlan2
  2801	 ip address 10.0.1.2 255.255.255.0
  2802	object-group network SOME-THING
  2803	  description Local Office Subnets
  2804	  network-object host 10.0.0.1
  2805	  network-object 192.168.12.0 255.255.255.0'
  2806	Sanitized Content: interface Vlan1
  2807	 ip address 172.31.255.254 255.255.255.0
  2808	interface Vlan2
  2809	 ip address 10.0.1.2 255.255.255.0
  2810	object-group network SOME-THING
  2811	  description Local Office Subnets
  2812	  network-object host 10.0.0.1
  2813	  network-object 192.168.12.0 255.255.255.0+ newline
  2814	+ local count=1
  2815	+ (( i = 0 ))
  2816	+ (( i < count ))
  2817	+ echo
  2818
  2819	+ (( i++ ))
  2820	+ (( i < count ))
  2821	++ perl -pe 's/\n/MTc0NzE4MDA3MTkyNzU4MDAwMAo/g'
  2822	+ local 'serialized_objects=interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2823	+ [[ true == true ]]
  2824	+ message 'Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2825	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  2826	+ local 'message=Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2827	+ print 'Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2828	+ [[ -n Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  2829	+ echo -en 'Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2830	Serialized Objects: interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAointerface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAoobject-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo+ newline
  2831	+ local count=1
  2832	+ (( i = 0 ))
  2833	+ (( i < count ))
  2834	+ echo
  2835
  2836	+ (( i++ ))
  2837	+ (( i < count ))
  2838	++ sed -E 's/MTc0NzE4MDA3MTkyNzU4MDAwMAo([^[:space:]])/\n\1/g'
  2839	+ local 'restored_lines=interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0
  2840	interface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0
  2841	object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2842	+ restored_lines+='
  2843	'
  2844	+ IFS='
  2845	'
  2846	+ read -r -d '' -a config_objects
  2847	++ printf '%s\0' 'interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0
  2848	interface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0
  2849	object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo
  2850	'
  2851	+ [[ true == true ]]
  2852	+ message 'Loaded 3 config blocks'
  2853	+ [[ -n Loaded 3 config blocks ]]
  2854	+ local 'message=Loaded 3 config blocks'
  2855	+ print 'Loaded 3 config blocks'
  2856	+ [[ -n Loaded 3 config blocks ]]
  2857	+ echo -en 'Loaded 3 config blocks'
  2858	Loaded 3 config blocks+ newline
  2859	+ local count=1
  2860	+ (( i = 0 ))
  2861	+ (( i < count ))
  2862	+ echo
  2863
  2864	+ (( i++ ))
  2865	+ (( i < count ))
  2866	+ oIFS='
  2867	'
  2868	+ IFS='
  2869	'
  2870	++ printf '%s\n' 'interface Vlan1MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 172.31.255.254 255.255.255.0' 'interface Vlan2MTc0NzE4MDA3MTkyNzU4MDAwMAo ip address 10.0.1.2 255.255.255.0' 'object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2871	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  2872	+ matched_objects=('object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo')
  2873	+ declare -a matched_objects
  2874	+ IFS='
  2875	'
  2876	+ [[ true == true ]]
  2877	+ message 'Loaded 1 config blocks'
  2878	+ [[ -n Loaded 1 config blocks ]]
  2879	+ local 'message=Loaded 1 config blocks'
  2880	+ print 'Loaded 1 config blocks'
  2881	+ [[ -n Loaded 1 config blocks ]]
  2882	+ echo -en 'Loaded 1 config blocks'
  2883	Loaded 1 config blocks+ newline
  2884	+ local count=1
  2885	+ (( i = 0 ))
  2886	+ (( i < count ))
  2887	+ echo
  2888
  2889	+ (( i++ ))
  2890	+ (( i < count ))
  2891	+ restored_block=()
  2892	+ declare -a restored_block
  2893	+ for serialized_line in "${matched_objects[@]}"
  2894	+ [[ true == true ]]
  2895	+ message 'Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2896	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  2897	+ local 'message=Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2898	+ print 'Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2899	+ [[ -n Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo ]]
  2900	+ echo -en 'Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo'
  2901	Serialized Line: object-group network SOME-THINGMTc0NzE4MDA3MTkyNzU4MDAwMAo  description Local Office SubnetsMTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object host 10.0.0.1MTc0NzE4MDA3MTkyNzU4MDAwMAo  network-object 192.168.12.0 255.255.255.0MTc0NzE4MDA3MTkyNzU4MDAwMAo+ newline
  2902	+ local count=1
  2903	+ (( i = 0 ))
  2904	+ (( i < count ))
  2905	+ echo
  2906
  2907	+ (( i++ ))
  2908	+ (( i < count ))
  2909	++ perl -pe 's/MTc0NzE4MDA3MTkyNzU4MDAwMAo/\n/g'
  2910	+ restored_block='object-group network SOME-THING
  2911	  description Local Office Subnets
  2912	  network-object host 10.0.0.1
  2913	  network-object 192.168.12.0 255.255.255.0'
  2914	+ [[ true == true ]]
  2915	+ message 'Restored Configuration:\nobject-group network SOME-THING
  2916	  description Local Office Subnets
  2917	  network-object host 10.0.0.1
  2918	  network-object 192.168.12.0 255.255.255.0'
  2919	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2920	  description Local Office Subnets
  2921	  network-object host 10.0.0.1
  2922	  network-object 192.168.12.0 255.255.255.0 ]]
  2923	+ local 'message=Restored Configuration:\nobject-group network SOME-THING
  2924	  description Local Office Subnets
  2925	  network-object host 10.0.0.1
  2926	  network-object 192.168.12.0 255.255.255.0'
  2927	+ print 'Restored Configuration:\nobject-group network SOME-THING
  2928	  description Local Office Subnets
  2929	  network-object host 10.0.0.1
  2930	  network-object 192.168.12.0 255.255.255.0'
  2931	+ [[ -n Restored Configuration:\nobject-group network SOME-THING
  2932	  description Local Office Subnets
  2933	  network-object host 10.0.0.1
  2934	  network-object 192.168.12.0 255.255.255.0 ]]
  2935	+ echo -en 'Restored Configuration:\nobject-group network SOME-THING
  2936	  description Local Office Subnets
  2937	  network-object host 10.0.0.1
  2938	  network-object 192.168.12.0 255.255.255.0'
  2939	Restored Configuration:
  2940	object-group network SOME-THING
  2941	  description Local Office Subnets
  2942	  network-object host 10.0.0.1
  2943	  network-object 192.168.12.0 255.255.255.0+ newline
  2944	+ local count=1
  2945	+ (( i = 0 ))
  2946	+ (( i < count ))
  2947	+ echo
  2948
  2949	+ (( i++ ))
  2950	+ (( i < count ))
  2951	+ process_configs 10.0.0.1 configs/misc/switch.conf 'object-group network SOME-THING
  2952	  description Local Office Subnets
  2953	  network-object host 10.0.0.1
  2954	  network-object 192.168.12.0 255.255.255.0'
  2955	+ local target_pattern=10.0.0.1
  2956	+ local config_path=configs/misc/switch.conf
  2957	+ local 'restored_block=object-group network SOME-THING
  2958	  description Local Office Subnets
  2959	  network-object host 10.0.0.1
  2960	  network-object 192.168.12.0 255.255.255.0'
  2961	+ local cleaned_block
  2962	++ sed '/^[[:space:]]*$/d'
  2963	+ cleaned_block='object-group network SOME-THING
  2964	  description Local Office Subnets
  2965	  network-object host 10.0.0.1
  2966	  network-object 192.168.12.0 255.255.255.0'
  2967	+ [[ -z object-group network SOME-THING
  2968	  description Local Office Subnets
  2969	  network-object host 10.0.0.1
  2970	  network-object 192.168.12.0 255.255.255.0 ]]
  2971	+ [[ true == true ]]
  2972	+ message '[process_configs] Raw Block:\nobject-group network SOME-THING
  2973	  description Local Office Subnets
  2974	  network-object host 10.0.0.1
  2975	  network-object 192.168.12.0 255.255.255.0'
  2976	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2977	  description Local Office Subnets
  2978	  network-object host 10.0.0.1
  2979	  network-object 192.168.12.0 255.255.255.0 ]]
  2980	+ local 'message=[process_configs] Raw Block:\nobject-group network SOME-THING
  2981	  description Local Office Subnets
  2982	  network-object host 10.0.0.1
  2983	  network-object 192.168.12.0 255.255.255.0'
  2984	+ print '[process_configs] Raw Block:\nobject-group network SOME-THING
  2985	  description Local Office Subnets
  2986	  network-object host 10.0.0.1
  2987	  network-object 192.168.12.0 255.255.255.0'
  2988	+ [[ -n [process_configs] Raw Block:\nobject-group network SOME-THING
  2989	  description Local Office Subnets
  2990	  network-object host 10.0.0.1
  2991	  network-object 192.168.12.0 255.255.255.0 ]]
  2992	+ echo -en '[process_configs] Raw Block:\nobject-group network SOME-THING
  2993	  description Local Office Subnets
  2994	  network-object host 10.0.0.1
  2995	  network-object 192.168.12.0 255.255.255.0'
  2996	[process_configs] Raw Block:
  2997	object-group network SOME-THING
  2998	  description Local Office Subnets
  2999	  network-object host 10.0.0.1
  3000	  network-object 192.168.12.0 255.255.255.0+ newline
  3001	+ local count=1
  3002	+ (( i = 0 ))
  3003	+ (( i < count ))
  3004	+ echo
  3005
  3006	+ (( i++ ))
  3007	+ (( i < count ))
  3008	+ local object_line
  3009	++ head -n 1
  3010	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3011	+ object_line='object-group network SOME-THING'
  3012	+ [[ -z object-group network SOME-THING ]]
  3013	+ local object_keyword type_value
  3014	++ awk '{print $1}'
  3015	+ object_keyword=object-group
  3016	++ awk '{$1=""; print substr($0,2)}'
  3017	+ type_value='network SOME-THING'
  3018	+ [[ true == true ]]
  3019	+ print '[process_configs] object   : object-group'
  3020	+ [[ -n [process_configs] object   : object-group ]]
  3021	+ echo -en '[process_configs] object   : object-group'
  3022	[process_configs] object   : object-group+ print '[process_configs] type     : network SOME-THING'
  3023	+ [[ -n [process_configs] type     : network SOME-THING ]]
  3024	+ echo -en '[process_configs] type     : network SOME-THING'
  3025	[process_configs] type     : network SOME-THING+ entries=()
  3026	+ local -a entries
  3027	+ IFS=
  3028	+ read -r line
  3029	+ local trimmed
  3030	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3031	+ trimmed='object-group network SOME-THING'
  3032	+ [[ -z object-group network SOME-THING ]]
  3033	+ [[ object-group network some-thing =~ ^description[[:space:]] ]]
  3034	+ entries+=("${trimmed}")
  3035	+ IFS=
  3036	+ read -r line
  3037	+ local trimmed
  3038	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3039	+ trimmed='description Local Office Subnets'
  3040	+ [[ -z description Local Office Subnets ]]
  3041	+ [[ description local office subnets =~ ^description[[:space:]] ]]
  3042	+ continue
  3043	+ IFS=
  3044	+ read -r line
  3045	+ local trimmed
  3046	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3047	+ trimmed='network-object host 10.0.0.1'
  3048	+ [[ -z network-object host 10.0.0.1 ]]
  3049	+ [[ network-object host 10.0.0.1 =~ ^description[[:space:]] ]]
  3050	+ entries+=("${trimmed}")
  3051	+ IFS=
  3052	+ read -r line
  3053	+ local trimmed
  3054	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3055	+ trimmed='network-object 192.168.12.0 255.255.255.0'
  3056	+ [[ -z network-object 192.168.12.0 255.255.255.0 ]]
  3057	+ [[ network-object 192.168.12.0 255.255.255.0 =~ ^description[[:space:]] ]]
  3058	+ entries+=("${trimmed}")
  3059	+ IFS=
  3060	+ read -r line
  3061	+ ((  3 > 1  ))
  3062	+ entries=("${entries[@]:1}")
  3063	+ [[ true == true ]]
  3064	+ message '[process_configs] Entries:'
  3065	+ [[ -n [process_configs] Entries: ]]
  3066	+ local 'message=[process_configs] Entries:'
  3067	+ print '[process_configs] Entries:'
  3068	+ [[ -n [process_configs] Entries: ]]
  3069	+ echo -en '[process_configs] Entries:'
  3070	[process_configs] Entries:+ newline
  3071	+ local count=1
  3072	+ (( i = 0 ))
  3073	+ (( i < count ))
  3074	+ echo
  3075
  3076	+ (( i++ ))
  3077	+ (( i < count ))
  3078	+ for e in "${entries[@]}"
  3079	+ print '  - network-object host 10.0.0.1'
  3080	+ [[ -n   - network-object host 10.0.0.1 ]]
  3081	+ echo -en '  - network-object host 10.0.0.1'
  3082	  - network-object host 10.0.0.1+ for e in "${entries[@]}"
  3083	+ print '  - network-object 192.168.12.0 255.255.255.0'
  3084	+ [[ -n   - network-object 192.168.12.0 255.255.255.0 ]]
  3085	+ echo -en '  - network-object 192.168.12.0 255.255.255.0'
  3086	  - network-object 192.168.12.0 255.255.255.0+ local matched_line
  3087	++ grep -E '(^|[^0-9.])10\.0\.0\.1([^0-9.]|$)'
  3088	++ head -n 1
  3089	++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
  3090	+ matched_line='network-object host 10.0.0.1'
  3091	+ [[ -z network-object host 10.0.0.1 ]]
  3092	+ [[ true == true ]]
  3093	+ message '[process_configs] Matched: network-object host 10.0.0.1'
  3094	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  3095	+ local 'message=[process_configs] Matched: network-object host 10.0.0.1'
  3096	+ print '[process_configs] Matched: network-object host 10.0.0.1'
  3097	+ [[ -n [process_configs] Matched: network-object host 10.0.0.1 ]]
  3098	+ echo -en '[process_configs] Matched: network-object host 10.0.0.1'
  3099	[process_configs] Matched: network-object host 10.0.0.1+ newline
  3100	+ local count=1
  3101	+ (( i = 0 ))
  3102	+ (( i < count ))
  3103	+ echo
  3104
  3105	+ (( i++ ))
  3106	+ (( i < count ))
  3107	+ local desc_val=false
  3108	+ [[ -z false ]]
  3109	+ [[ true == true ]]
  3110	+ message '[process_configs] Description: false'
  3111	+ [[ -n [process_configs] Description: false ]]
  3112	+ local 'message=[process_configs] Description: false'
  3113	+ print '[process_configs] Description: false'
  3114	+ [[ -n [process_configs] Description: false ]]
  3115	+ echo -en '[process_configs] Description: false'
  3116	[process_configs] Description: false+ newline
  3117	+ local count=1
  3118	+ (( i = 0 ))
  3119	+ (( i < count ))
  3120	+ echo
  3121
  3122	+ (( i++ ))
  3123	+ (( i < count ))
  3124	+ local group_val=Unclassified
  3125	+ [[ true == true ]]
  3126	+ local object_key
  3127	++ awk '{print $NF}'
  3128	++ sed -E 's/[[:punct:]]*$//'
  3129	+ object_key=SOME-THING
  3130	++ jq -r --arg key SOME-THING 'map(select(.match[]? | contains($key))) | .[0].group'
  3131	+ group_val='Identified Matching Entries'
  3132	+ [[ -z Identified Matching Entries ]]
  3133	+ [[ Identified Matching Entries == \n\u\l\l ]]
  3134	+ [[ -z Identified Matching Entries ]]
  3135	+ [[ Identified Matching Entries == \n\u\l\l ]]
  3136	+ [[ true == true ]]
  3137	+ message '[process_configs] Group: Identified Matching Entries'
  3138	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  3139	+ local 'message=[process_configs] Group: Identified Matching Entries'
  3140	+ print '[process_configs] Group: Identified Matching Entries'
  3141	+ [[ -n [process_configs] Group: Identified Matching Entries ]]
  3142	+ echo -en '[process_configs] Group: Identified Matching Entries'
  3143	[process_configs] Group: Identified Matching Entries+ newline
  3144	+ local count=1
  3145	+ (( i = 0 ))
  3146	+ (( i < count ))
  3147	+ echo
  3148
  3149	+ (( i++ ))
  3150	+ (( i < count ))
  3151	++ printf '%s\n' 'network-object host 10.0.0.1' 'network-object 192.168.12.0 255.255.255.0'
  3152	++ jq -R .
  3153	++ jq -s .
  3154	+ local 'entries_2json=[
  3155	  "network-object host 10.0.0.1",
  3156	  "network-object 192.168.12.0 255.255.255.0"
  3157	]'
  3158	+ [[ 2 -eq 1 ]]
  3159	++ jq -n --arg object object-group --arg type 'network SOME-THING' --arg description false --argjson entries '[
  3160	  "network-object host 10.0.0.1",
  3161	  "network-object 192.168.12.0 255.255.255.0"
  3162	]' --arg group 'Identified Matching Entries' '{
  3163	                  object: $object,
  3164	                  type: $type,
  3165	                  description: ($description | select(. != "" and . != "null") // false),
  3166	                  entries: $entries,
  3167	                  group: $group
  3168	                }'
  3169	+ target_object='{
  3170	  "object": "object-group",
  3171	  "type": "network SOME-THING",
  3172	  "description": "false",
  3173	  "entries": [
  3174	    "network-object host 10.0.0.1",
  3175	    "network-object 192.168.12.0 255.255.255.0"
  3176	  ],
  3177	  "group": "Identified Matching Entries"
  3178	}'
  3179	+ export target_object
  3180	+ [[ true == true ]]
  3181	+ message '[process_configs] JSON Object (output):'
  3182	+ [[ -n [process_configs] JSON Object (output): ]]
  3183	+ local 'message=[process_configs] JSON Object (output):'
  3184	+ print '[process_configs] JSON Object (output):'
  3185	+ [[ -n [process_configs] JSON Object (output): ]]
  3186	+ echo -en '[process_configs] JSON Object (output):'
  3187	[process_configs] JSON Object (output):+ newline
  3188	+ local count=1
  3189	+ (( i = 0 ))
  3190	+ (( i < count ))
  3191	+ echo
  3192
  3193	+ (( i++ ))
  3194	+ (( i < count ))
  3195	+ print '{
  3196	  "object": "object-group",
  3197	  "type": "network SOME-THING",
  3198	  "description": "false",
  3199	  "entries": [
  3200	    "network-object host 10.0.0.1",
  3201	    "network-object 192.168.12.0 255.255.255.0"
  3202	  ],
  3203	  "group": "Identified Matching Entries"
  3204	}'
  3205	+ [[ -n {
  3206	  "object": "object-group",
  3207	  "type": "network SOME-THING",
  3208	  "description": "false",
  3209	  "entries": [
  3210	    "network-object host 10.0.0.1",
  3211	    "network-object 192.168.12.0 255.255.255.0"
  3212	+ jq .
  3213	  ],
  3214	  "group": "Identified Matching Entries"
  3215	} ]]
  3216	+ echo -en '{
  3217	  "object": "object-group",
  3218	  "type": "network SOME-THING",
  3219	  "description": "false",
  3220	  "entries": [
  3221	    "network-object host 10.0.0.1",
  3222	    "network-object 192.168.12.0 255.255.255.0"
  3223	  ],
  3224	  "group": "Identified Matching Entries"
  3225	}'
  3226	{
  3227	  "object": "object-group",
  3228	  "type": "network SOME-THING",
  3229	  "description": "false",
  3230	  "entries": [
  3231	    "network-object host 10.0.0.1",
  3232	    "network-object 192.168.12.0 255.255.255.0"
  3233	  ],
  3234	  "group": "Identified Matching Entries"
  3235	}
  3236	+ newline
  3237	+ local count=1
  3238	+ (( i = 0 ))
  3239	+ (( i < count ))
  3240	+ echo
  3241
  3242	+ (( i++ ))
  3243	+ (( i < count ))
  3244	+ return 0
  3245	+ [[ -n {
  3246	  "object": "object-group",
  3247	  "type": "network SOME-THING",
  3248	  "description": "false",
  3249	  "entries": [
  3250	    "network-object host 10.0.0.1",
  3251	    "network-object 192.168.12.0 255.255.255.0"
  3252	  ],
  3253	  "group": "Identified Matching Entries"
  3254	} ]]
  3255	+ [[ true == true ]]
  3256	+ message '|-----> Target Objects: {
  3257	  "object": "object-group",
  3258	  "type": "network SOME-THING",
  3259	  "description": "false",
  3260	  "entries": [
  3261	    "network-object host 10.0.0.1",
  3262	    "network-object 192.168.12.0 255.255.255.0"
  3263	  ],
  3264	  "group": "Identified Matching Entries"
  3265	}'
  3266	+ [[ -n |-----> Target Objects: {
  3267	  "object": "object-group",
  3268	  "type": "network SOME-THING",
  3269	  "description": "false",
  3270	  "entries": [
  3271	    "network-object host 10.0.0.1",
  3272	    "network-object 192.168.12.0 255.255.255.0"
  3273	  ],
  3274	  "group": "Identified Matching Entries"
  3275	} ]]
  3276	+ local 'message=|-----> Target Objects: {
  3277	  "object": "object-group",
  3278	  "type": "network SOME-THING",
  3279	  "description": "false",
  3280	  "entries": [
  3281	    "network-object host 10.0.0.1",
  3282	    "network-object 192.168.12.0 255.255.255.0"
  3283	  ],
  3284	  "group": "Identified Matching Entries"
  3285	}'
  3286	+ print '|-----> Target Objects: {
  3287	  "object": "object-group",
  3288	  "type": "network SOME-THING",
  3289	  "description": "false",
  3290	  "entries": [
  3291	    "network-object host 10.0.0.1",
  3292	    "network-object 192.168.12.0 255.255.255.0"
  3293	  ],
  3294	  "group": "Identified Matching Entries"
  3295	}'
  3296	+ [[ -n |-----> Target Objects: {
  3297	  "object": "object-group",
  3298	  "type": "network SOME-THING",
  3299	  "description": "false",
  3300	  "entries": [
  3301	    "network-object host 10.0.0.1",
  3302	    "network-object 192.168.12.0 255.255.255.0"
  3303	  ],
  3304	  "group": "Identified Matching Entries"
  3305	} ]]
  3306	+ echo -en '|-----> Target Objects: {
  3307	  "object": "object-group",
  3308	  "type": "network SOME-THING",
  3309	  "description": "false",
  3310	  "entries": [
  3311	    "network-object host 10.0.0.1",
  3312	    "network-object 192.168.12.0 255.255.255.0"
  3313	  ],
  3314	  "group": "Identified Matching Entries"
  3315	}'
  3316	|-----> Target Objects: {
  3317	  "object": "object-group",
  3318	  "type": "network SOME-THING",
  3319	  "description": "false",
  3320	  "entries": [
  3321	    "network-object host 10.0.0.1",
  3322	    "network-object 192.168.12.0 255.255.255.0"
  3323	  ],
  3324	  "group": "Identified Matching Entries"
  3325	}+ newline
  3326	+ local count=1
  3327	+ (( i = 0 ))
  3328	+ (( i < count ))
  3329	+ echo
  3330
  3331	+ (( i++ ))
  3332	+ (( i < count ))
  3333	+ [[ -n {
  3334	  "object": "object-group",
  3335	  "type": "network SOME-THING",
  3336	  "description": "false",
  3337	  "entries": [
  3338	    "network-object host 10.0.0.1",
  3339	    "network-object 192.168.12.0 255.255.255.0"
  3340	  ],
  3341	  "group": "Identified Matching Entries"
  3342	} ]]
  3343	++ printf '%s\n' '{
  3344	  "object": "object-group",
  3345	  "type": "network SOME-THING",
  3346	  "description": "false",
  3347	  "entries": [
  3348	    "network-object host 10.0.0.1",
  3349	    "network-object 192.168.12.0 255.255.255.0"
  3350	  ],
  3351	  "group": "Identified Matching Entries"
  3352	}'
  3353	++ jq -s --arg site configs/misc --arg device switch.conf '{
  3354	              config: {
  3355	                site: ($site | gsub("^.*/"; "")),
  3356	                device: $device,
  3357	                objects: .
  3358	              }
  3359	            }'
  3360	+ wrapped_block='{
  3361	  "config": {
  3362	    "site": "misc",
  3363	    "device": "switch.conf",
  3364	    "objects": [
  3365	      {
  3366	        "object": "object-group",
  3367	        "type": "network SOME-THING",
  3368	        "description": "false",
  3369	        "entries": [
  3370	          "network-object host 10.0.0.1",
  3371	          "network-object 192.168.12.0 255.255.255.0"
  3372	        ],
  3373	        "group": "Identified Matching Entries"
  3374	      }
  3375	    ]
  3376	  }
  3377	}'
  3378	+ [[ true == true ]]
  3379	+ message '|-----> Config Objects:\n{
  3380	  "config": {
  3381	    "site": "misc",
  3382	    "device": "switch.conf",
  3383	    "objects": [
  3384	      {
  3385	        "object": "object-group",
  3386	        "type": "network SOME-THING",
  3387	        "description": "false",
  3388	        "entries": [
  3389	          "network-object host 10.0.0.1",
  3390	          "network-object 192.168.12.0 255.255.255.0"
  3391	        ],
  3392	        "group": "Identified Matching Entries"
  3393	      }
  3394	    ]
  3395	  }
  3396	}'
  3397	+ [[ -n |-----> Config Objects:\n{
  3398	  "config": {
  3399	    "site": "misc",
  3400	    "device": "switch.conf",
  3401	    "objects": [
  3402	      {
  3403	        "object": "object-group",
  3404	        "type": "network SOME-THING",
  3405	        "description": "false",
  3406	        "entries": [
  3407	          "network-object host 10.0.0.1",
  3408	          "network-object 192.168.12.0 255.255.255.0"
  3409	        ],
  3410	        "group": "Identified Matching Entries"
  3411	      }
  3412	    ]
  3413	  }
  3414	} ]]
  3415	+ local 'message=|-----> Config Objects:\n{
  3416	  "config": {
  3417	    "site": "misc",
  3418	    "device": "switch.conf",
  3419	    "objects": [
  3420	      {
  3421	        "object": "object-group",
  3422	        "type": "network SOME-THING",
  3423	        "description": "false",
  3424	        "entries": [
  3425	          "network-object host 10.0.0.1",
  3426	          "network-object 192.168.12.0 255.255.255.0"
  3427	        ],
  3428	        "group": "Identified Matching Entries"
  3429	      }
  3430	    ]
  3431	  }
  3432	}'
  3433	+ print '|-----> Config Objects:\n{
  3434	  "config": {
  3435	    "site": "misc",
  3436	    "device": "switch.conf",
  3437	    "objects": [
  3438	      {
  3439	        "object": "object-group",
  3440	        "type": "network SOME-THING",
  3441	        "description": "false",
  3442	        "entries": [
  3443	          "network-object host 10.0.0.1",
  3444	          "network-object 192.168.12.0 255.255.255.0"
  3445	        ],
  3446	        "group": "Identified Matching Entries"
  3447	      }
  3448	    ]
  3449	  }
  3450	}'
  3451	+ [[ -n |-----> Config Objects:\n{
  3452	  "config": {
  3453	    "site": "misc",
  3454	    "device": "switch.conf",
  3455	    "objects": [
  3456	      {
  3457	        "object": "object-group",
  3458	        "type": "network SOME-THING",
  3459	        "description": "false",
  3460	        "entries": [
  3461	          "network-object host 10.0.0.1",
  3462	          "network-object 192.168.12.0 255.255.255.0"
  3463	        ],
  3464	        "group": "Identified Matching Entries"
  3465	      }
  3466	    ]
  3467	  }
  3468	} ]]
  3469	+ echo -en '|-----> Config Objects:\n{
  3470	  "config": {
  3471	    "site": "misc",
  3472	    "device": "switch.conf",
  3473	    "objects": [
  3474	      {
  3475	        "object": "object-group",
  3476	        "type": "network SOME-THING",
  3477	        "description": "false",
  3478	        "entries": [
  3479	          "network-object host 10.0.0.1",
  3480	          "network-object 192.168.12.0 255.255.255.0"
  3481	        ],
  3482	        "group": "Identified Matching Entries"
  3483	      }
  3484	    ]
  3485	  }
  3486	}'
  3487	|-----> Config Objects:
  3488	{
  3489	  "config": {
  3490	    "site": "misc",
  3491	    "device": "switch.conf",
  3492	    "objects": [
  3493	      {
  3494	        "object": "object-group",
  3495	        "type": "network SOME-THING",
  3496	        "description": "false",
  3497	        "entries": [
  3498	          "network-object host 10.0.0.1",
  3499	          "network-object 192.168.12.0 255.255.255.0"
  3500	        ],
  3501	        "group": "Identified Matching Entries"
  3502	      }
  3503	    ]
  3504	  }
  3505	}+ newline
  3506	+ local count=1
  3507	+ (( i = 0 ))
  3508	+ (( i < count ))
  3509	+ echo
  3510
  3511	+ (( i++ ))
  3512	+ (( i < count ))
  3513	+ print '{
  3514	  "config": {
  3515	    "site": "misc",
  3516	    "device": "switch.conf",
  3517	    "objects": [
  3518	      {
  3519	        "object": "object-group",
  3520	        "type": "network SOME-THING",
  3521	        "description": "false",
  3522	        "entries": [
  3523	          "network-object host 10.0.0.1",
  3524	          "network-object 192.168.12.0 255.255.255.0"
  3525	        ],
  3526	        "group": "Identified Matching Entries"
  3527	      }
  3528	    ]
  3529	  }
  3530	}'
  3531	+ [[ -n {
  3532	  "config": {
  3533	    "site": "misc",
  3534	    "device": "switch.conf",
  3535	    "objects": [
  3536	      {
  3537	        "object": "object-group",
  3538	        "type": "network SOME-THING",
  3539	        "description": "false",
  3540	        "entries": [
  3541	          "network-object host 10.0.0.1",
  3542	          "network-object 192.168.12.0 255.255.255.0"
  3543	        ],
  3544	        "group": "Identified Matching Entries"
  3545	      }
  3546	    ]
  3547	  }
  3548	} ]]
  3549	+ echo -en '{
  3550	  "config": {
  3551	    "site": "misc",
  3552	    "device": "switch.conf",
  3553	    "objects": [
  3554	      {
  3555	        "object": "object-group",
  3556	        "type": "network SOME-THING",
  3557	        "description": "false",
  3558	        "entries": [
  3559	          "network-object host 10.0.0.1",
  3560	          "network-object 192.168.12.0 255.255.255.0"
  3561	        ],
  3562	        "group": "Identified Matching Entries"
  3563	      }
  3564	    ]
  3565	  }
  3566	}'
  3567	+ [[ true == true ]]
  3568	+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3569	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  3570	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3571	+ [[ true == true ]]
  3572	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  3573	+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3574	+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  3575	+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3576	++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3577	+ local base=fragments.json
  3578	++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3579	+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  3580	+ [[ true == true ]]
  3581	+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  3582	+ local format_common=
  3583	+ local format_os=
  3584	+ local format=
  3585	+ format_common+='File: fragments.json
  3586	'
  3587	+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  3588	'
  3589	++ uname
  3590	+ [[ Darwin == \D\a\r\w\i\n ]]
  3591	+ format_os+='Size: %z bytes
  3592	'
  3593	+ format_os+='Blocks/Inode: %b / %i
  3594	'
  3595	+ format_os+='Mode: %Sp
  3596	'
  3597	+ format_os+='UID/GID: %u / %g
  3598	'
  3599	+ format_os+='Access: %Sa
  3600	'
  3601	+ format_os+='Modify: %Sm
  3602	'
  3603	+ format_os+='Change: %Sc
  3604	'
  3605	+ format='File: fragments.json
  3606	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  3607	Size: %z bytes
  3608	Blocks/Inode: %b / %i
  3609	Mode: %Sp
  3610	UID/GID: %u / %g
  3611	Access: %Sa
  3612	Modify: %Sm
  3613	Change: %Sc
  3614	'
  3615	+ stat -f 'File: fragments.json
  3616	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  3617	Size: %z bytes
  3618	Blocks/Inode: %b / %i
  3619	Mode: %Sp
  3620	UID/GID: %u / %g
  3621	Access: %Sa
  3622	Modify: %Sm
  3623	Change: %Sc
  3624	' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3625	File: fragments.json
  3626	Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe
  3627	Size: 1142 bytes
  3628	Blocks/Inode: 8 / 236567253
  3629	Mode: -rw-r--r--
  3630	UID/GID: 501 / 20
  3631	Access: May 13 16:47:52 2025
  3632	Modify: May 13 16:47:52 2025
  3633	Change: May 13 16:47:52 2025
  3634	+ return 0
  3635	+ case "${target_file}" in
  3636	+ jq . /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3637	{
  3638	  "config": {
  3639	    "site": "cisco",
  3640	    "device": "fw1.cfg",
  3641	    "objects": [
  3642	      {
  3643	        "object": "object-group",
  3644	        "type": "network BU1-NETWORK",
  3645	        "description": "false",
  3646	        "entries": [
  3647	          "network-object host 10.0.0.1",
  3648	          "network-object host 10.0.1.2",
  3649	          "network-object 192.168.1.0 255.255.255.0"
  3650	        ],
  3651	        "group": "Identified Matching Entries"
  3652	      }
  3653	    ]
  3654	  }
  3655	}
  3656	{
  3657	  "config": {
  3658	    "site": "cisco",
  3659	    "device": "fw1.cfg",
  3660	    "objects": [
  3661	      {
  3662	        "object": "access-list",
  3663	        "type": false,
  3664	        "description": "false",
  3665	        "entries": [
  3666	          "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  3667	        ],
  3668	        "group": "Unclassified"
  3669	      }
  3670	    ]
  3671	  }
  3672	}
  3673	{
  3674	  "config": {
  3675	    "site": "misc",
  3676	    "device": "switch.conf",
  3677	    "objects": [
  3678	      {
  3679	        "object": "object-group",
  3680	        "type": "network SOME-THING",
  3681	        "description": "false",
  3682	        "entries": [
  3683	          "network-object host 10.0.0.1",
  3684	          "network-object 192.168.12.0 255.255.255.0"
  3685	        ],
  3686	        "group": "Identified Matching Entries"
  3687	      }
  3688	    ]
  3689	  }
  3690	}
  3691	+ newline
  3692	+ local count=1
  3693	+ (( i = 0 ))
  3694	+ (( i < count ))
  3695	+ echo
  3696
  3697	+ (( i++ ))
  3698	+ (( i < count ))
  3699	+ return 0
  3700	+ return 0
  3701	+ export json_outfile=reports/json/10.0.0.1.json
  3702	+ json_outfile=reports/json/10.0.0.1.json
  3703	+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json ]]
  3704	+ jq -s --arg target 10.0.0.1 '{ target: $target, configs: . }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe/fragments.json
  3705	+ print_file reports/json/10.0.0.1.json
  3706	+ [[ -n reports/json/10.0.0.1.json ]]
  3707	+ local target_file=reports/json/10.0.0.1.json
  3708	+ [[ true == true ]]
  3709	+ [[ -f reports/json/10.0.0.1.json ]]
  3710	+ list_file reports/json/10.0.0.1.json
  3711	+ [[ -n reports/json/10.0.0.1.json ]]
  3712	+ local target_file=reports/json/10.0.0.1.json
  3713	++ basename reports/json/10.0.0.1.json
  3714	+ local base=10.0.0.1.json
  3715	++ dirname reports/json/10.0.0.1.json
  3716	+ local parent=reports/json
  3717	+ [[ true == true ]]
  3718	+ [[ -f reports/json/10.0.0.1.json ]]
  3719	+ local format_common=
  3720	+ local format_os=
  3721	+ local format=
  3722	+ format_common+='File: 10.0.0.1.json
  3723	'
  3724	+ format_common+='Parent: reports/json
  3725	'
  3726	++ uname
  3727	+ [[ Darwin == \D\a\r\w\i\n ]]
  3728	+ format_os+='Size: %z bytes
  3729	'
  3730	+ format_os+='Blocks/Inode: %b / %i
  3731	'
  3732	+ format_os+='Mode: %Sp
  3733	'
  3734	+ format_os+='UID/GID: %u / %g
  3735	'
  3736	+ format_os+='Access: %Sa
  3737	'
  3738	+ format_os+='Modify: %Sm
  3739	'
  3740	+ format_os+='Change: %Sc
  3741	'
  3742	+ format='File: 10.0.0.1.json
  3743	Parent: reports/json
  3744	Size: %z bytes
  3745	Blocks/Inode: %b / %i
  3746	Mode: %Sp
  3747	UID/GID: %u / %g
  3748	Access: %Sa
  3749	Modify: %Sm
  3750	Change: %Sc
  3751	'
  3752	+ stat -f 'File: 10.0.0.1.json
  3753	Parent: reports/json
  3754	Size: %z bytes
  3755	Blocks/Inode: %b / %i
  3756	Mode: %Sp
  3757	UID/GID: %u / %g
  3758	Access: %Sa
  3759	Modify: %Sm
  3760	Change: %Sc
  3761	' reports/json/10.0.0.1.json
  3762	File: 10.0.0.1.json
  3763	Parent: reports/json
  3764	Size: 1410 bytes
  3765	Blocks/Inode: 8 / 236567259
  3766	Mode: -rw-r--r--
  3767	UID/GID: 501 / 20
  3768	Access: May 13 16:47:52 2025
  3769	Modify: May 13 16:47:52 2025
  3770	Change: May 13 16:47:52 2025
  3771	+ return 0
  3772	+ case "${target_file}" in
  3773	+ jq . reports/json/10.0.0.1.json
  3774	{
  3775	  "target": "10.0.0.1",
  3776	  "configs": [
  3777	    {
  3778	      "config": {
  3779	        "site": "cisco",
  3780	        "device": "fw1.cfg",
  3781	        "objects": [
  3782	          {
  3783	            "object": "object-group",
  3784	            "type": "network BU1-NETWORK",
  3785	            "description": "false",
  3786	            "entries": [
  3787	              "network-object host 10.0.0.1",
  3788	              "network-object host 10.0.1.2",
  3789	              "network-object 192.168.1.0 255.255.255.0"
  3790	            ],
  3791	            "group": "Identified Matching Entries"
  3792	          }
  3793	        ]
  3794	      }
  3795	    },
  3796	    {
  3797	      "config": {
  3798	        "site": "cisco",
  3799	        "device": "fw1.cfg",
  3800	        "objects": [
  3801	          {
  3802	            "object": "access-list",
  3803	            "type": false,
  3804	            "description": "false",
  3805	            "entries": [
  3806	              "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
  3807	            ],
  3808	            "group": "Unclassified"
  3809	          }
  3810	        ]
  3811	      }
  3812	    },
  3813	    {
  3814	      "config": {
  3815	        "site": "misc",
  3816	        "device": "switch.conf",
  3817	        "objects": [
  3818	          {
  3819	            "object": "object-group",
  3820	            "type": "network SOME-THING",
  3821	            "description": "false",
  3822	            "entries": [
  3823	              "network-object host 10.0.0.1",
  3824	              "network-object 192.168.12.0 255.255.255.0"
  3825	            ],
  3826	            "group": "Identified Matching Entries"
  3827	          }
  3828	        ]
  3829	      }
  3830	    }
  3831	  ]
  3832	}
  3833	+ newline
  3834	+ local count=1
  3835	+ (( i = 0 ))
  3836	+ (( i < count ))
  3837	+ echo
  3838
  3839	+ (( i++ ))
  3840	+ (( i < count ))
  3841	+ return 0
  3842	+ return 0
  3843	+ unset verbose debug
  3844	+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe ]]
  3845	+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mxRkms5qxe

{
  "target": "10.0.0.1",
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg",
        "objects": [
          {
            "object": "object-group",
            "type": "network BU1-NETWORK",
            "description": "false",
            "entries": [
              "network-object host 10.0.0.1",
              "network-object host 10.0.1.2",
              "network-object 192.168.1.0 255.255.255.0"
            ],
            "group": "Identified Matching Entries"
          }
        ]
      }
    },
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg",
        "objects": [
          {
            "object": "access-list",
            "type": false,
            "description": "false",
            "entries": [
              "access-list OUTSIDE extended permit ip host 10.0.0.1 any"
            ],
            "group": "Unclassified"
          }
        ]
      }
    },
    {
      "config": {
        "site": "misc",
        "device": "switch.conf",
        "objects": [
          {
            "object": "object-group",
            "type": "network SOME-THING",
            "description": "false",
            "entries": [
              "network-object host 10.0.0.1",
              "network-object 192.168.12.0 255.255.255.0"
            ],
            "group": "Identified Matching Entries"
          }
        ]
      }
    }
  ]
}
