+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=.logs
++ logs_location=.logs
++ export targets_location=targets
++ targets_location=targets
+++ pwd
++ export actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ actions_logsfile=/Users/emvaldes/Documents/Projects/github/networking/network-resources/actions.output
++ export targets_logsfile=.logs/targets.jobs
++ targets_logsfile=.logs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODExMDEyMTgzMzcyOTAwMAo
++ divisor=MTc0ODExMDEyMTgzMzcyOTAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ :
+ rm -rf .cache
+ mkdir -p .cache/jobs .cache/targets
+ rm -rf .logs
+ mkdir -p .logs/errors .logs/jobs
+ rm -rf targets
+ mkdir -p targets
+ [[ -z '' ]]
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ [[ 8 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --logs --configs=configs --classify --ips-list=ips.list --sites=cisco,fortinet,misc --device=device.list
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ configs =~ ^(devices|d)$ ]]
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(interval|l)$ ]]
+ [[ configs =~ ^(ips-list|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(jobs|j)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(sites|s)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --sites=cisco,fortinet,misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ sites =~ ^(classify|g)$ ]]
+ [[ sites =~ ^(configs|c)$ ]]
+ [[ sites =~ ^(devices|d)$ ]]
+ [[ sites =~ ^(file-ext|x)$ ]]
+ [[ sites =~ ^(interval|l)$ ]]
+ [[ sites =~ ^(ips-list|i)$ ]]
+ [[ sites =~ ^(logs|o)$ ]]
+ [[ sites =~ ^(jobs|j)$ ]]
+ [[ sites =~ ^(matrix|m)$ ]]
+ [[ sites =~ ^(reports|r)$ ]]
+ [[ sites =~ ^(sites|s)$ ]]
+ export target_sites=cisco,fortinet,misc
+ target_sites=cisco,fortinet,misc
+ [[ sites =~ ^(validate|v)$ ]]
+ [[ sites == \h\e\l\p ]]
+ [[ sites == \d\e\b\u\g ]]
+ [[ sites == \d\r\y\-\r\u\n ]]
+ [[ sites == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --device=device.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ device =~ ^(classify|g)$ ]]
+ [[ device =~ ^(configs|c)$ ]]
+ [[ device =~ ^(devices|d)$ ]]
+ [[ device =~ ^(file-ext|x)$ ]]
+ [[ device =~ ^(interval|l)$ ]]
+ [[ device =~ ^(ips-list|i)$ ]]
+ [[ device =~ ^(logs|o)$ ]]
+ [[ device =~ ^(jobs|j)$ ]]
+ [[ device =~ ^(matrix|m)$ ]]
+ [[ device =~ ^(reports|r)$ ]]
+ [[ device =~ ^(sites|s)$ ]]
+ [[ device =~ ^(validate|v)$ ]]
+ [[ device == \h\e\l\p ]]
+ [[ device == \d\e\b\u\g ]]
+ [[ device == \d\r\y\-\r\u\n ]]
+ [[ device == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export delaying_factor=0.05
+ delaying_factor=0.05
+ [[ -z ips.list ]]
+ [[ -z '' ]]
+ export target_devices=false
+ target_devices=false
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z cisco,fortinet,misc ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-24 11:08:41'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n false ]]
+ [[ -f false ]]
+ [[ false =~ ^[0-9] ]]
+ message 'Project Target Devices-Listing file not found: false'
+ [[ -n Project Target Devices-Listing file not found: false ]]
+ local 'message=Project Target Devices-Listing file not found: false'
+ echo -e 'Project Target Devices-Listing file not found: false'
Project Target Devices-Listing file not found: false
+ return 0
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-24 11:08:41'
+ [[ -n [INFO] Date: 2025-05-24 11:08:41 ]]
+ local 'message=[INFO] Date: 2025-05-24 11:08:41'
+ echo -e '[INFO] Date: 2025-05-24 11:08:41'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ return 0
+ message '[INFO] PID: 18996'
+ [[ -n [INFO] PID: 18996 ]]
+ local 'message=[INFO] PID: 18996'
+ echo -e '[INFO] PID: 18996'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
+ return 0
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ return 0
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ return 0
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Logging Output Directory: .logs'
+ [[ -n [INFO] Logging Output Directory: .logs ]]
+ local 'message=[INFO] Logging Output Directory: .logs'
+ echo -e '[INFO] Logging Output Directory: .logs'
+ return 0
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message '[INFO] Classify Targets: true'
+ [[ -n [INFO] Classify Targets: true ]]
+ local 'message=[INFO] Classify Targets: true'
+ echo -e '[INFO] Classify Targets: true'
+ return 0
+ message '[INFO] Configurations Path: configs'
+ [[ -n [INFO] Configurations Path: configs ]]
+ local 'message=[INFO] Configurations Path: configs'
+ echo -e '[INFO] Configurations Path: configs'
+ return 0
+ message '[INFO] Filtering Devices: false'
+ [[ -n [INFO] Filtering Devices: false ]]
+ local 'message=[INFO] Filtering Devices: false'
+ echo -e '[INFO] Filtering Devices: false'
+ return 0
+ message '[INFO] File Extensions: cfg'
+ [[ -n [INFO] File Extensions: cfg ]]
+ local 'message=[INFO] File Extensions: cfg'
+ echo -e '[INFO] File Extensions: cfg'
+ return 0
+ message '[INFO] Delaying Factor: 0.05'
+ [[ -n [INFO] Delaying Factor: 0.05 ]]
+ local 'message=[INFO] Delaying Factor: 0.05'
+ echo -e '[INFO] Delaying Factor: 0.05'
+ return 0
+ message '[INFO] Target Addresses: ips.list'
+ [[ -n [INFO] Target Addresses: ips.list ]]
+ local 'message=[INFO] Target Addresses: ips.list'
+ echo -e '[INFO] Target Addresses: ips.list'
+ return 0
+ message '[INFO] Enable Logging: true'
+ [[ -n [INFO] Enable Logging: true ]]
+ local 'message=[INFO] Enable Logging: true'
+ echo -e '[INFO] Enable Logging: true'
+ return 0
+ message '[INFO] Parallelism Factor: 100'
+ [[ -n [INFO] Parallelism Factor: 100 ]]
+ local 'message=[INFO] Parallelism Factor: 100'
+ echo -e '[INFO] Parallelism Factor: 100'
+ return 0
+ message '[INFO] Matrix Filename: matrix.json'
+ [[ -n [INFO] Matrix Filename: matrix.json ]]
+ local 'message=[INFO] Matrix Filename: matrix.json'
+ echo -e '[INFO] Matrix Filename: matrix.json'
+ return 0
+ message '[INFO] Reports Folder: reports'
+ [[ -n [INFO] Reports Folder: reports ]]
+ local 'message=[INFO] Reports Folder: reports'
+ echo -e '[INFO] Reports Folder: reports'
+ return 0
+ message '[INFO] Target Locations: cisco,fortinet,misc'
+ [[ -n [INFO] Target Locations: cisco,fortinet,misc ]]
+ local 'message=[INFO] Target Locations: cisco,fortinet,misc'
+ echo -e '[INFO] Target Locations: cisco,fortinet,misc'
+ return 0
+ message '[INFO] Validate Address: false'
+ [[ -n [INFO] Validate Address: false ]]
+ local 'message=[INFO] Validate Address: false'
+ echo -e '[INFO] Validate Address: false'
+ return 0
+ message '[INFO] Debug: true'
+ [[ -n [INFO] Debug: true ]]
+ local 'message=[INFO] Debug: true'
+ echo -e '[INFO] Debug: true'
+ return 0
+ message '[INFO] Dry-Run: false'
+ [[ -n [INFO] Dry-Run: false ]]
+ local 'message=[INFO] Dry-Run: false'
+ echo -e '[INFO] Dry-Run: false'
+ return 0
+ message '[INFO] Verbose: true'
+ [[ -n [INFO] Verbose: true ]]
+ local 'message=[INFO] Verbose: true'
+ echo -e '[INFO] Verbose: true'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ message 'Target (false) (count): 0'
+ [[ -n Target (false) (count): 0 ]]
+ local 'message=Target (false) (count): 0'
+ echo -e 'Target (false) (count): 0'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local configs_list_cache=.cache/configs.list
+ [[ ! -f .cache/configs.list ]]
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ discovered_files=()
+ declare -a discovered_files
+ IFS=
+ read -r fullpath
++ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
++ sort
++ basename configs/cisco/access-sw1-west.cfg
+ filename=access-sw1-west.cfg
+ device_name=access-sw1-west
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/access-switch-07.cfg
+ filename=access-switch-07.cfg
+ device_name=access-switch-07
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-fw-03.cfg
+ filename=branch-fw-03.cfg
+ device_name=branch-fw-03
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-fw-snmp.cfg
+ filename=branch-fw-snmp.cfg
+ device_name=branch-fw-snmp
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-isr-02.cfg
+ filename=branch-isr-02.cfg
+ device_name=branch-isr-02
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/campus-sw-access01.cfg
+ filename=campus-sw-access01.cfg
+ device_name=campus-sw-access01
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/core-fw-dmz-01.cfg
+ filename=core-fw-dmz-01.cfg
+ device_name=core-fw-dmz-01
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/core-router-01.cfg
+ filename=core-router-01.cfg
+ device_name=core-router-01
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/datacenter-fw-core.cfg
+ filename=datacenter-fw-core.cfg
+ device_name=datacenter-fw-core
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/dmz-fw2-backup.cfg
+ filename=dmz-fw2-backup.cfg
+ device_name=dmz-fw2-backup
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/hq-core-rtr-02.cfg
+ filename=hq-core-rtr-02.cfg
+ device_name=hq-core-rtr-02
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/hq-core-rtr.cfg
+ filename=hq-core-rtr.cfg
+ device_name=hq-core-rtr
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/cisco/perimeter-fw1.cfg
+ filename=perimeter-fw1.cfg
+ device_name=perimeter-fw1
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-branch-vpn-01.cfg
+ filename=fg-branch-vpn-01.cfg
+ device_name=fg-branch-vpn-01
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-campus-core.cfg
+ filename=fg-campus-core.cfg
+ device_name=fg-campus-core
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-datacenter-east.cfg
+ filename=fg-datacenter-east.cfg
+ device_name=fg-datacenter-east
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-fw-dmz-01.cfg
+ filename=fg-fw-dmz-01.cfg
+ device_name=fg-fw-dmz-01
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-lab-test-fw.cfg
+ filename=fg-lab-test-fw.cfg
+ device_name=fg-lab-test-fw
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-testing-config.cfg
+ filename=fg-testing-config.cfg
+ device_name=fg-testing-config
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch1.conf
+ filename=switch1.conf
+ device_name=switch1
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch2.conf
+ filename=switch2.conf
+ device_name=switch2
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch3.conf
+ filename=switch3.conf
+ device_name=switch3
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch4.conf
+ filename=switch4.conf
+ device_name=switch4
+ [[ 0 -gt 0 ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ [[ true == true ]]
+ message 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ local 'message=Generated configs.list at .cache/configs.list'
+ echo -e 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list
+ return 0
+ [[ -n cisco,fortinet,misc ]]
+ [[ cisco,fortinet,misc != \f\a\l\s\e ]]
+ oIFS=' 	
'
+ IFS=,
+ read -r -a site_filters
+ IFS=' 	
'
+ filtered_configs=()
+ declare -a filtered_configs
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=cisco
+ for site in "${site_filters[@]}"
+ [[ cisco == \c\i\s\c\o ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=fortinet
+ for site in "${site_filters[@]}"
+ [[ fortinet == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ fortinet == \f\o\r\t\i\n\e\t ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
++ sed -E 's|^configs/||'
++ sed -E 's|/.*||'
+ site_folder=misc
+ for site in "${site_filters[@]}"
+ [[ misc == \c\i\s\c\o ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \f\o\r\t\i\n\e\t ]]
+ for site in "${site_filters[@]}"
+ [[ misc == \m\i\s\c ]]
+ filtered_configs+=("${path}")
+ break
+ IFS=
+ read -r path
+ [[ true == true ]]
+ message 'Filtered Configurations (count): 27'
+ [[ -n Filtered Configurations (count): 27 ]]
+ local 'message=Filtered Configurations (count): 27'
+ echo -e 'Filtered Configurations (count): 27'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/access-sw1-west.cfg
++ local full_path=configs/cisco/access-sw1-west.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-sw1-west.cfg
++ return 0
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/access-switch-07.cfg
++ local full_path=configs/cisco/access-switch-07.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-switch-07.cfg
++ return 0
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/branch-fw-03.cfg
++ local full_path=configs/cisco/branch-fw-03.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-03.cfg
++ return 0
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/branch-fw-snmp.cfg
++ local full_path=configs/cisco/branch-fw-snmp.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-snmp.cfg
++ return 0
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/branch-isr-02.cfg
++ local full_path=configs/cisco/branch-isr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-isr-02.cfg
++ return 0
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/campus-sw-access01.cfg
++ local full_path=configs/cisco/campus-sw-access01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/campus-sw-access01.cfg
++ return 0
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/core-fw-dmz-01.cfg
++ local full_path=configs/cisco/core-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
++ return 0
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/core-router-01.cfg
++ local full_path=configs/cisco/core-router-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-router-01.cfg
++ return 0
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/datacenter-fw-core.cfg
++ local full_path=configs/cisco/datacenter-fw-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/datacenter-fw-core.cfg
++ return 0
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/dmz-fw2-backup.cfg
++ local full_path=configs/cisco/dmz-fw2-backup.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
++ return 0
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/hq-core-rtr-02.cfg
++ local full_path=configs/cisco/hq-core-rtr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
++ return 0
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/hq-core-rtr.cfg
++ local full_path=configs/cisco/hq-core-rtr.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr.cfg
++ return 0
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/cisco/perimeter-fw1.cfg
++ local full_path=configs/cisco/perimeter-fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/perimeter-fw1.cfg
++ return 0
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-branch-vpn-01.cfg
++ local full_path=configs/fortinet/fg-branch-vpn-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
++ return 0
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-campus-core.cfg
++ local full_path=configs/fortinet/fg-campus-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-campus-core.cfg
++ return 0
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-datacenter-east.cfg
++ local full_path=configs/fortinet/fg-datacenter-east.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
++ return 0
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-fw-dmz-01.cfg
++ local full_path=configs/fortinet/fg-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
++ return 0
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-lab-test-fw.cfg
++ local full_path=configs/fortinet/fg-lab-test-fw.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
++ return 0
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/fortinet/fg-testing-config.cfg
++ local full_path=configs/fortinet/fg-testing-config.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-testing-config.cfg
++ return 0
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/fw2.cfg
++ local full_path=configs/misc/fw2.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw2.cfg
++ return 0
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/fw3.cfg
++ local full_path=configs/misc/fw3.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw3.cfg
++ return 0
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/fw5.cfg
++ local full_path=configs/misc/fw5.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw5.cfg
++ return 0
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/fw6.cfg
++ local full_path=configs/misc/fw6.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw6.cfg
++ return 0
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/switch1.conf
++ local full_path=configs/misc/switch1.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch1.conf
++ return 0
+ message '  - misc/switch1.conf'
+ [[ -n   - misc/switch1.conf ]]
+ local 'message=  - misc/switch1.conf'
+ echo -e '  - misc/switch1.conf'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/switch2.conf
++ local full_path=configs/misc/switch2.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch2.conf
++ return 0
+ message '  - misc/switch2.conf'
+ [[ -n   - misc/switch2.conf ]]
+ local 'message=  - misc/switch2.conf'
+ echo -e '  - misc/switch2.conf'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/switch3.conf
++ local full_path=configs/misc/switch3.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch3.conf
++ return 0
+ message '  - misc/switch3.conf'
+ [[ -n   - misc/switch3.conf ]]
+ local 'message=  - misc/switch3.conf'
+ echo -e '  - misc/switch3.conf'
+ return 0
+ for config in "${filtered_configs[@]}"
++ relative_configpath configs/misc/switch4.conf
++ local full_path=configs/misc/switch4.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch4.conf
++ return 0
+ message '  - misc/switch4.conf'
+ [[ -n   - misc/switch4.conf ]]
+ local 'message=  - misc/switch4.conf'
+ echo -e '  - misc/switch4.conf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ 27 -eq 0 ]]
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg configs/fortinet/fg-testing-config.cfg configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ target_addresses_source=()
+ declare -a target_addresses_source
+ [[ -f ips.list ]]
+ mapfile -t target_addresses_source
++ grep -v '^\s*$' ips.list
++ tr -d '\r'
++ sort -t . -k1,1n -k2,2n -k3,3n -k4,4n -u
+ [[ true == true ]]
+ message 'Loaded (default) IPs addresses (count): 17'
+ [[ -n Loaded (default) IPs addresses (count): 17 ]]
+ local 'message=Loaded (default) IPs addresses (count): 17'
+ echo -e 'Loaded (default) IPs addresses (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${target_addresses_source[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ target_listing=()
+ declare -a target_listing
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=10 0 0 1'
+ local fixed_address=10.0.0.1
+ [[ -n '' ]]
+ [[ 10.0.0.1 != \1\0\.\0\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.1.2
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.1.2 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '1' '2')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ local 'segments=10 0 1 2'
+ local fixed_address=10.0.1.2
+ [[ -n '' ]]
+ [[ 10.0.1.2 != \1\0\.\0\.\1\.\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.0.2.3
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.0.2.3 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '0' '2' '3')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 3
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=3
+ [[ 3 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=3
+ local 'segments=10 0 2 3'
+ local fixed_address=10.0.2.3
+ [[ -n '' ]]
+ [[ 10.0.2.3 != \1\0\.\0\.\2\.\3 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=10.10.10.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 10.10.10.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('10' '10' '10' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=10 10 10 10'
+ local fixed_address=10.10.10.10
+ [[ -n '' ]]
+ [[ 10.10.10.10 != \1\0\.\1\0\.\1\0\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.0.5
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.0.5 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '0' '5')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 5
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=5
+ [[ 5 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=5
+ local 'segments=172 16 0 5'
+ local fixed_address=172.16.0.5
+ [[ -n '' ]]
+ [[ 172.16.0.5 != \1\7\2\.\1\6\.\0\.\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.16.1.6
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.16.1.6 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '16' '1' '6')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 16
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=16
+ [[ 16 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=16
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 6
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=6
+ [[ 6 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=6
+ local 'segments=172 16 1 6'
+ local fixed_address=172.16.1.6
+ [[ -n '' ]]
+ [[ 172.16.1.6 != \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.18.1.20
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.18.1.20 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '18' '1' '20')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 18
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=18
+ [[ 18 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=18
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 20
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=20
+ [[ 20 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=20
+ local 'segments=172 18 1 20'
+ local fixed_address=172.18.1.20
+ [[ -n '' ]]
+ [[ 172.18.1.20 != \1\7\2\.\1\8\.\1\.\2\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=172.31.255.254
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.31.255.254 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '31' '255' '254')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 172
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=172
+ [[ 172 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ for i in "${!segments[@]}"
++ echo -en 31
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=31
+ [[ 31 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=31
+ for i in "${!segments[@]}"
++ echo -en 255
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=255
+ [[ 255 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=255
+ for i in "${!segments[@]}"
++ echo -en 254
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=254
+ [[ 254 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=254
+ local 'segments=172 31 255 254'
+ local fixed_address=172.31.255.254
+ [[ -n '' ]]
+ [[ 172.31.255.254 != \1\7\2\.\3\1\.\2\5\5\.\2\5\4 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.0.2.50
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.0.2.50 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '0' '2' '50')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 50
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=50
+ [[ 50 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=50
+ local 'segments=192 0 2 50'
+ local fixed_address=192.0.2.50
+ [[ -n '' ]]
+ [[ 192.0.2.50 != \1\9\2\.\0\.\2\.\5\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.1
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '1')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ local 'segments=192 168 0 1'
+ local fixed_address=192.168.0.1
+ [[ -n '' ]]
+ [[ 192.168.0.1 != \1\9\2\.\1\6\8\.\0\.\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.0.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.0.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '0' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 0 100'
+ local fixed_address=192.168.0.100
+ [[ -n '' ]]
+ [[ 192.168.0.100 != \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.10
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '10')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ [[ 10 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ local 'segments=192 168 1 10'
+ local fixed_address=192.168.1.10
+ [[ -n '' ]]
+ [[ 192.168.1.10 != \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.1.11
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.1.11 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '11')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=1
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=1
+ for i in "${!segments[@]}"
++ echo -en 11
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=11
+ [[ 11 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=11
+ local 'segments=192 168 1 11'
+ local fixed_address=192.168.1.11
+ [[ -n '' ]]
+ [[ 192.168.1.11 != \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.2.12
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.2.12 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '2' '12')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ for i in "${!segments[@]}"
++ echo -en 12
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=12
+ [[ 12 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=12
+ local 'segments=192 168 2 12'
+ local fixed_address=192.168.2.12
+ [[ -n '' ]]
+ [[ 192.168.2.12 != \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=192.168.100.100
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 192.168.100.100 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '100' '100')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 192
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ [[ 192 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ for i in "${!segments[@]}"
++ echo -en 168
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ [[ 168 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=168
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ local 'segments=192 168 100 100'
+ local fixed_address=192.168.100.100
+ [[ -n '' ]]
+ [[ 192.168.100.100 != \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=198.51.100.75
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 198.51.100.75 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('198' '51' '100' '75')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 198
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=198
+ [[ 198 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=198
+ for i in "${!segments[@]}"
++ echo -en 51
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=51
+ [[ 51 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=51
+ for i in "${!segments[@]}"
++ echo -en 100
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=100
+ [[ 100 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=100
+ for i in "${!segments[@]}"
++ echo -en 75
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=75
+ [[ 75 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=75
+ local 'segments=198 51 100 75'
+ local fixed_address=198.51.100.75
+ [[ -n '' ]]
+ [[ 198.51.100.75 != \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ for raw_ip in "${target_addresses_source[@]}"
+ target_address=203.0.113.25
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 203.0.113.25 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('203' '0' '113' '25')
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
++ echo -en 203
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=203
+ [[ 203 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=203
+ for i in "${!segments[@]}"
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ echo -en 113
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=113
+ [[ 113 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=113
+ for i in "${!segments[@]}"
++ echo -en 25
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=25
+ [[ 25 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=25
+ local 'segments=203 0 113 25'
+ local fixed_address=203.0.113.25
+ [[ -n '' ]]
+ [[ 203.0.113.25 != \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ [[ -n '' ]]
+ return 0
+ target_listing+=("${target_address}")
+ ip_batch_size=10
+ total_ips=17
+ (( ip_offset=0 ))
+ (( ip_offset<total_ips ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ message 'Processing IPs [17]: 0 -> 9'
+ [[ -n Processing IPs [17]: 0 -> 9 ]]
+ local 'message=Processing IPs [17]: 0 -> 9'
+ echo -e 'Processing IPs [17]: 0 -> 9'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ mapfile -t site_folders
++ cut -d/ -f2 .cache/configs.list
++ sort -u
+ local batch_size=5
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ return 0
+ message 'Batch size: 5'
+ [[ -n Batch size: 5 ]]
+ local 'message=Batch size: 5'
+ echo -e 'Batch size: 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Parallel threads:   100'
+ [[ -n Parallel threads:   100 ]]
+ local 'message=Parallel threads:   100'
+ echo -e 'Parallel threads:   100'
+ return 0
+ message 'Target IPs (count): 10'
+ [[ -n Target IPs (count): 10 ]]
+ local 'message=Target IPs (count): 10'
+ echo -e 'Target IPs (count): 10'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /cisco/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=13
+ [[ true == true ]]
+ message 'Target Site:   cisco'
+ [[ -n Target Site:   cisco ]]
+ local 'message=Target Site:   cisco'
+ echo -e 'Target Site:   cisco'
+ return 0
+ message 'Total Configs: 13'
+ [[ -n Total Configs: 13 ]]
+ local 'message=Total Configs: 13'
+ echo -e 'Total Configs: 13'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ find targets -maxdepth 1 -type f -name '*.json' -delete
+ compgen -G 'targets/*.json'
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110122537360000 11976
+ export batch_id=MTc0ODExMDEy
+ batch_id=MTc0ODExMDEy
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110122-7209
+ batch_configs_list=configs--MTc0ODExMDEy-1748110122-7209.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEy'
+ [[ -n Batch ID: MTc0ODExMDEy ]]
+ local 'message=Batch ID: MTc0ODExMDEy'
+ echo -e 'Batch ID: MTc0ODExMDEy'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110122-7209'
+ [[ -n Batch Suffix:   1748110122-7209 ]]
+ local 'message=Batch Suffix:   1748110122-7209'
+ echo -e 'Batch Suffix:   1748110122-7209'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEy-1748110122-7209.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEy-1748110122-7209.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEy-1748110122-7209.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEy-1748110122-7209.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local base=configs--MTc0ODExMDEy-1748110122-7209.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEy-1748110122-7209.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEy-1748110122-7209.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEy-1748110122-7209.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/access-sw1-west.cfg
++ local full_path=configs/cisco/access-sw1-west.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-sw1-west.cfg
++ return 0
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/access-switch-07.cfg
++ local full_path=configs/cisco/access-switch-07.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-switch-07.cfg
++ return 0
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-fw-03.cfg
++ local full_path=configs/cisco/branch-fw-03.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-03.cfg
++ return 0
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-fw-snmp.cfg
++ local full_path=configs/cisco/branch-fw-snmp.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-snmp.cfg
++ return 0
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-isr-02.cfg
++ local full_path=configs/cisco/branch-isr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-isr-02.cfg
++ return 0
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/access-sw1-west.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/access-switch-07.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg
+ [[ :configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/access-switch-07.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry='access-list OUTSIDE extended permit ip host 192.168.2.12 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.18.1.20.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/172.18.1.20
+ tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/172.18.1.20
+ touch targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json
+ job_pid=19580
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.1.json
+ generate_configslist 172.18.1.20 targets/172.18.1.20.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json
+ local ip_addr=172.18.1.20
+ local target_file=targets/172.18.1.20.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local tracing_record=targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json
++ sed -E 's|^configs/||'
++ grep -lE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-isr-02.cfg
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.1
+ tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/192.168.0.1
+ local matched_files=configs/cisco/branch-isr-02.cfg
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ wc -l
+ touch targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ config_lines='      43'
++ grep -oE '(^|[^0-9.])172\.18\.1\.20([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
+ job_pid=19594
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
+ generate_configslist 192.168.0.1 targets/192.168.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ local ip_addr=192.168.0.1
+ local target_file=targets/192.168.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
++ sed -E 's|^configs/||'
++ grep -lE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-isr-02.cfg
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=branch-isr-02.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/10.10.10.10
+ local 'matched_files=configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg'
+ [[ -n configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' configs/cisco/access-sw1-west.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ tr -d ' '
+ job_pid=19613
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
+ targets_jobs_pid+=("${job_pid}")
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ jq '{ configs: . }'
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
++ return 0
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/10.0.2.3
+ local 'matched_files=configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg'
+ [[ -n configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-sw1-west.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
+ jq -r
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ config_lines='      29'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/access-sw1-west.cfg
++ wc -l
++ wc -l
++ tr -d ' '
+ [[ -n targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json ]]
+ job_pid=19633
+ jq -s '{ configs: map(.configs) | add }' targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json targets/172.18.1.20.json
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/172.16.1.6.json
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
++ sed -E 's|^configs/||'
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-isr-02.cfg
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
+ config_lines='      32'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' configs/cisco/access-switch-07.cfg
++ wc -l
+ target_dirpath=targets/172.16.1.6
+ tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/172.16.1.6
++ tr -d ' '
+ local matched_files=configs/cisco/branch-isr-02.cfg
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
+ mv -f targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json.tmp targets/172.18.1.20/172.18.1.20--cisco--MTc0ODExMDEy.json
++ wc -l
+ match_count=2
+ site=cisco
+ device=access-switch-07.cfg
+ touch targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ message 'Generated Config-File: targets/172.18.1.20.json'
+ [[ -n Generated Config-File: targets/172.18.1.20.json ]]
+ local 'message=Generated Config-File: targets/172.18.1.20.json'
+ echo -e 'Generated Config-File: targets/172.18.1.20.json'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
+ return 0
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ config_lines='      43'
+ return 0
++ return 0
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      32' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
+ job_pid=19662
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ [[ true == true ]]
+ generate_configslist 172.16.1.6 targets/172.16.1.6.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json
+ message 'Matched IPs to [cisco] configs (5):'
+ local ip_addr=172.16.1.6
+ local target_file=targets/172.16.1.6.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110122-7209.list
+ [[ -n Matched IPs to [cisco] configs (5): ]]
+ local tracing_record=targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json
+ local 'message=Matched IPs to [cisco] configs (5):'
+ echo -e 'Matched IPs to [cisco] configs (5):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg
++ grep -lE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-isr-02.cfg
++ sed 's|configs/cisco/||g'
+ config_lines='      32'
+ match_count=3
+ site=cisco
+ device=branch-isr-02.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/access-switch-07.cfg
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 2
  }
++ print '[]'
]'
+ IFS=
++ wc -l
+ read -r config_file
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ tr -d ' '
+ local matched_files=configs/cisco/branch-isr-02.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
++ jq '{ configs: . }'
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
+ config_cleaned=access-sw1-west.cfg:access-switch-07.cfg
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
    "lines": 32,
    "count": 2
  }
+ printf '%-6s | %-15s => %s\n' 19613 10.10.10.10 access-sw1-west.cfg:access-switch-07.cfg
+ config_json='[]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
]'
+ IFS=
+ ip=172.18.1.20
+ read -r config_file
+ config_raw=configs/cisco/branch-isr-02.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
+ config_file=cisco/branch-isr-02.cfg
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 2
  }
]'
++ return 0
++ wc -l
+ match_count=1
+ site=cisco
+ device=access-switch-07.cfg
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      32' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      43'
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 19580 172.18.1.20 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.1
+ config_raw=configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 32,
      "count": 2
    }
  ]
}'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ jq -r
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
++ grep -oE '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
++ wc -l
++ tr -d ' '
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ match_count=3
+ site=cisco
+ device=branch-isr-02.cfg
+ config_cleaned=access-sw1-west.cfg:access-switch-07.cfg
+ printf '%-6s | %-15s => %s\n' 19594 192.168.0.1 access-sw1-west.cfg:access-switch-07.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=172.16.1.6
+ config_raw=configs/cisco/branch-isr-02.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
++ sed 's|configs/cisco/||g'
    "config": {
++ print '[]'
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
++ [[ -n [] ]]
    },
    "lines": 32,
    "count": 1
  }
]'
++ echo -en '[]'
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json targets/192.168.0.1.json
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 19662 172.16.1.6 branch-isr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/branch-isr-02.cfg
++ sed 's|configs/cisco/||g'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 32,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json targets/10.0.2.3.json
+ mv -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json.tmp targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
+ config_cleaned=branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 19633 10.0.2.3 branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  5 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19580
+ ip_address=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19594
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19613
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19633
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19662
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ message 'Generated Config-File: targets/192.168.0.1.json'
+ [[ -n Generated Config-File: targets/192.168.0.1.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.1.json'
+ echo -e 'Generated Config-File: targets/192.168.0.1.json'
+ return 0
+ return 0
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json targets/10.10.10.10.json
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ [[ -n targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json targets/172.16.1.6.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ return 0
+ mv -f targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json.tmp targets/172.16.1.6/172.16.1.6--cisco--MTc0ODExMDEy.json
+ message 'Generated Config-File: targets/172.16.1.6.json'
+ [[ -n Generated Config-File: targets/172.16.1.6.json ]]
+ local 'message=Generated Config-File: targets/172.16.1.6.json'
+ echo -e 'Generated Config-File: targets/172.16.1.6.json'
+ return 0
+ return 0
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19594
+ ip_address=192.168.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19613
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19633
+ ip_address=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 19662
+ ip_address=172.16.1.6
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\7\2\.\1\6\.\1\.\6 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\8\.\1\.\2\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\7\2\.\1\6\.\1\.\6 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 12 -gt 0 ]]
+ message 'Unmapped IPs (count): 12'
+ [[ -n Unmapped IPs (count): 12 ]]
+ local 'message=Unmapped IPs (count): 12'
+ echo -e 'Unmapped IPs (count): 12'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=172.18.1.20
++ printf %01d 1
+ padded_index=1
+ job_pid=19722
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.18.1.20
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.1
+ parse_configs 172.18.1.20 1
+ local ip_addr=172.18.1.20
+ local padded_index=1
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=2
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=172.18.1.20' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ job_pid=19725
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.1
+ mkdir -p .logs/jobs .logs/errors
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 192.168.0.1 2
+ local ip_addr=192.168.0.1
+ local padded_index=2
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=3
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.0.1' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ job_pid=19729
+ execute+=(--debug)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ parse_configs 10.10.10.10 3
+ ip_addr=10.0.2.3
+ local ip_addr=10.10.10.10
+ local padded_index=3
+ logfile=.logs/jobs/172.18.1.20.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.18.1.20 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 4
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=4
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.10.10.10' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=19734
+ [[ false == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ parse_configs 10.0.2.3 4
+ ip_addr=172.16.1.6
+ logfile=.logs/jobs/192.168.0.1.job
+ [[ true == true ]]
+ local ip_addr=10.0.2.3
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.0.1 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=4
++ printf %01d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=5
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.0.2.3' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ job_pid=19739
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=172.16.1.6
+ ((  ip_index < total_ips  ))
+ parse_configs 172.16.1.6 5
+ message 'Background Jobs -> Managed Configs:'
+ local ip_addr=172.16.1.6
+ local padded_index=5
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (5)'
+ [[ -n PID   | IP Address (5) ]]
+ local 'message=PID   | IP Address (5)'
+ echo -e 'PID   | IP Address (5)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 19729 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 19722 172.18.1.20
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 19725 192.168.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 19739 172.16.1.6
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 19734 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
++ print cfg,conf,cnf
+ (( i < count ))
+ return 0
++ [[ -n cfg,conf,cnf ]]
+ ((  5 > 0  ))
++ echo -en cfg,conf,cnf
+ valid_configs_jobs_pid=()
++ return 0
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19722
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19725
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19729
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19734
+ valid_configs_jobs_pid+=("$pid")
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=172.16.1.6' '--index=5' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19739
+ declare -a execute
+ valid_configs_jobs_pid+=("$pid")
+ [[ true == true ]]
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ execute+=(--classify)
+ sleep 0.5
+ [[ false == true ]]
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ [[ true == true ]]
+ execute+=(--debug)
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/172.16.1.6.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=172.16.1.6 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19722
+ ip=172.18.1.20
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19725
+ ip=192.168.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19729
+ ip=10.10.10.10
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19734
+ ip=10.0.2.3
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 19739
+ ip=172.16.1.6
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110124892323000 10402
+ export batch_id=MTc0ODExMDEy
+ batch_id=MTc0ODExMDEy
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110124-11902
+ batch_configs_list=configs--MTc0ODExMDEy-1748110124-11902.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ printf '%s\n' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
+ range_first=6
+ range_last=10
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEy'
+ [[ -n Batch ID: MTc0ODExMDEy ]]
+ local 'message=Batch ID: MTc0ODExMDEy'
+ echo -e 'Batch ID: MTc0ODExMDEy'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110124-11902'
+ [[ -n Batch Suffix:   1748110124-11902 ]]
+ local 'message=Batch Suffix:   1748110124-11902'
+ echo -e 'Batch Suffix:   1748110124-11902'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEy-1748110124-11902.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEy-1748110124-11902.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEy-1748110124-11902.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEy-1748110124-11902.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local base=configs--MTc0ODExMDEy-1748110124-11902.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEy-1748110124-11902.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEy-1748110124-11902.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEy-1748110124-11902.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   6 -> 10'
+ [[ -n Batch Ranges:   6 -> 10 ]]
+ local 'message=Batch Ranges:   6 -> 10'
+ echo -e 'Batch Ranges:   6 -> 10'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/campus-sw-access01.cfg
++ local full_path=configs/cisco/campus-sw-access01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/campus-sw-access01.cfg
++ return 0
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/core-fw-dmz-01.cfg
++ local full_path=configs/cisco/core-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
++ return 0
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/core-router-01.cfg
++ local full_path=configs/cisco/core-router-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-router-01.cfg
++ return 0
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/datacenter-fw-core.cfg
++ local full_path=configs/cisco/datacenter-fw-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/datacenter-fw-core.cfg
++ return 0
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/dmz-fw2-backup.cfg
++ local full_path=configs/cisco/dmz-fw2-backup.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
++ return 0
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/campus-sw-access01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/campus-sw-access01.cfg
+ [[ :configs/cisco/campus-sw-access01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\r\o\u\t\e\r\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/core-router-01.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' ip address 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 172.31.255.254'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-router-01.cfg
+ [[ :configs/cisco/core-router-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\a\t\a\c\e\n\t\e\r\-\f\w\-\c\o\r\e\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/datacenter-fw-core.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/campus-sw-access01.cfg
+ [[ :configs/cisco/campus-sw-access01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg
+ [[ :configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg
+ [[ :configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-router-01.cfg:configs/cisco/datacenter-fw-core.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ sort -u
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-router-01.cfg:configs/cisco/datacenter-fw-core.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.1.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.0.1
+ tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/192.168.0.1
+ touch targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ job_pid=20339
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.10.10.10.json
+ generate_configslist 192.168.0.1 targets/192.168.0.1.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ local ip_addr=192.168.0.1
+ local target_file=targets/192.168.0.1.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local tracing_record=targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/10.10.10.10
+ tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/10.10.10.10
+ local matched_files=configs/cisco/campus-sw-access01.cfg
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ wc -l
+ touch targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ config_lines='      31'
++ grep -oE '(^|[^0-9.])192\.168\.0\.1([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg
++ wc -l
++ tr -d ' '
+ job_pid=20353
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
+ generate_configslist 10.10.10.10 targets/10.10.10.10.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ local ip_addr=10.10.10.10
+ local target_file=targets/10.10.10.10.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local tracing_record=targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
++ grep -lE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=campus-sw-access01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      31' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/10.0.2.3
+ local 'matched_files=configs/cisco/campus-sw-access01.cfg
configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n configs/cisco/campus-sw-access01.cfg
configs/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ wc -l
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ config_lines='      31'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg
++ wc -l
+ job_pid=20370
+ targets_jobs_pid+=("${job_pid}")
++ tr -d ' '
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ [[ true == true ]]
++ print '[
  {
    "config": {
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
+ local ip_addr=10.0.2.3
+ message 'Matched IPs to [cisco] configs (3):'
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110124-11902.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
++ jq '{ configs: . }'
    "count": 2
  }
] ]]
+ [[ -n Matched IPs to [cisco] configs (3): ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
+ local 'message=Matched IPs to [cisco] configs (3):'
    "lines": 31,
    "count": 2
  }
+ echo -e 'Matched IPs to [cisco] configs (3):'
]'
++ return 0
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.1
+ config_raw=configs/cisco/campus-sw-access01.cfg
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed 's|configs/cisco/||g'
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      31' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local 'matched_files=configs/cisco/core-router-01.cfg
configs/cisco/datacenter-fw-core.cfg'
+ [[ -n configs/cisco/core-router-01.cfg
configs/cisco/datacenter-fw-core.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/core-router-01.cfg
+ config_cleaned=campus-sw-access01.cfg
+ printf '%-6s | %-15s => %s\n' 20339 192.168.0.1 campus-sw-access01.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.10.10.10
+ config_raw=configs/cisco/campus-sw-access01.cfg:configs/cisco/dmz-fw2-backup.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 31,
      "count": 2
    }
  ]
}'
+ jq -r
++ wc -l
++ sed 's|configs/cisco/||g'
+ config_lines='      37'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
+ config_cleaned=campus-sw-access01.cfg:dmz-fw2-backup.cfg
    },
    "lines": 31,
    "count": 1
  }
]'
+ printf '%-6s | %-15s => %s\n' 20353 10.10.10.10 campus-sw-access01.cfg:dmz-fw2-backup.cfg
+ IFS=
+ read -r config_file
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/core-router-01.cfg:configs/cisco/datacenter-fw-core.cfg
+ config_file=cisco/dmz-fw2-backup.cfg
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/core-router-01.cfg
++ wc -l
++ wc -l
++ sed 's|configs/cisco/||g'
++ tr -d ' '
+ [[ -n targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json targets/192.168.0.1.json
+ match_count=1
+ site=cisco
+ device=core-router-01.cfg
+ config_lines='      47'
+ config_cleaned=core-router-01.cfg:datacenter-fw-core.cfg
+ printf '%-6s | %-15s => %s\n' 20370 10.0.2.3 core-router-01.cfg:datacenter-fw-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20339
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20353
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20370
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
++ print '[]'
+ sleep 0.5
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device core-router-01.cfg --argjson lines '      37' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])10\.10\.10\.10([^0-9.]|$)' configs/cisco/dmz-fw2-backup.cfg
++ wc -l
++ tr -d ' '
+ mv -f targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json.tmp targets/192.168.0.1/192.168.0.1--cisco--MTc0ODExMDEy.json
+ match_count=3
+ site=cisco
+ device=dmz-fw2-backup.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      47' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
] ]]
+ message 'Generated Config-File: targets/192.168.0.1.json'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
+ [[ -n Generated Config-File: targets/192.168.0.1.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.1.json'
+ echo -e 'Generated Config-File: targets/192.168.0.1.json'
    },
    "lines": 31,
    "count": 1
+ return 0
  }
]'
++ return 0
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/datacenter-fw-core.cfg
++ wc -l
+ config_lines='      34'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/datacenter-fw-core.cfg
++ wc -l
++ tr -d ' '
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
]'
++ return 0
+ match_count=1
+ site=cisco
+ device=datacenter-fw-core.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
++ jq --arg site cisco --arg device datacenter-fw-core.cfg --argjson lines '      34' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 31,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 47,
      "count": 3
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
++ return 0
+ [[ -n targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json targets/10.10.10.10.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "core-router-01.cfg"
      },
      "lines": 37,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "datacenter-fw-core.cfg"
      },
      "lines": 34,
      "count": 1
    }
  ]
}'
+ jq -r
+ mv -f targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json.tmp targets/10.10.10.10/10.10.10.10--cisco--MTc0ODExMDEy.json
+ message 'Generated Config-File: targets/10.10.10.10.json'
+ [[ -n Generated Config-File: targets/10.10.10.10.json ]]
+ local 'message=Generated Config-File: targets/10.10.10.10.json'
+ echo -e 'Generated Config-File: targets/10.10.10.10.json'
+ return 0
+ return 0
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json targets/10.0.2.3.json
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ ((  3 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20339
+ ip_address=192.168.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20353
+ ip_address=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20370
+ ip_address=10.0.2.3
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\0\.\1 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\1\0\.\1\0\.\1\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 14 -gt 0 ]]
+ message 'Unmapped IPs (count): 14'
+ [[ -n Unmapped IPs (count): 14 ]]
+ local 'message=Unmapped IPs (count): 14'
+ echo -e 'Unmapped IPs (count): 14'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=3
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.1
++ printf %01d 1
+ padded_index=1
+ job_pid=20432
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.10.10.10
+ parse_configs 192.168.0.1 1
+ local ip_addr=192.168.0.1
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=20435
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.10.10.10
+ ((  ip_index < total_ips  ))
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.0.1' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ ip_addr=10.0.2.3
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 10.10.10.10 2
+ local ip_addr=10.10.10.10
+ local padded_index=2
++ printf %01d 3
+ padded_index=3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=20439
+ configs_jobs_pid+=("${job_pid}")
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.10.10.10' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ message 'Background Jobs -> Managed Configs:'
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ [[ -n Background Jobs -> Managed Configs: ]]
+ parse_configs 10.0.2.3 3
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (3)'
+ local ip_addr=10.0.2.3
+ [[ -n PID   | IP Address (3) ]]
+ local 'message=PID   | IP Address (3)'
+ local padded_index=3
+ echo -e 'PID   | IP Address (3)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 20432 192.168.0.1
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 20435 10.10.10.10
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 20439 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20432
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20435
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20439
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
++ IFS=,
+ sleep 0.5
+ logfile=.logs/jobs/192.168.0.1.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.0.2.3' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.10.10.10.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.10.10.10 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  3 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20432
+ ip=192.168.0.1
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20435
+ ip=10.10.10.10
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20439
+ ip=10.0.2.3
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110127206284000 25042
+ export batch_id=MTc0ODExMDEy
+ batch_id=MTc0ODExMDEy
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110127-23887
+ batch_configs_list=configs--MTc0ODExMDEy-1748110127-23887.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ printf '%s\n' configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
+ range_first=11
+ range_last=13
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEy'
+ [[ -n Batch ID: MTc0ODExMDEy ]]
+ local 'message=Batch ID: MTc0ODExMDEy'
+ echo -e 'Batch ID: MTc0ODExMDEy'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   10'
+ [[ -n Batch offset:   10 ]]
+ local 'message=Batch offset:   10'
+ echo -e 'Batch offset:   10'
+ return 0
+ message 'Batch Suffix:   1748110127-23887'
+ [[ -n Batch Suffix:   1748110127-23887 ]]
+ local 'message=Batch Suffix:   1748110127-23887'
+ echo -e 'Batch Suffix:   1748110127-23887'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEy-1748110127-23887.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEy-1748110127-23887.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEy-1748110127-23887.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEy-1748110127-23887.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ local base=configs--MTc0ODExMDEy-1748110127-23887.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEy-1748110127-23887.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEy-1748110127-23887.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEy-1748110127-23887.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   11 -> 13'
+ [[ -n Batch Ranges:   11 -> 13 ]]
+ local 'message=Batch Ranges:   11 -> 13'
+ echo -e 'Batch Ranges:   11 -> 13'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/hq-core-rtr-02.cfg
++ local full_path=configs/cisco/hq-core-rtr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
++ return 0
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/hq-core-rtr.cfg
++ local full_path=configs/cisco/hq-core-rtr.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr.cfg
++ return 0
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/perimeter-fw1.cfg
++ local full_path=configs/cisco/perimeter-fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/perimeter-fw1.cfg
++ return 0
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry='ntp server 198.51.100.75 prefer'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\h\q\-\c\o\r\e\-\r\t\r\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/hq-core-rtr.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\h\q\-\c\o\r\e\-\r\t\r\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ mkdir -p targets/10.0.2.3
+ touch targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ job_pid=20825
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (1):'
+ [[ -n Matched IPs to [cisco] configs (1): ]]
+ local 'message=Matched IPs to [cisco] configs (1):'
+ echo -e 'Matched IPs to [cisco] configs (1):'
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local ip_addr=10.0.2.3
+ local target_file=targets/10.0.2.3.json
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110127-23887.list
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ local tracing_record=targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/cisco/hq-core-rtr.cfg
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/hq-core-rtr.cfg
++ sed 's|configs/cisco/||g'
+ local matched_files=configs/cisco/hq-core-rtr.cfg
+ config_cleaned=hq-core-rtr.cfg
+ [[ -n configs/cisco/hq-core-rtr.cfg ]]
+ config_json='[]'
+ printf '%-6s | %-15s => %s\n' 20825 10.0.2.3 hq-core-rtr.cfg
+ IFS=
+ read -r config_file
+ newline
+ local count=1
+ (( i = 0 ))
+ config_file=cisco/hq-core-rtr.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20825
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ wc -l
+ config_lines='      28'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/cisco/hq-core-rtr.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=cisco
+ device=hq-core-rtr.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device hq-core-rtr.cfg --argjson lines '      28' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 2
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 2
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "hq-core-rtr.cfg"
      },
      "lines": 28,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json targets/10.0.2.3.json
+ mv -f targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json.tmp targets/10.0.2.3/10.0.2.3--cisco--MTc0ODExMDEy.json
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 20825
+ ip_address=10.0.2.3
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
++ printf %01d 1
+ padded_index=1
+ job_pid=20849
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ parse_configs 10.0.2.3 1
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ local ip_addr=10.0.2.3
+ local padded_index=1
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 20849 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20849
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.0.2.3' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 20849
+ ip=10.0.2.3
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=15
+ [[ 15 -lt 13 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EZ5oybmRiu
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EZ5oybmRiu
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EZ5oybmRiu
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.0.2.3//10.0.2.3--cisco--MTc0ODExMDEy.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.10.10.10/
+ ip=10.10.10.10
+ final_file=.cache/targets/10.10.10.10.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.10.10.10.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/10.10.10.10//10.10.10.10--cisco--MTc0ODExMDEy.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.16.1.6/
+ ip=172.16.1.6
+ final_file=.cache/targets/172.16.1.6.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.16.1.6.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.16.1.6//172.16.1.6--cisco--MTc0ODExMDEy.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/172.18.1.20/
+ ip=172.18.1.20
+ final_file=.cache/targets/172.18.1.20.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/172.18.1.20.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/172.18.1.20//172.18.1.20--cisco--MTc0ODExMDEy.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.1/
+ ip=192.168.0.1
+ final_file=.cache/targets/192.168.0.1.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.1.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.1//192.168.0.1--cisco--MTc0ODExMDEy.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /fortinet/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=6
+ [[ true == true ]]
+ message 'Target Site:   fortinet'
+ [[ -n Target Site:   fortinet ]]
+ local 'message=Target Site:   fortinet'
+ echo -e 'Target Site:   fortinet'
+ return 0
+ message 'Total Configs: 6'
+ [[ -n Total Configs: 6 ]]
+ local 'message=Total Configs: 6'
+ echo -e 'Total Configs: 6'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 6 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110129569126000 24061
+ export batch_id=MTc0ODExMDEy
+ batch_id=MTc0ODExMDEy
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110129-8680
+ batch_configs_list=configs--MTc0ODExMDEy-1748110129-8680.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ printf '%s\n' configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEy'
+ [[ -n Batch ID: MTc0ODExMDEy ]]
+ local 'message=Batch ID: MTc0ODExMDEy'
+ echo -e 'Batch ID: MTc0ODExMDEy'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110129-8680'
+ [[ -n Batch Suffix:   1748110129-8680 ]]
+ local 'message=Batch Suffix:   1748110129-8680'
+ echo -e 'Batch Suffix:   1748110129-8680'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEy-1748110129-8680.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEy-1748110129-8680.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEy-1748110129-8680.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEy-1748110129-8680.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ local base=configs--MTc0ODExMDEy-1748110129-8680.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEy-1748110129-8680.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEy-1748110129-8680.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEy-1748110129-8680.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-branch-vpn-01.cfg
++ local full_path=configs/fortinet/fg-branch-vpn-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
++ return 0
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-campus-core.cfg
++ local full_path=configs/fortinet/fg-campus-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-campus-core.cfg
++ return 0
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-datacenter-east.cfg
++ local full_path=configs/fortinet/fg-datacenter-east.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
++ return 0
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-fw-dmz-01.cfg
++ local full_path=configs/fortinet/fg-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
++ return 0
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-lab-test-fw.cfg
++ local full_path=configs/fortinet/fg-lab-test-fw.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
++ return 0
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.0.2.50 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fg-fw-dmz-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-fw-dmz-01.cfg
+ [[ :configs/fortinet/fg-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\l\a\b\-\t\e\s\t\-\f\w\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/fortinet/fg-lab-test-fw.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg
+ [[ :configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\l\a\b\-\t\e\s\t\-\f\w\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/10.0.2.3.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/10.0.2.3
+ tracing_record=targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json
+ mkdir -p targets/10.0.2.3
+ touch targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json
+ job_pid=21092
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ [[ true == true ]]
+ generate_configslist 10.0.2.3 targets/10.0.2.3.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json
+ message 'Matched IPs to [fortinet] configs (1):'
+ local ip_addr=10.0.2.3
+ [[ -n Matched IPs to [fortinet] configs (1): ]]
+ local target_file=targets/10.0.2.3.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEy-1748110129-8680.list
+ local tracing_record=targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json
+ local 'message=Matched IPs to [fortinet] configs (1):'
+ echo -e 'Matched IPs to [fortinet] configs (1):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=10.0.2.3
+ config_raw=configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg
++ grep -lE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
++ sed 's|configs/fortinet/||g'
+ config_cleaned=fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ printf '%-6s | %-15s => %s\n' 21092 10.0.2.3 fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'matched_files=configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg ]]
+ config_json='[]'
+ (( i < count ))
+ echo
+ IFS=
+ read -r config_file
+ (( i++ ))
+ (( i < count ))
+ config_file=fortinet/fg-fw-dmz-01.cfg
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21092
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ wc -l
+ config_lines='     118'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fg-fw-dmz-01.cfg
++ wc -l
++ tr -d ' '
+ match_count=1
+ site=fortinet
+ device=fg-fw-dmz-01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fg-fw-dmz-01.cfg --argjson lines '     118' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-lab-test-fw.cfg
++ wc -l
+ config_lines='     176'
++ grep -oE '(^|[^0-9.])10\.0\.2\.3([^0-9.]|$)' configs/fortinet/fg-lab-test-fw.cfg
++ wc -l
++ tr -d ' '
+ match_count=2
+ site=fortinet
+ device=fg-lab-test-fw.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
] ]]
++ echo -en '[
  {
++ jq --arg site fortinet --arg device fg-lab-test-fw.cfg --argjson lines '     176' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
++ jq '{ configs: . }'
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fg-fw-dmz-01.cfg"
      },
      "lines": 118,
      "count": 1
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-lab-test-fw.cfg"
      },
      "lines": 176,
      "count": 2
    }
  ]
}'
+ jq -r
+ [[ -n targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json ]]
+ [[ -f targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json targets/10.0.2.3.json
+ mv -f targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json.tmp targets/10.0.2.3/10.0.2.3--fortinet--MTc0ODExMDEy.json
+ message 'Generated Config-File: targets/10.0.2.3.json'
+ [[ -n Generated Config-File: targets/10.0.2.3.json ]]
+ local 'message=Generated Config-File: targets/10.0.2.3.json'
+ echo -e 'Generated Config-File: targets/10.0.2.3.json'
+ return 0
+ return 0
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21092
+ ip_address=10.0.2.3
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\0\.\0\.\2\.\3 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\0\.\0\.\2\.\3 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 16 -gt 0 ]]
+ message 'Unmapped IPs (count): 16'
+ [[ -n Unmapped IPs (count): 16 ]]
+ local 'message=Unmapped IPs (count): 16'
+ echo -e 'Unmapped IPs (count): 16'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=1
+ ((  ip_index < total_ips  ))
+ ip_addr=10.0.2.3
++ printf %01d 1
+ padded_index=1
+ job_pid=21126
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=10.0.2.3
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (1)'
+ [[ -n PID   | IP Address (1) ]]
+ local 'message=PID   | IP Address (1)'
+ echo -e 'PID   | IP Address (1)'
+ return 0
+ parse_configs 10.0.2.3 1
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ local ip_addr=10.0.2.3
+ echo -e -------------------------
+ local padded_index=1
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 21126 10.0.2.3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21126
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=10.0.2.3' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/10.0.2.3.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=10.0.2.3 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  1 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21126
+ ip=10.0.2.3
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 6 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110131876326000 10450
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110131-6850
+ batch_configs_list=configs--MTc0ODExMDEz-1748110131-6850.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ printf '%s\n' configs/fortinet/fg-testing-config.cfg
+ range_first=6
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110131-6850'
+ [[ -n Batch Suffix:   1748110131-6850 ]]
+ local 'message=Batch Suffix:   1748110131-6850'
+ echo -e 'Batch Suffix:   1748110131-6850'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110131-6850.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110131-6850.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110131-6850.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110131-6850.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ local base=configs--MTc0ODExMDEz-1748110131-6850.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110131-6850.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110131-6850.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110131-6850.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     1'
+ [[ -n Batch Size:     1 ]]
+ local 'message=Batch Size:     1'
+ echo -e 'Batch Size:     1'
+ return 0
+ message 'Batch Ranges:   6 -> 6'
+ [[ -n Batch Ranges:   6 -> 6 ]]
+ local 'message=Batch Ranges:   6 -> 6'
+ echo -e 'Batch Ranges:   6 -> 6'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-testing-config.cfg
++ local full_path=configs/fortinet/fg-testing-config.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-testing-config.cfg
++ return 0
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110131-6850.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ sort -u
+ [[ -n '' ]]
+ continue
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 6 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.06pHj57RMS
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.06pHj57RMS
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.06pHj57RMS
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/10.0.2.3/
+ ip=10.0.2.3
+ final_file=.cache/targets/10.0.2.3.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/10.0.2.3.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/10.0.2.3.json targets/10.0.2.3//10.0.2.3--fortinet--MTc0ODExMDEy.json
+ mv -f .cache/targets/10.0.2.3.json.tmp .cache/targets/10.0.2.3.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /misc/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=8
+ [[ true == true ]]
+ message 'Target Site:   misc'
+ [[ -n Target Site:   misc ]]
+ local 'message=Target Site:   misc'
+ echo -e 'Target Site:   misc'
+ return 0
+ message 'Total Configs: 8'
+ [[ -n Total Configs: 8 ]]
+ local 'message=Total Configs: 8'
+ echo -e 'Total Configs: 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110132033147000 20739
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110132-29696
+ batch_configs_list=configs--MTc0ODExMDEz-1748110132-29696.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ printf '%s\n' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110132-29696'
+ [[ -n Batch Suffix:   1748110132-29696 ]]
+ local 'message=Batch Suffix:   1748110132-29696'
+ echo -e 'Batch Suffix:   1748110132-29696'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110132-29696.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110132-29696.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110132-29696.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110132-29696.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ local base=configs--MTc0ODExMDEz-1748110132-29696.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110132-29696.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110132-29696.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110132-29696.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw2.cfg
++ local full_path=configs/misc/fw2.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw2.cfg
++ return 0
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw3.cfg
++ local full_path=configs/misc/fw3.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw3.cfg
++ return 0
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw5.cfg
++ local full_path=configs/misc/fw5.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw5.cfg
++ return 0
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw6.cfg
++ local full_path=configs/misc/fw6.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw6.cfg
++ return 0
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch1.conf
++ local full_path=configs/misc/switch1.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch1.conf
++ return 0
+ message '  - misc/switch1.conf'
+ [[ -n   - misc/switch1.conf ]]
+ local 'message=  - misc/switch1.conf'
+ echo -e '  - misc/switch1.conf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-29696.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry='access-list OUTSIDE extended permit ip host 172.16.1.6 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110132283705000 29883
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110132-25655
+ batch_configs_list=configs--MTc0ODExMDEz-1748110132-25655.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ printf '%s\n' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ range_first=6
+ range_last=8
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110132-25655'
+ [[ -n Batch Suffix:   1748110132-25655 ]]
+ local 'message=Batch Suffix:   1748110132-25655'
+ echo -e 'Batch Suffix:   1748110132-25655'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110132-25655.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110132-25655.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110132-25655.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110132-25655.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ local base=configs--MTc0ODExMDEz-1748110132-25655.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110132-25655.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110132-25655.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110132-25655.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   6 -> 8'
+ [[ -n Batch Ranges:   6 -> 8 ]]
+ local 'message=Batch Ranges:   6 -> 8'
+ echo -e 'Batch Ranges:   6 -> 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch2.conf
++ local full_path=configs/misc/switch2.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch2.conf
++ return 0
+ message '  - misc/switch2.conf'
+ [[ -n   - misc/switch2.conf ]]
+ local 'message=  - misc/switch2.conf'
+ echo -e '  - misc/switch2.conf'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch3.conf
++ local full_path=configs/misc/switch3.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch3.conf
++ return 0
+ message '  - misc/switch3.conf'
+ [[ -n   - misc/switch3.conf ]]
+ local 'message=  - misc/switch3.conf'
+ echo -e '  - misc/switch3.conf'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch4.conf
++ local full_path=configs/misc/switch4.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch4.conf
++ return 0
+ message '  - misc/switch4.conf'
+ [[ -n   - misc/switch4.conf ]]
+ local 'message=  - misc/switch4.conf'
+ echo -e '  - misc/switch4.conf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-25655.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.18.1.20 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 8 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J2eoChwRr4
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J2eoChwRr4
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J2eoChwRr4
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ target_listing=("${target_addresses_source[@]:ip_offset:ip_batch_size}")
+ export target_listing
+ message 'Processing IPs [17]: 10 -> 19'
+ [[ -n Processing IPs [17]: 10 -> 19 ]]
+ local 'message=Processing IPs [17]: 10 -> 19'
+ echo -e 'Processing IPs [17]: 10 -> 19'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ mapfile -t site_folders
++ cut -d/ -f2 .cache/configs.list
++ sort -u
+ local batch_size=5
+ [[ true == true ]]
+ message 'Site Folders:'
+ [[ -n Site Folders: ]]
+ local 'message=Site Folders:'
+ echo -e 'Site Folders:'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - cisco'
+ [[ -n   - cisco ]]
+ local 'message=  - cisco'
+ echo -e '  - cisco'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - fortinet'
+ [[ -n   - fortinet ]]
+ local 'message=  - fortinet'
+ echo -e '  - fortinet'
+ return 0
+ for site in "${site_folders[@]}"
+ message '  - misc'
+ [[ -n   - misc ]]
+ local 'message=  - misc'
+ echo -e '  - misc'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch processing (outer):'
+ [[ -n Batch processing (outer): ]]
+ local 'message=Batch processing (outer):'
+ echo -e 'Batch processing (outer):'
+ return 0
+ message 'Batch size: 5'
+ [[ -n Batch size: 5 ]]
+ local 'message=Batch size: 5'
+ echo -e 'Batch size: 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Parallel threads:   100'
+ [[ -n Parallel threads:   100 ]]
+ local 'message=Parallel threads:   100'
+ echo -e 'Parallel threads:   100'
+ return 0
+ message 'Target IPs (count): 7'
+ [[ -n Target IPs (count): 7 ]]
+ local 'message=Target IPs (count): 7'
+ echo -e 'Target IPs (count): 7'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /cisco/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=13
+ [[ true == true ]]
+ message 'Target Site:   cisco'
+ [[ -n Target Site:   cisco ]]
+ local 'message=Target Site:   cisco'
+ echo -e 'Target Site:   cisco'
+ return 0
+ message 'Total Configs: 13'
+ [[ -n Total Configs: 13 ]]
+ local 'message=Total Configs: 13'
+ echo -e 'Total Configs: 13'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110132471367000 27581
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110132-27313
+ batch_configs_list=configs--MTc0ODExMDEz-1748110132-27313.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ printf '%s\n' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110132-27313'
+ [[ -n Batch Suffix:   1748110132-27313 ]]
+ local 'message=Batch Suffix:   1748110132-27313'
+ echo -e 'Batch Suffix:   1748110132-27313'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110132-27313.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110132-27313.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110132-27313.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110132-27313.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local base=configs--MTc0ODExMDEz-1748110132-27313.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110132-27313.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110132-27313.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110132-27313.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/access-sw1-west.cfg
++ local full_path=configs/cisco/access-sw1-west.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-sw1-west.cfg
++ return 0
+ message '  - cisco/access-sw1-west.cfg'
+ [[ -n   - cisco/access-sw1-west.cfg ]]
+ local 'message=  - cisco/access-sw1-west.cfg'
+ echo -e '  - cisco/access-sw1-west.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/access-switch-07.cfg
++ local full_path=configs/cisco/access-switch-07.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/access-switch-07.cfg
++ return 0
+ message '  - cisco/access-switch-07.cfg'
+ [[ -n   - cisco/access-switch-07.cfg ]]
+ local 'message=  - cisco/access-switch-07.cfg'
+ echo -e '  - cisco/access-switch-07.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-fw-03.cfg
++ local full_path=configs/cisco/branch-fw-03.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-03.cfg
++ return 0
+ message '  - cisco/branch-fw-03.cfg'
+ [[ -n   - cisco/branch-fw-03.cfg ]]
+ local 'message=  - cisco/branch-fw-03.cfg'
+ echo -e '  - cisco/branch-fw-03.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-fw-snmp.cfg
++ local full_path=configs/cisco/branch-fw-snmp.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-fw-snmp.cfg
++ return 0
+ message '  - cisco/branch-fw-snmp.cfg'
+ [[ -n   - cisco/branch-fw-snmp.cfg ]]
+ local 'message=  - cisco/branch-fw-snmp.cfg'
+ echo -e '  - cisco/branch-fw-snmp.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/branch-isr-02.cfg
++ local full_path=configs/cisco/branch-isr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/branch-isr-02.cfg
++ return 0
+ message '  - cisco/branch-isr-02.cfg'
+ [[ -n   - cisco/branch-isr-02.cfg ]]
+ local 'message=  - cisco/branch-isr-02.cfg'
+ echo -e '  - cisco/branch-isr-02.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/access-sw1-west.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\1\-\w\e\s\t\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-sw1-west.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' ip address 192.168.0.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg
+ [[ :configs/cisco/access-sw1-west.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/access-switch-07.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg
+ [[ :configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\a\c\c\e\s\s\-\s\w\i\t\c\h\-\0\7\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/access-switch-07.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/access-switch-07.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-fw-03.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-fw-03.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-03.cfg
+ entry='access-list OUTSIDE extended permit ip host 192.168.2.12 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\0\3\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-fw-snmp.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/branch-fw-snmp.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg
+ [[ :configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-fw-snmp.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-snmp.cfg
+ [[ :configs/cisco/branch-fw-snmp.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\f\w\-\s\n\m\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg
+ [[ :configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/branch-isr-02.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg
+ [[ :configs/cisco/branch-fw-03.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg:configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg:configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 172.18.1.20'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/branch-isr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/branch-isr-02.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg
+ [[ :configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\b\r\a\n\c\h\-\i\s\r\-\0\2\.\c\f\g\:* ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-snmp.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg:configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-snmp.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg:configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.100.100
+ tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.100.100
+ touch targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ job_pid=21622
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/203.0.113.25
+ tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/203.0.113.25
+ local matched_files=configs/cisco/access-switch-07.cfg
+ [[ -n configs/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/access-switch-07.cfg
++ wc -l
+ touch targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ config_lines='      32'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/access-switch-07.cfg
++ wc -l
++ tr -d ' '
+ job_pid=21636
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.2.12.json
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=access-switch-07.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      32' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.2.12
+ tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.2.12
+ local matched_files=configs/cisco/branch-fw-snmp.cfg
+ [[ -n configs/cisco/branch-fw-snmp.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-snmp.cfg
++ wc -l
+ touch targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json
+ config_lines='      31'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/branch-fw-snmp.cfg
+ job_pid=21654
+ targets_jobs_pid+=("${job_pid}")
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
]'
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.2.12
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.100.json
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
] ]]
++ tr -d ' '
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 1
  }
]'
++ return 0
+ generate_configslist 192.168.2.12 targets/192.168.2.12.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json
+ local ip_addr=192.168.2.12
+ local target_file=targets/192.168.2.12.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=2
+ site=cisco
+ device=branch-fw-snmp.cfg
++ print '[]'
+ site_name=cisco
++ [[ -n [] ]]
++ echo -en '[]'
+ target_dirpath=targets/192.168.0.100
++ return 0
+ tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.0.100
++ jq --arg site cisco --arg device branch-fw-snmp.cfg --argjson lines '      31' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local 'matched_files=configs/cisco/branch-fw-03.cfg
configs/cisco/branch-fw-snmp.cfg
configs/cisco/branch-isr-02.cfg'
+ [[ -n configs/cisco/branch-fw-03.cfg
configs/cisco/branch-fw-snmp.cfg
configs/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 32,
      "count": 1
    }
  ]
}'
+ config_file=cisco/branch-fw-03.cfg
+ jq -r
++ wc -l
+ touch targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ config_lines='      34'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/branch-fw-03.cfg
++ wc -l
+ [[ -n targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json targets/192.168.100.100.json
++ tr -d ' '
+ job_pid=21675
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
+ generate_configslist 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
+ local ip_addr=192.168.0.100
+ local target_file=targets/192.168.0.100.json
++ jq '{ configs: . }'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ return 0
++ grep -lE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=4
+ site=cisco
+ device=branch-fw-03.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device branch-fw-03.cfg --argjson lines '      34' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local 'matched_files=configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg'
+ site_name=cisco
+ [[ -n configs/cisco/access-sw1-west.cfg
configs/cisco/access-switch-07.cfg ]]
+ config_json='[]'
+ target_dirpath=targets/198.51.100.75
+ IFS=
+ read -r config_file
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/198.51.100.75
+ config_file=cisco/access-sw1-west.cfg
+ mv -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json.tmp targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-snmp.cfg"
      },
      "lines": 31,
      "count": 2
    }
  ]
}'
+ jq -r
++ wc -l
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
+ return 0
+ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
+ config_lines='      29'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-snmp.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' configs/cisco/access-sw1-west.cfg
++ wc -l
++ tr -d ' '
+ [[ -n targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json targets/203.0.113.25.json
+ job_pid=21699
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ config_lines='      31'
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
++ sed -E 's|^configs/||'
+ match_count=2
+ site=cisco
+ device=access-sw1-west.cfg
++ cut -d/ -f1
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/branch-fw-snmp.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device access-sw1-west.cfg --argjson lines '      29' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.1.11
+ tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.1.11
+ local 'matched_files=configs/cisco/branch-fw-03.cfg
configs/cisco/branch-isr-02.cfg'
+ [[ -n configs/cisco/branch-fw-03.cfg
configs/cisco/branch-isr-02.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-fw-03.cfg
+ mv -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json.tmp targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ match_count=2
+ site=cisco
+ device=branch-fw-snmp.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
++ jq --arg site cisco --arg device branch-fw-snmp.cfg --argjson lines '      31' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
+ touch targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ IFS=
+ read -r config_file
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ config_file=cisco/access-switch-07.cfg
+ return 0
+ return 0
+ config_lines='      34'
++ wc -l
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/branch-fw-03.cfg
++ wc -l
+ job_pid=21727
+ targets_jobs_pid+=("${job_pid}")
++ tr -d ' '
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ [[ true == true ]]
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ message 'Matched IPs to [cisco] configs (6):'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110132-27313.list
+ local tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ [[ -n Matched IPs to [cisco] configs (6): ]]
+ local 'message=Matched IPs to [cisco] configs (6):'
+ echo -e 'Matched IPs to [cisco] configs (6):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.0.100
+ config_raw=configs/cisco/access-sw1-west.cfg:configs/cisco/access-switch-07.cfg
+ config_lines='      32'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/access-sw1-west.cfg configs/cisco/access-switch-07.cfg configs/cisco/branch-fw-03.cfg configs/cisco/branch-fw-snmp.cfg configs/cisco/branch-isr-02.cfg
+ IFS=
+ read -r config_file
+ config_file=cisco/branch-isr-02.cfg
++ sed 's|configs/cisco/||g'
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' configs/cisco/access-switch-07.cfg
++ wc -l
+ match_count=4
+ site=cisco
+ device=branch-fw-03.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device branch-fw-03.cfg --argjson lines '      34' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_cleaned=access-sw1-west.cfg:access-switch-07.cfg
+ local matched_files=configs/cisco/branch-isr-02.cfg
+ [[ -n configs/cisco/branch-isr-02.cfg ]]
+ printf '%-6s | %-15s => %s\n' 21675 192.168.0.100 access-sw1-west.cfg:access-switch-07.cfg
+ config_json='[]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ IFS=
+ read -r config_file
+ ip=192.168.100.100
+ config_file=cisco/branch-isr-02.cfg
+ match_count=2
+ config_raw=configs/cisco/access-switch-07.cfg
+ config_lines='      43'
+ site=cisco
+ device=access-switch-07.cfg
++ wc -l
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ grep -oE '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  }
]'
++ wc -l
++ jq --arg site cisco --arg device access-switch-07.cfg --argjson lines '      32' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
++ tr -d ' '
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      43'
+ config_file=cisco/branch-isr-02.cfg
+ config_cleaned=access-switch-07.cfg
+ printf '%-6s | %-15s => %s\n' 21622 192.168.100.100 access-switch-07.cfg
+ match_count=2
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ site=cisco
+ ip=192.168.2.12
+ device=branch-isr-02.cfg
+ config_raw=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-fw-snmp.cfg:configs/cisco/branch-isr-02.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
++ sed 's|configs/cisco/||g'
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ tr -d ' '
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
] ]]
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_lines='      43'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
    "count": 2
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
+ match_count=1
    "count": 2
+ config_cleaned=branch-fw-03.cfg:branch-fw-snmp.cfg:branch-isr-02.cfg
  }
] ]]
+ site=cisco
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "access-sw1-west.cfg"
    },
    "lines": 29,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "access-switch-07.cfg"
    },
    "lines": 32,
+ printf '%-6s | %-15s => %s\n' 21654 192.168.2.12 branch-fw-03.cfg:branch-fw-snmp.cfg:branch-isr-02.cfg
+ device=branch-isr-02.cfg
    "count": 2
  }
]'
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ return 0
+ ip=192.168.1.11
+ config_raw=configs/cisco/branch-isr-02.cfg
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/branch-isr-02.cfg
++ wc -l
++ tr -d ' '
++ sed 's|configs/cisco/||g'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ match_count=3
+ site=cisco
+ device=branch-isr-02.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
++ jq '{ configs: . }'
    "lines": 43,
    "count": 2
  }
]'
+ config_cleaned=branch-isr-02.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "access-sw1-west.cfg"
      },
      "lines": 29,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "access-switch-07.cfg"
      },
      "lines": 32,
      "count": 2
    }
  ]
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
+ printf '%-6s | %-15s => %s\n' 21727 192.168.1.11 branch-isr-02.cfg
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=203.0.113.25
+ config_raw=configs/cisco/branch-fw-snmp.cfg
}'
    },
    "lines": 31,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 2
+ jq -r
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-snmp.cfg"
    },
    "lines": 31,
    "count": 2
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 2
  }
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
]'
++ return 0
++ jq --arg site cisco --arg device branch-isr-02.cfg --argjson lines '      43' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  }
]'
++ return 0
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
++ jq '{ configs: . }'
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 1
  }
]'
++ return 0
+ config_cleaned=branch-fw-snmp.cfg
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-03.cfg"
      },
      "lines": 34,
      "count": 4
    },
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-snmp.cfg"
      },
      "lines": 31,
      "count": 2
    },
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 2
    }
  ]
}'
+ jq -r
+ printf '%-6s | %-15s => %s\n' 21636 203.0.113.25 branch-fw-snmp.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=configs/cisco/branch-fw-03.cfg:configs/cisco/branch-isr-02.cfg
++ sed 's|configs/cisco/||g'
+ [[ -n targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json ]]
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json targets/192.168.0.100.json
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "branch-fw-03.cfg"
    },
    "lines": 34,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "branch-isr-02.cfg"
    },
    "lines": 43,
    "count": 3
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_cleaned=branch-fw-03.cfg:branch-isr-02.cfg
+ printf '%-6s | %-15s => %s\n' 21699 198.51.100.75 branch-fw-03.cfg:branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  6 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21622
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21636
+ ip_address=203.0.113.25
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21654
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21675
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21699
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21727
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ [[ -n targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json targets/192.168.2.12.json
+ mv -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json.tmp targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "branch-fw-03.cfg"
      },
      "lines": 34,
      "count": 4
    },
    {
      "config": {
        "site": "cisco",
        "device": "branch-isr-02.cfg"
      },
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json targets/192.168.1.11.json
+ message 'Generated Config-File: targets/192.168.0.100.json'
+ [[ -n Generated Config-File: targets/192.168.0.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.0.100.json'
+ echo -e 'Generated Config-File: targets/192.168.0.100.json'
+ return 0
+ return 0
+ mv -f targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json.tmp targets/192.168.2.12/192.168.2.12--cisco--MTc0ODExMDEz.json
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json targets/198.51.100.75.json
+ message 'Generated Config-File: targets/192.168.2.12.json'
+ [[ -n Generated Config-File: targets/192.168.2.12.json ]]
+ local 'message=Generated Config-File: targets/192.168.2.12.json'
+ echo -e 'Generated Config-File: targets/192.168.2.12.json'
+ return 0
+ return 0
+ mv -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json.tmp targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/192.168.1.11.json'
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
+ return 0
+ return 0
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21654
+ ip_address=192.168.2.12
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21675
+ ip_address=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21699
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 21727
+ ip_address=192.168.1.11
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\2\.\1\2 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ [[ true == true ]]
+ [[ 11 -gt 0 ]]
+ message 'Unmapped IPs (count): 11'
+ [[ -n Unmapped IPs (count): 11 ]]
+ local 'message=Unmapped IPs (count): 11'
+ echo -e 'Unmapped IPs (count): 11'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=6
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %01d 1
+ padded_index=1
+ job_pid=21810
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ parse_configs 192.168.100.100 1
+ local ip_addr=192.168.100.100
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=21813
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.100.100' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ ip_addr=192.168.2.12
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ parse_configs 203.0.113.25 2
+ local ip_addr=203.0.113.25
+ local padded_index=2
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=3
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=203.0.113.25' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ job_pid=21817
+ configs_jobs_pid+=("${job_pid}")
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=192.168.2.12
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.100
+ parse_configs 192.168.2.12 3
+ local ip_addr=192.168.2.12
+ local padded_index=3
++ printf %01d 4
+ logfile=.logs/jobs/192.168.100.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=4
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.2.12' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=21822
+ [[ false == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--verbose)
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.100
+ [[ true == true ]]
+ execute+=(--debug)
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ ip_addr=198.51.100.75
+ parse_configs 192.168.0.100 4
+ logfile=.logs/jobs/203.0.113.25.job
+ local ip_addr=192.168.0.100
+ [[ true == true ]]
+ local padded_index=4
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ printf %01d 5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=5
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.0.100' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ job_pid=21827
+ execute+=(--classify)
+ configs_jobs_pid+=("${job_pid}")
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
+ parse_configs 198.51.100.75 5
+ local ip_addr=198.51.100.75
+ local padded_index=5
+ logfile=.logs/jobs/192.168.2.12.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.2.12 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
++ IFS=,
++ print cfg,conf,cnf
++ printf %01d 6
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=6
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=198.51.100.75' '--index=5' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=21832
+ configs_jobs_pid+=("${job_pid}")
+ logfile=.logs/jobs/192.168.0.100.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.0.100 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ ((  ip_index < total_ips  ))
+ parse_configs 192.168.1.11 6
+ local ip_addr=192.168.1.11
+ local padded_index=6
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (6)'
+ [[ -n PID   | IP Address (6) ]]
+ local 'message=PID   | IP Address (6)'
+ echo -e 'PID   | IP Address (6)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 21827 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
++ IFS=,
+ printf '%-5s | %s\n' 21822 192.168.0.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 21817 192.168.2.12
++ print cfg,conf,cnf
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 21810 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
++ [[ -n cfg,conf,cnf ]]
+ printf '%-5s | %s\n' 21813 203.0.113.25
++ echo -en cfg,conf,cnf
+ for pid in "${!configs_jobs2ips_mapping[@]}"
++ return 0
+ printf '%-5s | %s\n' 21832 192.168.1.11
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  6 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21810
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.1.11' '--index=6' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ valid_configs_jobs_pid+=("$pid")
+ declare -a execute
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21813
+ [[ true == true ]]
+ execute+=(--classify)
+ valid_configs_jobs_pid+=("$pid")
+ [[ false == true ]]
+ for pid in "${configs_jobs_pid[@]}"
+ [[ true == true ]]
+ kill -0 21817
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ valid_configs_jobs_pid+=("$pid")
+ [[ true == true ]]
+ for pid in "${configs_jobs_pid[@]}"
+ mkdir -p .logs/jobs .logs/errors
+ kill -0 21822
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21827
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21832
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=6 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  6 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21810
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21813
+ ip=203.0.113.25
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21817
+ ip=192.168.2.12
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21822
+ ip=192.168.0.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21827
+ ip=198.51.100.75
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 21832
+ ip=192.168.1.11
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110134857072000 21946
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110134-23264
+ batch_configs_list=configs--MTc0ODExMDEz-1748110134-23264.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ printf '%s\n' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
+ range_first=6
+ range_last=10
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110134-23264'
+ [[ -n Batch Suffix:   1748110134-23264 ]]
+ local 'message=Batch Suffix:   1748110134-23264'
+ echo -e 'Batch Suffix:   1748110134-23264'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110134-23264.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110134-23264.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110134-23264.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110134-23264.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local base=configs--MTc0ODExMDEz-1748110134-23264.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110134-23264.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110134-23264.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110134-23264.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   6 -> 10'
+ [[ -n Batch Ranges:   6 -> 10 ]]
+ local 'message=Batch Ranges:   6 -> 10'
+ echo -e 'Batch Ranges:   6 -> 10'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/campus-sw-access01.cfg
++ local full_path=configs/cisco/campus-sw-access01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/campus-sw-access01.cfg
++ return 0
+ message '  - cisco/campus-sw-access01.cfg'
+ [[ -n   - cisco/campus-sw-access01.cfg ]]
+ local 'message=  - cisco/campus-sw-access01.cfg'
+ echo -e '  - cisco/campus-sw-access01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/core-fw-dmz-01.cfg
++ local full_path=configs/cisco/core-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-fw-dmz-01.cfg
++ return 0
+ message '  - cisco/core-fw-dmz-01.cfg'
+ [[ -n   - cisco/core-fw-dmz-01.cfg ]]
+ local 'message=  - cisco/core-fw-dmz-01.cfg'
+ echo -e '  - cisco/core-fw-dmz-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/core-router-01.cfg
++ local full_path=configs/cisco/core-router-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/core-router-01.cfg
++ return 0
+ message '  - cisco/core-router-01.cfg'
+ [[ -n   - cisco/core-router-01.cfg ]]
+ local 'message=  - cisco/core-router-01.cfg'
+ echo -e '  - cisco/core-router-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/datacenter-fw-core.cfg
++ local full_path=configs/cisco/datacenter-fw-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/datacenter-fw-core.cfg
++ return 0
+ message '  - cisco/datacenter-fw-core.cfg'
+ [[ -n   - cisco/datacenter-fw-core.cfg ]]
+ local 'message=  - cisco/datacenter-fw-core.cfg'
+ echo -e '  - cisco/datacenter-fw-core.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/dmz-fw2-backup.cfg
++ local full_path=configs/cisco/dmz-fw2-backup.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/dmz-fw2-backup.cfg
++ return 0
+ message '  - cisco/dmz-fw2-backup.cfg'
+ [[ -n   - cisco/dmz-fw2-backup.cfg ]]
+ local 'message=  - cisco/dmz-fw2-backup.cfg'
+ echo -e '  - cisco/dmz-fw2-backup.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' ip address 192.168.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 192.168.0.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\a\m\p\u\s\-\s\w\-\a\c\c\e\s\s\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/campus-sw-access01.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/campus-sw-access01.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/core-fw-dmz-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/core-fw-dmz-01.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-fw-dmz-01.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\r\o\u\t\e\r\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/core-router-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-router-01.cfg
+ [[ :configs/cisco/core-router-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\c\o\r\e\-\r\o\u\t\e\r\-\0\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/core-router-01.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' ip address 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 172.31.255.254'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/datacenter-fw-core.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\a\t\a\c\e\n\t\e\r\-\f\w\-\c\o\r\e\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/datacenter-fw-core.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/datacenter-fw-core.cfg
+ [[ :configs/cisco/datacenter-fw-core.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' ip address 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/dmz-fw2-backup.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg
+ [[ :configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/core-fw-dmz-01.cfg
+ [[ :configs/cisco/core-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/dmz-fw2-backup.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg
+ [[ :configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\d\m\z\-\f\w\2\-\b\a\c\k\u\p\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/dmz-fw2-backup.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-router-01.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/core-router-01.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.100.100.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/192.168.100.100
+ tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.100.100
+ touch targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ job_pid=22620
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
+ generate_configslist 192.168.100.100 targets/192.168.100.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ local ip_addr=192.168.100.100
+ local target_file=targets/192.168.100.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local tracing_record=targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
++ sed -E 's|^configs/||'
++ grep -lE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/203.0.113.25
+ tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/203.0.113.25
+ local 'matched_files=configs/cisco/datacenter-fw-core.cfg
configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n configs/cisco/datacenter-fw-core.cfg
configs/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/datacenter-fw-core.cfg
++ wc -l
+ touch targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ config_lines='      34'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/datacenter-fw-core.cfg
+ job_pid=22633
++ wc -l
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
++ tr -d ' '
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.0.100.json
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=1
+ site=cisco
+ device=datacenter-fw-core.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device datacenter-fw-core.cfg --argjson lines '      34' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.0.100
+ tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.0.100
+ local 'matched_files=configs/cisco/core-fw-dmz-01.cfg
configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n configs/cisco/core-fw-dmz-01.cfg
configs/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/core-fw-dmz-01.cfg
++ wc -l
+ touch targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ config_lines='      40'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/dmz-fw2-backup.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/core-fw-dmz-01.cfg
++ wc -l
++ tr -d ' '
++ wc -l
+ job_pid=22652
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 192.168.0.100 targets/192.168.0.100.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ target_file=targets/198.51.100.75.json
+ local ip_addr=192.168.0.100
+ local target_file=targets/192.168.0.100.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local tracing_record=targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ match_count=4
+ site=cisco
+ device=core-fw-dmz-01.cfg
+ config_lines='      47'
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device core-fw-dmz-01.cfg --argjson lines '      40' --argjson count 4 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ grep -oE '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)' configs/cisco/dmz-fw2-backup.cfg
++ wc -l
++ tr -d ' '
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/198.51.100.75
+ local matched_files=configs/cisco/campus-sw-access01.cfg
+ [[ -n configs/cisco/campus-sw-access01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/campus-sw-access01.cfg
++ wc -l
+ match_count=3
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      47' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  }
]'
+ config_lines='      31'
+ IFS=
+ read -r config_file
+ config_file=cisco/dmz-fw2-backup.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])192\.168\.0\.100([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg
++ wc -l
+ job_pid=22679
+ targets_jobs_pid+=("${job_pid}")
++ tr -d ' '
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/192.168.1.11.json
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ local ip_addr=198.51.100.75
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ config_lines='      47'
+ match_count=1
+ site=cisco
+ device=campus-sw-access01.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/dmz-fw2-backup.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
]'
++ wc -l
+ IFS=
+ read -r config_file
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device campus-sw-access01.cfg --argjson lines '      31' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ site_name=cisco
+ target_dirpath=targets/192.168.1.11
+ tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/192.168.1.11
+ local 'matched_files=configs/cisco/core-fw-dmz-01.cfg
configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n configs/cisco/core-fw-dmz-01.cfg
configs/cisco/dmz-fw2-backup.cfg ]]
+ config_json='[]'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
+ IFS=
+ read -r config_file
    },
++ jq '{ configs: . }'
    "lines": 47,
    "count": 3
  }
+ config_file=cisco/core-fw-dmz-01.cfg
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "datacenter-fw-core.cfg"
    },
    "lines": 34,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 3
  }
]'
++ return 0
++ wc -l
+ match_count=1
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ touch targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  }
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      47' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  }
]'
++ return 0
+ config_lines='      40'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "datacenter-fw-core.cfg"
      },
      "lines": 34,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 47,
      "count": 3
    }
  ]
}'
+ jq -r
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/core-fw-dmz-01.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
]'
+ job_pid=22707
+ targets_jobs_pid+=("${job_pid}")
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
] ]]
++ tr -d ' '
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "campus-sw-access01.cfg"
    },
    "lines": 31,
    "count": 1
  }
++ jq '{ configs: . }'
]'
++ return 0
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ generate_configslist 192.168.1.11 targets/192.168.1.11.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ [[ true == true ]]
+ local ip_addr=192.168.1.11
+ local target_file=targets/192.168.1.11.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110134-23264.list
+ local tracing_record=targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ message 'Matched IPs to [cisco] configs (5):'
+ [[ -n Matched IPs to [cisco] configs (5): ]]
+ local 'message=Matched IPs to [cisco] configs (5):'
+ echo -e 'Matched IPs to [cisco] configs (5):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
++ grep -lE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/campus-sw-access01.cfg configs/cisco/core-fw-dmz-01.cfg configs/cisco/core-router-01.cfg configs/cisco/datacenter-fw-core.cfg configs/cisco/dmz-fw2-backup.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=203.0.113.25
+ config_raw=configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
]'
++ sed 's|configs/cisco/||g'
+ IFS=
+ read -r config_file
+ match_count=3
+ site=cisco
+ device=core-fw-dmz-01.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
++ jq '{ configs: . }'
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
] ]]
++ echo -en '[
++ print '[]'
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 4
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
]'
++ [[ -n [] ]]
++ return 0
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device core-fw-dmz-01.cfg --argjson lines '      40' --argjson count 3 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=configs/cisco/core-router-01.cfg
+ [[ -n configs/cisco/core-router-01.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "campus-sw-access01.cfg"
      },
      "lines": 31,
      "count": 1
    }
  ]
}'
+ config_file=cisco/core-router-01.cfg
+ jq -r
+ [[ -n targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json targets/192.168.100.100.json
++ wc -l
+ config_cleaned=core-fw-dmz-01.cfg:dmz-fw2-backup.cfg
+ printf '%-6s | %-15s => %s\n' 22633 203.0.113.25 core-fw-dmz-01.cfg:dmz-fw2-backup.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.1.11
+ config_raw=configs/cisco/core-router-01.cfg
++ sed 's|configs/cisco/||g'
+ config_lines='      37'
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "core-fw-dmz-01.cfg"
      },
      "lines": 40,
      "count": 4
    },
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 47,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/dmz-fw2-backup.cfg
++ grep -oE '(^|[^0-9.])192\.168\.1\.11([^0-9.]|$)' configs/cisco/core-router-01.cfg
++ wc -l
++ wc -l
+ [[ -n targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json ]]
+ config_cleaned=core-router-01.cfg
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json targets/192.168.0.100.json
++ tr -d ' '
+ printf '%-6s | %-15s => %s\n' 22707 192.168.1.11 core-router-01.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ mv -f targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json.tmp targets/192.168.100.100/192.168.100.100--cisco--MTc0ODExMDEz.json
+ ip=192.168.0.100
+ config_raw=configs/cisco/campus-sw-access01.cfg
++ sed 's|configs/cisco/||g'
+ config_lines='      47'
+ match_count=2
+ site=cisco
+ device=core-router-01.cfg
+ message 'Generated Config-File: targets/192.168.100.100.json'
+ [[ -n Generated Config-File: targets/192.168.100.100.json ]]
+ local 'message=Generated Config-File: targets/192.168.100.100.json'
+ echo -e 'Generated Config-File: targets/192.168.100.100.json'
+ return 0
+ return 0
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/dmz-fw2-backup.cfg
++ print '[]'
++ wc -l
++ [[ -n [] ]]
+ [[ -n targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
++ echo -en '[]'
+ [[ -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
++ return 0
+ jq -s '{ configs: map(.configs) | add }' targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json targets/203.0.113.25.json
++ tr -d ' '
+ config_cleaned=campus-sw-access01.cfg
++ jq --arg site cisco --arg device core-router-01.cfg --argjson lines '      37' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ printf '%-6s | %-15s => %s\n' 22652 192.168.0.100 campus-sw-access01.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=192.168.100.100
+ config_raw=configs/cisco/datacenter-fw-core.cfg:configs/cisco/dmz-fw2-backup.cfg
++ sed 's|configs/cisco/||g'
+ mv -f targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json.tmp targets/192.168.0.100/192.168.0.100--cisco--MTc0ODExMDEz.json
+ match_count=1
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ message 'Generated Config-File: targets/192.168.0.100.json'
++ print '[
  {
    "config": {
+ [[ -n Generated Config-File: targets/192.168.0.100.json ]]
      "site": "cisco",
+ config_cleaned=datacenter-fw-core.cfg:dmz-fw2-backup.cfg
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
+ local 'message=Generated Config-File: targets/192.168.0.100.json'
    "count": 3
+ printf '%-6s | %-15s => %s\n' 22620 192.168.100.100 datacenter-fw-core.cfg:dmz-fw2-backup.cfg
  }
]'
+ echo -e 'Generated Config-File: targets/192.168.0.100.json'
++ jq --arg site cisco --arg device dmz-fw2-backup.cfg --argjson lines '      47' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
++ [[ -n [
+ return 0
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
+ ip=198.51.100.75
  }
] ]]
+ config_raw=configs/cisco/core-fw-dmz-01.cfg:configs/cisco/dmz-fw2-backup.cfg
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ mv -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json.tmp targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
++ sed 's|configs/cisco/||g'
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 2
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-router-01.cfg"
    },
    "lines": 37,
    "count": 2
  }
]'
++ return 0
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ config_cleaned=core-fw-dmz-01.cfg:dmz-fw2-backup.cfg
+ printf '%-6s | %-15s => %s\n' 22679 198.51.100.75 core-fw-dmz-01.cfg:dmz-fw2-backup.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  5 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22620
+ ip_address=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22633
+ ip_address=203.0.113.25
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22652
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
+ ip_address=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
+ kill -0 22679
    },
    "lines": 47,
    "count": 1
  }
]'
+ valid_targets_jobs_pid+=("$pid")
+ IFS=
+ read -r config_file
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22707
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "core-fw-dmz-01.cfg"
    },
    "lines": 40,
    "count": 3
  },
  {
    "config": {
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "core-router-01.cfg"
      },
      "lines": 37,
      "count": 2
    }
  ]
}'
      "site": "cisco",
      "device": "dmz-fw2-backup.cfg"
    },
    "lines": 47,
    "count": 1
  }
]'
+ jq -r
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "core-fw-dmz-01.cfg"
      },
      "lines": 40,
      "count": 3
    },
    {
      "config": {
        "site": "cisco",
        "device": "dmz-fw2-backup.cfg"
      },
      "lines": 47,
      "count": 1
    }
  ]
}'
+ jq -r
+ [[ -n targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json targets/192.168.1.11.json
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json targets/198.51.100.75.json
+ mv -f targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json.tmp targets/192.168.1.11/192.168.1.11--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/192.168.1.11.json'
+ [[ -n Generated Config-File: targets/192.168.1.11.json ]]
+ local 'message=Generated Config-File: targets/192.168.1.11.json'
+ echo -e 'Generated Config-File: targets/192.168.1.11.json'
+ return 0
+ return 0
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22679
+ ip_address=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 22707
+ ip_address=192.168.1.11
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\2\.\1\6\8\.\1\.\1\1 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\2\.\1\6\8\.\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \1\9\2\.\1\6\8\.\1\0\0\.\1\0\0 ]]
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ [[ true == true ]]
+ [[ 12 -gt 0 ]]
+ message 'Unmapped IPs (count): 12'
+ [[ -n Unmapped IPs (count): 12 ]]
+ local 'message=Unmapped IPs (count): 12'
+ echo -e 'Unmapped IPs (count): 12'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=5
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.100.100
++ printf %01d 1
+ padded_index=1
+ job_pid=22772
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.100.100
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
+ parse_configs 192.168.100.100 1
+ local ip_addr=192.168.100.100
+ local padded_index=1
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ padded_index=2
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.100.100' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ job_pid=22775
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.0.100
+ parse_configs 203.0.113.25 2
+ local ip_addr=203.0.113.25
+ local padded_index=2
++ printf %01d 3
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
+ padded_index=3
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=203.0.113.25' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ job_pid=22779
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ configs_jobs_pid+=("${job_pid}")
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=192.168.0.100
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 192.168.0.100 3
+ logfile=.logs/jobs/192.168.100.100.job
+ [[ true == true ]]
+ local ip_addr=192.168.0.100
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.100.100 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=3
++ printf %01d 4
++ IFS=,
++ print cfg,conf,cnf
+ padded_index=4
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.0.100' '--index=3' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ job_pid=22784
+ [[ true == true ]]
+ execute+=(--verbose)
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ ip_addr=192.168.1.11
+ parse_configs 198.51.100.75 4
+ logfile=.logs/jobs/203.0.113.25.job
+ [[ true == true ]]
+ local ip_addr=198.51.100.75
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local padded_index=4
++ printf %01d 5
+ padded_index=5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=22789
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=192.168.1.11
+ ((  ip_index < total_ips  ))
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=198.51.100.75' '--index=4' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ parse_configs 192.168.1.11 5
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ logfile=.logs/jobs/192.168.0.100.job
+ local ip_addr=192.168.1.11
+ [[ true == true ]]
+ local padded_index=5
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.0.100 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (5)'
+ [[ -n PID   | IP Address (5) ]]
+ local 'message=PID   | IP Address (5)'
+ echo -e 'PID   | IP Address (5)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 22779 192.168.0.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 22775 203.0.113.25
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 22772 192.168.100.100
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 22784 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 22789 192.168.1.11
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ IFS=,
+ ((  5 > 0  ))
++ print cfg,conf,cnf
+ valid_configs_jobs_pid=()
++ [[ -n cfg,conf,cnf ]]
+ for pid in "${configs_jobs_pid[@]}"
++ echo -en cfg,conf,cnf
+ kill -0 22772
++ return 0
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22775
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22779
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22784
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=192.168.1.11' '--index=5' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ kill -0 22789
+ [[ true == true ]]
+ execute+=(--classify)
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ [[ false == true ]]
+ sleep 0.5
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/192.168.1.11.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=192.168.1.11 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  5 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22772
+ ip=192.168.100.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22775
+ ip=203.0.113.25
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22779
+ ip=192.168.0.100
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22784
+ ip=198.51.100.75
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 22789
+ ip=192.168.1.11
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 13 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110137222921000 28601
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110137-23657
+ batch_configs_list=configs--MTc0ODExMDEz-1748110137-23657.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ printf '%s\n' configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
+ range_first=11
+ range_last=13
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   10'
+ [[ -n Batch offset:   10 ]]
+ local 'message=Batch offset:   10'
+ echo -e 'Batch offset:   10'
+ return 0
+ message 'Batch Suffix:   1748110137-23657'
+ [[ -n Batch Suffix:   1748110137-23657 ]]
+ local 'message=Batch Suffix:   1748110137-23657'
+ echo -e 'Batch Suffix:   1748110137-23657'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110137-23657.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110137-23657.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110137-23657.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110137-23657.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ local base=configs--MTc0ODExMDEz-1748110137-23657.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110137-23657.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110137-23657.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110137-23657.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   11 -> 13'
+ [[ -n Batch Ranges:   11 -> 13 ]]
+ local 'message=Batch Ranges:   11 -> 13'
+ echo -e 'Batch Ranges:   11 -> 13'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/hq-core-rtr-02.cfg
++ local full_path=configs/cisco/hq-core-rtr-02.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr-02.cfg
++ return 0
+ message '  - cisco/hq-core-rtr-02.cfg'
+ [[ -n   - cisco/hq-core-rtr-02.cfg ]]
+ local 'message=  - cisco/hq-core-rtr-02.cfg'
+ echo -e '  - cisco/hq-core-rtr-02.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/hq-core-rtr.cfg
++ local full_path=configs/cisco/hq-core-rtr.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/hq-core-rtr.cfg
++ return 0
+ message '  - cisco/hq-core-rtr.cfg'
+ [[ -n   - cisco/hq-core-rtr.cfg ]]
+ local 'message=  - cisco/hq-core-rtr.cfg'
+ echo -e '  - cisco/hq-core-rtr.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/cisco/perimeter-fw1.cfg
++ local full_path=configs/cisco/perimeter-fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en cisco/perimeter-fw1.cfg
++ return 0
+ message '  - cisco/perimeter-fw1.cfg'
+ [[ -n   - cisco/perimeter-fw1.cfg ]]
+ local 'message=  - cisco/perimeter-fw1.cfg'
+ echo -e '  - cisco/perimeter-fw1.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry='ntp server 198.51.100.75 prefer'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\h\q\-\c\o\r\e\-\r\t\r\-\0\2\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/hq-core-rtr-02.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr-02.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\h\q\-\c\o\r\e\-\r\t\r\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/cisco/hq-core-rtr.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/hq-core-rtr.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' ip address 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\p\e\r\i\m\e\t\e\r\-\f\w\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/cisco/perimeter-fw1.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\p\e\r\i\m\e\t\e\r\-\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 192.0.2.50'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\p\e\r\i\m\e\t\e\r\-\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\p\e\r\i\m\e\t\e\r\-\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg
+ [[ :configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg: == *\:\c\o\n\f\i\g\s\/\c\i\s\c\o\/\p\e\r\i\m\e\t\e\r\-\f\w\1\.\c\f\g\:* ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/cisco/perimeter-fw1.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr-02.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg ]]
+ tr : '\n'
+ sort -u
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/cisco/hq-core-rtr-02.cfg ]]
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/203.0.113.25
+ tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/203.0.113.25
+ touch targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ job_pid=23399
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ target_file=targets/198.51.100.75.json
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ local tracing_record=targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=cisco
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ mkdir -p targets/198.51.100.75
+ local 'matched_files=configs/cisco/hq-core-rtr.cfg
configs/cisco/perimeter-fw1.cfg'
+ [[ -n configs/cisco/hq-core-rtr.cfg
configs/cisco/perimeter-fw1.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=cisco/hq-core-rtr.cfg
++ wc -l
+ touch targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ config_lines='      28'
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/hq-core-rtr.cfg
++ wc -l
++ tr -d ' '
+ job_pid=23413
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ message 'Matched IPs to [cisco] configs (2):'
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ [[ -n Matched IPs to [cisco] configs (2): ]]
+ local 'message=Matched IPs to [cisco] configs (2):'
+ local ip_addr=198.51.100.75
+ echo -e 'Matched IPs to [cisco] configs (2):'
+ local target_file=targets/198.51.100.75.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110137-23657.list
+ local tracing_record=targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=configs/cisco/hq-core-rtr-02.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/hq-core-rtr-02.cfg configs/cisco/hq-core-rtr.cfg configs/cisco/perimeter-fw1.cfg
+ match_count=1
+ site=cisco
++ sed 's|configs/cisco/||g'
+ device=hq-core-rtr.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device hq-core-rtr.cfg --argjson lines '      28' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local matched_files=configs/cisco/hq-core-rtr-02.cfg
+ [[ -n configs/cisco/hq-core-rtr-02.cfg ]]
+ config_json='[]'
+ config_cleaned=hq-core-rtr-02.cfg
+ IFS=
+ read -r config_file
+ printf '%-6s | %-15s => %s\n' 23413 198.51.100.75 hq-core-rtr-02.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ config_file=cisco/hq-core-rtr-02.cfg
+ ip=203.0.113.25
+ config_raw=configs/cisco/hq-core-rtr.cfg:configs/cisco/perimeter-fw1.cfg
++ wc -l
++ sed 's|configs/cisco/||g'
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=cisco/perimeter-fw1.cfg
+ config_lines='      30'
+ config_cleaned=hq-core-rtr.cfg:perimeter-fw1.cfg
+ printf '%-6s | %-15s => %s\n' 23399 203.0.113.25 hq-core-rtr.cfg:perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
++ wc -l
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23399
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23413
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/cisco/hq-core-rtr-02.cfg
++ wc -l
++ tr -d ' '
+ config_lines='      53'
+ match_count=1
+ site=cisco
+ device=hq-core-rtr-02.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/cisco/perimeter-fw1.cfg
++ wc -l
++ tr -d ' '
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site cisco --arg device hq-core-rtr-02.cfg --argjson lines '      30' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=5
+ site=cisco
+ device=perimeter-fw1.cfg
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  }
]'
++ jq --arg site cisco --arg device perimeter-fw1.cfg --argjson lines '      53' --argjson count 5 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr-02.cfg"
    },
    "lines": 30,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr-02.cfg"
    },
    "lines": 30,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr-02.cfg"
    },
    "lines": 30,
    "count": 1
  }
] ]]
++ jq '{ configs: . }'
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr-02.cfg"
    },
    "lines": 30,
    "count": 1
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "perimeter-fw1.cfg"
    },
    "lines": 53,
    "count": 5
  }
]'
+ IFS=
+ read -r config_file
++ print '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "perimeter-fw1.cfg"
    },
    "lines": 53,
    "count": 5
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "perimeter-fw1.cfg"
    },
    "lines": 53,
    "count": 5
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "cisco",
      "device": "hq-core-rtr.cfg"
    },
    "lines": 28,
    "count": 1
  },
  {
    "config": {
      "site": "cisco",
      "device": "perimeter-fw1.cfg"
    },
    "lines": 53,
    "count": 5
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "hq-core-rtr-02.cfg"
      },
      "lines": 30,
      "count": 1
    }
  ]
}'
+ jq -r
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "hq-core-rtr.cfg"
      },
      "lines": 28,
      "count": 1
    },
    {
      "config": {
        "site": "cisco",
        "device": "perimeter-fw1.cfg"
      },
      "lines": 53,
      "count": 5
    }
  ]
}'
+ jq -r
+ [[ -n targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json targets/198.51.100.75.json
+ [[ -n targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
+ [[ -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json targets/203.0.113.25.json
+ mv -f targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json.tmp targets/198.51.100.75/198.51.100.75--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
+ mv -f targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json.tmp targets/203.0.113.25/203.0.113.25--cisco--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23399
+ ip_address=203.0.113.25
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23413
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ [[ true == true ]]
+ [[ 15 -gt 0 ]]
+ message 'Unmapped IPs (count): 15'
+ [[ -n Unmapped IPs (count): 15 ]]
+ local 'message=Unmapped IPs (count): 15'
+ echo -e 'Unmapped IPs (count): 15'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=2
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
++ printf %01d 1
+ padded_index=1
+ job_pid=23457
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 203.0.113.25 1
+ local ip_addr=203.0.113.25
+ local padded_index=1
++ printf %01d 2
+ padded_index=2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ job_pid=23460
+ configs_jobs_pid+=("${job_pid}")
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=203.0.113.25' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ [[ false == true ]]
+ ((  ip_index < total_ips  ))
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ message 'Background Jobs -> Managed Configs:'
+ parse_configs 198.51.100.75 2
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local ip_addr=198.51.100.75
+ local 'message=Background Jobs -> Managed Configs:'
+ local padded_index=2
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (2)'
+ [[ -n PID   | IP Address (2) ]]
+ local 'message=PID   | IP Address (2)'
+ echo -e 'PID   | IP Address (2)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 23457 203.0.113.25
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 23460 198.51.100.75
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23457
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23460
+ valid_configs_jobs_pid+=("$pid")
++ IFS=,
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
++ print cfg,conf,cnf
+ sleep 0.5
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=198.51.100.75' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23457
+ ip=203.0.113.25
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23460
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=15
+ [[ 15 -lt 13 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RO42cz2Asi
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RO42cz2Asi
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RO42cz2Asi
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.0.100/
+ ip=192.168.0.100
+ final_file=.cache/targets/192.168.0.100.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.0.100.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.0.100//192.168.0.100--cisco--MTc0ODExMDEz.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.1.11/
+ ip=192.168.1.11
+ final_file=.cache/targets/192.168.1.11.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.1.11.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.1.11//192.168.1.11--cisco--MTc0ODExMDEz.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.100.100/
+ ip=192.168.100.100
+ final_file=.cache/targets/192.168.100.100.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.100.100.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.100.100//192.168.100.100--cisco--MTc0ODExMDEz.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/192.168.2.12/
+ ip=192.168.2.12
+ final_file=.cache/targets/192.168.2.12.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/192.168.2.12.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/192.168.2.12//192.168.2.12--cisco--MTc0ODExMDEz.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/198.51.100.75//198.51.100.75--cisco--MTc0ODExMDEz.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/203.0.113.25/
+ ip=203.0.113.25
+ final_file=.cache/targets/203.0.113.25.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/203.0.113.25.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by(.config.site + ":" + .config.device)
                  )
                }' targets/203.0.113.25//203.0.113.25--cisco--MTc0ODExMDEz.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /fortinet/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=6
+ [[ true == true ]]
+ message 'Target Site:   fortinet'
+ [[ -n Target Site:   fortinet ]]
+ local 'message=Target Site:   fortinet'
+ echo -e 'Target Site:   fortinet'
+ return 0
+ message 'Total Configs: 6'
+ [[ -n Total Configs: 6 ]]
+ local 'message=Total Configs: 6'
+ echo -e 'Total Configs: 6'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 6 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110139627694000 7691
+ export batch_id=MTc0ODExMDEz
+ batch_id=MTc0ODExMDEz
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110139-6180
+ batch_configs_list=configs--MTc0ODExMDEz-1748110139-6180.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ printf '%s\n' configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDEz'
+ [[ -n Batch ID: MTc0ODExMDEz ]]
+ local 'message=Batch ID: MTc0ODExMDEz'
+ echo -e 'Batch ID: MTc0ODExMDEz'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110139-6180'
+ [[ -n Batch Suffix:   1748110139-6180 ]]
+ local 'message=Batch Suffix:   1748110139-6180'
+ echo -e 'Batch Suffix:   1748110139-6180'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDEz-1748110139-6180.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDEz-1748110139-6180.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDEz-1748110139-6180.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDEz-1748110139-6180.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ local base=configs--MTc0ODExMDEz-1748110139-6180.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDEz-1748110139-6180.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDEz-1748110139-6180.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDEz-1748110139-6180.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-branch-vpn-01.cfg
++ local full_path=configs/fortinet/fg-branch-vpn-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-branch-vpn-01.cfg
++ return 0
+ message '  - fortinet/fg-branch-vpn-01.cfg'
+ [[ -n   - fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=  - fortinet/fg-branch-vpn-01.cfg'
+ echo -e '  - fortinet/fg-branch-vpn-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-campus-core.cfg
++ local full_path=configs/fortinet/fg-campus-core.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-campus-core.cfg
++ return 0
+ message '  - fortinet/fg-campus-core.cfg'
+ [[ -n   - fortinet/fg-campus-core.cfg ]]
+ local 'message=  - fortinet/fg-campus-core.cfg'
+ echo -e '  - fortinet/fg-campus-core.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-datacenter-east.cfg
++ local full_path=configs/fortinet/fg-datacenter-east.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-datacenter-east.cfg
++ return 0
+ message '  - fortinet/fg-datacenter-east.cfg'
+ [[ -n   - fortinet/fg-datacenter-east.cfg ]]
+ local 'message=  - fortinet/fg-datacenter-east.cfg'
+ echo -e '  - fortinet/fg-datacenter-east.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-fw-dmz-01.cfg
++ local full_path=configs/fortinet/fg-fw-dmz-01.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-fw-dmz-01.cfg
++ return 0
+ message '  - fortinet/fg-fw-dmz-01.cfg'
+ [[ -n   - fortinet/fg-fw-dmz-01.cfg ]]
+ local 'message=  - fortinet/fg-fw-dmz-01.cfg'
+ echo -e '  - fortinet/fg-fw-dmz-01.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-lab-test-fw.cfg
++ local full_path=configs/fortinet/fg-lab-test-fw.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-lab-test-fw.cfg
++ return 0
+ message '  - fortinet/fg-lab-test-fw.cfg'
+ [[ -n   - fortinet/fg-lab-test-fw.cfg ]]
+ local 'message=  - fortinet/fg-lab-test-fw.cfg'
+ echo -e '  - fortinet/fg-lab-test-fw.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-campus-core.cfg configs/fortinet/fg-datacenter-east.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fg-branch-vpn-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=
+ [[ :: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\b\r\a\n\c\h\-\v\p\n\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=configs/fortinet/fg-branch-vpn-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-branch-vpn-01.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set ip 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set ip 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 10.10.10.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.1.11 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 172.16.1.6 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-campus-core.cfg
+ entry='  set subnet 192.168.100.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set ip 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-datacenter-east.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 203.0.113.25 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/fortinet/fg-fw-dmz-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 192.0.2.50 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set ip 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.0.2.50 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 172.31.255.254 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 192.168.0.100 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\f\w\-\d\m\z\-\0\1\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/fortinet/fg-fw-dmz-01.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-fw-dmz-01.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 10.0.2.3 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.2.3 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 198.51.100.75 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\l\a\b\-\t\e\s\t\-\f\w\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/fortinet/fg-lab-test-fw.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set ip 192.168.2.12 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.2.12 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 198.51.100.75 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\l\a\b\-\t\e\s\t\-\f\w\.\c\f\g\:* ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 10.0.1.2 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.1.10 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 203.0.113.25 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n x ]]
+ current=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg
+ [[ :configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg: == *\:\c\o\n\f\i\g\s\/\f\o\r\t\i\n\e\t\/\f\g\-\l\a\b\-\t\e\s\t\-\f\w\.\c\f\g\:* ]]
+ ip2files["$token"]+=:configs/fortinet/fg-lab-test-fw.cfg
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-lab-test-fw.cfg
+ entry='  set subnet 192.168.0.1 255.255.255.255'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ target_listing+=("$ip")
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ sort -u
+ tr : '\n'
+ for ip in "${!ip2files[@]}"
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg ]]
+ tr : '\n'
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/203.0.113.25.json
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/203.0.113.25
+ tracing_record=targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json
+ mkdir -p targets/203.0.113.25
+ touch targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json
+ job_pid=23843
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ for ip_addr in "${target_listing[@]}"
+ target_file=targets/198.51.100.75.json
+ generate_configslist 203.0.113.25 targets/203.0.113.25.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json
+ local ip_addr=203.0.113.25
+ local target_file=targets/203.0.113.25.json
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ local tracing_record=targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json
++ grep -lE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
++ sed -E 's|^configs/||'
++ cut -d/ -f1
+ site_name=fortinet
+ target_dirpath=targets/198.51.100.75
+ tracing_record=targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json
+ mkdir -p targets/198.51.100.75
+ local 'matched_files=configs/fortinet/fg-branch-vpn-01.cfg
configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg
configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-branch-vpn-01.cfg
++ wc -l
+ touch targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json
+ config_lines='     147'
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fg-branch-vpn-01.cfg
++ wc -l
+ job_pid=23856
++ tr -d ' '
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ [[ true == true ]]
+ generate_configslist 198.51.100.75 targets/198.51.100.75.json /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json
+ message 'Matched IPs to [fortinet] configs (2):'
+ local ip_addr=198.51.100.75
+ [[ -n Matched IPs to [fortinet] configs (2): ]]
+ local target_file=targets/198.51.100.75.json
+ local 'message=Matched IPs to [fortinet] configs (2):'
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDEz-1748110139-6180.list
+ echo -e 'Matched IPs to [fortinet] configs (2):'
+ local tracing_record=targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=203.0.113.25
+ config_raw=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg
++ grep -lE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fg-branch-vpn-01.cfg configs/fortinet/fg-fw-dmz-01.cfg configs/fortinet/fg-lab-test-fw.cfg
++ sed 's|configs/fortinet/||g'
+ match_count=1
+ site=fortinet
+ device=fg-branch-vpn-01.cfg
++ print '[]'
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fg-branch-vpn-01.cfg --argjson lines '     147' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ local 'matched_files=configs/fortinet/fg-branch-vpn-01.cfg
configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg'
+ [[ -n configs/fortinet/fg-branch-vpn-01.cfg
configs/fortinet/fg-fw-dmz-01.cfg
configs/fortinet/fg-lab-test-fw.cfg ]]
+ config_json='[]'
+ IFS=
+ read -r config_file
+ config_cleaned=fg-branch-vpn-01.cfg:fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ config_file=fortinet/fg-branch-vpn-01.cfg
+ printf '%-6s | %-15s => %s\n' 23843 203.0.113.25 fg-branch-vpn-01.cfg:fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip=198.51.100.75
+ config_raw=configs/fortinet/fg-branch-vpn-01.cfg:configs/fortinet/fg-fw-dmz-01.cfg:configs/fortinet/fg-lab-test-fw.cfg
++ wc -l
++ sed 's|configs/fortinet/||g'
+ config_lines='     147'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_cleaned=fg-branch-vpn-01.cfg:fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ config_file=fortinet/fg-fw-dmz-01.cfg
+ printf '%-6s | %-15s => %s\n' 23856 198.51.100.75 fg-branch-vpn-01.cfg:fg-fw-dmz-01.cfg:fg-lab-test-fw.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23843
+ valid_targets_jobs_pid+=("$pid")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23856
+ valid_targets_jobs_pid+=("$pid")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fg-branch-vpn-01.cfg
++ wc -l
++ wc -l
++ tr -d ' '
+ config_lines='     118'
+ match_count=2
+ site=fortinet
+ device=fg-branch-vpn-01.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fg-fw-dmz-01.cfg
++ wc -l
++ print '[]'
++ tr -d ' '
++ [[ -n [] ]]
++ echo -en '[]'
++ return 0
++ jq --arg site fortinet --arg device fg-branch-vpn-01.cfg --argjson lines '     147' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
+ match_count=2
+ site=fortinet
+ device=fg-fw-dmz-01.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  }
] ]]
++ echo -en '[
++ jq --arg site fortinet --arg device fg-fw-dmz-01.cfg --argjson lines '     118' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-fw-dmz-01.cfg
++ wc -l
+ config_lines='     118'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-lab-test-fw.cfg
++ wc -l
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fg-fw-dmz-01.cfg
++ wc -l
++ tr -d ' '
+ config_lines='     176'
+ match_count=1
+ site=fortinet
+ device=fg-fw-dmz-01.cfg
++ grep -oE '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)' configs/fortinet/fg-lab-test-fw.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  }
]'
++ jq --arg site fortinet --arg device fg-fw-dmz-01.cfg --argjson lines '     118' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ tr -d ' '
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  }
]'
++ return 0
+ match_count=1
+ site=fortinet
+ device=fg-lab-test-fw.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  }
]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  }
] ]]
++ jq --arg site fortinet --arg device fg-lab-test-fw.cfg --argjson lines '     176' --argjson count 1 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  }
]'
++ return 0
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
+ config_file=fortinet/fg-lab-test-fw.cfg
++ wc -l
+ config_lines='     176'
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 1
  }
]'
+ IFS=
+ read -r config_file
++ grep -oE '(^|[^0-9.])198\.51\.100\.75([^0-9.]|$)' configs/fortinet/fg-lab-test-fw.cfg
++ wc -l
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 1
  }
++ tr -d ' '
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 1
  }
]'
++ return 0
+ match_count=2
+ site=fortinet
+ device=fg-lab-test-fw.cfg
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
++ jq --arg site fortinet --arg device fg-lab-test-fw.cfg --argjson lines '     176' --argjson count 2 '. += [ { "config": { "site": $site, "device": $device }, "lines": $lines, "count": $count } ]'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fg-branch-vpn-01.cfg"
      },
      "lines": 147,
      "count": 1
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-fw-dmz-01.cfg"
      },
      "lines": 118,
      "count": 2
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-lab-test-fw.cfg"
      },
      "lines": 176,
      "count": 1
    }
  ]
}'
+ jq -r
+ config_json='[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
+ IFS=
+ read -r config_file
+ [[ -n targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json ]]
+ [[ -f targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json targets/203.0.113.25.json
++ print '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
++ jq '{ configs: . }'
++ [[ -n [
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
] ]]
++ echo -en '[
  {
    "config": {
      "site": "fortinet",
      "device": "fg-branch-vpn-01.cfg"
    },
    "lines": 147,
    "count": 2
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-fw-dmz-01.cfg"
    },
    "lines": 118,
    "count": 1
  },
  {
    "config": {
      "site": "fortinet",
      "device": "fg-lab-test-fw.cfg"
    },
    "lines": 176,
    "count": 2
  }
]'
++ return 0
+ final_json='{
  "configs": [
    {
      "config": {
        "site": "fortinet",
        "device": "fg-branch-vpn-01.cfg"
      },
      "lines": 147,
      "count": 2
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-fw-dmz-01.cfg"
      },
      "lines": 118,
      "count": 1
    },
    {
      "config": {
        "site": "fortinet",
        "device": "fg-lab-test-fw.cfg"
      },
      "lines": 176,
      "count": 2
    }
  ]
}'
+ jq -r
+ mv -f targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json.tmp targets/203.0.113.25/203.0.113.25--fortinet--MTc0ODExMDEz.json
+ [[ -n targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json ]]
+ [[ -f targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json ]]
+ jq -s '{ configs: map(.configs) | add }' targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json targets/198.51.100.75.json
+ message 'Generated Config-File: targets/203.0.113.25.json'
+ [[ -n Generated Config-File: targets/203.0.113.25.json ]]
+ local 'message=Generated Config-File: targets/203.0.113.25.json'
+ echo -e 'Generated Config-File: targets/203.0.113.25.json'
+ return 0
+ return 0
+ mv -f targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json.tmp targets/198.51.100.75/198.51.100.75--fortinet--MTc0ODExMDEz.json
+ message 'Generated Config-File: targets/198.51.100.75.json'
+ [[ -n Generated Config-File: targets/198.51.100.75.json ]]
+ local 'message=Generated Config-File: targets/198.51.100.75.json'
+ echo -e 'Generated Config-File: targets/198.51.100.75.json'
+ return 0
+ return 0
+ ((  2 > 0  ))
+ valid_targets_jobs_pid=()
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23843
+ ip_address=203.0.113.25
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 23856
+ ip_address=198.51.100.75
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.1.2 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.0.2.3 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 10.10.10.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.0.5 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.16.1.6 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.18.1.20 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 172.31.255.254 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.0.2.50 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.1 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.0.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.10 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.1.11 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.2.12 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 192.168.100.100 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ for current in "${target_listing[@]}"
+ [[ 198.51.100.75 == \1\9\8\.\5\1\.\1\0\0\.\7\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ for current in "${target_listing[@]}"
+ [[ 203.0.113.25 == \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ found=true
+ break
+ [[ true == false ]]
+ [[ true == true ]]
+ [[ 15 -gt 0 ]]
+ message 'Unmapped IPs (count): 15'
+ [[ -n Unmapped IPs (count): 15 ]]
+ local 'message=Unmapped IPs (count): 15'
+ echo -e 'Unmapped IPs (count): 15'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=2
+ ((  ip_index < total_ips  ))
+ ip_addr=203.0.113.25
++ printf %01d 1
+ padded_index=1
+ job_pid=23931
+ configs_jobs_pid+=("${job_pid}")
+ configs_jobs2ips_mapping["$job_pid"]=203.0.113.25
+ ((  ip_index < total_ips  ))
+ ip_addr=198.51.100.75
+ parse_configs 203.0.113.25 1
+ local ip_addr=203.0.113.25
+ local padded_index=1
++ printf %01d 2
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
+ padded_index=2
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=203.0.113.25' '--index=1' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ job_pid=23934
+ declare -a execute
+ configs_jobs_pid+=("${job_pid}")
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ configs_jobs2ips_mapping["$job_pid"]=198.51.100.75
+ ((  ip_index < total_ips  ))
+ parse_configs 198.51.100.75 2
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ local ip_addr=198.51.100.75
+ local padded_index=2
+ return 0
+ message 'PID   | IP Address (2)'
+ [[ -n PID   | IP Address (2) ]]
+ local 'message=PID   | IP Address (2)'
+ echo -e 'PID   | IP Address (2)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 23934 198.51.100.75
+ for pid in "${!configs_jobs2ips_mapping[@]}"
+ printf '%-5s | %s\n' 23931 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23931
+ valid_configs_jobs_pid+=("$pid")
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23934
+ valid_configs_jobs_pid+=("$pid")
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
++ IFS=,
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ return 0
+ execute=('./scripts/parse-configs.shell' '--configs=configs' '--ip-addr=198.51.100.75' '--index=2' '--matrix=matrix.json' '--reports=reports' '--file-ext=cfg,conf,cnf')
+ declare -a execute
+ [[ true == true ]]
+ execute+=(--classify)
+ [[ false == true ]]
+ [[ true == true ]]
+ execute+=(--verbose)
+ [[ true == true ]]
+ execute+=(--debug)
+ [[ true == true ]]
+ mkdir -p .logs/jobs .logs/errors
+ logfile=.logs/jobs/203.0.113.25.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=203.0.113.25 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ logfile=.logs/jobs/198.51.100.75.job
+ [[ true == true ]]
+ bash -x ./scripts/parse-configs.shell --configs=configs --ip-addr=198.51.100.75 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ local status=0
+ ((  status != 0  ))
+ return 0
+ local status=0
+ ((  status != 0  ))
+ return 0
+ ((  2 > 0  ))
+ valid_configs_jobs_pid=()
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23931
+ ip=203.0.113.25
+ for pid in "${configs_jobs_pid[@]}"
+ kill -0 23934
+ ip=198.51.100.75
+ configs_jobs_pid=("${valid_configs_jobs_pid[@]}")
+ sleep 0.5
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 6 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110141958014000 28503
+ export batch_id=MTc0ODExMDE0
+ batch_id=MTc0ODExMDE0
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110141-16665
+ batch_configs_list=configs--MTc0ODExMDE0-1748110141-16665.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ printf '%s\n' configs/fortinet/fg-testing-config.cfg
+ range_first=6
+ range_last=6
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDE0'
+ [[ -n Batch ID: MTc0ODExMDE0 ]]
+ local 'message=Batch ID: MTc0ODExMDE0'
+ echo -e 'Batch ID: MTc0ODExMDE0'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110141-16665'
+ [[ -n Batch Suffix:   1748110141-16665 ]]
+ local 'message=Batch Suffix:   1748110141-16665'
+ echo -e 'Batch Suffix:   1748110141-16665'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDE0-1748110141-16665.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDE0-1748110141-16665.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDE0-1748110141-16665.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDE0-1748110141-16665.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ local base=configs--MTc0ODExMDE0-1748110141-16665.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDE0-1748110141-16665.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDE0-1748110141-16665.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDE0-1748110141-16665.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     1'
+ [[ -n Batch Size:     1 ]]
+ local 'message=Batch Size:     1'
+ echo -e 'Batch Size:     1'
+ return 0
+ message 'Batch Ranges:   6 -> 6'
+ [[ -n Batch Ranges:   6 -> 6 ]]
+ local 'message=Batch Ranges:   6 -> 6'
+ echo -e 'Batch Ranges:   6 -> 6'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/fortinet/fg-testing-config.cfg
++ local full_path=configs/fortinet/fg-testing-config.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en fortinet/fg-testing-config.cfg
++ return 0
+ message '  - fortinet/fg-testing-config.cfg'
+ [[ -n   - fortinet/fg-testing-config.cfg ]]
+ local 'message=  - fortinet/fg-testing-config.cfg'
+ echo -e '  - fortinet/fg-testing-config.cfg'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110141-16665.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ for ip in "${target_listing[@]}"
+ targets["$ip"]=1
+ ip2files["$ip"]=
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/fortinet/fg-testing-config.cfg
+ for line in "${matched_lines[@]}"
+ file=configs/fortinet/fg-testing-config.cfg
+ entry='  set srcaddr "10.10.10.10"'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ continue
+ for ip in "${!ip2files[@]}"
+ [[ -n '' ]]
+ sort -u
+ continue
+ [[ true == true ]]
+ message 'Matched IPs to [fortinet] configs (0):'
+ [[ -n Matched IPs to [fortinet] configs (0): ]]
+ local 'message=Matched IPs to [fortinet] configs (0):'
+ echo -e 'Matched IPs to [fortinet] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 6 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7L2rfweiKs
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7L2rfweiKs
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7L2rfweiKs
+ return 0
+ shopt -s nullglob
+ for ip_dir in "${targets_location}"/*/
++ basename targets/198.51.100.75/
+ ip=198.51.100.75
+ final_file=.cache/targets/198.51.100.75.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/198.51.100.75.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/198.51.100.75.json targets/198.51.100.75//198.51.100.75--fortinet--MTc0ODExMDEz.json
+ mv -f .cache/targets/198.51.100.75.json.tmp .cache/targets/198.51.100.75.json
+ for ip_dir in "${targets_location}"/*/
++ basename targets/203.0.113.25/
+ ip=203.0.113.25
+ final_file=.cache/targets/203.0.113.25.json
+ mkdir -p .cache/targets
+ site_jsons=("${ip_dir}/${ip}"--*.json)
+ [[ 1 -eq 0 ]]
+ [[ -f .cache/targets/203.0.113.25.json ]]
+ jq -s '{
                  configs: (
                    map(.configs) | add |
                    unique_by( .config.site + ":" + .config.device )
                  )
                }' .cache/targets/203.0.113.25.json targets/203.0.113.25//203.0.113.25--fortinet--MTc0ODExMDEz.json
+ mv -f .cache/targets/203.0.113.25.json.tmp .cache/targets/203.0.113.25.json
+ shopt -u nullglob
+ [[ -d targets ]]
+ find targets -type f -name '*.json' -delete
+ find targets -type d -empty -delete
+ for site in "${site_folders[@]}"
+ oIFS=' 	
'
+ IFS='
'
+ read -r -d '' -a site_files
++ grep -F /misc/ .cache/configs.list
++ printf '\0'
+ IFS=' 	
'
+ total_files=8
+ [[ true == true ]]
+ message 'Target Site:   misc'
+ [[ -n Target Site:   misc ]]
+ local 'message=Target Site:   misc'
+ echo -e 'Target Site:   misc'
+ return 0
+ message 'Total Configs: 8'
+ [[ -n Total Configs: 8 ]]
+ local 'message=Total Configs: 8'
+ echo -e 'Total Configs: 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -d targets ]]
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ offset=0
+ [[ 0 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110142130380000 14286
+ export batch_id=MTc0ODExMDE0
+ batch_id=MTc0ODExMDE0
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110142-600
+ batch_configs_list=configs--MTc0ODExMDE0-1748110142-600.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ printf '%s\n' configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ range_first=1
+ range_last=5
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDE0'
+ [[ -n Batch ID: MTc0ODExMDE0 ]]
+ local 'message=Batch ID: MTc0ODExMDE0'
+ echo -e 'Batch ID: MTc0ODExMDE0'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   0'
+ [[ -n Batch offset:   0 ]]
+ local 'message=Batch offset:   0'
+ echo -e 'Batch offset:   0'
+ return 0
+ message 'Batch Suffix:   1748110142-600'
+ [[ -n Batch Suffix:   1748110142-600 ]]
+ local 'message=Batch Suffix:   1748110142-600'
+ echo -e 'Batch Suffix:   1748110142-600'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDE0-1748110142-600.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDE0-1748110142-600.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDE0-1748110142-600.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDE0-1748110142-600.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ local base=configs--MTc0ODExMDE0-1748110142-600.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDE0-1748110142-600.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDE0-1748110142-600.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDE0-1748110142-600.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     5'
+ [[ -n Batch Size:     5 ]]
+ local 'message=Batch Size:     5'
+ echo -e 'Batch Size:     5'
+ return 0
+ message 'Batch Ranges:   1 -> 5'
+ [[ -n Batch Ranges:   1 -> 5 ]]
+ local 'message=Batch Ranges:   1 -> 5'
+ echo -e 'Batch Ranges:   1 -> 5'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw2.cfg
++ local full_path=configs/misc/fw2.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw2.cfg
++ return 0
+ message '  - misc/fw2.cfg'
+ [[ -n   - misc/fw2.cfg ]]
+ local 'message=  - misc/fw2.cfg'
+ echo -e '  - misc/fw2.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw3.cfg
++ local full_path=configs/misc/fw3.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw3.cfg
++ return 0
+ message '  - misc/fw3.cfg'
+ [[ -n   - misc/fw3.cfg ]]
+ local 'message=  - misc/fw3.cfg'
+ echo -e '  - misc/fw3.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw5.cfg
++ local full_path=configs/misc/fw5.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw5.cfg
++ return 0
+ message '  - misc/fw5.cfg'
+ [[ -n   - misc/fw5.cfg ]]
+ local 'message=  - misc/fw5.cfg'
+ echo -e '  - misc/fw5.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/fw6.cfg
++ local full_path=configs/misc/fw6.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/fw6.cfg
++ return 0
+ message '  - misc/fw6.cfg'
+ [[ -n   - misc/fw6.cfg ]]
+ local 'message=  - misc/fw6.cfg'
+ echo -e '  - misc/fw6.cfg'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch1.conf
++ local full_path=configs/misc/switch1.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch1.conf
++ return 0
+ message '  - misc/switch1.conf'
+ [[ -n   - misc/switch1.conf ]]
+ local 'message=  - misc/switch1.conf'
+ echo -e '  - misc/switch1.conf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-600.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/fw2.cfg configs/misc/fw3.cfg configs/misc/fw5.cfg configs/misc/fw6.cfg configs/misc/switch1.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.1.11'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 192.168.100.100'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.1.2 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw2.cfg
+ entry='access-list OUTSIDE extended permit ip any host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry=' host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.0.2.3 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip any host 172.16.0.5'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw3.cfg
+ entry='access-list OUTSIDE extended permit ip host 10.10.10.10 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 192.168.2.12'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 198.51.100.75'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry=' network-object host 172.16.1.6'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw5.cfg
+ entry='access-list OUTSIDE extended permit ip host 172.16.1.6 any'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 10.10.10.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' network-object host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 192.168.1.10'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/fw6.cfg
+ entry=' host 203.0.113.25'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 172.31.255.254 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 10.0.1.2 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch1.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=5
+ [[ 5 -lt 8 ]]
++ base64
++ tr -dc a-zA-Z0-9
+++ date +%s%N
++ cut -c1-12
++ printf %s-%s 1748110142391948000 20737
+ export batch_id=MTc0ODExMDE0
+ batch_id=MTc0ODExMDE0
+ batch_slice=("${site_files[@]:offset:batch_size}")
++ date +%s
+ batch_suffix=1748110142-28336
+ batch_configs_list=configs--MTc0ODExMDE0-1748110142-28336.list
+ BATCH_CONFIGS=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ export BATCH_CONFIGS
+ touch /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ printf '%s\n' configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ range_first=6
+ range_last=8
+ [[ true == true ]]
+ message 'Batch processing (inner):'
+ [[ -n Batch processing (inner): ]]
+ local 'message=Batch processing (inner):'
+ echo -e 'Batch processing (inner):'
+ return 0
+ message 'Batch ID: MTc0ODExMDE0'
+ [[ -n Batch ID: MTc0ODExMDE0 ]]
+ local 'message=Batch ID: MTc0ODExMDE0'
+ echo -e 'Batch ID: MTc0ODExMDE0'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch offset:   5'
+ [[ -n Batch offset:   5 ]]
+ local 'message=Batch offset:   5'
+ echo -e 'Batch offset:   5'
+ return 0
+ message 'Batch Suffix:   1748110142-28336'
+ [[ -n Batch Suffix:   1748110142-28336 ]]
+ local 'message=Batch Suffix:   1748110142-28336'
+ echo -e 'Batch Suffix:   1748110142-28336'
+ return 0
+ message 'Batch FileName: configs--MTc0ODExMDE0-1748110142-28336.list'
+ [[ -n Batch FileName: configs--MTc0ODExMDE0-1748110142-28336.list ]]
+ local 'message=Batch FileName: configs--MTc0ODExMDE0-1748110142-28336.list'
+ echo -e 'Batch FileName: configs--MTc0ODExMDE0-1748110142-28336.list'
+ return 0
+ message 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ [[ -n Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list ]]
+ local 'message=Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ echo -e 'Batch Configs:  /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ return 0
+ list_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ local base=configs--MTc0ODExMDE0-1748110142-28336.list
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ local parent=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list ]]
+ local format_common=
+ local format_os=
+ local format=
+ format_common+='File: configs--MTc0ODExMDE0-1748110142-28336.list
'
+ format_common+='Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ uname
+ [[ Darwin == \D\a\r\w\i\n ]]
+ format_os+='Size: %z bytes
'
+ format_os+='Blocks/Inode: %b / %i
'
+ format_os+='Mode: %Sp
'
+ format_os+='UID/GID: %u / %g
'
+ format_os+='Access: %Sa
'
+ format_os+='Modify: %Sm
'
+ format_os+='Change: %Sc
'
+ format='File: configs--MTc0ODExMDE0-1748110142-28336.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
'
+ stat -f 'File: configs--MTc0ODExMDE0-1748110142-28336.list
Parent: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
Size: %z bytes
Blocks/Inode: %b / %i
Mode: %Sp
UID/GID: %u / %g
Access: %Sa
Modify: %Sm
Change: %Sc
' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Batch Size:     3'
+ [[ -n Batch Size:     3 ]]
+ local 'message=Batch Size:     3'
+ echo -e 'Batch Size:     3'
+ return 0
+ message 'Batch Ranges:   6 -> 8'
+ [[ -n Batch Ranges:   6 -> 8 ]]
+ local 'message=Batch Ranges:   6 -> 8'
+ echo -e 'Batch Ranges:   6 -> 8'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch2.conf
++ local full_path=configs/misc/switch2.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch2.conf
++ return 0
+ message '  - misc/switch2.conf'
+ [[ -n   - misc/switch2.conf ]]
+ local 'message=  - misc/switch2.conf'
+ echo -e '  - misc/switch2.conf'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch3.conf
++ local full_path=configs/misc/switch3.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch3.conf
++ return 0
+ message '  - misc/switch3.conf'
+ [[ -n   - misc/switch3.conf ]]
+ local 'message=  - misc/switch3.conf'
+ echo -e '  - misc/switch3.conf'
+ return 0
+ for config in "${batch_slice[@]}"
++ relative_configpath configs/misc/switch4.conf
++ local full_path=configs/misc/switch4.conf
++ local prefix=configs/
+++ sed 's|configs/||g'
++ echo -en misc/switch4.conf
++ return 0
+ message '  - misc/switch4.conf'
+ [[ -n   - misc/switch4.conf ]]
+ local 'message=  - misc/switch4.conf'
+ echo -e '  - misc/switch4.conf'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ matching_configs /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ local input_parameter=PARAMETER
+ local source_configs_list=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ message '[EXECUTE]   matching_configs'
+ [[ -n [EXECUTE]   matching_configs ]]
+ local 'message=[EXECUTE]   matching_configs'
+ echo -e '[EXECUTE]   matching_configs'
+ return 0
++ printf '%*s' 9
+ message '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ [[ -n [PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list ]]
+ local 'message=[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ echo -e '[PARAMETER] source_configs_list:\n            /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO/configs--MTc0ODExMDE0-1748110142-28336.list'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ targets=()
+ declare -A targets
+ ip2files=()
+ declare -A ip2files
+ mapfile -t matched_lines
++ grep -HF -f ips.list configs/misc/switch2.conf configs/misc/switch3.conf configs/misc/switch4.conf
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.1.11 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 10.10.10.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' ip address 192.168.100.100 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch2.conf
+ entry=' network-object host 10.0.2.3'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 10.0.0.1 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' ip address 172.16.1.6 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch3.conf
+ entry=' network-object host 10.0.0.1'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 192.168.1.10 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.18.1.20 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' ip address 172.16.0.5 255.255.255.0'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ for line in "${matched_lines[@]}"
+ file=configs/misc/switch4.conf
+ entry=' network-object host 10.0.1.2'
++ grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'
+ for token in $(grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b' <<< "$entry")
+ [[ -n '' ]]
+ continue
+ target_listing=()
+ sort -u
+ [[ true == true ]]
+ message 'Matched IPs to [misc] configs (0):'
+ [[ -n Matched IPs to [misc] configs (0): ]]
+ local 'message=Matched IPs to [misc] configs (0):'
+ echo -e 'Matched IPs to [misc] configs (0):'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ message 'PID    | IP Address      => Config(s)'
+ [[ -n PID    | IP Address      => Config(s) ]]
+ local 'message=PID    | IP Address      => Config(s)'
+ echo -e 'PID    | IP Address      => Config(s)'
+ return 0
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ :
+ discarded_ips=()
+ declare -a discarded_ips
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ for ip in "${target_addresses_source[@]}"
+ found=false
+ [[ false == false ]]
+ discarded_ips+=("${ip}")
+ [[ true == true ]]
+ [[ 17 -gt 0 ]]
+ message 'Unmapped IPs (count): 17'
+ [[ -n Unmapped IPs (count): 17 ]]
+ local 'message=Unmapped IPs (count): 17'
+ echo -e 'Unmapped IPs (count): 17'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.0.1'
+ [[ -n   - 10.0.0.1 ]]
+ local 'message=  - 10.0.0.1'
+ echo -e '  - 10.0.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.1.2'
+ [[ -n   - 10.0.1.2 ]]
+ local 'message=  - 10.0.1.2'
+ echo -e '  - 10.0.1.2'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.0.2.3'
+ [[ -n   - 10.0.2.3 ]]
+ local 'message=  - 10.0.2.3'
+ echo -e '  - 10.0.2.3'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 10.10.10.10'
+ [[ -n   - 10.10.10.10 ]]
+ local 'message=  - 10.10.10.10'
+ echo -e '  - 10.10.10.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.0.5'
+ [[ -n   - 172.16.0.5 ]]
+ local 'message=  - 172.16.0.5'
+ echo -e '  - 172.16.0.5'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.16.1.6'
+ [[ -n   - 172.16.1.6 ]]
+ local 'message=  - 172.16.1.6'
+ echo -e '  - 172.16.1.6'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.18.1.20'
+ [[ -n   - 172.18.1.20 ]]
+ local 'message=  - 172.18.1.20'
+ echo -e '  - 172.18.1.20'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 172.31.255.254'
+ [[ -n   - 172.31.255.254 ]]
+ local 'message=  - 172.31.255.254'
+ echo -e '  - 172.31.255.254'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.0.2.50'
+ [[ -n   - 192.0.2.50 ]]
+ local 'message=  - 192.0.2.50'
+ echo -e '  - 192.0.2.50'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.1'
+ [[ -n   - 192.168.0.1 ]]
+ local 'message=  - 192.168.0.1'
+ echo -e '  - 192.168.0.1'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.0.100'
+ [[ -n   - 192.168.0.100 ]]
+ local 'message=  - 192.168.0.100'
+ echo -e '  - 192.168.0.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.10'
+ [[ -n   - 192.168.1.10 ]]
+ local 'message=  - 192.168.1.10'
+ echo -e '  - 192.168.1.10'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.1.11'
+ [[ -n   - 192.168.1.11 ]]
+ local 'message=  - 192.168.1.11'
+ echo -e '  - 192.168.1.11'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.2.12'
+ [[ -n   - 192.168.2.12 ]]
+ local 'message=  - 192.168.2.12'
+ echo -e '  - 192.168.2.12'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 192.168.100.100'
+ [[ -n   - 192.168.100.100 ]]
+ local 'message=  - 192.168.100.100'
+ echo -e '  - 192.168.100.100'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 198.51.100.75'
+ [[ -n   - 198.51.100.75 ]]
+ local 'message=  - 198.51.100.75'
+ echo -e '  - 198.51.100.75'
+ return 0
+ for ip in "${discarded_ips[@]}"
+ message '  - 203.0.113.25'
+ [[ -n   - 203.0.113.25 ]]
+ local 'message=  - 203.0.113.25'
+ echo -e '  - 203.0.113.25'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ manage_configs
+ configs_jobs_pid=()
+ declare -a configs_jobs_pid
+ configs_jobs2ips_mapping=()
+ declare -A configs_jobs2ips_mapping
+ ip_index=0
+ local total_ips=0
+ ((  ip_index < total_ips  ))
+ message 'Background Jobs -> Managed Configs:'
+ [[ -n Background Jobs -> Managed Configs: ]]
+ local 'message=Background Jobs -> Managed Configs:'
+ echo -e 'Background Jobs -> Managed Configs:'
+ return 0
+ message 'PID   | IP Address (0)'
+ [[ -n PID   | IP Address (0) ]]
+ local 'message=PID   | IP Address (0)'
+ echo -e 'PID   | IP Address (0)'
+ return 0
+ message -------------------------
+ [[ -n ------------------------- ]]
+ local message=-------------------------
+ echo -e -------------------------
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ ((  0 > 0  ))
+ return 0
+ offset=10
+ [[ 10 -lt 8 ]]
+ generate_csvoutput
++ mktemp
+ local tmp_csv=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VqwgPmSjua
+ [[ ! -d reports ]]
+ find reports -type f -name '*.json' -mindepth 2 -maxdepth 2
+ sort
+ read -r json
+ message 'Processing reports/10.0.2.3/10.0.2.3.json'
+ [[ -n Processing reports/10.0.2.3/10.0.2.3.json ]]
+ local 'message=Processing reports/10.0.2.3/10.0.2.3.json'
+ echo -e 'Processing reports/10.0.2.3/10.0.2.3.json'
Processing reports/10.0.2.3/10.0.2.3.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.0.2.3/10.0.2.3.json
+ read -r json
+ message 'Processing reports/10.10.10.10/10.10.10.10.json'
+ [[ -n Processing reports/10.10.10.10/10.10.10.10.json ]]
+ local 'message=Processing reports/10.10.10.10/10.10.10.10.json'
+ echo -e 'Processing reports/10.10.10.10/10.10.10.10.json'
Processing reports/10.10.10.10/10.10.10.10.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/10.10.10.10/10.10.10.10.json
+ read -r json
+ message 'Processing reports/172.16.1.6/172.16.1.6.json'
+ [[ -n Processing reports/172.16.1.6/172.16.1.6.json ]]
+ local 'message=Processing reports/172.16.1.6/172.16.1.6.json'
+ echo -e 'Processing reports/172.16.1.6/172.16.1.6.json'
Processing reports/172.16.1.6/172.16.1.6.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.16.1.6/172.16.1.6.json
+ read -r json
+ message 'Processing reports/172.18.1.20/172.18.1.20.json'
+ [[ -n Processing reports/172.18.1.20/172.18.1.20.json ]]
+ local 'message=Processing reports/172.18.1.20/172.18.1.20.json'
+ echo -e 'Processing reports/172.18.1.20/172.18.1.20.json'
Processing reports/172.18.1.20/172.18.1.20.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/172.18.1.20/172.18.1.20.json
+ read -r json
+ message 'Processing reports/192.168.0.1/192.168.0.1.json'
+ [[ -n Processing reports/192.168.0.1/192.168.0.1.json ]]
+ local 'message=Processing reports/192.168.0.1/192.168.0.1.json'
+ echo -e 'Processing reports/192.168.0.1/192.168.0.1.json'
Processing reports/192.168.0.1/192.168.0.1.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.1/192.168.0.1.json
+ read -r json
+ message 'Processing reports/192.168.0.100/192.168.0.100.json'
+ [[ -n Processing reports/192.168.0.100/192.168.0.100.json ]]
+ local 'message=Processing reports/192.168.0.100/192.168.0.100.json'
+ echo -e 'Processing reports/192.168.0.100/192.168.0.100.json'
Processing reports/192.168.0.100/192.168.0.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.0.100/192.168.0.100.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.100.100/192.168.100.100.json'
+ [[ -n Processing reports/192.168.100.100/192.168.100.100.json ]]
+ local 'message=Processing reports/192.168.100.100/192.168.100.100.json'
+ echo -e 'Processing reports/192.168.100.100/192.168.100.100.json'
Processing reports/192.168.100.100/192.168.100.100.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.100.100/192.168.100.100.json
+ read -r json
+ message 'Processing reports/192.168.2.12/192.168.2.12.json'
+ [[ -n Processing reports/192.168.2.12/192.168.2.12.json ]]
+ local 'message=Processing reports/192.168.2.12/192.168.2.12.json'
+ echo -e 'Processing reports/192.168.2.12/192.168.2.12.json'
Processing reports/192.168.2.12/192.168.2.12.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/192.168.2.12/192.168.2.12.json
+ read -r json
+ message 'Processing reports/198.51.100.75/198.51.100.75.json'
+ [[ -n Processing reports/198.51.100.75/198.51.100.75.json ]]
+ local 'message=Processing reports/198.51.100.75/198.51.100.75.json'
+ echo -e 'Processing reports/198.51.100.75/198.51.100.75.json'
Processing reports/198.51.100.75/198.51.100.75.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/198.51.100.75/198.51.100.75.json
+ read -r json
+ message 'Processing reports/203.0.113.25/203.0.113.25.json'
+ [[ -n Processing reports/203.0.113.25/203.0.113.25.json ]]
+ local 'message=Processing reports/203.0.113.25/203.0.113.25.json'
+ echo -e 'Processing reports/203.0.113.25/203.0.113.25.json'
Processing reports/203.0.113.25/203.0.113.25.json
+ return 0
+ json2csv_transformation='.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv'
+ jq -e -r '.target as $target
                    | .configs[]
                    | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
                    | .objects[] as $obj
                    | [
                        $target,
                        ( .site // "none" ),
                        ( .device // "none" ),
                        ( $obj.object // "none" ),
                        ( $obj.type // "none" ),
                        ( $obj.items[0] // "none" ),
                        ( $obj.partner // "none" ),
                        ( $obj.description // "none" ),
                        ( $obj.group // "none" )
                      ]
                    | @csv' reports/203.0.113.25/203.0.113.25.json
+ read -r json
+ message target,site,device,object,type,items,partner,description,group
+ [[ -n target,site,device,object,type,items,partner,description,group ]]
+ local message=target,site,device,object,type,items,partner,description,group
+ echo -e target,site,device,object,type,items,partner,description,group
+ return 0
+ sort -t, -k1,1 -k2,2 -k3,3 -k4,4 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VqwgPmSjua
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VqwgPmSjua
+ return 0
+ shopt -s nullglob
+ shopt -u nullglob
+ [[ -d targets ]]
+ (( ip_offset+=ip_batch_size  ))
+ (( ip_offset<total_ips ))
+ [[ true == true ]]
+ grouped_targets=.cache/targets
+ message 'Post-processing: Normalizing JSON files'
+ [[ -n Post-processing: Normalizing JSON files ]]
+ local 'message=Post-processing: Normalizing JSON files'
+ echo -e 'Post-processing: Normalizing JSON files'
+ return 0
+ message ---------------------------------------
+ [[ -n --------------------------------------- ]]
+ local message=---------------------------------------
+ echo -e ---------------------------------------
+ return 0
+ message 'Grouped by site: .cache/targets'
+ [[ -n Grouped by site: .cache/targets ]]
+ local 'message=Grouped by site: .cache/targets'
+ echo -e 'Grouped by site: .cache/targets'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/10.0.2.3.json
+ ip=10.0.2.3.json
+ message '  - 10.0.2.3.json'
+ [[ -n   - 10.0.2.3.json ]]
+ local 'message=  - 10.0.2.3.json'
+ echo -e '  - 10.0.2.3.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/10.10.10.10.json
+ ip=10.10.10.10.json
+ message '  - 10.10.10.10.json'
+ [[ -n   - 10.10.10.10.json ]]
+ local 'message=  - 10.10.10.10.json'
+ echo -e '  - 10.10.10.10.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/172.16.1.6.json
+ ip=172.16.1.6.json
+ message '  - 172.16.1.6.json'
+ [[ -n   - 172.16.1.6.json ]]
+ local 'message=  - 172.16.1.6.json'
+ echo -e '  - 172.16.1.6.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/172.18.1.20.json
+ ip=172.18.1.20.json
+ message '  - 172.18.1.20.json'
+ [[ -n   - 172.18.1.20.json ]]
+ local 'message=  - 172.18.1.20.json'
+ echo -e '  - 172.18.1.20.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.1.json
+ ip=192.168.0.1.json
+ message '  - 192.168.0.1.json'
+ [[ -n   - 192.168.0.1.json ]]
+ local 'message=  - 192.168.0.1.json'
+ echo -e '  - 192.168.0.1.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.0.100.json
+ ip=192.168.0.100.json
+ message '  - 192.168.0.100.json'
+ [[ -n   - 192.168.0.100.json ]]
+ local 'message=  - 192.168.0.100.json'
+ echo -e '  - 192.168.0.100.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.1.11.json
+ ip=192.168.1.11.json
+ message '  - 192.168.1.11.json'
+ [[ -n   - 192.168.1.11.json ]]
+ local 'message=  - 192.168.1.11.json'
+ echo -e '  - 192.168.1.11.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.100.100.json
+ ip=192.168.100.100.json
+ message '  - 192.168.100.100.json'
+ [[ -n   - 192.168.100.100.json ]]
+ local 'message=  - 192.168.100.100.json'
+ echo -e '  - 192.168.100.100.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/192.168.2.12.json
+ ip=192.168.2.12.json
+ message '  - 192.168.2.12.json'
+ [[ -n   - 192.168.2.12.json ]]
+ local 'message=  - 192.168.2.12.json'
+ echo -e '  - 192.168.2.12.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/198.51.100.75.json
+ ip=198.51.100.75.json
+ message '  - 198.51.100.75.json'
+ [[ -n   - 198.51.100.75.json ]]
+ local 'message=  - 198.51.100.75.json'
+ echo -e '  - 198.51.100.75.json'
+ return 0
+ for fpath in "${grouped_targets}/"*.json
++ basename .cache/targets/203.0.113.25.json
+ ip=203.0.113.25.json
+ message '  - 203.0.113.25.json'
+ [[ -n   - 203.0.113.25.json ]]
+ local 'message=  - 203.0.113.25.json'
+ echo -e '  - 203.0.113.25.json'
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ shopt -s nullglob
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/10.0.2.3.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/10.0.2.3.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 3
    },
    {
      "device": "core-router-01.cfg",
      "lines": 37,
      "count": 1
    },
    {
      "device": "datacenter-fw-core.cfg",
      "lines": 34,
      "count": 1
    },
    {
      "device": "hq-core-rtr.cfg",
      "lines": 28,
      "count": 2
    }
  ],
  "fortinet": [
    {
      "device": "fg-fw-dmz-01.cfg",
      "lines": 118,
      "count": 1
    },
    {
      "device": "fg-lab-test-fw.cfg",
      "lines": 176,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/10.10.10.10.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/10.10.10.10.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 32,
      "count": 1
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 31,
      "count": 1
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 47,
      "count": 3
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/172.16.1.6.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/172.16.1.6.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 3
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/172.18.1.20.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/172.18.1.20.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.1.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.1.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 32,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 31,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.0.100.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.0.100.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-sw1-west.cfg",
      "lines": 29,
      "count": 2
    },
    {
      "device": "access-switch-07.cfg",
      "lines": 32,
      "count": 2
    },
    {
      "device": "campus-sw-access01.cfg",
      "lines": 31,
      "count": 1
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.1.11.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.1.11.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 1
    },
    {
      "device": "core-router-01.cfg",
      "lines": 37,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.100.100.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.100.100.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "access-switch-07.cfg",
      "lines": 32,
      "count": 1
    },
    {
      "device": "datacenter-fw-core.cfg",
      "lines": 34,
      "count": 1
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 47,
      "count": 3
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/192.168.2.12.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/192.168.2.12.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-fw-03.cfg",
      "lines": 34,
      "count": 4
    },
    {
      "device": "branch-fw-snmp.cfg",
      "lines": 31,
      "count": 2
    },
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/198.51.100.75.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/198.51.100.75.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-fw-03.cfg",
      "lines": 34,
      "count": 4
    },
    {
      "device": "branch-isr-02.cfg",
      "lines": 43,
      "count": 3
    },
    {
      "device": "core-fw-dmz-01.cfg",
      "lines": 40,
      "count": 3
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 47,
      "count": 1
    },
    {
      "device": "hq-core-rtr-02.cfg",
      "lines": 30,
      "count": 1
    }
  ],
  "fortinet": [
    {
      "device": "fg-branch-vpn-01.cfg",
      "lines": 147,
      "count": 2
    },
    {
      "device": "fg-fw-dmz-01.cfg",
      "lines": 118,
      "count": 1
    },
    {
      "device": "fg-lab-test-fw.cfg",
      "lines": 176,
      "count": 2
    }
  ]
}'
+ jq .
+ for target_file in "${cache_location}/targets/"*.json
+ [[ -s .cache/targets/203.0.113.25.json ]]
++ jq '
            .configs
            | group_by(.config.site)
            | map({
                (.[0].config.site): map({
                  device: .config.device,
                  lines: .lines,
                  count: .count
                })
              })
            | add
          ' .cache/targets/203.0.113.25.json
+ grouped_objects='{
  "cisco": [
    {
      "device": "branch-fw-snmp.cfg",
      "lines": 31,
      "count": 2
    },
    {
      "device": "core-fw-dmz-01.cfg",
      "lines": 40,
      "count": 4
    },
    {
      "device": "dmz-fw2-backup.cfg",
      "lines": 47,
      "count": 1
    },
    {
      "device": "hq-core-rtr.cfg",
      "lines": 28,
      "count": 1
    },
    {
      "device": "perimeter-fw1.cfg",
      "lines": 53,
      "count": 5
    }
  ],
  "fortinet": [
    {
      "device": "fg-branch-vpn-01.cfg",
      "lines": 147,
      "count": 1
    },
    {
      "device": "fg-fw-dmz-01.cfg",
      "lines": 118,
      "count": 2
    },
    {
      "device": "fg-lab-test-fw.cfg",
      "lines": 176,
      "count": 1
    }
  ]
}'
+ jq .
+ shopt -u nullglob
+ [[ true == true ]]
+ [[ -s reports/reports.csv ]]
+ message 'CSV Report Summary (tabulated):'
+ [[ -n CSV Report Summary (tabulated): ]]
+ local 'message=CSV Report Summary (tabulated):'
+ echo -e 'CSV Report Summary (tabulated):'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ print_file reports/reports.csv
+ [[ -n reports/reports.csv ]]
+ local target_file=reports/reports.csv
+ cat -n
+ [[ true == true ]]
+ [[ -f reports/reports.csv ]]
+ case "${target_file}" in
+ cat reports/reports.csv
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ rm -rf .logs/jobs
+ [[ -d .logs/jobs ]]
+ [[ -d .logs/jobs ]]
+ local elapsed=21
+ message 'Session Summary:'
+ [[ -n Session Summary: ]]
+ local 'message=Session Summary:'
+ echo -e 'Session Summary:'
+ return 0
+ message -------------------------------
+ [[ -n ------------------------------- ]]
+ local message=-------------------------------
+ echo -e -------------------------------
+ return 0
+ message 'Started at: 2025-05-24 11:08:41'
+ [[ -n Started at: 2025-05-24 11:08:41 ]]
+ local 'message=Started at: 2025-05-24 11:08:41'
+ echo -e 'Started at: 2025-05-24 11:08:41'
+ return 0
+ printf '[INFO] Total runtime: %02d:%02d:%02d\n' 0 0 21
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ return 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.t4896tCJvO
