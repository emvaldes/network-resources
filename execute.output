$ bash ./scripts/parse-listings.shell --verbose --debug --validate --classify --configs=configs --ips-list=ips.list --jobs=10 ;

Using cached configs.list from .cache/configs.list
IPS/CIDR Blocks:
  - 10.0.0.1
  - 10.0.1.2
  - 10.0.2.3
  - 10.10.10.10
  - 172.16.0.5
  - 172.16.1.6
  - 172.18.1.20
  - 172.31.255.254
  - 192.0.2.50
  - 192.168.1.10
  - 192.168.1.11
  - 192.168.2.12
  - 192.168.100.100
  - 198.51.100.75
  - 203.0.113.25


Mapping IPs to config files (pre-scan phase)...
5
[POOL] Launching job (10.0.0.1)[1] ...
[POOL] Launching job (10.0.1.2)[2] ...
[POOL] Launching job (172.31.255.254)[3] ...
[POOL] Launching job (192.168.1.10)[4] ...
[POOL] Launching job (203.0.113.25)[5] ...
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-tools.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_TOOLS_SOURCED=1
++ __DEVOPS_TOOLS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias error-message=error_message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias validate-address=validate_address
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias generate-objects=generate_objects
+ alias parse-configs=main
+ local_state_dir=.local
+ mkdir -p .local
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-tools.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_TOOLS_SOURCED=1
++ __DEVOPS_TOOLS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ mktemp -d
++ alias error-message=error_message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias validate-address=validate_address
+ set -euo pipefail
+ alias generate-objects=generate_objects
+ export LC_ALL=C
+ LC_ALL=C
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-tools.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_TOOLS_SOURCED=1
++ __DEVOPS_TOOLS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias error-message=error_message
+ alias parse-configs=main
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local_state_dir=.local
+ mkdir -p .local
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ mktemp -d
++ alias validate-address=validate_address
+ alias generate-objects=generate_objects
+ alias parse-configs=main
+ local_state_dir=.local
+ mkdir -p .local
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
+ [[ 10 -ge 1 ]]
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
+ main --configs=configs --ip-addr=10.0.0.1 --index=1 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --validate --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-tools.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_TOOLS_SOURCED=1
++ __DEVOPS_TOOLS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export LC_ALL=C
++ LC_ALL=C
++ alias error-message=error_message
++ alias log-info=log_info
++ alias log-warn=log_warn
+ matched_blocks_byfile=()
++ alias log-error=log_error
+ declare -gA matched_blocks_byfile
++ alias exit-error=exit_error
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
++ alias detect-platform=detect_platform
+ [[ 10 -ge 1 ]]
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
+ main --configs=configs --ip-addr=10.0.1.2 --index=2 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --validate --verbose --debug
++ alias install-missing=install_missing
+ file_extensions=()
+ declare -a file_extensions
+ oIFS='
'
+ for xitem in "${@}"
++ alias display-help=display_help_generic
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
+ alias generate-objects=generate_objects
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-configs=main
+ local_state_dir=.local
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2
+ mkdir -p .local
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-tools.shell
+ matched_blocks_byfile=()
++ [[ -n '' ]]
+ declare -gA matched_blocks_byfile
++ readonly __DEVOPS_TOOLS_SOURCED=1
++ __DEVOPS_TOOLS_SOURCED=1
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
++ [[ 5 -lt 4 ]]
+ [[ 10 -ge 1 ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
+ main --configs=configs --ip-addr=172.31.255.254 --index=3 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --validate --verbose --debug
++ alias error-message=error_message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
+ file_extensions=()
+ declare -a file_extensions
+ oIFS='
'
+ for xitem in "${@}"
++ alias install-missing=install_missing
+ IFS==
+ read -r key value
++ alias display-help=display_help_generic
++ alias validate-address=validate_address
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias generate-objects=generate_objects
+ alias parse-configs=main
+ local_state_dir=.local
+ mkdir -p .local
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(configs|c)$ ]]
+ local configs_dirpath=configs
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
+ [[ 10 -ge 1 ]]
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
+ main --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --validate --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ configs =~ ^(configs|c)$ ]]
+ local configs_dirpath=configs
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
+ [[ 10 -ge 1 ]]
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
++ echo -e --ip-addr=10.0.0.1
+ main --configs=configs --ip-addr=203.0.113.25 --index=5 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --validate --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS='
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(configs|c)$ ]]
+ local configs_dirpath=configs
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=10.0.1.2
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --ip-addr=172.31.255.254
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=10.0.0.1
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ configs =~ ^(configs|c)$ ]]
+ local configs_dirpath=configs
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=10.0.1.2
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ configs =~ ^(configs|c)$ ]]
+ local configs_dirpath=configs
+ [[ configs =~ ^(file-ext|x)$ ]]
++ echo -e --index=1
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs == \h\e\l\p ]]
++ echo -e --ip-addr=192.168.1.10
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=172.31.255.254
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --index=2
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --ip-addr=203.0.113.25
++ echo -e --index=3
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=192.168.1.10
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=1
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=2
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=203.0.113.25
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=3
+ [[ index =~ ^(ip-addr|i)$ ]]
++ echo -e --matrix=matrix.json
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --index=4
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --index=5
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ index =~ ^(index|n)$ ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ local target_index=4
+ for xitem in "${@}"
+ [[ index =~ ^(ip-addr|i)$ ]]
+ IFS==
+ read -r key value
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=5
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --reports=reports
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --matrix=matrix.json
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ local reports_folder=reports
+ [[ reports == \h\e\l\p ]]
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ IFS==
+ read -r key value
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_folder=reports
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_folder=reports
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --reports=reports
++ echo -e --file-ext=cfg,conf,cnf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --file-ext=cfg,conf,cnf
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --file-ext=cfg,conf,cnf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ local reports_folder=reports
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ reports == \h\e\l\p ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ reports =~ ^(matrix|m)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
+ IFS==
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ read -r key value
+ [[ reports =~ ^(reports|r)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
+ local reports_folder=reports
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ tr ':,;\n ' '\n'
++ echo -e --file-ext=cfg,conf,cnf
++ print cfg,conf,cnf
++ echo -e --file-ext=cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ tr ':,;\n ' '\n'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ tr ':,;\n ' '\n'
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ for xitem in "${@}"
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ file-ext =~ ^(classify|g)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
+ IFS==
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ read -r key value
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ [[ file-ext =~ ^(configs|c)$ ]]
+ for xitem in "${@}"
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ IFS==
+ [[ file-ext =~ ^(validate|v)$ ]]
+ read -r key value
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ print cfg,conf,cnf
++ echo -e --classify
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ tr ':,;\n ' '\n'
++ print cfg,conf,cnf
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr ':,;\n ' '\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ local classify_targets=true
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ classify =~ ^(validate|v)$ ]]
+ IFS==
+ read -r key value
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ for xitem in "${@}"
+ [[ file-ext =~ ^(reports|r)$ ]]
+ IFS==
+ [[ file-ext == \h\e\l\p ]]
+ read -r key value
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(classify|g)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ local classify_targets=true
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --classify
++ echo -e --classify
++ echo -e --validate
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --validate
++ echo -e --validate
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ validate =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ validate =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(classify|g)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(index|n)$ ]]
+ [[ validate =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(ip-addr|i)$ ]]
+ [[ validate =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ [[ validate =~ ^(validate|v)$ ]]
+ [[ validate =~ ^(classify|g)$ ]]
+ local classify_targets=true
+ [[ validate =~ ^(index|n)$ ]]
+ [[ validate =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ validate =~ ^(classify|g)$ ]]
+ local validate_address=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ validate =~ ^(matrix|m)$ ]]
+ [[ validate =~ ^(index|n)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ validate =~ ^(ip-addr|i)$ ]]
+ [[ validate =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ [[ validate =~ ^(validate|v)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ validate =~ ^(reports|r)$ ]]
+ [[ validate =~ ^(validate|v)$ ]]
+ local classify_targets=true
+ local validate_address=true
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ validate == \h\e\l\p ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ validate =~ ^(matrix|m)$ ]]
+ local validate_address=true
+ [[ validate == \d\e\b\u\g ]]
+ [[ classify == \h\e\l\p ]]
+ [[ validate == \d\r\y\-\r\u\n ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ validate =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ validate =~ ^(reports|r)$ ]]
+ [[ validate == \v\e\r\b\o\s\e ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ classify == \v\e\r\b\o\s\e ]]
+ [[ validate =~ ^(reports|r)$ ]]
+ [[ validate == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ validate == \d\e\b\u\g ]]
+ IFS==
+ [[ validate == \d\r\y\-\r\u\n ]]
+ read -r key value
+ IFS==
+ [[ validate == \h\e\l\p ]]
+ read -r key value
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ validate == \v\e\r\b\o\s\e ]]
+ [[ validate == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ validate == \d\r\y\-\r\u\n ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ validate == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ [[ classify == \h\e\l\p ]]
+ IFS==
+ [[ classify == \d\e\b\u\g ]]
+ read -r key value
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --validate
++ echo -e --verbose
++ echo -e --verbose
++ echo -e --verbose
++ echo -e --validate
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ validate =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(file-ext|x)$ ]]
+ [[ validate =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ validate =~ ^(index|n)$ ]]
+ [[ validate =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ validate =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ validate =~ ^(classify|g)$ ]]
+ [[ validate =~ ^(validate|v)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ validate =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ local validate_address=true
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ validate =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ validate =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ validate =~ ^(validate|v)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ validate =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ local validate_address=true
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ validate == \h\e\l\p ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ validate =~ ^(matrix|m)$ ]]
+ [[ validate == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ validate == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ validate =~ ^(reports|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ validate == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
+ [[ validate == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ export verbose=true
+ [[ validate == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ verbose=true
+ [[ validate == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ validate == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ [[ verbose == \h\e\l\p ]]
+ verbose=true
+ for xitem in "${@}"
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ export verbose=true
+ verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ echo -e --debug
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --debug
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ [[ debug == \d\e\b\u\g ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ export debug=true
+ export debug=true
+ debug=true
+ [[ verbose == \h\e\l\p ]]
+ debug=true
+ [[ debug =~ ^(index|n)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ IFS='
+ IFS='
'
+ verbose=true
'
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ -z true ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
+ [[ '' == true ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ -z x ]]
+ [[ -z x ]]
+ [[ 3 -eq 0 ]]
+ IFS==
+ [[ verbose =~ ^(classify|g)$ ]]
+ read -r key value
+ [[ 3 -eq 0 ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ local configs_dirpath=configs
+ [[ debug =~ ^(matrix|m)$ ]]
+ local configs_dirpath=configs
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ source_configs=()
+ declare -ga source_configs
+ [[ debug =~ ^(reports|r)$ ]]
+ source_configs=()
+ [[ debug == \h\e\l\p ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ declare -ga source_configs
+ [[ debug == \v\e\r\b\o\s\e ]]
+ ip_list_file=targets/10.0.0.1.list
+ IFS='
'
+ ip_list_file=targets/172.31.255.254.list
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ -f targets/172.31.255.254.list ]]
+ [[ '' == true ]]
+ [[ -f targets/10.0.0.1.list ]]
+ [[ -z x ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ 3 -eq 0 ]]
+ [[ -z true ]]
+ [[ verbose == \h\e\l\p ]]
+ mapfile -t source_configs
+ local configs_dirpath=configs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ source_configs=()
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ declare -ga source_configs
+ export verbose=true
+ verbose=true
+ mapfile -t source_configs
+ ip_list_file=targets/10.0.1.2.list
+ for xitem in "${@}"
+ [[ -f targets/10.0.1.2.list ]]
+ IFS==
+ read -r key value
+ mapfile -t source_configs
+ [[ true == true ]]
+ [[ true == true ]]
+ print 'Using pre-matched config list: targets/172.31.255.254.list'
+ [[ -n Using pre-matched config list: targets/172.31.255.254.list ]]
+ echo -en 'Using pre-matched config list: targets/172.31.255.254.list'
+ print 'Using pre-matched config list: targets/10.0.0.1.list'
+ [[ -z 3 ]]
+ [[ -z true ]]
+ [[ -z 172.31.255.254 ]]
+ [[ -n Using pre-matched config list: targets/10.0.0.1.list ]]
+ [[ true == true ]]
+ echo -en 'Using pre-matched config list: targets/10.0.0.1.list'
+ print 'Using pre-matched config list: targets/10.0.1.2.list'
+ [[ -z 1 ]]
+ [[ -z true ]]
+ [[ -z 10.0.0.1 ]]
+ [[ -n Using pre-matched config list: targets/10.0.1.2.list ]]
+ echo -en 'Using pre-matched config list: targets/10.0.1.2.list'
+ [[ -z 2 ]]
+ [[ -z true ]]
+ [[ -z 10.0.1.2 ]]
++ echo -e --debug
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
++ print 172.31.255.254
++ print 10.0.0.1
++ [[ -n 172.31.255.254 ]]
++ [[ -n 10.0.0.1 ]]
++ echo -en 172.31.255.254
++ echo -en 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -E 's/[[:space:]]+//g'
++ sed -E 's/[[:space:]]+//g'
++ print 10.0.1.2
++ [[ -n 10.0.1.2 ]]
++ echo -en 10.0.1.2
++ sed -E 's/[[:space:]]+//g'
++ tr -d '\r'
++ tr -d '\r'
++ tr -d '\r'
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
+ [[ -z x ]]
+ [[ 3 -eq 0 ]]
+ [[ -z true ]]
+ local configs_dirpath=configs
+ source_configs=()
+ declare -ga source_configs
+ ip_list_file=targets/192.168.1.10.list
+ [[ -f targets/192.168.1.10.list ]]
+ mapfile -t source_configs
+ target_address=172.31.255.254
+ [[ true == true ]]
+ validate_address
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 172.31.255.254 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ target_address=10.0.1.2
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ print 'Using pre-matched config list: targets/192.168.1.10.list'
+ validate_address
+ target_address=10.0.0.1
+ [[ -n Using pre-matched config list: targets/192.168.1.10.list ]]
+ echo -en 'Using pre-matched config list: targets/192.168.1.10.list'
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ true == true ]]
+ [[ -z 4 ]]
+ validate_address
+ [[ -z true ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ -z 192.168.1.10 ]]
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ debug =~ ^(index|n)$ ]]
+ [[ 10.0.1.2 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('172' '31' '255' '254')
+ local -a segments
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ local cidr=
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ -n '' ]]
+ [[ 10.0.0.1 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ for i in "${!segments[@]}"
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS='
'
+ segments=('10' '0' '1' '2')
+ [[ -z true ]]
+ [[ -z true ]]
+ local -a segments
+ [[ '' == true ]]
+ [[ -z x ]]
+ local cidr=
+ [[ 3 -eq 0 ]]
+ [[ -n '' ]]
+ segments=('10' '0' '0' '1')
+ [[ -z true ]]
+ for i in "${!segments[@]}"
+ local -a segments
+ local cidr=
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
+ local configs_dirpath=configs
+ source_configs=()
+ declare -ga source_configs
+ ip_list_file=targets/203.0.113.25.list
+ [[ -f targets/203.0.113.25.list ]]
+ mapfile -t source_configs
+ [[ true == true ]]
+ print 'Using pre-matched config list: targets/203.0.113.25.list'
+ [[ -n Using pre-matched config list: targets/203.0.113.25.list ]]
+ echo -en 'Using pre-matched config list: targets/203.0.113.25.list'
+ [[ -z 5 ]]
+ [[ -z true ]]
+ [[ -z 203.0.113.25 ]]
++ print 172
++ print 192.168.1.10
++ [[ -n 192.168.1.10 ]]
++ print 10
++ echo -en 192.168.1.10
++ [[ -n 172 ]]
++ print 10
++ echo -en 172
++ sed -E 's/[[:space:]]+//g'
++ [[ -n 10 ]]
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ echo -en 10
++ [[ -n 10 ]]
++ echo -en 10
++ print 203.0.113.25
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ [[ -n 203.0.113.25 ]]
++ echo -en 203.0.113.25
++ tr -d '\r'
++ sed -E 's/[[:space:]]+//g'
++ tr -d '\r'
+ target_address=203.0.113.25
+ segment=10
+ segment=10
+ target_address=192.168.1.10
+ segment=172
+ [[ 10 =~ ^[0-9]+$ ]]
+ [[ 172 =~ ^[0-9]+$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ validate_address
+ [[ 10 =~ ^[0-9]+$ ]]
+ validate_address
+ ((  segment < 0 || segment > 255  ))
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=172
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ for i in "${!segments[@]}"
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ for i in "${!segments[@]}"
+ segments[$i]=10
+ local 'ip_cidr_regex=^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$'
+ [[ 203.0.113.25 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ for i in "${!segments[@]}"
+ [[ 192.168.1.10 =~ ^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})(/([0-9]{1,2}))?$ ]]
+ segments=('192' '168' '1' '10')
+ segments=('203' '0' '113' '25')
+ local -a segments
+ local -a segments
+ local cidr=
+ local cidr=
+ [[ -n '' ]]
+ [[ -n '' ]]
+ for i in "${!segments[@]}"
+ for i in "${!segments[@]}"
++ print 192
++ print 31
++ print 0
++ print 203
++ [[ -n 192 ]]
++ [[ -n 31 ]]
++ echo -en 192
++ echo -en 31
++ [[ -n 0 ]]
++ [[ -n 203 ]]
++ echo -en 0
++ print 0
++ echo -en 203
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ [[ -n 0 ]]
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=192
+ segment=31
+ segment=0
+ [[ 192 =~ ^[0-9]+$ ]]
+ [[ 0 =~ ^[0-9]+$ ]]
+ segment=203
+ [[ 31 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ [[ 203 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=192
+ segments[$i]=0
+ for i in "${!segments[@]}"
+ for i in "${!segments[@]}"
+ ((  segment < 0 || segment > 255  ))
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=31
+ segments[$i]=203
+ for i in "${!segments[@]}"
+ for i in "${!segments[@]}"
+ segment=0
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 168
++ [[ -n 168 ]]
++ echo -en 168
++ print 0
++ print 255
++ print 0
++ print 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ [[ -n 0 ]]
++ [[ -n 255 ]]
++ echo -en 0
++ echo -en 255
++ [[ -n 0 ]]
++ [[ -n 1 ]]
++ echo -en 1
++ echo -en 0
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=168
+ segment=1
+ [[ 168 =~ ^[0-9]+$ ]]
+ segment=0
+ [[ 1 =~ ^[0-9]+$ ]]
+ segment=255
+ [[ 0 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ [[ 255 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segment=0
+ segments[$i]=168
+ for i in "${!segments[@]}"
+ segments[$i]=1
+ ((  segment < 0 || segment > 255  ))
+ [[ 0 =~ ^[0-9]+$ ]]
+ for i in "${!segments[@]}"
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
+ segments[$i]=255
+ for i in "${!segments[@]}"
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=0
+ for i in "${!segments[@]}"
++ print 254
++ print 2
++ print 1
++ [[ -n 254 ]]
++ echo -en 254
++ print 113
++ [[ -n 2 ]]
++ [[ -n 1 ]]
++ echo -en 2
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ [[ -n 113 ]]
++ print 1
++ echo -en 113
++ [[ -n 1 ]]
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ echo -en 1
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=2
+ [[ 2 =~ ^[0-9]+$ ]]
+ segment=113
+ segment=1
+ [[ 113 =~ ^[0-9]+$ ]]
+ [[ 1 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=2
+ ((  segment < 0 || segment > 255  ))
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=113
+ local 'segments=10 0 1 2'
+ segments[$i]=1
+ for i in "${!segments[@]}"
+ local fixed_address=10.0.1.2
+ local 'segments=10 0 0 1'
+ [[ -n '' ]]
+ segment=1
+ [[ 10.0.1.2 != \1\0\.\0\.\1\.\2 ]]
+ local fixed_address=10.0.0.1
+ [[ -n '' ]]
+ [[ -n '' ]]
+ return 0
+ [[ 10.0.0.1 != \1\0\.\0\.\0\.\1 ]]
+ [[ 1 =~ ^[0-9]+$ ]]
+ [[ -n '' ]]
+ segment=254
+ return 0
+ [[ 254 =~ ^[0-9]+$ ]]
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ ((  segment < 0 || segment > 255  ))
+ local matrix_filename=matrix.json
+ segments[$i]=1
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
+ for i in "${!segments[@]}"
+ ((  segment < 0 || segment > 255  ))
+ jq -e 'length > 0' matrix.json
+ segments[$i]=254
+ local 'segments=172 31 255 254'
+ local fixed_address=172.31.255.254
+ [[ -n '' ]]
+ [[ 172.31.255.254 != \1\7\2\.\3\1\.\2\5\5\.\2\5\4 ]]
+ [[ -n '' ]]
+ return 0
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ print 25
++ [[ -n 25 ]]
++ echo -en 25
++ print 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
++ [[ -n 10 ]]
++ echo -en 10
++ sed -E 's/^[[:space:]]*0*([0-9]+)[[:space:]]*$/\1/'
+ segment=10
+ segment=25
+ [[ 10 =~ ^[0-9]+$ ]]
+ [[ 25 =~ ^[0-9]+$ ]]
+ ((  segment < 0 || segment > 255  ))
+ ((  segment < 0 || segment > 255  ))
+ segments[$i]=10
+ segments[$i]=25
+ local 'segments=203 0 113 25'
+ local 'segments=192 168 1 10'
+ local fixed_address=203.0.113.25
+ local fixed_address=192.168.1.10
+ [[ -n '' ]]
+ [[ -n '' ]]
+ [[ 192.168.1.10 != \1\9\2\.\1\6\8\.\1\.\1\0 ]]
+ [[ 203.0.113.25 != \2\0\3\.\0\.\1\1\3\.\2\5 ]]
+ [[ -n '' ]]
+ [[ -n '' ]]
+ return 0
+ return 0
+ local matrix_filename=matrix.json
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
++ cat matrix.json
++ cat matrix.json
+ local 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ local reports_folder=reports
+ mkdir -p reports
+ local 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ local reports_folder=reports
+ mkdir -p reports
+ local 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ local reports_folder=reports
+ mkdir -p reports
++ cat matrix.json
+ matched_configs=()
++ cat matrix.json
+ declare -gA matched_configs
+ matched_configs=()
+ matched_configs_order=()
+ declare -ga matched_configs_order
+ matched_blocks_byfile=()
+ declare -gA matched_configs
+ declare -gA matched_blocks_byfile
+ matched_configs_order=()
+ local search_ip=10.0.0.1
+ declare -ga matched_configs_order
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ local search_ip=10.0.1.2
+ matched_configs=()
+ declare -gA matched_configs
+ matched_configs_order=()
+ declare -ga matched_configs_order
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ local search_ip=172.31.255.254
++ date +%s%N
+ local 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ local reports_folder=reports
++ date +%s%N
+ mkdir -p reports
++ base64
++ base64
++ tr -dc a-zA-Z0-9
++ tr -dc a-zA-Z0-9
+ local 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ local reports_folder=reports
+ mkdir -p reports
++ date +%s%N
++ base64
++ tr -dc a-zA-Z0-9
+ matched_configs=()
+ declare -gA matched_configs
+ matched_configs_order=()
+ declare -ga matched_configs_order
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ local search_ip=192.168.1.10
+ local divisor=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 10.0.1.2 configs/cisco/fw1.cfg
+ local divisor=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 10.0.0.1 configs/cisco/fw1.cfg
+ matched_configs=()
+ declare -gA matched_configs
+ matched_configs_order=()
+ declare -ga matched_configs_order
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ local search_ip=203.0.113.25
++ date +%s%N
+ local divisor=MTc0NjYzMzU5MTU5NzA4MTAwMAo
+ for cfg_file in "${source_configs[@]}"
++ base64
+ grep -qF 172.31.255.254 configs/misc/switch.conf
++ tr -dc a-zA-Z0-9
++ date +%s%N
++ base64
++ tr -dc a-zA-Z0-9
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
++ sed 's/!/\n/g' configs/cisco/fw1.cfg
+ local divisor=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 192.168.1.10 configs/cisco/fw1.cfg
++ sed 's/!/\n/g' configs/cisco/fw1.cfg
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
+ local divisor=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 203.0.113.25 configs/cisco/fw1.cfg
++ sed 's/!/\n/g' configs/misc/switch.conf
+ local 'content=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0


object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server


object network External-203-0-113-25
 host 203.0.113.25


access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any


nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ local serialized=
+ IFS=
+ read -r line
+ serialized+='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ local 'content=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0


object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server


object network External-203-0-113-25
 host 203.0.113.25


access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any


nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ serialized+=' network-object 192.168.1.0 255.255.255.0MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ local serialized=
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='object network Server-192-168-1-10MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' host 192.168.1.10MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Main Application ServerMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ serialized+=' network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+=' network-object 192.168.1.0 255.255.255.0MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='object network External-203-0-113-25MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ serialized+=' host 203.0.113.25MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ serialized+='object network Server-192-168-1-10MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ IFS=
+ read -r line
+ read -r line
+ serialized+=' host 192.168.1.10MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='access-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Main Application ServerMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ serialized+='access-list OUTSIDE extended deny ip any anyMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ IFS=
+ read -r line
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ serialized+='object network External-203-0-113-25MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ IFS=
+ read -r line
+ read -r line
+ serialized+=' host 203.0.113.25MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ serialized+='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ read -r line
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ serialized+='access-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='access-list OUTSIDE extended deny ip any anyMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
+ local 'content=interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan2
 ip address 10.0.1.2 255.255.255.0

object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ local serialized=
+ IFS=
+ read -r line
+ serialized+='interface Vlan1MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ matched_configs["${cfg_file}"]=true
+ IFS=
+ read -r line
+ matched_configs_order+=("${cfg_file}")
+ serialized+=' ip address 172.31.255.254 255.255.255.0MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NzA4MTAwMAo
+ IFS=
+ read -r line
+ serialized+='interface Vlan2MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+=' ip address 10.0.1.2 255.255.255.0MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NzA4MTAwMAo
+ IFS=
+ read -r line
+ serialized+='object-group network SOME-THINGMTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+='  description Local Office SubnetsMTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+='  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ serialized+='  network-object 192.168.12.0 255.255.255.0MTc0NjYzMzU5MTU5NzA4MTAwMAo'
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/MTc0NjYzMzU5MTU5NTczMDAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTU5NTczMDAwMAo$//'
++ sed -E 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTU5NTg4NjAwMAo$//'
++ sed 's/!/\n/g' configs/cisco/fw1.cfg
++ sed 's/!/\n/g' configs/cisco/fw1.cfg
++ sed -E 's/MTc0NjYzMzU5MTU5NzA4MTAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTU5NzA4MTAwMAo$//'
+ local 'content=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0


object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server


object network External-203-0-113-25
 host 203.0.113.25


access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any


nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ local serialized=
+ IFS=
+ read -r line
+ local 'content=object-group network BU1-NETWORK
 description Corporate HQ Subnets
+ serialized+='object-group network BU1-NETWORKMTc0NjYzMzU5MTYwMDM3NzAwMAo'
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0


object network Server-192-168-1-10
 host 192.168.1.10
+ IFS=
 description Main Application Server

+ read -r line

object network External-203-0-113-25
 host 203.0.113.25


access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any


nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ local serialized=
+ serialized+=' description Corporate HQ SubnetsMTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.0.1MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.1.2MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+='object-group network BU1-NETWORKMTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object 192.168.1.0 255.255.255.0MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Corporate HQ SubnetsMTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.0.1MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+='object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object host 10.0.1.2MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' host 192.168.1.10MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+=' network-object 192.168.1.0 255.255.255.0MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' description Main Application ServerMTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ serialized+='object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTg4NjAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object 192.168.1.0 255.255.255.0
MTc0NjYzMzU5MTU5NTg4NjAwMAo
object network Server-192-168-1-10MTc0NjYzMzU5MTU5NTg4NjAwMAo host 192.168.1.10MTc0NjYzMzU5MTU5NTg4NjAwMAo description Main Application Server
MTc0NjYzMzU5MTU5NTg4NjAwMAo
object network External-203-0-113-25MTc0NjYzMzU5MTU5NTg4NjAwMAo host 203.0.113.25
MTc0NjYzMzU5MTU5NTg4NjAwMAo
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
+ serialized+=' host 192.168.1.10MTc0NjYzMzU5MTYwMDc1MjAwMAo'
MTc0NjYzMzU5MTU5NTg4NjAwMAo
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ read -r line
+ serialized+=' description Main Application ServerMTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ read -r object
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ serialized+='object network External-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+='object network External-203-0-113-25MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ serialized+=' host 203.0.113.25MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ serialized='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTczMDAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTczMDAwMAo network-object 192.168.1.0 255.255.255.0
MTc0NjYzMzU5MTU5NTczMDAwMAo
object network Server-192-168-1-10MTc0NjYzMzU5MTU5NTczMDAwMAo host 192.168.1.10MTc0NjYzMzU5MTU5NTczMDAwMAo description Main Application Server
+ serialized+=' host 203.0.113.25MTc0NjYzMzU5MTYwMDM3NzAwMAo'
MTc0NjYzMzU5MTU5NTczMDAwMAo
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
object network External-203-0-113-25MTc0NjYzMzU5MTU5NTczMDAwMAo host 203.0.113.25
MTc0NjYzMzU5MTU5NTczMDAwMAo
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ IFS=
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ read -r line
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ grep -qF 10.0.0.1
+ IFS=
+ read -r line
+ read -r object
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ read -r line
+ serialized+='access-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+='access-list OUTSIDE extended permit ip host 10.0.0.1 anyMTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ serialized+='access-list OUTSIDE extended deny ip any anyMTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDc1MjAwMAo
+ serialized+='access-list OUTSIDE extended deny ip any anyMTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTYwMDM3NzAwMAo
+ IFS=
+ read -r line
+ serialized+='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAo'
+ grep -qF 10.0.1.2
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ serialized+='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25MTc0NjYzMzU5MTYwMDM3NzAwMAo'
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ serialized='interface Vlan1MTc0NjYzMzU5MTU5NzA4MTAwMAo ip address 172.31.255.254 255.255.255.0
MTc0NjYzMzU5MTU5NzA4MTAwMAointerface Vlan2MTc0NjYzMzU5MTU5NzA4MTAwMAo ip address 10.0.1.2 255.255.255.0
MTc0NjYzMzU5MTU5NzA4MTAwMAoobject-group network SOME-THINGMTc0NjYzMzU5MTU5NzA4MTAwMAo  description Local Office SubnetsMTc0NjYzMzU5MTU5NzA4MTAwMAo  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NzA4MTAwMAo  network-object 192.168.12.0 255.255.255.0'
+ IFS=
+ read -r object
+ grep -qF 172.31.255.254
++ sed -E 's/MTc0NjYzMzU5MTYwMDc1MjAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTYwMDc1MjAwMAo$//'
++ sed -E 's/MTc0NjYzMzU5MTYwMDM3NzAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTYwMDM3NzAwMAo$//'
+ matched_blocks_byfile["${cfg_file}"]+='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTczMDAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTczMDAwMAo network-object 192.168.1.0 255.255.255.0
'
+ IFS=
+ read -r object
+ matched_blocks_byfile["${cfg_file}"]+='interface Vlan1MTc0NjYzMzU5MTU5NzA4MTAwMAo ip address 172.31.255.254 255.255.255.0
'
+ matched_blocks_byfile["${cfg_file}"]+='object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTg4NjAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object 192.168.1.0 255.255.255.0
'
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ grep -qF 172.31.255.254
+ serialized='object-group network BU1-NETWORKMTc0NjYzMzU5MTYwMDM3NzAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTYwMDM3NzAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTYwMDM3NzAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTYwMDM3NzAwMAo network-object 192.168.1.0 255.255.255.0
MTc0NjYzMzU5MTYwMDM3NzAwMAo
object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDM3NzAwMAo host 192.168.1.10MTc0NjYzMzU5MTYwMDM3NzAwMAo description Main Application Server
MTc0NjYzMzU5MTYwMDM3NzAwMAo
object network External-203-0-113-25MTc0NjYzMzU5MTYwMDM3NzAwMAo host 203.0.113.25
MTc0NjYzMzU5MTYwMDM3NzAwMAo
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
MTc0NjYzMzU5MTYwMDM3NzAwMAo
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ IFS=
+ read -r object
+ serialized='object-group network BU1-NETWORKMTc0NjYzMzU5MTYwMDc1MjAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTYwMDc1MjAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTYwMDc1MjAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTYwMDc1MjAwMAo network-object 192.168.1.0 255.255.255.0
MTc0NjYzMzU5MTYwMDc1MjAwMAo
object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDc1MjAwMAo host 192.168.1.10MTc0NjYzMzU5MTYwMDc1MjAwMAo description Main Application Server
MTc0NjYzMzU5MTYwMDc1MjAwMAo
object network External-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAo host 203.0.113.25
MTc0NjYzMzU5MTYwMDc1MjAwMAo
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
MTc0NjYzMzU5MTYwMDc1MjAwMAo
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ IFS=
+ grep -qF 192.168.1.10
+ read -r object
+ grep -qF 203.0.113.25
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ grep -qF 172.31.255.254
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ grep -qF 203.0.113.25
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ [[ 1 -eq 0 ]]
+ newline
+ local count=1
+ IFS=
+ (( i = 0 ))
+ read -r object
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -qF 10.0.1.2
+ print '3 Valid IP Address: 172.31.255.254'
+ [[ -n 3 Valid IP Address: 172.31.255.254 ]]
+ echo -en '3 Valid IP Address: 172.31.255.254'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L/partial.json
+ generate_objects 172.31.255.254 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L/partial.json
+ local ip_address=172.31.255.254
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L/partial.json
+ configs=()
+ local -a configs
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=interface Vlan1MTc0NjYzMzU5MTU5NzA4MTAwMAo ip address 172.31.255.254 255.255.255.0
'
+ objects=()
+ local -a objects
+ IFS=
+ read -r block
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
++ sed 's/MTc0NjYzMzU5MTU5NzA4MTAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ grep -qF 10.0.1.2
+ IFS=
+ matched_blocks_byfile["${cfg_file}"]+='object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDM3NzAwMAo host 192.168.1.10MTc0NjYzMzU5MTYwMDM3NzAwMAo description Main Application Server
+ read -r object
'
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ grep -qF 192.168.1.10
+ local 'restored=interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ local 'object_val=interface Vlan1'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b172\.31\.255\.254\b'
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ matched_blocks_byfile["${cfg_file}"]+='object network External-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAo host 203.0.113.25
'
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ for entry in "${lines[@]}"
+ grep -Eq '\b172\.31\.255\.254\b'
+ matched_blocks_byfile["${cfg_file}"]+='access-list OUTSIDE extended permit ip host 10.0.0.1 any
'
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ IFS=
+ read -r object
+ grep -qF 10.0.0.1
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ IFS=
+ read -r object
+ entry_val='ip address 172.31.255.254 255.255.255.0'
+ break
+ grep -qF 10.0.0.1
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ interface vlan1 =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  ip address 172.31.255.254 255.255.255.0 =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ IFS=
+ read -r object
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 10.0.0.1 configs/misc/switch.conf
+ IFS=
+ read -r object
+ for cfg_file in "${source_configs[@]}"
+ grep -qF 10.0.1.2 configs/misc/switch.conf
+ IFS=
+ read -r object
+ grep -qF 203.0.113.25
+ IFS=
+ read -r object
+ grep -qF 192.168.1.10
+ local object_key=Vlan1
++ jq -r --arg key Vlan1 '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
+ matched_configs["${cfg_file}"]=true
+ matched_configs_order+=("${cfg_file}")
+ IFS=
+ read -r object
+ [[ 1 -eq 0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r object
+ print '4 Valid IP Address: 192.168.1.10'
+ [[ -n 4 Valid IP Address: 192.168.1.10 ]]
+ echo -en '4 Valid IP Address: 192.168.1.10'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 1 -eq 0 ]]
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT/partial.json
+ (( i < count ))
+ echo
+ generate_objects 192.168.1.10 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT/partial.json
+ (( i++ ))
+ (( i < count ))
+ print '5 Valid IP Address: 203.0.113.25'
+ local ip_address=192.168.1.10
+ [[ -n 5 Valid IP Address: 203.0.113.25 ]]
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT/partial.json
+ echo -en '5 Valid IP Address: 203.0.113.25'
+ configs=()
+ local -a configs
+ newline 2
+ for cfg_file in "${matched_configs_order[@]}"
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'blocks=object network Server-192-168-1-10MTc0NjYzMzU5MTYwMDM3NzAwMAo host 192.168.1.10MTc0NjYzMzU5MTYwMDM3NzAwMAo description Main Application Server
'
+ objects=()
+ local -a objects
+ (( i++ ))
+ IFS=
+ read -r block
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2/partial.json
+ generate_objects 203.0.113.25 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2/partial.json
+ local ip_address=203.0.113.25
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2/partial.json
+ configs=()
+ local -a configs
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=object network External-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAo host 203.0.113.25
'
+ objects=()
+ local -a objects
+ IFS=
+ read -r block
++ sed 's/!/\n/g' configs/misc/switch.conf
++ sed 's/!/\n/g' configs/misc/switch.conf
++ sed 's/MTc0NjYzMzU5MTYwMDM3NzAwMAo/\n/g'
++ sed 's/MTc0NjYzMzU5MTYwMDc1MjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
++ sed '/^[[:space:]]*$/d'
+ local 'content=interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan2
 ip address 10.0.1.2 255.255.255.0

object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ local serialized=
+ local 'content=interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan2
 ip address 10.0.1.2 255.255.255.0

object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ IFS=
+ read -r line
+ local serialized=
+ IFS=
+ read -r line
+ serialized+='interface Vlan1MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='interface Vlan1MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ serialized+=' ip address 172.31.255.254 255.255.255.0MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ IFS=
+ read -r line
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ IFS=
+ read -r line
+ serialized+='interface Vlan2MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+=' ip address 172.31.255.254 255.255.255.0MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ serialized+=' ip address 10.0.1.2 255.255.255.0MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ read -r line
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTg4NjAwMAo
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+='interface Vlan2MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ serialized+=' ip address 10.0.1.2 255.255.255.0MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+=MTc0NjYzMzU5MTU5NTczMDAwMAo
+ IFS=
+ read -r line
+ serialized+='object-group network SOME-THINGMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ serialized+='object-group network SOME-THINGMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ IFS=
+ read -r line
+ serialized+='  description Local Office SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ serialized+='  description Local Office SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo'
+ read -r line
+ IFS=
+ read -r line
+ serialized+='  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ serialized+='  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ read -r line
+ IFS=
+ read -r line
+ serialized+='  network-object 192.168.12.0 255.255.255.0MTc0NjYzMzU5MTU5NTczMDAwMAo'
+ serialized+='  network-object 192.168.12.0 255.255.255.0MTc0NjYzMzU5MTU5NTg4NjAwMAo'
+ IFS=
+ read -r line
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ [[ -n '' ]]
++ sed -E 's/MTc0NjYzMzU5MTU5NTczMDAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTU5NTczMDAwMAo$//'
++ sed -E 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo([^ ])/\n\1/g; s/MTc0NjYzMzU5MTU5NTg4NjAwMAo$//'
+ local 'restored=object network External-203-0-113-25
 host 203.0.113.25'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ group_val=Business-Unit-Networks
+ lines+=("${line}")
+ [[ -z Business-Unit-Networks ]]
+ [[ Business-Unit-Networks == null ]]
+ IFS=
+ read -r line
+ local 'restored=object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server'
+ [[ -z Business-Unit-Networks ]]
+ [[ Business-Unit-Networks == null ]]
+ lines+=("${line}")
+ [[ ip address 172.31.255.254 255.255.255.0 == null ]]
+ IFS=
+ [[ -z ip address 172.31.255.254 255.255.255.0 ]]
+ read -r line
+ lines=()
+ local -a lines
+ [[ -n '' ]]
+ local 'entry_final="ip address 172.31.255.254 255.255.255.0"'
+ ((  2 == 1  ))
+ IFS=
+ read -r line
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ jq -n --arg object 'interface Vlan1' --argjson entry '"ip address 172.31.255.254 255.255.255.0"' --arg desc null --arg group Business-Unit-Networks '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ serialized='interface Vlan1MTc0NjYzMzU5MTU5NTczMDAwMAo ip address 172.31.255.254 255.255.255.0
+ serialized='interface Vlan1MTc0NjYzMzU5MTU5NTg4NjAwMAo ip address 172.31.255.254 255.255.255.0
MTc0NjYzMzU5MTU5NTczMDAwMAointerface Vlan2MTc0NjYzMzU5MTU5NTczMDAwMAo ip address 10.0.1.2 255.255.255.0
MTc0NjYzMzU5MTU5NTg4NjAwMAointerface Vlan2MTc0NjYzMzU5MTU5NTg4NjAwMAo ip address 10.0.1.2 255.255.255.0
MTc0NjYzMzU5MTU5NTczMDAwMAoobject-group network SOME-THINGMTc0NjYzMzU5MTU5NTczMDAwMAo  description Local Office SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo  network-object 192.168.12.0 255.255.255.0'
MTc0NjYzMzU5MTU5NTg4NjAwMAoobject-group network SOME-THINGMTc0NjYzMzU5MTU5NTg4NjAwMAo  description Local Office SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object 192.168.12.0 255.255.255.0'
+ IFS=
+ IFS=
+ read -r object
+ read -r object
+ grep -qF 10.0.0.1
+ grep -qF 10.0.1.2
+ local 'object_val=object network External-203-0-113-25'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b203\.0\.113\.25\b'
+ local 'object_val=object network Server-192-168-1-10'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b192\.168\.1\.10\b'
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ IFS=
+ read -r block
+ grep -qF 10.0.0.1
+ grep -qF 10.0.1.2
+ for entry in "${lines[@]}"
+ grep -Eq '\b203\.0\.113\.25\b'
+ for entry in "${lines[@]}"
+ grep -Eq '\b192\.168\.1\.10\b'
++ sed 's/MTc0NjYzMzU5MTU5NzA4MTAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ matched_blocks_byfile["${cfg_file}"]+='MTc0NjYzMzU5MTU5NTczMDAwMAointerface Vlan2MTc0NjYzMzU5MTU5NTczMDAwMAo ip address 10.0.1.2 255.255.255.0
'
+ IFS=
+ read -r object
+ IFS=
+ read -r object
+ grep -qF 10.0.1.2
+ grep -qF 10.0.0.1
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ IFS=
+ read -r object
+ [[ 2 -eq 0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ matched_blocks_byfile["${cfg_file}"]+='MTc0NjYzMzU5MTU5NTg4NjAwMAoobject-group network SOME-THINGMTc0NjYzMzU5MTU5NTg4NjAwMAo  description Local Office SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object 192.168.12.0 255.255.255.0
+ (( i < count ))
'
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r object
+ print '2 Valid IP Address: 10.0.1.2'
+ [[ -n 2 Valid IP Address: 10.0.1.2 ]]
+ echo -en '2 Valid IP Address: 10.0.1.2'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ [[ 2 -eq 0 ]]
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr/partial.json
+ echo
+ (( i++ ))
+ generate_objects 10.0.1.2 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr/partial.json
+ (( i < count ))
+ print '1 Valid IP Address: 10.0.0.1'
+ [[ -n 1 Valid IP Address: 10.0.0.1 ]]
+ local ip_address=10.0.1.2
+ echo -en '1 Valid IP Address: 10.0.0.1'
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr/partial.json
+ newline 2
+ configs=()
+ local -a configs
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ for cfg_file in "${matched_configs_order[@]}"
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'blocks=object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTczMDAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTczMDAwMAo network-object 192.168.1.0 255.255.255.0
'
+ (( i < count ))
+ objects=()
+ local -a objects
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M/partial.json
+ generate_objects 10.0.0.1 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M/partial.json
+ IFS=
+ read -r block
+ local ip_address=10.0.0.1
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M/partial.json
+ configs=()
+ local -a configs
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=object-group network BU1-NETWORKMTc0NjYzMzU5MTU5NTg4NjAwMAo description Corporate HQ SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object host 10.0.1.2MTc0NjYzMzU5MTU5NTg4NjAwMAo network-object 192.168.1.0 255.255.255.0
access-list OUTSIDE extended permit ip host 10.0.0.1 any
'
+ objects=()
+ local -a objects
+ IFS=
+ read -r block
+ entry_val='host 203.0.113.25'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ object network external-203-0-113-25 =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  host 203.0.113.25 =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
+ local object_val=
++ sed '/^[[:space:]]*$/d'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b172\.31\.255\.254\b'
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
+ entry_val='host 192.168.1.10'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
++ sed '/^[[:space:]]*$/d'
+ [[ object network server-192-168-1-10 =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  host 192.168.1.10 =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  description main application server =~ ^[[:space:]]*description ]]
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'restored=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ local 'restored=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines=()
+ local -a lines
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ IFS=
+ read -r line
+ lines+=("${line}")
+ local desc_val=null
+ IFS=
+ read -r line
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ local group_val=
+ IFS=
+ read -r line
+ lines+=("${line}")
+ [[ true == true ]]
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ local object_key=External-203-0-113-25
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ jq -r --arg key External-203-0-113-25 '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ desc_val='Main Application Server'
+ break
++ awk '{print $NF}'
+ local group_val=
+ [[ true == true ]]
++ sed -E 's/[[:punct:]]*$//'
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ local 'object_val=object-group network BU1-NETWORK'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ local 'object_val=object-group network BU1-NETWORK'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
+ local object_key=
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ local object_key=Server-192-168-1-10
++ jq -r --arg key Server-192-168-1-10 '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ group_val=Business-Unit-External
+ [[ -z Business-Unit-External ]]
+ [[ Business-Unit-External == null ]]
+ [[ -z Business-Unit-External ]]
+ [[ Business-Unit-External == null ]]
+ [[ host 203.0.113.25 == null ]]
+ [[ -z host 203.0.113.25 ]]
+ local 'entry_final="host 203.0.113.25"'
+ ((  2 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
++ jq -n --arg object 'object network External-203-0-113-25' --argjson entry '"host 203.0.113.25"' --arg desc null --arg group Business-Unit-External '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ local 'objs_json=[]'
+ ((  1 > 0  ))
++ jq -s .
+ group_val=Business-Unit-HQ
+ [[ -z Business-Unit-HQ ]]
+ [[ Business-Unit-HQ == null ]]
+ [[ -z Business-Unit-HQ ]]
+ [[ Business-Unit-HQ == null ]]
+ [[ host 192.168.1.10 == null ]]
+ [[ -z host 192.168.1.10 ]]
+ local 'entry_final="host 192.168.1.10"'
+ ((  3 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
+ IFS=
+ read -r block
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
++ jq -n --arg object 'object network Server-192-168-1-10' --argjson entry '"host 192.168.1.10"' --arg desc 'Main Application Server' --arg group Business-Unit-HQ '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed 's/MTc0NjYzMzU5MTYwMDc1MjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ entry_val='network-object host 10.0.0.1'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ object-group network bu1-network =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  description corporate hq subnets =~ ^[[:space:]]*description ]]
+ objs_json='[
  {
    "object": "interface Vlan1",
    "entry": "ip address 172.31.255.254 255.255.255.0",
    "description": false,
    "group": "Business-Unit-Networks"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ jq -n --arg cfg configs/misc/switch.conf --argjson objs '[
  {
    "object": "interface Vlan1",
    "entry": "ip address 172.31.255.254 255.255.255.0",
    "description": false,
    "group": "Business-Unit-Networks"
  }
]' '{ config: $cfg, objects: $objs }'
+ IFS=
+ read -r block
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed 's/MTc0NjYzMzU5MTYwMDM3NzAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ entry_val='network-object host 10.0.1.2'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ object-group network bu1-network =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  description corporate hq subnets =~ ^[[:space:]]*description ]]
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b203\.0\.113\.25\b'
+ desc_val='Corporate HQ Subnets'
+ break
+ local group_val=
+ [[ true == true ]]
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
++ awk '{print $NF}'
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/[[:punct:]]*$//'
+ local 'cfgs_json=[]'
+ ((  1 > 0  ))
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ jq -s .
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
+ desc_val='Corporate HQ Subnets'
+ break
+ local group_val=
+ [[ true == true ]]
+ local object_key=BU1-NETWORK
++ awk '{print $NF}'
++ awk '{print $NF}'
++ jq -r --arg key BU1-NETWORK '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ sed -E 's/[[:punct:]]*$//'
++ sed -E 's/[[:punct:]]*$//'
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b192\.168\.1\.10\b'
+ local object_key=BU1-NETWORK
+ local object_key=
+ cfgs_json='[
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "interface Vlan1",
        "entry": "ip address 172.31.255.254 255.255.255.0",
        "description": false,
        "group": "Business-Unit-Networks"
      }
    ]
  }
]'
+ jq -n --arg ip 172.31.255.254 --argjson cfgs '[
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "interface Vlan1",
        "entry": "ip address 172.31.255.254 255.255.255.0",
        "description": false,
        "group": "Business-Unit-Networks"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ jq -r --arg key BU1-NETWORK '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ network-object host 10.0.0.1 == null ]]
+ [[ -z network-object host 10.0.0.1 ]]
+ local 'entry_final="network-object host 10.0.0.1"'
+ ((  5 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
++ jq -n --arg object 'object-group network BU1-NETWORK' --argjson entry '"network-object host 10.0.0.1"' --arg desc 'Corporate HQ Subnets' --arg group 'Identified Matching Entries' '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ local object_key=
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ return 0
+ mkdir -p reports/lists reports/json
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ group_val='Identified Matching Entries'
+ local 'objs_json=[]'
+ [[ -z Identified Matching Entries ]]
+ ((  1 > 0  ))
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ network-object host 10.0.1.2 == null ]]
+ [[ -z network-object host 10.0.1.2 ]]
+ local 'entry_final="network-object host 10.0.1.2"'
+ ((  5 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
++ jq -s .
++ jq -n --arg object 'object-group network BU1-NETWORK' --argjson entry '"network-object host 10.0.1.2"' --arg desc 'Corporate HQ Subnets' --arg group 'Identified Matching Entries' '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ IFS=
+ read -r block
+ local list_outfile=reports/lists/172.31.255.254.list
+ local json_outfile=reports/json/172.31.255.254.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
++ sed 's/MTc0NjYzMzU5MTU5NzA4MTAwMAo/\n/g'
+ local 'objs_json=[]'
+ ((  1 > 0  ))
++ sed '/^[[:space:]]*$/d'
++ jq -s .
+ local 'restored=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ IFS=
+ read -r block
+ objs_json='[
  {
    "object": "object network External-203-0-113-25",
    "entry": "host 203.0.113.25",
    "description": false,
    "group": "Business-Unit-External"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ jq -n --arg cfg configs/cisco/fw1.cfg --argjson objs '[
  {
    "object": "object network External-203-0-113-25",
    "entry": "host 203.0.113.25",
    "description": false,
    "group": "Business-Unit-External"
  }
]' '{ config: $cfg, objects: $objs }'
+ restored='interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
+ [[ -n interfaceVlan1ipaddress172.31.255.254255.255.255.0 ]]
+ [[ true == true ]]
+ [[ -n interfaceVlan1MTc0NjYzMzU5MTU5NzA4MTAwMAoipaddress172.31.255.254255.255.255.0 ]]
+ print '\nConfig: configs/misc/switch.conf\n'
+ [[ -n \nConfig: configs/misc/switch.conf\n ]]
+ echo -en '\nConfig: configs/misc/switch.conf\n'
++ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ print 'Config: configs/misc/switch.conf'
+ [[ -n Config: configs/misc/switch.conf ]]
+ echo -en 'Config: configs/misc/switch.conf'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\ninterface Vlan1
 ip address 172.31.255.254 255.255.255.0\n'
+ [[ -n \ninterface Vlan1
 ip address 172.31.255.254 255.255.255.0\n ]]
+ echo -en '\ninterface Vlan1
 ip address 172.31.255.254 255.255.255.0\n'
+ [[ true == true ]]
+ print 'interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en 'interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NzA4MTAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ local 'object_val=access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
+ objs_json='[
  {
    "object": "object network Server-192-168-1-10",
    "entry": "host 192.168.1.10",
    "description": "Main Application Server",
    "group": "Business-Unit-HQ"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'cfgs_json=[]'
+ ((  1 > 0  ))
++ jq -n --arg cfg configs/cisco/fw1.cfg --argjson objs '[
  {
    "object": "object network Server-192-168-1-10",
    "entry": "host 192.168.1.10",
    "description": "Main Application Server",
    "group": "Business-Unit-HQ"
  }
]' '{ config: $cfg, objects: $objs }'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L/partial.json reports/json/172.31.255.254.json
++ jq -s .
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ [[ true == true ]]
+ jq . reports/json/172.31.255.254.json
+ local 'cfgs_json=[]'
+ ((  1 > 0  ))
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
+ entry_val='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ access-list outside extended permit ip host 10.0.0.1 any =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
++ jq -s .
+ cfgs_json='[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object network External-203-0-113-25",
        "entry": "host 203.0.113.25",
        "description": false,
        "group": "Business-Unit-External"
      }
    ]
  }
]'
+ jq -n --arg ip 203.0.113.25 --argjson cfgs '[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object network External-203-0-113-25",
        "entry": "host 203.0.113.25",
        "description": false,
        "group": "Business-Unit-External"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
++ awk '{print $NF}'
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
++ sed -E 's/[[:punct:]]*$//'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZZylziFk8L
+ local object_key=any
+ local object_key=
++ jq -r --arg key any '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ cfgs_json='[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object network Server-192-168-1-10",
        "entry": "host 192.168.1.10",
        "description": "Main Application Server",
        "group": "Business-Unit-HQ"
      }
    ]
  }
]'
+ jq -n --arg ip 192.168.1.10 --argjson cfgs '[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object network Server-192-168-1-10",
        "entry": "host 192.168.1.10",
        "description": "Main Application Server",
        "group": "Business-Unit-HQ"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
+ return 0
+ mkdir -p reports/lists reports/json
Using pre-matched config list: targets/172.31.255.254.list
3 Valid IP Address: 172.31.255.254

Config: configs/misc/switch.conf

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

{
  "target": "172.31.255.254",
  "configs": [
    {
      "config": "configs/misc/switch.conf",
      "objects": [
        {
          "object": "interface Vlan1",
          "entry": "ip address 172.31.255.254 255.255.255.0",
          "description": false,
          "group": "Business-Unit-Networks"
        }
      ]
    }
  ]
}
+ local list_outfile=reports/lists/203.0.113.25.list
+ local json_outfile=reports/json/203.0.113.25.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTYwMDc1MjAwMAo/\n/g'
+ group_val=null
+ [[ -z null ]]
+ [[ null == null ]]
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
++ sed '/^[[:space:]]*$/d'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ return 0
+ local 'objs_json=[]'
+ ((  1 > 0  ))
+ mkdir -p reports/lists reports/json
++ jq -r --arg desc null '
                map(select(.match[]? == $desc)) | .[0].group
              '
++ jq -s .
+ restored='object network External-203-0-113-25
 host 203.0.113.25'
+ [[ -n objectnetworkExternal-203-0-113-25host203.0.113.25 ]]
+ [[ true == true ]]
+ [[ -n objectnetworkExternal-203-0-113-25MTc0NjYzMzU5MTYwMDc1MjAwMAohost203.0.113.25 ]]
+ print '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ -n \nConfig: configs/cisco/fw1.cfg\n ]]
+ echo -en '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ true == true ]]
+ print 'Config: configs/cisco/fw1.cfg'
+ [[ -n Config: configs/cisco/fw1.cfg ]]
+ echo -en 'Config: configs/cisco/fw1.cfg'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\nobject network External-203-0-113-25
 host 203.0.113.25\n'
+ [[ -n \nobject network External-203-0-113-25
 host 203.0.113.25\n ]]
+ echo -en '\nobject network External-203-0-113-25
 host 203.0.113.25\n'
+ [[ true == true ]]
+ print 'object network External-203-0-113-25
 host 203.0.113.25'
+ [[ -n object network External-203-0-113-25
 host 203.0.113.25 ]]
+ echo -en 'object network External-203-0-113-25
 host 203.0.113.25'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
+ local list_outfile=reports/lists/192.168.1.10.list
+ local json_outfile=reports/json/192.168.1.10.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTYwMDc1MjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
++ sed 's/MTc0NjYzMzU5MTYwMDM3NzAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ group_val=null
+ [[ -z null ]]
+ [[ null == null ]]
+ objs_json='[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "network-object host 10.0.1.2",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ sed -E 's|^configs/||'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2/partial.json reports/json/203.0.113.25.json
++ jq -n --arg cfg configs/cisco/fw1.cfg --argjson objs '[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "network-object host 10.0.1.2",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  }
]' '{ config: $cfg, objects: $objs }'
+ restored='object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server'
+ [[ -n objectnetworkServer-192-168-1-10host192.168.1.10descriptionMainApplicationServer ]]
+ [[ true == true ]]
+ [[ -n objectnetworkServer-192-168-1-10MTc0NjYzMzU5MTYwMDM3NzAwMAohost192.168.1.10MTc0NjYzMzU5MTYwMDM3NzAwMAodescriptionMainApplicationServer ]]
+ print '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ -n \nConfig: configs/cisco/fw1.cfg\n ]]
+ echo -en '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ true == true ]]
+ print 'Config: configs/cisco/fw1.cfg'
+ [[ -n Config: configs/cisco/fw1.cfg ]]
+ echo -en 'Config: configs/cisco/fw1.cfg'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\nobject network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server\n'
+ [[ -n \nobject network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server\n ]]
+ echo -en '\nobject network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server\n'
+ [[ true == true ]]
+ print 'object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server'
+ [[ -n object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server ]]
+ echo -en 'object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTYwMDM3NzAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ group_val=cisco/fw1.cfg
+ [[ access-list OUTSIDE extended permit ip host 10.0.0.1 any == null ]]
+ [[ -z access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
+ local 'entry_final="access-list OUTSIDE extended permit ip host 10.0.0.1 any"'
+ ((  1 == 1  ))
+ entry_final=false
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
+ [[ true == true ]]
+ jq . reports/json/203.0.113.25.json
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=MTc0NjYzMzU5MTU5NTczMDAwMAointerface Vlan2MTc0NjYzMzU5MTU5NTczMDAwMAo ip address 10.0.1.2 255.255.255.0
'
+ objects=()
+ local -a objects
+ IFS=
+ read -r block
++ jq -n --arg object 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' --argjson entry false --arg desc null --arg group cisco/fw1.cfg '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT/partial.json reports/json/192.168.1.10.json
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ jq . reports/json/192.168.1.10.json
+ local 'restored=interface Vlan2
 ip address 10.0.1.2 255.255.255.0'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ IFS=
+ read -r block
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XBWqklvqw2
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local 'object_val=interface Vlan2'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
Using pre-matched config list: targets/203.0.113.25.list
5 Valid IP Address: 203.0.113.25

Config: configs/cisco/fw1.cfg

object network External-203-0-113-25
 host 203.0.113.25

{
  "target": "203.0.113.25",
  "configs": [
    {
      "config": "configs/cisco/fw1.cfg",
      "objects": [
        {
          "object": "object network External-203-0-113-25",
          "entry": "host 203.0.113.25",
          "description": false,
          "group": "Business-Unit-External"
        }
      ]
    }
  ]
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n1Ydv2P8kT
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
Using pre-matched config list: targets/192.168.1.10.list
4 Valid IP Address: 192.168.1.10

Config: configs/cisco/fw1.cfg

object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server

{
  "target": "192.168.1.10",
  "configs": [
    {
      "config": "configs/cisco/fw1.cfg",
      "objects": [
        {
          "object": "object network Server-192-168-1-10",
          "entry": "host 192.168.1.10",
          "description": "Main Application Server",
          "group": "Business-Unit-HQ"
        }
      ]
    }
  ]
}
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ entry_val='ip address 10.0.1.2 255.255.255.0'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ interface vlan2 =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[  ip address 10.0.1.2 255.255.255.0 =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
+ local object_key=
++ awk '{print $NF}'
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ sed -E 's/[[:punct:]]*$//'
+ local object_key=Vlan2
++ jq -r --arg key Vlan2 '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ local 'objs_json=[]'
+ ((  2 > 0  ))
++ jq -s .
+ group_val=Business-Unit-Networks
+ [[ -z Business-Unit-Networks ]]
+ [[ Business-Unit-Networks == null ]]
+ [[ -z Business-Unit-Networks ]]
+ [[ Business-Unit-Networks == null ]]
+ [[ ip address 10.0.1.2 255.255.255.0 == null ]]
+ [[ -z ip address 10.0.1.2 255.255.255.0 ]]
+ local 'entry_final="ip address 10.0.1.2 255.255.255.0"'
+ ((  2 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
++ jq -n --arg object 'interface Vlan2' --argjson entry '"ip address 10.0.1.2 255.255.255.0"' --arg desc null --arg group Business-Unit-Networks '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ objs_json='[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "network-object host 10.0.0.1",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  },
  {
    "object": "access-list OUTSIDE extended permit ip host 10.0.0.1 any",
    "entry": false,
    "description": false,
    "group": "cisco/fw1.cfg"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ jq -n --arg cfg configs/cisco/fw1.cfg --argjson objs '[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "network-object host 10.0.0.1",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  },
  {
    "object": "access-list OUTSIDE extended permit ip host 10.0.0.1 any",
    "entry": false,
    "description": false,
    "group": "cisco/fw1.cfg"
  }
]' '{ config: $cfg, objects: $objs }'
+ IFS=
+ read -r block
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=MTc0NjYzMzU5MTU5NTg4NjAwMAoobject-group network SOME-THINGMTc0NjYzMzU5MTU5NTg4NjAwMAo  description Local Office SubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object host 10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAo  network-object 192.168.12.0 255.255.255.0
'
+ objects=()
+ local -a objects
+ IFS=
+ read -r block
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed '/^[[:space:]]*$/d'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'restored=object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.1\.2\b'
+ local 'object_val=object-group network SOME-THING'
+ local entry_val=null
+ for entry in "${lines[@]}"
+ local desc_val=null
+ grep -Eq '\b10\.0\.0\.1\b'
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
+ local object_key=
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ local 'objs_json=[]'
+ ((  1 > 0  ))
++ jq -s .
+ entry_val='network-object host 10.0.0.1'
+ break
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ object-group network some-thing =~ ^[[:space:]]*description ]]
+ for entry in "${lines[@]}"
+ [[   description local office subnets =~ ^[[:space:]]*description ]]
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I'
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ desc_val='Local Office Subnets'
+ break
+ local group_val=
+ [[ true == true ]]
+ objs_json='[
  {
    "object": "interface Vlan2",
    "entry": "ip address 10.0.1.2 255.255.255.0",
    "description": false,
    "group": "Business-Unit-Networks"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
++ awk '{print $NF}'
++ jq -n --arg cfg configs/misc/switch.conf --argjson objs '[
  {
    "object": "interface Vlan2",
    "entry": "ip address 10.0.1.2 255.255.255.0",
    "description": false,
    "group": "Business-Unit-Networks"
  }
]' '{ config: $cfg, objects: $objs }'
++ sed -E 's/[[:punct:]]*$//'
+ local object_key=SOME-THING
++ jq -r --arg key SOME-THING '
              map(select(.match[]? | contains($key))) | .[0].group
            '
+ local 'cfgs_json=[]'
+ ((  2 > 0  ))
++ jq -s .
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ network-object host 10.0.0.1 == null ]]
+ [[ -z network-object host 10.0.0.1 ]]
+ local 'entry_final="network-object host 10.0.0.1"'
+ ((  4 == 1  ))
+ objects+=("$(jq -n --arg object "${object_val}" --argjson entry "${entry_final}" --arg desc "${desc_val}" --arg group "${group_val}" '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }')")
++ jq -n --arg object 'object-group network SOME-THING' --argjson entry '"network-object host 10.0.0.1"' --arg desc 'Local Office Subnets' --arg group 'Identified Matching Entries' '{
              object: $object,
              entry: $entry,
              description: ($desc | select(. != "" and . != "null") // false),
              group: $group
            }'
+ cfgs_json='[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "network-object host 10.0.1.2",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  },
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "interface Vlan2",
        "entry": "ip address 10.0.1.2 255.255.255.0",
        "description": false,
        "group": "Business-Unit-Networks"
      }
    ]
  }
]'
+ jq -n --arg ip 10.0.1.2 --argjson cfgs '[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "network-object host 10.0.1.2",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  },
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "interface Vlan2",
        "entry": "ip address 10.0.1.2 255.255.255.0",
        "description": false,
        "group": "Business-Unit-Networks"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
+ IFS=
+ read -r block
+ return 0
+ mkdir -p reports/lists reports/json
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local list_outfile=reports/lists/10.0.1.2.list
+ local json_outfile=reports/json/10.0.1.2.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
+ local restored=
+ lines=()
+ local -a lines
+ IFS=
+ read -r line
+ lines+=("${line}")
+ IFS=
+ read -r line
+ [[ -n '' ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local object_val=
+ local entry_val=null
+ for entry in "${lines[@]}"
+ grep -Eq '\b10\.0\.0\.1\b'
+ restored='object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ [[ -n object-groupnetworkBU1-NETWORKdescriptionCorporateHQSubnetsnetwork-objecthost10.0.0.1network-objecthost10.0.1.2network-object192.168.1.0255.255.255.0 ]]
+ [[ true == true ]]
+ [[ -n object-groupnetworkBU1-NETWORKMTc0NjYzMzU5MTU5NTczMDAwMAodescriptionCorporateHQSubnetsMTc0NjYzMzU5MTU5NTczMDAwMAonetwork-objecthost10.0.0.1MTc0NjYzMzU5MTU5NTczMDAwMAonetwork-objecthost10.0.1.2MTc0NjYzMzU5MTU5NTczMDAwMAonetwork-object192.168.1.0255.255.255.0 ]]
+ print '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ -n \nConfig: configs/cisco/fw1.cfg\n ]]
+ echo -en '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ true == true ]]
+ print 'Config: configs/cisco/fw1.cfg'
+ [[ -n Config: configs/cisco/fw1.cfg ]]
+ echo -en 'Config: configs/cisco/fw1.cfg'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n'
+ [[ -n \nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n ]]
+ echo -en '\nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n'
+ local desc_val=null
+ for entry in "${lines[@]}"
+ [[ '' =~ ^[[:space:]]*description ]]
+ local group_val=
+ [[ true == true ]]
+ [[ true == true ]]
+ print 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ [[ -n object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0 ]]
+ echo -en 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ local object_key=
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ jq -r --arg key '' '
              map(select(.match[]? | contains($key))) | .[0].group
            '
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored='interface Vlan2
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n interfaceVlan2ipaddress10.0.1.2255.255.255.0 ]]
+ [[ true == true ]]
+ [[ -n MTc0NjYzMzU5MTU5NTczMDAwMAointerfaceVlan2MTc0NjYzMzU5MTU5NTczMDAwMAoipaddress10.0.1.2255.255.255.0 ]]
+ print '\nConfig: configs/misc/switch.conf\n'
+ [[ -n \nConfig: configs/misc/switch.conf\n ]]
+ echo -en '\nConfig: configs/misc/switch.conf\n'
+ [[ true == true ]]
+ print 'Config: configs/misc/switch.conf'
+ [[ -n Config: configs/misc/switch.conf ]]
+ echo -en 'Config: configs/misc/switch.conf'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\ninterface Vlan2
 ip address 10.0.1.2 255.255.255.0\n'
+ [[ -n \ninterface Vlan2
 ip address 10.0.1.2 255.255.255.0\n ]]
+ echo -en '\ninterface Vlan2
 ip address 10.0.1.2 255.255.255.0\n'
+ [[ true == true ]]
+ print 'interface Vlan2
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n interface Vlan2
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en 'interface Vlan2
 ip address 10.0.1.2 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == null ]]
+ [[ null == null ]]
+ continue
+ IFS=
+ read -r block
+ local 'objs_json=[]'
+ ((  1 > 0  ))
++ sed 's/MTc0NjYzMzU5MTU5NTczMDAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
++ jq -s .
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr/partial.json reports/json/10.0.1.2.json
+ objs_json='[
  {
    "object": "object-group network SOME-THING",
    "entry": "network-object host 10.0.0.1",
    "description": "Local Office Subnets",
    "group": "Identified Matching Entries"
  }
]'
+ configs+=("$(jq -n --arg cfg "${cfg_file}" --argjson objs "${objs_json}" '{ config: $cfg, objects: $objs }')")
+ [[ true == true ]]
+ jq . reports/json/10.0.1.2.json
++ jq -n --arg cfg configs/misc/switch.conf --argjson objs '[
  {
    "object": "object-group network SOME-THING",
    "entry": "network-object host 10.0.0.1",
    "description": "Local Office Subnets",
    "group": "Identified Matching Entries"
  }
]' '{ config: $cfg, objects: $objs }'
+ local 'cfgs_json=[]'
+ ((  2 > 0  ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IGNDVBVpHr
++ jq -s .
Using pre-matched config list: targets/10.0.1.2.list
2 Valid IP Address: 10.0.1.2

Config: configs/cisco/fw1.cfg

object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0

Config: configs/misc/switch.conf

interface Vlan2
 ip address 10.0.1.2 255.255.255.0

{
  "target": "10.0.1.2",
  "configs": [
    {
      "config": "configs/cisco/fw1.cfg",
      "objects": [
        {
          "object": "object-group network BU1-NETWORK",
          "entry": "network-object host 10.0.1.2",
          "description": "Corporate HQ Subnets",
          "group": "Identified Matching Entries"
        }
      ]
    },
    {
      "config": "configs/misc/switch.conf",
      "objects": [
        {
          "object": "interface Vlan2",
          "entry": "ip address 10.0.1.2 255.255.255.0",
          "description": false,
          "group": "Business-Unit-Networks"
        }
      ]
    }
  ]
}
+ cfgs_json='[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "network-object host 10.0.0.1",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      },
      {
        "object": "access-list OUTSIDE extended permit ip host 10.0.0.1 any",
        "entry": false,
        "description": false,
        "group": "cisco/fw1.cfg"
      }
    ]
  },
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "object-group network SOME-THING",
        "entry": "network-object host 10.0.0.1",
        "description": "Local Office Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  }
]'
+ jq -n --arg ip 10.0.0.1 --argjson cfgs '[
  {
    "config": "configs/cisco/fw1.cfg",
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "network-object host 10.0.0.1",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      },
      {
        "object": "access-list OUTSIDE extended permit ip host 10.0.0.1 any",
        "entry": false,
        "description": false,
        "group": "cisco/fw1.cfg"
      }
    ]
  },
  {
    "config": "configs/misc/switch.conf",
    "objects": [
      {
        "object": "object-group network SOME-THING",
        "entry": "network-object host 10.0.0.1",
        "description": "Local Office Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
+ return 0
+ mkdir -p reports/lists reports/json
+ local list_outfile=reports/lists/10.0.0.1.list
+ local json_outfile=reports/json/10.0.0.1.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored='object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ [[ -n object-groupnetworkBU1-NETWORKdescriptionCorporateHQSubnetsnetwork-objecthost10.0.0.1network-objecthost10.0.1.2network-object192.168.1.0255.255.255.0 ]]
+ [[ true == true ]]
+ [[ -n object-groupnetworkBU1-NETWORKMTc0NjYzMzU5MTU5NTg4NjAwMAodescriptionCorporateHQSubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAonetwork-objecthost10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAonetwork-objecthost10.0.1.2MTc0NjYzMzU5MTU5NTg4NjAwMAonetwork-object192.168.1.0255.255.255.0access-listOUTSIDEextendedpermitiphost10.0.0.1any ]]
+ print '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ -n \nConfig: configs/cisco/fw1.cfg\n ]]
+ echo -en '\nConfig: configs/cisco/fw1.cfg\n'
+ [[ true == true ]]
+ print 'Config: configs/cisco/fw1.cfg'
+ [[ -n Config: configs/cisco/fw1.cfg ]]
+ echo -en 'Config: configs/cisco/fw1.cfg'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n'
+ [[ -n \nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n ]]
+ echo -en '\nobject-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0\n'
+ [[ true == true ]]
+ print 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ [[ -n object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0 ]]
+ echo -en 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ -n access-listOUTSIDEextendedpermitiphost10.0.0.1any ]]
+ [[ false == true ]]
+ print '\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any\n'
+ [[ -n \naccess-list OUTSIDE extended permit ip host 10.0.0.1 any\n ]]
+ echo -en '\naccess-list OUTSIDE extended permit ip host 10.0.0.1 any\n'
+ [[ true == true ]]
+ print 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ -n access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
+ echo -en 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ for cfg_file in "${matched_configs_order[@]}"
+ local first_block=true
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored='object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ [[ -n object-groupnetworkSOME-THINGdescriptionLocalOfficeSubnetsnetwork-objecthost10.0.0.1network-object192.168.12.0255.255.255.0 ]]
+ [[ true == true ]]
+ [[ -n MTc0NjYzMzU5MTU5NTg4NjAwMAoobject-groupnetworkSOME-THINGMTc0NjYzMzU5MTU5NTg4NjAwMAodescriptionLocalOfficeSubnetsMTc0NjYzMzU5MTU5NTg4NjAwMAonetwork-objecthost10.0.0.1MTc0NjYzMzU5MTU5NTg4NjAwMAonetwork-object192.168.12.0255.255.255.0 ]]
+ print '\nConfig: configs/misc/switch.conf\n'
+ [[ -n \nConfig: configs/misc/switch.conf\n ]]
+ echo -en '\nConfig: configs/misc/switch.conf\n'
+ [[ true == true ]]
+ print 'Config: configs/misc/switch.conf'
+ [[ -n Config: configs/misc/switch.conf ]]
+ echo -en 'Config: configs/misc/switch.conf'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ first_block=false
+ print '\nobject-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0\n'
+ [[ -n \nobject-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0\n ]]
+ echo -en '\nobject-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0\n'
+ [[ true == true ]]
+ print 'object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ [[ -n object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en 'object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed 's/MTc0NjYzMzU5MTU5NTg4NjAwMAo/\n/g'
++ sed '/^[[:space:]]*$/d'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M/partial.json reports/json/10.0.0.1.json
+ [[ true == true ]]
+ jq . reports/json/10.0.0.1.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ unset verbose debug
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IBMObdpG5M
Using pre-matched config list: targets/10.0.0.1.list
1 Valid IP Address: 10.0.0.1

Config: configs/cisco/fw1.cfg

object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0

access-list OUTSIDE extended permit ip host 10.0.0.1 any

Config: configs/misc/switch.conf

object-group network SOME-THING
  description Local Office Subnets
  network-object host 10.0.0.1
  network-object 192.168.12.0 255.255.255.0

{
  "target": "10.0.0.1",
  "configs": [
    {
      "config": "configs/cisco/fw1.cfg",
      "objects": [
        {
          "object": "object-group network BU1-NETWORK",
          "entry": "network-object host 10.0.0.1",
          "description": "Corporate HQ Subnets",
          "group": "Identified Matching Entries"
        },
        {
          "object": "access-list OUTSIDE extended permit ip host 10.0.0.1 any",
          "entry": false,
          "description": false,
          "group": "cisco/fw1.cfg"
        }
      ]
    },
    {
      "config": "configs/misc/switch.conf",
      "objects": [
        {
          "object": "object-group network SOME-THING",
          "entry": "network-object host 10.0.0.1",
          "description": "Local Office Subnets",
          "group": "Identified Matching Entries"
        }
      ]
    }
  ]
}

CSV Report Summary (tabulated):
target            config              object                                                      entry                                      description                group
"10.0.0.1"        "cisco/fw1.cfg"     "object-group network BU1-NETWORK"                          "network-object host 10.0.0.1"             "Corporate HQ Subnets"     "Identified Matching Entries"
"10.0.0.1"        "cisco/fw1.cfg"     "access-list OUTSIDE extended permit ip host 10.0.0.1 any"  "none"                                     "none"                     "cisco/fw1.cfg"
"10.0.0.1"        "misc/switch.conf"  "object-group network SOME-THING"                           "network-object host 10.0.0.1"             "Local Office Subnets"     "Identified Matching Entries"
"10.0.1.2"        "cisco/fw1.cfg"     "object-group network BU1-NETWORK"                          "network-object host 10.0.1.2"             "Corporate HQ Subnets"     "Identified Matching Entries"
"10.0.1.2"        "misc/switch.conf"  "interface Vlan2"                                           "ip address 10.0.1.2 255.255.255.0"        "none"                     "Business-Unit-Networks"
"172.31.255.254"  "misc/switch.conf"  "interface Vlan1"                                           "ip address 172.31.255.254 255.255.255.0"  "none"                     "Business-Unit-Networks"
"192.168.1.10"    "cisco/fw1.cfg"     "object network Server-192-168-1-10"                        "host 192.168.1.10"                        "Main Application Server"  "Business-Unit-HQ"
"203.0.113.25"    "cisco/fw1.cfg"     "object network External-203-0-113-25"                      "host 203.0.113.25"                        "none"                     "Business-Unit-External"
