+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias detect-platform=detect_platform
++ alias install-packages=install_packages
++ alias install-missing=install_missing
++ alias display-help=display_help_generic
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ local_state_dir=.local
++ mkdir -p .local/errors .local/jobs .local/stats
++ export stats_folder=.local/stats/
++ stats_folder=.local/stats/
++ export reports_logsfile=.local/stats//reports.jobs
++ reports_logsfile=.local/stats//reports.jobs
++ export started_logsfile=.local/stats//started.jobs
++ started_logsfile=.local/stats//started.jobs
++ export success_logsfile=.local/stats//success.jobs
++ success_logsfile=.local/stats//success.jobs
++ export targets_logsfile=.local/stats//targets.jobs
++ targets_logsfile=.local/stats//targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0NzA1ODQ2MzQzMTcyMzAwMAo
++ divisor=MTc0NzA1ODQ2MzQzMTcyMzAwMAo
++ print 'DEBUG: divisor = '\''MTc0NzA1ODQ2MzQzMTcyMzAwMAo'\'''
++ [[ -n DEBUG: divisor = 'MTc0NzA1ODQ2MzQzMTcyMzAwMAo' ]]
++ echo -en 'DEBUG: divisor = '\''MTc0NzA1ODQ2MzQzMTcyMzAwMAo'\'''
DEBUG: divisor = 'MTc0NzA1ODQ2MzQzMTcyMzAwMAo'+ source ./scripts/tools-configs.shell
++ [[ -n '' ]]
++ readonly __TOOLS_CONFIGS_SOURCED=1
++ __TOOLS_CONFIGS_SOURCED=1
++ alias generate-objects=generate_objects
++ alias process-blocks=process_blocks
+ alias parse-configs=main
+ matched_blocks_byfile=()
+ declare -gA matched_blocks_byfile
+ export script_name=./scripts/parse-configs.shell
+ script_name=./scripts/parse-configs.shell
+ [[ 9 -ge 1 ]]
+ [[ --configs=configs =~ ^-*(h|help)$ ]]
+ main --configs=configs --ip-addr=192.168.1.10 --index=4 --matrix=matrix.json --reports=reports --file-ext=cfg,conf,cnf --classify --verbose --debug
+ file_extensions=()
+ declare -a file_extensions
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(file-ext|x)$ ]]
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=192.168.1.10
+ [[ ip-addr =~ ^(logs|o)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr == \h\e\l\p ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --index=4
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(file-ext|x)$ ]]
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=4
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(logs|o)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index == \h\e\l\p ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(file-ext|x)$ ]]
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(logs|o)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix == \h\e\l\p ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(file-ext|x)$ ]]
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(logs|o)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_folder=reports
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports == \h\e\l\p ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --file-ext=cfg,conf,cnf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ file-ext =~ ^(classify|g)$ ]]
+ [[ file-ext =~ ^(file-ext|x)$ ]]
+ file_extensions+=($(print "${value}" | tr ':,;\n ' '\n'))
++ print cfg,conf,cnf
++ [[ -n cfg,conf,cnf ]]
++ echo -en cfg,conf,cnf
++ tr ':,;\n ' '\n'
+ [[ file-ext =~ ^(configs|c)$ ]]
+ [[ file-ext =~ ^(index|n)$ ]]
+ [[ file-ext =~ ^(ip-addr|i)$ ]]
+ [[ file-ext =~ ^(logs|o)$ ]]
+ [[ file-ext =~ ^(matrix|m)$ ]]
+ [[ file-ext =~ ^(reports|r)$ ]]
+ [[ file-ext =~ ^(validate|v)$ ]]
+ [[ file-ext == \h\e\l\p ]]
+ [[ file-ext == \d\e\b\u\g ]]
+ [[ file-ext == \d\r\y\-\r\u\n ]]
+ [[ file-ext == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z true ]]
+ [[ '' == true ]]
+ [[ -z true ]]
+ [[ -z x ]]
+ [[ 3 -eq 0 ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ source_configs=()
+ declare -ga source_configs
+ target_configlist_json=targets/192.168.1.10.json
+ [[ ! -f targets/192.168.1.10.json ]]
+ mapfile -t source_configs
++ jq -r '.configs[] | "\(.config.site)/\(.config.device)"' targets/192.168.1.10.json
+ for i in "${!source_configs[@]}"
+ [[ cisco/fw1.cfg != \c\o\n\f\i\g\s\/* ]]
+ source_configs[$i]=configs/cisco/fw1.cfg
+ [[ true == true ]]
+ print 'Config JSON file used: targets/192.168.1.10.json'
+ [[ -n Config JSON file used: targets/192.168.1.10.json ]]
+ echo -en 'Config JSON file used: targets/192.168.1.10.json'
Config JSON file used: targets/192.168.1.10.json+ print 'Extracted config paths from JSON:'
+ [[ -n Extracted config paths from JSON: ]]
+ echo -en 'Extracted config paths from JSON:'
Extracted config paths from JSON:+ for cfg in "${source_configs[@]}"
+ print ' - configs/cisco/fw1.cfg'
+ [[ -n  - configs/cisco/fw1.cfg ]]
+ echo -en ' - configs/cisco/fw1.cfg'
 - configs/cisco/fw1.cfg+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports/lists reports/json
+ [[ -z 4 ]]
+ [[ -z false ]]
+ [[ -z 192.168.1.10 ]]
++ print 192.168.1.10
++ sed -E 's/[[:space:]]+//g'
++ [[ -n 192.168.1.10 ]]
++ echo -en 192.168.1.10
++ tr -d '\r'
+ target_address=192.168.1.10
+ [[ false == true ]]
+ matched_configs_order=()
+ declare -ga matched_configs_order
+ local search_ip=192.168.1.10
+ for cfg_file in "${source_configs[@]}"
+ mapfile -t lines
++ sed 's/!/\n/g' configs/cisco/fw1.cfg
++ sed '/^[[:space:]]*$/d'
+ total=13
+ start=0
+ size=100
+ ((  start < total  ))
+ chunk=("${lines[@]:start:size}")
+ ((  13 == 0  ))
++ printf '%s\n' 'object-group network BU1-NETWORK' ' description Corporate HQ Subnets' ' network-object host 10.0.0.1' ' network-object host 10.0.1.2' ' network-object 192.168.1.0 255.255.255.0' 'object network Server-192-168-1-10' ' host 192.168.1.10' ' description Main Application Server' 'object network External-203-0-113-25' ' host 203.0.113.25' 'access-list OUTSIDE extended permit ip host 10.0.0.1 any' 'access-list OUTSIDE extended deny ip any any' 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ block='object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ grep -qF 192.168.1.10
++ basename configs/cisco/fw1.cfg
++ tr / _
+ out=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/192_168_1_10__fw1.cfg__0.chunks
+ print 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ [[ -n object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
+ echo -en 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ ((  start += size  ))
+ ((  start < total  ))
+ print
+ [[ -n '' ]]
+ return 0
+ print 'Matched chunks:'
+ [[ -n Matched chunks: ]]
+ echo -en 'Matched chunks:'
Matched chunks:+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ find /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s -type f -name '192_168_1_10__*.chunks'
+ sort
+ read -r chunk
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/192_168_1_10__fw1.cfg__0.chunks
+ print ' - 192_168_1_10__fw1.cfg__0.chunks'
+ [[ -n  - 192_168_1_10__fw1.cfg__0.chunks ]]
+ echo -en ' - 192_168_1_10__fw1.cfg__0.chunks'
 - 192_168_1_10__fw1.cfg__0.chunks+ read -r chunk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for chunk_file in "${TMP_DIR}/${search_ip//./_}"__*.chunks
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/192_168_1_10__fw1.cfg__0.chunks ]]
++ basename /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/192_168_1_10__fw1.cfg__0.chunks
++ sed -E 's/^192_168_1_10__//;s/__[0-9]+\.chunks$//'
+ cfg_base=fw1.cfg
+ for full_cfg in "${source_configs[@]}"
++ basename configs/cisco/fw1.cfg
+ [[ fw1.cfg == \f\w\1\.\c\f\g ]]
+ matched_blocks_byfile["${full_cfg}"]+='
object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
'
+ matched_configs_order+=("${full_cfg}")
+ break
+ [[ 1 -eq 0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ print '4 Valid IP Address: 192.168.1.10'
+ [[ -n 4 Valid IP Address: 192.168.1.10 ]]
+ echo -en '4 Valid IP Address: 192.168.1.10'
4 Valid IP Address: 192.168.1.10+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ local tmp_json=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/partial.json
+ generate_objects 192.168.1.10 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/partial.json
+ local ip_address=192.168.1.10
+ local outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/partial.json
+ configs=()
+ local -a configs
+ for cfg_file in "${matched_configs_order[@]}"
+ local 'blocks=
object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
'
+ objects=()
+ local -a objects
+ local current_block=
+ IFS=
+ read -r line
+ [[ -z '' ]]
+ [[ -n '' ]]
+ IFS=
+ read -r line
+ [[ -z object-groupnetworkBU1-NETWORK ]]
+ current_block+='object-group network BU1-NETWORK
'
+ IFS=
+ read -r line
+ [[ -z descriptionCorporateHQSubnets ]]
+ current_block+=' description Corporate HQ Subnets
'
+ IFS=
+ read -r line
+ [[ -z network-objecthost10.0.0.1 ]]
+ current_block+=' network-object host 10.0.0.1
'
+ IFS=
+ read -r line
+ [[ -z network-objecthost10.0.1.2 ]]
+ current_block+=' network-object host 10.0.1.2
'
+ IFS=
+ read -r line
+ [[ -z network-object192.168.1.0255.255.255.0 ]]
+ current_block+=' network-object 192.168.1.0 255.255.255.0
'
+ IFS=
+ read -r line
+ [[ -z objectnetworkServer-192-168-1-10 ]]
+ current_block+='object network Server-192-168-1-10
'
+ IFS=
+ read -r line
+ [[ -z host192.168.1.10 ]]
+ current_block+=' host 192.168.1.10
'
+ IFS=
+ read -r line
+ [[ -z descriptionMainApplicationServer ]]
+ current_block+=' description Main Application Server
'
+ IFS=
+ read -r line
+ [[ -z objectnetworkExternal-203-0-113-25 ]]
+ current_block+='object network External-203-0-113-25
'
+ IFS=
+ read -r line
+ [[ -z host203.0.113.25 ]]
+ current_block+=' host 203.0.113.25
'
+ IFS=
+ read -r line
+ [[ -z access-listOUTSIDEextendedpermitiphost10.0.0.1any ]]
+ current_block+='access-list OUTSIDE extended permit ip host 10.0.0.1 any
'
+ IFS=
+ read -r line
+ [[ -z access-listOUTSIDEextendeddenyipanyany ]]
+ current_block+='access-list OUTSIDE extended deny ip any any
'
+ IFS=
+ read -r line
+ [[ -z nat(inside,outside)sourcestaticServer-192-168-1-10External-203-0-113-25 ]]
+ current_block+='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
'
+ IFS=
+ read -r line
+ [[ -z '' ]]
+ [[ -n object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
 ]]
+ process_blocks 192.168.1.10 configs/cisco/fw1.cfg 'object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
' objects
+ local ip=192.168.1.10
+ local cfg=configs/cisco/fw1.cfg
+ local 'block=object-group network BU1-NETWORK
 description Corporate HQ Subnets
 network-object host 10.0.0.1
 network-object host 10.0.1.2
 network-object 192.168.1.0 255.255.255.0
object network Server-192-168-1-10
 host 192.168.1.10
 description Main Application Server
object network External-203-0-113-25
 host 203.0.113.25
access-list OUTSIDE extended permit ip host 10.0.0.1 any
access-list OUTSIDE extended deny ip any any
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25
'
+ local -n obj_array=objects
+ mapfile -t lines
++ sed '/^[[:space:]]*$/d'
+ [[ 13 -eq 0 ]]
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'object_val=object-group network BU1-NETWORK'
+ local entry_val=
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
+ for line in "${lines[@]}"
+ grep -q -wF 192.168.1.10
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ entry_val='host 192.168.1.10'
+ break
+ [[ -z host 192.168.1.10 ]]
+ local desc_val=false
+ for line in "${lines[@]}"
+ [[ object-group network bu1-network =~ ^[[:space:]]*description ]]
+ for line in "${lines[@]}"
+ [[  description corporate hq subnets =~ ^[[:space:]]*description ]]
++ sed -E 's/^[^"]*"?description"?[[:space:]]*//I; s/^[[:space:]]*//; s/[[:space:]]*$//'
+ desc_val='Corporate HQ Subnets'
+ [[ -z Corporate HQ Subnets ]]
+ break
+ local group_val=Unclassified
+ [[ true == true ]]
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ local object_key=BU1-NETWORK
++ jq -r --arg key BU1-NETWORK 'map(select(.match[]? | contains($key))) | .[0].group'
+ group_val='Identified Matching Entries'
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == \n\u\l\l ]]
+ [[ -z Identified Matching Entries ]]
+ [[ Identified Matching Entries == \n\u\l\l ]]
+ local 'entry_out=host 192.168.1.10'
+ [[ 13 -eq 1 ]]
+ obj_array+=("$(jq -n --arg object "${object_val}" --arg entry "${entry_out}" --arg desc "${desc_val}" --arg group "${group_val}" '{
          object: $object,
          entry: $entry,
          description: ($desc | select(. != "" and . != "null") // false),
          group: $group
        }')")
++ jq -n --arg object 'object-group network BU1-NETWORK' --arg entry 'host 192.168.1.10' --arg desc 'Corporate HQ Subnets' --arg group 'Identified Matching Entries' '{
          object: $object,
          entry: $entry,
          description: ($desc | select(. != "" and . != "null") // false),
          group: $group
        }'
+ return 0
+ current_block=
+ IFS=
+ read -r line
+ [[ -n '' ]]
+ [[ -n '' ]]
+ local 'objs_json=[]'
+ ((  1 > 0  ))
++ jq -s .
+ objs_json='[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "host 192.168.1.10",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  }
]'
++ relative_configpath configs/cisco/fw1.cfg
++ local full_path=configs/cisco/fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ print cisco/fw1.cfg
++ [[ -n cisco/fw1.cfg ]]
++ echo -en cisco/fw1.cfg
++ return 0
+ relative_cfg=cisco/fw1.cfg
+ site=cisco
+ device=fw1.cfg
+ configs+=("$(jq -n --arg site "${site}" --arg device "${device}" --argjson objs "${objs_json}" '{ config: { site: $site, device: $device }, objects: $objs }')")
++ jq -n --arg site cisco --arg device fw1.cfg --argjson objs '[
  {
    "object": "object-group network BU1-NETWORK",
    "entry": "host 192.168.1.10",
    "description": "Corporate HQ Subnets",
    "group": "Identified Matching Entries"
  }
]' '{ config: { site: $site, device: $device }, objects: $objs }'
+ local 'cfgs_json=[]'
+ ((  1 > 0  ))
++ jq -s .
+ cfgs_json='[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "host 192.168.1.10",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  }
]'
+ jq -n --arg ip 192.168.1.10 --argjson cfgs '[
  {
    "config": {
      "site": "cisco",
      "device": "fw1.cfg"
    },
    "objects": [
      {
        "object": "object-group network BU1-NETWORK",
        "entry": "host 192.168.1.10",
        "description": "Corporate HQ Subnets",
        "group": "Identified Matching Entries"
      }
    ]
  }
]' '{ target: $ip, configs: $cfgs }'
+ return 0
+ local list_outfile=reports/lists/192.168.1.10.list
+ local json_outfile=reports/json/192.168.1.10.json
+ print
+ [[ -n '' ]]
+ return 0
+ for cfg_file in "${matched_configs_order[@]}"
+ [[ -v matched_blocks_byfile[configs/cisco/fw1.cfg] ]]
+ local first_block=true
++ relative_configpath configs/cisco/fw1.cfg
++ local full_path=configs/cisco/fw1.cfg
++ local prefix=configs/
+++ sed 's|configs/||g'
++ print cisco/fw1.cfg
++ [[ -n cisco/fw1.cfg ]]
++ echo -en cisco/fw1.cfg
++ return 0
+ config_heading='Config: cisco/fw1.cfg'
+ print '\nConfig: cisco/fw1.cfg\n\n'
+ [[ -n \nConfig: cisco/fw1.cfg\n\n ]]
+ echo -en '\nConfig: cisco/fw1.cfg\n\n'
+ [[ true == true ]]
+ print 'Config: cisco/fw1.cfg'
+ [[ -n Config: cisco/fw1.cfg ]]
+ echo -en 'Config: cisco/fw1.cfg'
Config: cisco/fw1.cfg+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='object-group network BU1-NETWORK'
+ [[ -n object-groupnetworkBU1-NETWORK ]]
+ print 'object-group network BU1-NETWORK'
+ [[ -n object-group network BU1-NETWORK ]]
+ echo -en 'object-group network BU1-NETWORK'
+ [[ true == true ]]
+ print 'object-group network BU1-NETWORK'
+ [[ -n object-group network BU1-NETWORK ]]
+ echo -en 'object-group network BU1-NETWORK'
object-group network BU1-NETWORK+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' description Corporate HQ Subnets'
+ [[ -n descriptionCorporateHQSubnets ]]
+ print ' description Corporate HQ Subnets'
+ [[ -n  description Corporate HQ Subnets ]]
+ echo -en ' description Corporate HQ Subnets'
+ [[ true == true ]]
+ print ' description Corporate HQ Subnets'
+ [[ -n  description Corporate HQ Subnets ]]
+ echo -en ' description Corporate HQ Subnets'
 description Corporate HQ Subnets+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' network-object host 10.0.0.1'
+ [[ -n network-objecthost10.0.0.1 ]]
+ print ' network-object host 10.0.0.1'
+ [[ -n  network-object host 10.0.0.1 ]]
+ echo -en ' network-object host 10.0.0.1'
+ [[ true == true ]]
+ print ' network-object host 10.0.0.1'
+ [[ -n  network-object host 10.0.0.1 ]]
+ echo -en ' network-object host 10.0.0.1'
 network-object host 10.0.0.1+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' network-object host 10.0.1.2'
+ [[ -n network-objecthost10.0.1.2 ]]
+ print ' network-object host 10.0.1.2'
+ [[ -n  network-object host 10.0.1.2 ]]
+ echo -en ' network-object host 10.0.1.2'
+ [[ true == true ]]
+ print ' network-object host 10.0.1.2'
+ [[ -n  network-object host 10.0.1.2 ]]
+ echo -en ' network-object host 10.0.1.2'
 network-object host 10.0.1.2+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' network-object 192.168.1.0 255.255.255.0'
+ [[ -n network-object192.168.1.0255.255.255.0 ]]
+ print ' network-object 192.168.1.0 255.255.255.0'
+ [[ -n  network-object 192.168.1.0 255.255.255.0 ]]
+ echo -en ' network-object 192.168.1.0 255.255.255.0'
+ [[ true == true ]]
+ print ' network-object 192.168.1.0 255.255.255.0'
+ [[ -n  network-object 192.168.1.0 255.255.255.0 ]]
+ echo -en ' network-object 192.168.1.0 255.255.255.0'
 network-object 192.168.1.0 255.255.255.0+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='object network Server-192-168-1-10'
+ [[ -n objectnetworkServer-192-168-1-10 ]]
+ print 'object network Server-192-168-1-10'
+ [[ -n object network Server-192-168-1-10 ]]
+ echo -en 'object network Server-192-168-1-10'
+ [[ true == true ]]
+ print 'object network Server-192-168-1-10'
+ [[ -n object network Server-192-168-1-10 ]]
+ echo -en 'object network Server-192-168-1-10'
object network Server-192-168-1-10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' host 192.168.1.10'
+ [[ -n host192.168.1.10 ]]
+ print ' host 192.168.1.10'
+ [[ -n  host 192.168.1.10 ]]
+ echo -en ' host 192.168.1.10'
+ [[ true == true ]]
+ print ' host 192.168.1.10'
+ [[ -n  host 192.168.1.10 ]]
+ echo -en ' host 192.168.1.10'
 host 192.168.1.10+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' description Main Application Server'
+ [[ -n descriptionMainApplicationServer ]]
+ print ' description Main Application Server'
+ [[ -n  description Main Application Server ]]
+ echo -en ' description Main Application Server'
+ [[ true == true ]]
+ print ' description Main Application Server'
+ [[ -n  description Main Application Server ]]
+ echo -en ' description Main Application Server'
 description Main Application Server+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='object network External-203-0-113-25'
+ [[ -n objectnetworkExternal-203-0-113-25 ]]
+ print 'object network External-203-0-113-25'
+ [[ -n object network External-203-0-113-25 ]]
+ echo -en 'object network External-203-0-113-25'
+ [[ true == true ]]
+ print 'object network External-203-0-113-25'
+ [[ -n object network External-203-0-113-25 ]]
+ echo -en 'object network External-203-0-113-25'
object network External-203-0-113-25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=' host 203.0.113.25'
+ [[ -n host203.0.113.25 ]]
+ print ' host 203.0.113.25'
+ [[ -n  host 203.0.113.25 ]]
+ echo -en ' host 203.0.113.25'
+ [[ true == true ]]
+ print ' host 203.0.113.25'
+ [[ -n  host 203.0.113.25 ]]
+ echo -en ' host 203.0.113.25'
 host 203.0.113.25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ -n access-listOUTSIDEextendedpermitiphost10.0.0.1any ]]
+ print 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ -n access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
+ echo -en 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ true == true ]]
+ print 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
+ [[ -n access-list OUTSIDE extended permit ip host 10.0.0.1 any ]]
+ echo -en 'access-list OUTSIDE extended permit ip host 10.0.0.1 any'
access-list OUTSIDE extended permit ip host 10.0.0.1 any+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='access-list OUTSIDE extended deny ip any any'
+ [[ -n access-listOUTSIDEextendeddenyipanyany ]]
+ print 'access-list OUTSIDE extended deny ip any any'
+ [[ -n access-list OUTSIDE extended deny ip any any ]]
+ echo -en 'access-list OUTSIDE extended deny ip any any'
+ [[ true == true ]]
+ print 'access-list OUTSIDE extended deny ip any any'
+ [[ -n access-list OUTSIDE extended deny ip any any ]]
+ echo -en 'access-list OUTSIDE extended deny ip any any'
access-list OUTSIDE extended deny ip any any+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored='nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ [[ -n nat(inside,outside)sourcestaticServer-192-168-1-10External-203-0-113-25 ]]
+ print 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ [[ -n nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
+ echo -en 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ [[ true == true ]]
+ print 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
+ [[ -n nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25 ]]
+ echo -en 'nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25'
nat (inside,outside) source static Server-192-168-1-10 External-203-0-113-25+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS=
+ read -r matched_object
++ sed '/^[[:space:]]*$/d'
+ restored=
+ [[ -n '' ]]
+ IFS=
+ read -r matched_object
+ cp /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s/partial.json reports/json/192.168.1.10.json
+ [[ true == true ]]
+ jq . reports/json/192.168.1.10.json
{
  "target": "192.168.1.10",
  "configs": [
    {
      "config": {
        "site": "cisco",
        "device": "fw1.cfg"
      },
      "objects": [
        {
          "object": "object-group network BU1-NETWORK",
          "entry": "host 192.168.1.10",
          "description": "Corporate HQ Subnets",
          "group": "Identified Matching Entries"
        }
      ]
    }
  ]
}
+ echo

+ local csv_outfile=reports/reports.csv
+ [[ ! -f reports/reports.csv ]]
+ jq -r --arg ip 192.168.1.10 '
      .configs[] as $cfg |
      $cfg.objects[]? |
      [
        $ip,
        $cfg.config,
        .object,
        (if .entry == false then "" else .entry end),
        (if .description == false then "" else .description end),
        .group
      ] | @csv
    ' reports/json/192.168.1.10.json
jq: error (at reports/json/192.168.1.10.json:19): object ({"site":"ci...) is not valid in a csv row
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FMTpUnAD2s
