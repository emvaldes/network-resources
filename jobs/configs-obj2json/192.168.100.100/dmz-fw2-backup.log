+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=192.168.100.100
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=interface GigabitEthernet0/1--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  nameif inside--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 192.168.100.100 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Inside LAN segment'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=interface GigabitEthernet0/1--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  nameif inside--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 192.168.100.100 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Inside LAN segment'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'interface GigabitEthernet0/1
  nameif inside
  ip address 192.168.100.100 255.255.255.0
  description Inside LAN segment'
+ local 'object_header=interface GigabitEthernet0/1'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=interface
+ [[ interface == \c\o\n\f\i\g ]]
+ ((  2 == 3  ))
+ ((  2 > 3  ))
+ type_value=GigabitEthernet0/1
+ partner_value=false
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=interface GigabitEthernet0/1'
+ [[ -z interface GigabitEthernet0/1 ]]
+ [[ interface gigabitethernet0/1 =~ ^description[[:space:]] ]]
+ [[ interface gigabitethernet0/1 =~ ^edit[[:space:]]+".+" ]]
+ [[ interface gigabitethernet0/1 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ interface gigabitethernet0/1 == \n\e\x\t ]]
+ [[ interface gigabitethernet0/1 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=nameif inside'
+ [[ -z nameif inside ]]
+ [[ nameif inside =~ ^description[[:space:]] ]]
+ [[ nameif inside =~ ^edit[[:space:]]+".+" ]]
+ [[ nameif inside =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ nameif inside == \n\e\x\t ]]
+ [[ nameif inside == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=ip address 192.168.100.100 255.255.255.0'
+ [[ -z ip address 192.168.100.100 255.255.255.0 ]]
+ [[ ip address 192.168.100.100 255.255.255.0 =~ ^description[[:space:]] ]]
+ [[ ip address 192.168.100.100 255.255.255.0 =~ ^edit[[:space:]]+".+" ]]
+ [[ ip address 192.168.100.100 255.255.255.0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ ip address 192.168.100.100 255.255.255.0 == \n\e\x\t ]]
+ [[ ip address 192.168.100.100 255.255.255.0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Inside LAN segment'
+ [[ -z description Inside LAN segment ]]
+ [[ description inside lan segment =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Inside LAN segment'
+ continue
+ [[ interface GigabitEthernet0/1 == \i\n\t\e\r\f\a\c\e\ \G\i\g\a\b\i\t\E\t\h\e\r\n\e\t\0\/\1 ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'ip address 192.168.100.100 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "ip address 192.168.100.100 255.255.255.0"
]'
++ printf '%s\n' 'nameif inside'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "nameif inside"
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=GigabitEthernet0/1
++ jq -r --arg key GigabitEthernet0/1 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Inside LAN segment' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object interface --arg type GigabitEthernet0/1 --arg partner false --arg description 'Inside LAN segment' --argjson items '[
  "ip address 192.168.100.100 255.255.255.0"
]' --argjson others '[
  "nameif inside"
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "interface",
  "type": "GigabitEthernet0/1",
  "partner": false,
  "description": "Inside LAN segment",
  "items": [
    "ip address 192.168.100.100 255.255.255.0"
  ],
  "others": [
    "nameif inside"
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'interface GigabitEthernet0/1'
+ [[ -n interface GigabitEthernet0/1 ]]
+ local 'message=interface GigabitEthernet0/1'
+ echo -e 'interface GigabitEthernet0/1'
+ for object in "${restored_block[@]}"
+ message '  nameif inside'
+ [[ -n   nameif inside ]]
+ local 'message=  nameif inside'
+ echo -e '  nameif inside'
+ for object in "${restored_block[@]}"
+ message '  ip address 192.168.100.100 255.255.255.0'
+ [[ -n   ip address 192.168.100.100 255.255.255.0 ]]
+ local 'message=  ip address 192.168.100.100 255.255.255.0'
+ echo -e '  ip address 192.168.100.100 255.255.255.0'
+ for object in "${restored_block[@]}"
+ message '  description Inside LAN segment'
+ [[ -n   description Inside LAN segment ]]
+ local 'message=  description Inside LAN segment'
+ echo -e '  description Inside LAN segment'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "interface",
  "type": "GigabitEthernet0/1",
  "partner": false,
  "description": "Inside LAN segment",
  "items": [
    "ip address 192.168.100.100 255.255.255.0"
  ],
  "others": [
    "nameif inside"
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
     1	{
     2	  "object": "object",
     3	  "type": "network",
     4	  "partner": "Sentinel-NAT",
     5	  "description": "Corporate NAT edge",
     6	  "items": [
     7	    "host 203.0.113.25"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "interface",
    14	  "type": "GigabitEthernet0/2",
    15	  "partner": false,
    16	  "description": "Outbound Internet NAT interface",
    17	  "items": [
    18	    "ip address 198.51.100.75 255.255.255.0"
    19	  ],
    20	  "others": [
    21	    "nameif outside"
    22	  ],
    23	  "group": "Unclassified"
    24	}
    25	{
    26	  "object": "interface",
    27	  "type": "GigabitEthernet0/1",
    28	  "partner": false,
    29	  "description": "Inside LAN segment",
    30	  "items": [
    31	    "ip address 192.168.100.100 255.255.255.0"
    32	  ],
    33	  "others": [
    34	    "nameif inside"
    35	  ],
    36	  "group": "Unclassified"
    37	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=192.168.100.100
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object network Titan-WLAN-Host--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 192.168.100.100--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Backup inside NAT IP'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object network Titan-WLAN-Host--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 192.168.100.100--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Backup inside NAT IP'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object network Titan-WLAN-Host
  host 192.168.100.100
  description Backup inside NAT IP'
+ local 'object_header=object network Titan-WLAN-Host'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object
+ [[ object == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=Titan-WLAN-Host
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object network Titan-WLAN-Host'
+ [[ -z object network Titan-WLAN-Host ]]
+ [[ object network titan-wlan-host =~ ^description[[:space:]] ]]
+ [[ object network titan-wlan-host =~ ^edit[[:space:]]+".+" ]]
+ [[ object network titan-wlan-host =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object network titan-wlan-host == \n\e\x\t ]]
+ [[ object network titan-wlan-host == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=host 192.168.100.100'
+ [[ -z host 192.168.100.100 ]]
+ [[ host 192.168.100.100 =~ ^description[[:space:]] ]]
+ [[ host 192.168.100.100 =~ ^edit[[:space:]]+".+" ]]
+ [[ host 192.168.100.100 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ host 192.168.100.100 == \n\e\x\t ]]
+ [[ host 192.168.100.100 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Backup inside NAT IP'
+ [[ -z description Backup inside NAT IP ]]
+ [[ description backup inside nat ip =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Backup inside NAT IP'
+ continue
+ [[ object network Titan-WLAN-Host == \o\b\j\e\c\t\ \n\e\t\w\o\r\k\ \T\i\t\a\n\-\W\L\A\N\-\H\o\s\t ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'host 192.168.100.100'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "host 192.168.100.100"
]'
++ printf '%s\n'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Backup inside NAT IP' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object --arg type network --arg partner Titan-WLAN-Host --arg description 'Backup inside NAT IP' --argjson items '[
  "host 192.168.100.100"
]' --argjson others '[]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object",
  "type": "network",
  "partner": "Titan-WLAN-Host",
  "description": "Backup inside NAT IP",
  "items": [
    "host 192.168.100.100"
  ],
  "others": [],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object network Titan-WLAN-Host'
+ [[ -n object network Titan-WLAN-Host ]]
+ local 'message=object network Titan-WLAN-Host'
+ echo -e 'object network Titan-WLAN-Host'
+ for object in "${restored_block[@]}"
+ message '  host 192.168.100.100'
+ [[ -n   host 192.168.100.100 ]]
+ local 'message=  host 192.168.100.100'
+ echo -e '  host 192.168.100.100'
+ for object in "${restored_block[@]}"
+ message '  description Backup inside NAT IP'
+ [[ -n   description Backup inside NAT IP ]]
+ local 'message=  description Backup inside NAT IP'
+ echo -e '  description Backup inside NAT IP'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object",
  "type": "network",
  "partner": "Titan-WLAN-Host",
  "description": "Backup inside NAT IP",
  "items": [
    "host 192.168.100.100"
  ],
  "others": [],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
     1	{
     2	  "object": "object",
     3	  "type": "network",
     4	  "partner": "Sentinel-NAT",
     5	  "description": "Corporate NAT edge",
     6	  "items": [
     7	    "host 203.0.113.25"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "interface",
    14	  "type": "GigabitEthernet0/2",
    15	  "partner": false,
    16	  "description": "Outbound Internet NAT interface",
    17	  "items": [
    18	    "ip address 198.51.100.75 255.255.255.0"
    19	  ],
    20	  "others": [
    21	    "nameif outside"
    22	  ],
    23	  "group": "Unclassified"
    24	}
    25	{
    26	  "object": "interface",
    27	  "type": "GigabitEthernet0/1",
    28	  "partner": false,
    29	  "description": "Inside LAN segment",
    30	  "items": [
    31	    "ip address 192.168.100.100 255.255.255.0"
    32	  ],
    33	  "others": [
    34	    "nameif inside"
    35	  ],
    36	  "group": "Unclassified"
    37	}
    38	{
    39	  "object": "object",
    40	  "type": "network",
    41	  "partner": "Titan-WLAN-Host",
    42	  "description": "Backup inside NAT IP",
    43	  "items": [
    44	    "host 192.168.100.100"
    45	  ],
    46	  "others": [],
    47	  "group": "Unclassified"
    48	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.100.100
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=192.168.100.100
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object-group network Sector-Wireless--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Staff WiFi clients--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 192.168.100.100--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object-group network Sector-Wireless--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Staff WiFi clients--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 192.168.100.100--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 10.10.10.10'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.100.100--cisco--dmz-fw2-backup.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object-group network Sector-Wireless
  description Staff WiFi clients
  network-object host 192.168.100.100
  network-object host 10.10.10.10'
+ local 'object_header=object-group network Sector-Wireless'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object-group
+ [[ object-group == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=Sector-Wireless
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network Sector-Wireless'
+ [[ -z object-group network Sector-Wireless ]]
+ [[ object-group network sector-wireless =~ ^description[[:space:]] ]]
+ [[ object-group network sector-wireless =~ ^edit[[:space:]]+".+" ]]
+ [[ object-group network sector-wireless =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object-group network sector-wireless == \n\e\x\t ]]
+ [[ object-group network sector-wireless == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Staff WiFi clients'
+ [[ -z description Staff WiFi clients ]]
+ [[ description staff wifi clients =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Staff WiFi clients'
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.168.100.100'
+ [[ -z network-object host 192.168.100.100 ]]
+ [[ network-object host 192.168.100.100 =~ ^description[[:space:]] ]]
+ [[ network-object host 192.168.100.100 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 192.168.100.100 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 192.168.100.100 == \n\e\x\t ]]
+ [[ network-object host 192.168.100.100 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 10.10.10.10'
+ [[ -z network-object host 10.10.10.10 ]]
+ [[ network-object host 10.10.10.10 =~ ^description[[:space:]] ]]
+ [[ network-object host 10.10.10.10 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 10.10.10.10 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 10.10.10.10 == \n\e\x\t ]]
+ [[ network-object host 10.10.10.10 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ [[ object-group network Sector-Wireless == \o\b\j\e\c\t\-\g\r\o\u\p\ \n\e\t\w\o\r\k\ \S\e\c\t\o\r\-\W\i\r\e\l\e\s\s ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.100\.100([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'network-object host 192.168.100.100'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "network-object host 192.168.100.100"
]'
++ printf '%s\n' 'network-object host 10.10.10.10'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "network-object host 10.10.10.10"
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Staff WiFi clients' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object-group --arg type network --arg partner Sector-Wireless --arg description 'Staff WiFi clients' --argjson items '[
  "network-object host 192.168.100.100"
]' --argjson others '[
  "network-object host 10.10.10.10"
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object-group",
  "type": "network",
  "partner": "Sector-Wireless",
  "description": "Staff WiFi clients",
  "items": [
    "network-object host 192.168.100.100"
  ],
  "others": [
    "network-object host 10.10.10.10"
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object-group network Sector-Wireless'
+ [[ -n object-group network Sector-Wireless ]]
+ local 'message=object-group network Sector-Wireless'
+ echo -e 'object-group network Sector-Wireless'
+ for object in "${restored_block[@]}"
+ message '  description Staff WiFi clients'
+ [[ -n   description Staff WiFi clients ]]
+ local 'message=  description Staff WiFi clients'
+ echo -e '  description Staff WiFi clients'
+ for object in "${restored_block[@]}"
+ message '  network-object host 192.168.100.100'
+ [[ -n   network-object host 192.168.100.100 ]]
+ local 'message=  network-object host 192.168.100.100'
+ echo -e '  network-object host 192.168.100.100'
+ for object in "${restored_block[@]}"
+ message '  network-object host 10.10.10.10'
+ [[ -n   network-object host 10.10.10.10 ]]
+ local 'message=  network-object host 10.10.10.10'
+ echo -e '  network-object host 10.10.10.10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object-group",
  "type": "network",
  "partner": "Sector-Wireless",
  "description": "Staff WiFi clients",
  "items": [
    "network-object host 192.168.100.100"
  ],
  "others": [
    "network-object host 10.10.10.10"
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/dmz-fw2-backup.list.objects
     1	{
     2	  "object": "object",
     3	  "type": "network",
     4	  "partner": "Sentinel-NAT",
     5	  "description": "Corporate NAT edge",
     6	  "items": [
     7	    "host 203.0.113.25"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "interface",
    14	  "type": "GigabitEthernet0/2",
    15	  "partner": false,
    16	  "description": "Outbound Internet NAT interface",
    17	  "items": [
    18	    "ip address 198.51.100.75 255.255.255.0"
    19	  ],
    20	  "others": [
    21	    "nameif outside"
    22	  ],
    23	  "group": "Unclassified"
    24	}
    25	{
    26	  "object": "interface",
    27	  "type": "GigabitEthernet0/1",
    28	  "partner": false,
    29	  "description": "Inside LAN segment",
    30	  "items": [
    31	    "ip address 192.168.100.100 255.255.255.0"
    32	  ],
    33	  "others": [
    34	    "nameif inside"
    35	  ],
    36	  "group": "Unclassified"
    37	}
    38	{
    39	  "object": "object",
    40	  "type": "network",
    41	  "partner": "Titan-WLAN-Host",
    42	  "description": "Backup inside NAT IP",
    43	  "items": [
    44	    "host 192.168.100.100"
    45	  ],
    46	  "others": [],
    47	  "group": "Unclassified"
    48	}
    49	{
    50	  "object": "object-group",
    51	  "type": "network",
    52	  "partner": "Sector-Wireless",
    53	  "description": "Staff WiFi clients",
    54	  "items": [
    55	    "network-object host 192.168.100.100"
    56	  ],
    57	  "others": [
    58	    "network-object host 10.10.10.10"
    59	  ],
    60	  "group": "Unclassified"
    61	}
+ return 0
