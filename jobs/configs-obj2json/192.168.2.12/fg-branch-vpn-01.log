+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=192.168.2.12
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=config system interface--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  edit "internal"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set ip 192.168.2.12 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set alias "User LAN"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  next--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=config system interface--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  edit "internal"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set ip 192.168.2.12 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set alias "User LAN"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  next--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--end'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.2.12--fortinet--fg-branch-vpn-01.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.2.12--fortinet--fg-branch-vpn-01.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'config system interface
  edit "internal"
   set ip 192.168.2.12 255.255.255.0
   set alias "User LAN"
  next
end'
+ local 'object_header=config system interface'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=config
+ [[ config == \c\o\n\f\i\g ]]
++ printf '%s ' system interface
++ sed 's/[[:space:]]*$//'
+ type_value='system interface'
+ partner_value=false
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=config system interface'
+ [[ -z config system interface ]]
+ [[ config system interface =~ ^description[[:space:]] ]]
+ [[ config system interface =~ ^edit[[:space:]]+".+" ]]
+ [[ config system interface =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ config system interface == \n\e\x\t ]]
+ [[ config system interface == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=edit "internal"'
+ [[ -z edit "internal" ]]
+ [[ edit "internal" =~ ^description[[:space:]] ]]
+ [[ edit "internal" =~ ^edit[[:space:]]+".+" ]]
++ sed -E 's/^edit[[:space:]]+"(.+)"$/\1/'
+ partner_value=internal
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=set ip 192.168.2.12 255.255.255.0'
+ [[ -z set ip 192.168.2.12 255.255.255.0 ]]
+ [[ set ip 192.168.2.12 255.255.255.0 =~ ^description[[:space:]] ]]
+ [[ set ip 192.168.2.12 255.255.255.0 =~ ^edit[[:space:]]+".+" ]]
+ [[ set ip 192.168.2.12 255.255.255.0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ set ip 192.168.2.12 255.255.255.0 == \n\e\x\t ]]
+ [[ set ip 192.168.2.12 255.255.255.0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=set alias "User LAN"'
+ [[ -z set alias "User LAN" ]]
+ [[ set alias "user lan" =~ ^description[[:space:]] ]]
+ [[ set alias "user lan" =~ ^edit[[:space:]]+".+" ]]
+ [[ set alias "user lan" =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ set alias "user lan" == \n\e\x\t ]]
+ [[ set alias "user lan" == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local trimmed=next
+ [[ -z next ]]
+ [[ next =~ ^description[[:space:]] ]]
+ [[ next =~ ^edit[[:space:]]+".+" ]]
+ [[ next =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ next == \n\e\x\t ]]
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local trimmed=end
+ [[ -z end ]]
+ [[ end =~ ^description[[:space:]] ]]
+ [[ end =~ ^edit[[:space:]]+".+" ]]
+ [[ end =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ end == \n\e\x\t ]]
+ [[ end == \e\n\d ]]
+ continue
+ [[ config system interface == \c\o\n\f\i\g\ \s\y\s\t\e\m\ \i\n\t\e\r\f\a\c\e ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'set ip 192.168.2.12 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "set ip 192.168.2.12 255.255.255.0"
]'
++ printf '%s\n' 'set alias "User LAN"'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "set alias \"User LAN\""
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=interface
++ jq -r --arg key interface 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc false 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object config --arg type 'system interface' --arg partner internal --arg description false --argjson items '[
  "set ip 192.168.2.12 255.255.255.0"
]' --argjson others '[
  "set alias \"User LAN\""
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "config",
  "type": "system interface",
  "partner": "internal",
  "description": false,
  "items": [
    "set ip 192.168.2.12 255.255.255.0"
  ],
  "others": [
    "set alias \"User LAN\""
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'config system interface'
+ [[ -n config system interface ]]
+ local 'message=config system interface'
+ echo -e 'config system interface'
+ for object in "${restored_block[@]}"
+ message '  edit "internal"'
+ [[ -n   edit "internal" ]]
+ local 'message=  edit "internal"'
+ echo -e '  edit "internal"'
+ for object in "${restored_block[@]}"
+ message '   set ip 192.168.2.12 255.255.255.0'
+ [[ -n    set ip 192.168.2.12 255.255.255.0 ]]
+ local 'message=   set ip 192.168.2.12 255.255.255.0'
+ echo -e '   set ip 192.168.2.12 255.255.255.0'
+ for object in "${restored_block[@]}"
+ message '   set alias "User LAN"'
+ [[ -n    set alias "User LAN" ]]
+ local 'message=   set alias "User LAN"'
+ echo -e '   set alias "User LAN"'
+ for object in "${restored_block[@]}"
+ message '  next'
+ [[ -n   next ]]
+ local 'message=  next'
+ echo -e '  next'
+ for object in "${restored_block[@]}"
+ message end
+ [[ -n end ]]
+ local message=end
+ echo -e end
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "config",
  "type": "system interface",
  "partner": "internal",
  "description": false,
  "items": [
    "set ip 192.168.2.12 255.255.255.0"
  ],
  "others": [
    "set alias \"User LAN\""
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
     1	{
     2	  "object": "config",
     3	  "type": "firewall address",
     4	  "partner": "Panther-Vault",
     5	  "description": "Wakandan data store",
     6	  "items": [
     7	    "set subnet 192.168.1.10 255.255.255.255"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "config",
    14	  "type": "system interface",
    15	  "partner": "internal",
    16	  "description": false,
    17	  "items": [
    18	    "set ip 192.168.2.12 255.255.255.0"
    19	  ],
    20	  "others": [
    21	    "set alias \"User LAN\""
    22	  ],
    23	  "group": "Unclassified"
    24	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=192.168.2.12
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=config firewall address--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  edit "Branch-Gateway"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set subnet 192.168.2.12 255.255.255.255--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set comment "Primary LAN gateway"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  next--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=config firewall address--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  edit "Branch-Gateway"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set subnet 192.168.2.12 255.255.255.255--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--   set comment "Primary LAN gateway"--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  next--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--end'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.2.12--fortinet--fg-branch-vpn-01.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-obj2json--192.168.2.12--fortinet--fg-branch-vpn-01.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'config firewall address
  edit "Branch-Gateway"
   set subnet 192.168.2.12 255.255.255.255
   set comment "Primary LAN gateway"
  next
end'
+ local 'object_header=config firewall address'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=config
+ [[ config == \c\o\n\f\i\g ]]
++ printf '%s ' firewall address
++ sed 's/[[:space:]]*$//'
+ type_value='firewall address'
+ partner_value=false
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=config firewall address'
+ [[ -z config firewall address ]]
+ [[ config firewall address =~ ^description[[:space:]] ]]
+ [[ config firewall address =~ ^edit[[:space:]]+".+" ]]
+ [[ config firewall address =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ config firewall address == \n\e\x\t ]]
+ [[ config firewall address == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=edit "Branch-Gateway"'
+ [[ -z edit "Branch-Gateway" ]]
+ [[ edit "branch-gateway" =~ ^description[[:space:]] ]]
+ [[ edit "branch-gateway" =~ ^edit[[:space:]]+".+" ]]
++ sed -E 's/^edit[[:space:]]+"(.+)"$/\1/'
+ partner_value=Branch-Gateway
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=set subnet 192.168.2.12 255.255.255.255'
+ [[ -z set subnet 192.168.2.12 255.255.255.255 ]]
+ [[ set subnet 192.168.2.12 255.255.255.255 =~ ^description[[:space:]] ]]
+ [[ set subnet 192.168.2.12 255.255.255.255 =~ ^edit[[:space:]]+".+" ]]
+ [[ set subnet 192.168.2.12 255.255.255.255 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ set subnet 192.168.2.12 255.255.255.255 == \n\e\x\t ]]
+ [[ set subnet 192.168.2.12 255.255.255.255 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=set comment "Primary LAN gateway"'
+ [[ -z set comment "Primary LAN gateway" ]]
+ [[ set comment "primary lan gateway" =~ ^description[[:space:]] ]]
+ [[ set comment "primary lan gateway" =~ ^edit[[:space:]]+".+" ]]
+ [[ set comment "primary lan gateway" =~ ^set[[:space:]]+comment[[:space:]] ]]
++ sed -E 's/^set[[:space:]]+comment[[:space:]]+//'
++ sed -E 's/^"(.*)"$/\1/'
+ description_value='Primary LAN gateway'
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local trimmed=next
+ [[ -z next ]]
+ [[ next =~ ^description[[:space:]] ]]
+ [[ next =~ ^edit[[:space:]]+".+" ]]
+ [[ next =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ next == \n\e\x\t ]]
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local trimmed=end
+ [[ -z end ]]
+ [[ end =~ ^description[[:space:]] ]]
+ [[ end =~ ^edit[[:space:]]+".+" ]]
+ [[ end =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ end == \n\e\x\t ]]
+ [[ end == \e\n\d ]]
+ continue
+ [[ config firewall address == \c\o\n\f\i\g\ \f\i\r\e\w\a\l\l\ \a\d\d\r\e\s\s ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])192\.168\.2\.12([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'set subnet 192.168.2.12 255.255.255.255'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "set subnet 192.168.2.12 255.255.255.255"
]'
++ printf '%s\n'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=address
++ jq -r --arg key address 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Primary LAN gateway' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object config --arg type 'firewall address' --arg partner Branch-Gateway --arg description 'Primary LAN gateway' --argjson items '[
  "set subnet 192.168.2.12 255.255.255.255"
]' --argjson others '[]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "config",
  "type": "firewall address",
  "partner": "Branch-Gateway",
  "description": "Primary LAN gateway",
  "items": [
    "set subnet 192.168.2.12 255.255.255.255"
  ],
  "others": [],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'config firewall address'
+ [[ -n config firewall address ]]
+ local 'message=config firewall address'
+ echo -e 'config firewall address'
+ for object in "${restored_block[@]}"
+ message '  edit "Branch-Gateway"'
+ [[ -n   edit "Branch-Gateway" ]]
+ local 'message=  edit "Branch-Gateway"'
+ echo -e '  edit "Branch-Gateway"'
+ for object in "${restored_block[@]}"
+ message '   set subnet 192.168.2.12 255.255.255.255'
+ [[ -n    set subnet 192.168.2.12 255.255.255.255 ]]
+ local 'message=   set subnet 192.168.2.12 255.255.255.255'
+ echo -e '   set subnet 192.168.2.12 255.255.255.255'
+ for object in "${restored_block[@]}"
+ message '   set comment "Primary LAN gateway"'
+ [[ -n    set comment "Primary LAN gateway" ]]
+ local 'message=   set comment "Primary LAN gateway"'
+ echo -e '   set comment "Primary LAN gateway"'
+ for object in "${restored_block[@]}"
+ message '  next'
+ [[ -n   next ]]
+ local 'message=  next'
+ echo -e '  next'
+ for object in "${restored_block[@]}"
+ message end
+ [[ -n end ]]
+ local message=end
+ echo -e end
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "config",
  "type": "firewall address",
  "partner": "Branch-Gateway",
  "description": "Primary LAN gateway",
  "items": [
    "set subnet 192.168.2.12 255.255.255.255"
  ],
  "others": [],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/fg-branch-vpn-01.list.objects
     1	{
     2	  "object": "config",
     3	  "type": "firewall address",
     4	  "partner": "Panther-Vault",
     5	  "description": "Wakandan data store",
     6	  "items": [
     7	    "set subnet 192.168.1.10 255.255.255.255"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "config",
    14	  "type": "system interface",
    15	  "partner": "internal",
    16	  "description": false,
    17	  "items": [
    18	    "set ip 192.168.2.12 255.255.255.0"
    19	  ],
    20	  "others": [
    21	    "set alias \"User LAN\""
    22	  ],
    23	  "group": "Unclassified"
    24	}
    25	{
    26	  "object": "config",
    27	  "type": "firewall address",
    28	  "partner": "Public-Test",
    29	  "description": "Public NAT exposure for Red Skull trap",
    30	  "items": [
    31	    "set subnet 203.0.113.25 255.255.255.255"
    32	  ],
    33	  "others": [],
    34	  "group": "Unclassified"
    35	}
    36	{
    37	  "object": "config",
    38	  "type": "system interface",
    39	  "partner": "wan1",
    40	  "description": false,
    41	  "items": [
    42	    "set ip 198.51.100.75 255.255.255.0"
    43	  ],
    44	  "others": [
    45	    "set alias \"Branch ISP\""
    46	  ],
    47	  "group": "Unclassified"
    48	}
    49	{
    50	  "object": "config",
    51	  "type": "firewall address",
    52	  "partner": "Branch-Gateway",
    53	  "description": "Primary LAN gateway",
    54	  "items": [
    55	    "set subnet 192.168.2.12 255.255.255.255"
    56	  ],
    57	  "others": [],
    58	  "group": "Unclassified"
    59	}
+ return 0
