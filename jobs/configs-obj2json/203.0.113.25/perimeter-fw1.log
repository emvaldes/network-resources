+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=203.0.113.25
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=interface GigabitEthernet0/0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  nameif outside--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  security-level 0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 203.0.113.25 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description External Internet-facing Interface'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=interface GigabitEthernet0/0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  nameif outside--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  security-level 0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 203.0.113.25 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description External Internet-facing Interface'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'interface GigabitEthernet0/0
  nameif outside
  security-level 0
  ip address 203.0.113.25 255.255.255.0
  description External Internet-facing Interface'
+ local 'object_header=interface GigabitEthernet0/0'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=interface
+ [[ interface == \c\o\n\f\i\g ]]
+ ((  2 == 3  ))
+ ((  2 > 3  ))
+ type_value=GigabitEthernet0/0
+ partner_value=false
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=interface GigabitEthernet0/0'
+ [[ -z interface GigabitEthernet0/0 ]]
+ [[ interface gigabitethernet0/0 =~ ^description[[:space:]] ]]
+ [[ interface gigabitethernet0/0 =~ ^edit[[:space:]]+".+" ]]
+ [[ interface gigabitethernet0/0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ interface gigabitethernet0/0 == \n\e\x\t ]]
+ [[ interface gigabitethernet0/0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=nameif outside'
+ [[ -z nameif outside ]]
+ [[ nameif outside =~ ^description[[:space:]] ]]
+ [[ nameif outside =~ ^edit[[:space:]]+".+" ]]
+ [[ nameif outside =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ nameif outside == \n\e\x\t ]]
+ [[ nameif outside == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=security-level 0'
+ [[ -z security-level 0 ]]
+ [[ security-level 0 =~ ^description[[:space:]] ]]
+ [[ security-level 0 =~ ^edit[[:space:]]+".+" ]]
+ [[ security-level 0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ security-level 0 == \n\e\x\t ]]
+ [[ security-level 0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=ip address 203.0.113.25 255.255.255.0'
+ [[ -z ip address 203.0.113.25 255.255.255.0 ]]
+ [[ ip address 203.0.113.25 255.255.255.0 =~ ^description[[:space:]] ]]
+ [[ ip address 203.0.113.25 255.255.255.0 =~ ^edit[[:space:]]+".+" ]]
+ [[ ip address 203.0.113.25 255.255.255.0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ ip address 203.0.113.25 255.255.255.0 == \n\e\x\t ]]
+ [[ ip address 203.0.113.25 255.255.255.0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description External Internet-facing Interface'
+ [[ -z description External Internet-facing Interface ]]
+ [[ description external internet-facing interface =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='External Internet-facing Interface'
+ continue
+ [[ interface GigabitEthernet0/0 == \i\n\t\e\r\f\a\c\e\ \G\i\g\a\b\i\t\E\t\h\e\r\n\e\t\0\/\0 ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'ip address 203.0.113.25 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "ip address 203.0.113.25 255.255.255.0"
]'
++ printf '%s\n' 'nameif outside' 'security-level 0'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "nameif outside",
  "security-level 0"
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=GigabitEthernet0/0
++ jq -r --arg key GigabitEthernet0/0 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'External Internet-facing Interface' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object interface --arg type GigabitEthernet0/0 --arg partner false --arg description 'External Internet-facing Interface' --argjson items '[
  "ip address 203.0.113.25 255.255.255.0"
]' --argjson others '[
  "nameif outside",
  "security-level 0"
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "interface",
  "type": "GigabitEthernet0/0",
  "partner": false,
  "description": "External Internet-facing Interface",
  "items": [
    "ip address 203.0.113.25 255.255.255.0"
  ],
  "others": [
    "nameif outside",
    "security-level 0"
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'interface GigabitEthernet0/0'
+ [[ -n interface GigabitEthernet0/0 ]]
+ local 'message=interface GigabitEthernet0/0'
+ echo -e 'interface GigabitEthernet0/0'
+ for object in "${restored_block[@]}"
+ message '  nameif outside'
+ [[ -n   nameif outside ]]
+ local 'message=  nameif outside'
+ echo -e '  nameif outside'
+ for object in "${restored_block[@]}"
+ message '  security-level 0'
+ [[ -n   security-level 0 ]]
+ local 'message=  security-level 0'
+ echo -e '  security-level 0'
+ for object in "${restored_block[@]}"
+ message '  ip address 203.0.113.25 255.255.255.0'
+ [[ -n   ip address 203.0.113.25 255.255.255.0 ]]
+ local 'message=  ip address 203.0.113.25 255.255.255.0'
+ echo -e '  ip address 203.0.113.25 255.255.255.0'
+ for object in "${restored_block[@]}"
+ message '  description External Internet-facing Interface'
+ [[ -n   description External Internet-facing Interface ]]
+ local 'message=  description External Internet-facing Interface'
+ echo -e '  description External Internet-facing Interface'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "interface",
  "type": "GigabitEthernet0/0",
  "partner": false,
  "description": "External Internet-facing Interface",
  "items": [
    "ip address 203.0.113.25 255.255.255.0"
  ],
  "others": [
    "nameif outside",
    "security-level 0"
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/1",
     4	  "partner": false,
     5	  "description": "Internal Network Interface",
     6	  "items": [
     7	    "ip address 10.0.0.1 255.255.255.0"
     8	  ],
     9	  "others": [
    10	    "nameif inside",
    11	    "security-level 100"
    12	  ],
    13	  "group": "Unclassified"
    14	}
    15	{
    16	  "object": "interface",
    17	  "type": "GigabitEthernet0/0",
    18	  "partner": false,
    19	  "description": "External Internet-facing Interface",
    20	  "items": [
    21	    "ip address 203.0.113.25 255.255.255.0"
    22	  ],
    23	  "others": [
    24	    "nameif outside",
    25	    "security-level 0"
    26	  ],
    27	  "group": "Unclassified"
    28	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=203.0.113.25
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object network NAT-Edge--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Internet-bound IP NAT'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object network NAT-Edge--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Internet-bound IP NAT'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object network NAT-Edge
  host 203.0.113.25
  description Internet-bound IP NAT'
+ local 'object_header=object network NAT-Edge'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object
+ [[ object == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=NAT-Edge
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object network NAT-Edge'
+ [[ -z object network NAT-Edge ]]
+ [[ object network nat-edge =~ ^description[[:space:]] ]]
+ [[ object network nat-edge =~ ^edit[[:space:]]+".+" ]]
+ [[ object network nat-edge =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object network nat-edge == \n\e\x\t ]]
+ [[ object network nat-edge == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=host 203.0.113.25'
+ [[ -z host 203.0.113.25 ]]
+ [[ host 203.0.113.25 =~ ^description[[:space:]] ]]
+ [[ host 203.0.113.25 =~ ^edit[[:space:]]+".+" ]]
+ [[ host 203.0.113.25 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ host 203.0.113.25 == \n\e\x\t ]]
+ [[ host 203.0.113.25 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Internet-bound IP NAT'
+ [[ -z description Internet-bound IP NAT ]]
+ [[ description internet-bound ip nat =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Internet-bound IP NAT'
+ continue
+ [[ object network NAT-Edge == \o\b\j\e\c\t\ \n\e\t\w\o\r\k\ \N\A\T\-\E\d\g\e ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'host 203.0.113.25'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "host 203.0.113.25"
]'
++ printf '%s\n'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Internet-bound IP NAT' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object --arg type network --arg partner NAT-Edge --arg description 'Internet-bound IP NAT' --argjson items '[
  "host 203.0.113.25"
]' --argjson others '[]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object",
  "type": "network",
  "partner": "NAT-Edge",
  "description": "Internet-bound IP NAT",
  "items": [
    "host 203.0.113.25"
  ],
  "others": [],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object network NAT-Edge'
+ [[ -n object network NAT-Edge ]]
+ local 'message=object network NAT-Edge'
+ echo -e 'object network NAT-Edge'
+ for object in "${restored_block[@]}"
+ message '  host 203.0.113.25'
+ [[ -n   host 203.0.113.25 ]]
+ local 'message=  host 203.0.113.25'
+ echo -e '  host 203.0.113.25'
+ for object in "${restored_block[@]}"
+ message '  description Internet-bound IP NAT'
+ [[ -n   description Internet-bound IP NAT ]]
+ local 'message=  description Internet-bound IP NAT'
+ echo -e '  description Internet-bound IP NAT'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object",
  "type": "network",
  "partner": "NAT-Edge",
  "description": "Internet-bound IP NAT",
  "items": [
    "host 203.0.113.25"
  ],
  "others": [],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/1",
     4	  "partner": false,
     5	  "description": "Internal Network Interface",
     6	  "items": [
     7	    "ip address 10.0.0.1 255.255.255.0"
     8	  ],
     9	  "others": [
    10	    "nameif inside",
    11	    "security-level 100"
    12	  ],
    13	  "group": "Unclassified"
    14	}
    15	{
    16	  "object": "interface",
    17	  "type": "GigabitEthernet0/0",
    18	  "partner": false,
    19	  "description": "External Internet-facing Interface",
    20	  "items": [
    21	    "ip address 203.0.113.25 255.255.255.0"
    22	  ],
    23	  "others": [
    24	    "nameif outside",
    25	    "security-level 0"
    26	  ],
    27	  "group": "Unclassified"
    28	}
    29	{
    30	  "object": "object",
    31	  "type": "network",
    32	  "partner": "Stark-Tower",
    33	  "description": "Core services gateway",
    34	  "items": [
    35	    "host 10.0.0.1"
    36	  ],
    37	  "others": [],
    38	  "group": "Unclassified"
    39	}
    40	{
    41	  "object": "object",
    42	  "type": "network",
    43	  "partner": "NAT-Edge",
    44	  "description": "Internet-bound IP NAT",
    45	  "items": [
    46	    "host 203.0.113.25"
    47	  ],
    48	  "others": [],
    49	  "group": "Unclassified"
    50	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=203.0.113.25
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object-group network Avengers-DMZ--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Public access layer--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 192.0.2.50--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object 192.168.2.0 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object-group network Avengers-DMZ--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Public access layer--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 192.0.2.50--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object 192.168.2.0 255.255.255.0'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object-group network Avengers-DMZ
  description Public access layer
  network-object host 192.0.2.50
  network-object host 203.0.113.25
  network-object 192.168.2.0 255.255.255.0'
+ local 'object_header=object-group network Avengers-DMZ'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object-group
+ [[ object-group == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=Avengers-DMZ
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network Avengers-DMZ'
+ [[ -z object-group network Avengers-DMZ ]]
+ [[ object-group network avengers-dmz =~ ^description[[:space:]] ]]
+ [[ object-group network avengers-dmz =~ ^edit[[:space:]]+".+" ]]
+ [[ object-group network avengers-dmz =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object-group network avengers-dmz == \n\e\x\t ]]
+ [[ object-group network avengers-dmz == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Public access layer'
+ [[ -z description Public access layer ]]
+ [[ description public access layer =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Public access layer'
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 192.0.2.50'
+ [[ -z network-object host 192.0.2.50 ]]
+ [[ network-object host 192.0.2.50 =~ ^description[[:space:]] ]]
+ [[ network-object host 192.0.2.50 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 192.0.2.50 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 192.0.2.50 == \n\e\x\t ]]
+ [[ network-object host 192.0.2.50 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 203.0.113.25'
+ [[ -z network-object host 203.0.113.25 ]]
+ [[ network-object host 203.0.113.25 =~ ^description[[:space:]] ]]
+ [[ network-object host 203.0.113.25 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 203.0.113.25 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 203.0.113.25 == \n\e\x\t ]]
+ [[ network-object host 203.0.113.25 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object 192.168.2.0 255.255.255.0'
+ [[ -z network-object 192.168.2.0 255.255.255.0 ]]
+ [[ network-object 192.168.2.0 255.255.255.0 =~ ^description[[:space:]] ]]
+ [[ network-object 192.168.2.0 255.255.255.0 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object 192.168.2.0 255.255.255.0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object 192.168.2.0 255.255.255.0 == \n\e\x\t ]]
+ [[ network-object 192.168.2.0 255.255.255.0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ [[ object-group network Avengers-DMZ == \o\b\j\e\c\t\-\g\r\o\u\p\ \n\e\t\w\o\r\k\ \A\v\e\n\g\e\r\s\-\D\M\Z ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'network-object host 203.0.113.25'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "network-object host 203.0.113.25"
]'
++ printf '%s\n' 'network-object host 192.0.2.50' 'network-object 192.168.2.0 255.255.255.0'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "network-object host 192.0.2.50",
  "network-object 192.168.2.0 255.255.255.0"
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Public access layer' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object-group --arg type network --arg partner Avengers-DMZ --arg description 'Public access layer' --argjson items '[
  "network-object host 203.0.113.25"
]' --argjson others '[
  "network-object host 192.0.2.50",
  "network-object 192.168.2.0 255.255.255.0"
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object-group",
  "type": "network",
  "partner": "Avengers-DMZ",
  "description": "Public access layer",
  "items": [
    "network-object host 203.0.113.25"
  ],
  "others": [
    "network-object host 192.0.2.50",
    "network-object 192.168.2.0 255.255.255.0"
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object-group network Avengers-DMZ'
+ [[ -n object-group network Avengers-DMZ ]]
+ local 'message=object-group network Avengers-DMZ'
+ echo -e 'object-group network Avengers-DMZ'
+ for object in "${restored_block[@]}"
+ message '  description Public access layer'
+ [[ -n   description Public access layer ]]
+ local 'message=  description Public access layer'
+ echo -e '  description Public access layer'
+ for object in "${restored_block[@]}"
+ message '  network-object host 192.0.2.50'
+ [[ -n   network-object host 192.0.2.50 ]]
+ local 'message=  network-object host 192.0.2.50'
+ echo -e '  network-object host 192.0.2.50'
+ for object in "${restored_block[@]}"
+ message '  network-object host 203.0.113.25'
+ [[ -n   network-object host 203.0.113.25 ]]
+ local 'message=  network-object host 203.0.113.25'
+ echo -e '  network-object host 203.0.113.25'
+ for object in "${restored_block[@]}"
+ message '  network-object 192.168.2.0 255.255.255.0'
+ [[ -n   network-object 192.168.2.0 255.255.255.0 ]]
+ local 'message=  network-object 192.168.2.0 255.255.255.0'
+ echo -e '  network-object 192.168.2.0 255.255.255.0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object-group",
  "type": "network",
  "partner": "Avengers-DMZ",
  "description": "Public access layer",
  "items": [
    "network-object host 203.0.113.25"
  ],
  "others": [
    "network-object host 192.0.2.50",
    "network-object 192.168.2.0 255.255.255.0"
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/1",
     4	  "partner": false,
     5	  "description": "Internal Network Interface",
     6	  "items": [
     7	    "ip address 10.0.0.1 255.255.255.0"
     8	  ],
     9	  "others": [
    10	    "nameif inside",
    11	    "security-level 100"
    12	  ],
    13	  "group": "Unclassified"
    14	}
    15	{
    16	  "object": "interface",
    17	  "type": "GigabitEthernet0/0",
    18	  "partner": false,
    19	  "description": "External Internet-facing Interface",
    20	  "items": [
    21	    "ip address 203.0.113.25 255.255.255.0"
    22	  ],
    23	  "others": [
    24	    "nameif outside",
    25	    "security-level 0"
    26	  ],
    27	  "group": "Unclassified"
    28	}
    29	{
    30	  "object": "object",
    31	  "type": "network",
    32	  "partner": "Stark-Tower",
    33	  "description": "Core services gateway",
    34	  "items": [
    35	    "host 10.0.0.1"
    36	  ],
    37	  "others": [],
    38	  "group": "Unclassified"
    39	}
    40	{
    41	  "object": "object",
    42	  "type": "network",
    43	  "partner": "NAT-Edge",
    44	  "description": "Internet-bound IP NAT",
    45	  "items": [
    46	    "host 203.0.113.25"
    47	  ],
    48	  "others": [],
    49	  "group": "Unclassified"
    50	}
    51	{
    52	  "object": "object-group",
    53	  "type": "network",
    54	  "partner": "Avengers-DMZ",
    55	  "description": "Public access layer",
    56	  "items": [
    57	    "network-object host 203.0.113.25"
    58	  ],
    59	  "others": [
    60	    "network-object host 192.0.2.50",
    61	    "network-object 192.168.2.0 255.255.255.0"
    62	  ],
    63	  "group": "Unclassified"
    64	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=203.0.113.25
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object-group network Panther-Edge--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Internet-facing proxy systems--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 172.16.0.5'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object-group network Panther-Edge--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Internet-facing proxy systems--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 203.0.113.25--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  network-object host 172.16.0.5'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/configs-obj2json--203.0.113.25--cisco--perimeter-fw1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object-group network Panther-Edge
  description Internet-facing proxy systems
  network-object host 203.0.113.25
  network-object host 172.16.0.5'
+ local 'object_header=object-group network Panther-Edge'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object-group
+ [[ object-group == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=Panther-Edge
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object-group network Panther-Edge'
+ [[ -z object-group network Panther-Edge ]]
+ [[ object-group network panther-edge =~ ^description[[:space:]] ]]
+ [[ object-group network panther-edge =~ ^edit[[:space:]]+".+" ]]
+ [[ object-group network panther-edge =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object-group network panther-edge == \n\e\x\t ]]
+ [[ object-group network panther-edge == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Internet-facing proxy systems'
+ [[ -z description Internet-facing proxy systems ]]
+ [[ description internet-facing proxy systems =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Internet-facing proxy systems'
+ continue
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 203.0.113.25'
+ [[ -z network-object host 203.0.113.25 ]]
+ [[ network-object host 203.0.113.25 =~ ^description[[:space:]] ]]
+ [[ network-object host 203.0.113.25 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 203.0.113.25 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 203.0.113.25 == \n\e\x\t ]]
+ [[ network-object host 203.0.113.25 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=network-object host 172.16.0.5'
+ [[ -z network-object host 172.16.0.5 ]]
+ [[ network-object host 172.16.0.5 =~ ^description[[:space:]] ]]
+ [[ network-object host 172.16.0.5 =~ ^edit[[:space:]]+".+" ]]
+ [[ network-object host 172.16.0.5 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ network-object host 172.16.0.5 == \n\e\x\t ]]
+ [[ network-object host 172.16.0.5 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ [[ object-group network Panther-Edge == \o\b\j\e\c\t\-\g\r\o\u\p\ \n\e\t\w\o\r\k\ \P\a\n\t\h\e\r\-\E\d\g\e ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])203\.0\.113\.25([^0-9.]|$)'
+ others+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'network-object host 203.0.113.25'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "network-object host 203.0.113.25"
]'
++ printf '%s\n' 'network-object host 172.16.0.5'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[
  "network-object host 172.16.0.5"
]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Internet-facing proxy systems' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object-group --arg type network --arg partner Panther-Edge --arg description 'Internet-facing proxy systems' --argjson items '[
  "network-object host 203.0.113.25"
]' --argjson others '[
  "network-object host 172.16.0.5"
]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object-group",
  "type": "network",
  "partner": "Panther-Edge",
  "description": "Internet-facing proxy systems",
  "items": [
    "network-object host 203.0.113.25"
  ],
  "others": [
    "network-object host 172.16.0.5"
  ],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object-group network Panther-Edge'
+ [[ -n object-group network Panther-Edge ]]
+ local 'message=object-group network Panther-Edge'
+ echo -e 'object-group network Panther-Edge'
+ for object in "${restored_block[@]}"
+ message '  description Internet-facing proxy systems'
+ [[ -n   description Internet-facing proxy systems ]]
+ local 'message=  description Internet-facing proxy systems'
+ echo -e '  description Internet-facing proxy systems'
+ for object in "${restored_block[@]}"
+ message '  network-object host 203.0.113.25'
+ [[ -n   network-object host 203.0.113.25 ]]
+ local 'message=  network-object host 203.0.113.25'
+ echo -e '  network-object host 203.0.113.25'
+ for object in "${restored_block[@]}"
+ message '  network-object host 172.16.0.5'
+ [[ -n   network-object host 172.16.0.5 ]]
+ local 'message=  network-object host 172.16.0.5'
+ echo -e '  network-object host 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object-group",
  "type": "network",
  "partner": "Panther-Edge",
  "description": "Internet-facing proxy systems",
  "items": [
    "network-object host 203.0.113.25"
  ],
  "others": [
    "network-object host 172.16.0.5"
  ],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z8K565yDD2/perimeter-fw1.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/1",
     4	  "partner": false,
     5	  "description": "Internal Network Interface",
     6	  "items": [
     7	    "ip address 10.0.0.1 255.255.255.0"
     8	  ],
     9	  "others": [
    10	    "nameif inside",
    11	    "security-level 100"
    12	  ],
    13	  "group": "Unclassified"
    14	}
    15	{
    16	  "object": "interface",
    17	  "type": "GigabitEthernet0/0",
    18	  "partner": false,
    19	  "description": "External Internet-facing Interface",
    20	  "items": [
    21	    "ip address 203.0.113.25 255.255.255.0"
    22	  ],
    23	  "others": [
    24	    "nameif outside",
    25	    "security-level 0"
    26	  ],
    27	  "group": "Unclassified"
    28	}
    29	{
    30	  "object": "object",
    31	  "type": "network",
    32	  "partner": "Stark-Tower",
    33	  "description": "Core services gateway",
    34	  "items": [
    35	    "host 10.0.0.1"
    36	  ],
    37	  "others": [],
    38	  "group": "Unclassified"
    39	}
    40	{
    41	  "object": "object",
    42	  "type": "network",
    43	  "partner": "NAT-Edge",
    44	  "description": "Internet-bound IP NAT",
    45	  "items": [
    46	    "host 203.0.113.25"
    47	  ],
    48	  "others": [],
    49	  "group": "Unclassified"
    50	}
    51	{
    52	  "object": "object-group",
    53	  "type": "network",
    54	  "partner": "Avengers-DMZ",
    55	  "description": "Public access layer",
    56	  "items": [
    57	    "network-object host 203.0.113.25"
    58	  ],
    59	  "others": [
    60	    "network-object host 192.0.2.50",
    61	    "network-object 192.168.2.0 255.255.255.0"
    62	  ],
    63	  "group": "Unclassified"
    64	}
    65	{
    66	  "object": "object-group",
    67	  "type": "network",
    68	  "partner": "Panther-Edge",
    69	  "description": "Internet-facing proxy systems",
    70	  "items": [
    71	    "network-object host 203.0.113.25"
    72	  ],
    73	  "others": [
    74	    "network-object host 172.16.0.5"
    75	  ],
    76	  "group": "Unclassified"
    77	}
+ return 0
