+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=172.16.1.6
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=172.16.1.6
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=interface GigabitEthernet0/0/0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 172.16.1.6 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description ISP uplink'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=interface GigabitEthernet0/0/0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  ip address 172.16.1.6 255.255.255.0--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description ISP uplink'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-obj2json--172.16.1.6--cisco--branch-isr-02.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-obj2json--172.16.1.6--cisco--branch-isr-02.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'interface GigabitEthernet0/0/0
  ip address 172.16.1.6 255.255.255.0
  description ISP uplink'
+ local 'object_header=interface GigabitEthernet0/0/0'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=interface
+ [[ interface == \c\o\n\f\i\g ]]
+ ((  2 == 3  ))
+ ((  2 > 3  ))
+ type_value=GigabitEthernet0/0/0
+ partner_value=false
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=interface GigabitEthernet0/0/0'
+ [[ -z interface GigabitEthernet0/0/0 ]]
+ [[ interface gigabitethernet0/0/0 =~ ^description[[:space:]] ]]
+ [[ interface gigabitethernet0/0/0 =~ ^edit[[:space:]]+".+" ]]
+ [[ interface gigabitethernet0/0/0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ interface gigabitethernet0/0/0 == \n\e\x\t ]]
+ [[ interface gigabitethernet0/0/0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=ip address 172.16.1.6 255.255.255.0'
+ [[ -z ip address 172.16.1.6 255.255.255.0 ]]
+ [[ ip address 172.16.1.6 255.255.255.0 =~ ^description[[:space:]] ]]
+ [[ ip address 172.16.1.6 255.255.255.0 =~ ^edit[[:space:]]+".+" ]]
+ [[ ip address 172.16.1.6 255.255.255.0 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ ip address 172.16.1.6 255.255.255.0 == \n\e\x\t ]]
+ [[ ip address 172.16.1.6 255.255.255.0 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description ISP uplink'
+ [[ -z description ISP uplink ]]
+ [[ description isp uplink =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='ISP uplink'
+ continue
+ [[ interface GigabitEthernet0/0/0 == \i\n\t\e\r\f\a\c\e\ \G\i\g\a\b\i\t\E\t\h\e\r\n\e\t\0\/\0\/\0 ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'ip address 172.16.1.6 255.255.255.0'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "ip address 172.16.1.6 255.255.255.0"
]'
++ printf '%s\n'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=GigabitEthernet0/0/0
++ jq -r --arg key GigabitEthernet0/0/0 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'ISP uplink' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object interface --arg type GigabitEthernet0/0/0 --arg partner false --arg description 'ISP uplink' --argjson items '[
  "ip address 172.16.1.6 255.255.255.0"
]' --argjson others '[]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "interface",
  "type": "GigabitEthernet0/0/0",
  "partner": false,
  "description": "ISP uplink",
  "items": [
    "ip address 172.16.1.6 255.255.255.0"
  ],
  "others": [],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'interface GigabitEthernet0/0/0'
+ [[ -n interface GigabitEthernet0/0/0 ]]
+ local 'message=interface GigabitEthernet0/0/0'
+ echo -e 'interface GigabitEthernet0/0/0'
+ for object in "${restored_block[@]}"
+ message '  ip address 172.16.1.6 255.255.255.0'
+ [[ -n   ip address 172.16.1.6 255.255.255.0 ]]
+ local 'message=  ip address 172.16.1.6 255.255.255.0'
+ echo -e '  ip address 172.16.1.6 255.255.255.0'
+ for object in "${restored_block[@]}"
+ message '  description ISP uplink'
+ [[ -n   description ISP uplink ]]
+ local 'message=  description ISP uplink'
+ echo -e '  description ISP uplink'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "interface",
  "type": "GigabitEthernet0/0/0",
  "partner": false,
  "description": "ISP uplink",
  "items": [
    "ip address 172.16.1.6 255.255.255.0"
  ],
  "others": [],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/0/2",
     4	  "partner": false,
     5	  "description": "Dev VLAN",
     6	  "items": [
     7	    "ip address 10.0.2.3 255.255.255.0"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "interface",
    14	  "type": "GigabitEthernet0/0/0",
    15	  "partner": false,
    16	  "description": "ISP uplink",
    17	  "items": [
    18	    "ip address 172.16.1.6 255.255.255.0"
    19	  ],
    20	  "others": [],
    21	  "group": "Unclassified"
    22	}
+ return 0
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=172.16.1.6
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local target_pattern=172.16.1.6
+ [[ search =~ ^(source|o)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e '--source=object network BlackWidow-Core--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 172.16.1.6--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Branch router uplink NAT'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source =~ ^(search|s)$ ]]
+ [[ source =~ ^(source|o)$ ]]
+ local 'source_object=object network BlackWidow-Core--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  host 172.16.1.6--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--  description Branch router uplink NAT'
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(search|s)$ ]]
+ [[ target =~ ^(source|o)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_object=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-obj2json--172.16.1.6--cisco--branch-isr-02.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(source|o)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-obj2json--172.16.1.6--cisco--branch-isr-02.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ local target_console=console/configs-obj2json.console
+ mapfile -t restored_block
++ printf '%s\n' 'object network BlackWidow-Core
  host 172.16.1.6
  description Branch router uplink NAT'
+ local 'object_header=object network BlackWidow-Core'
+ local object_keyword type_value partner_value
+ read -a header_tokens
+ object_keyword=object
+ [[ object == \c\o\n\f\i\g ]]
+ ((  3 == 3  ))
+ type_value=network
+ partner_value=BlackWidow-Core
+ data_sets=()
+ local -a data_sets
+ local description_value=false
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=object network BlackWidow-Core'
+ [[ -z object network BlackWidow-Core ]]
+ [[ object network blackwidow-core =~ ^description[[:space:]] ]]
+ [[ object network blackwidow-core =~ ^edit[[:space:]]+".+" ]]
+ [[ object network blackwidow-core =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ object network blackwidow-core == \n\e\x\t ]]
+ [[ object network blackwidow-core == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=host 172.16.1.6'
+ [[ -z host 172.16.1.6 ]]
+ [[ host 172.16.1.6 =~ ^description[[:space:]] ]]
+ [[ host 172.16.1.6 =~ ^edit[[:space:]]+".+" ]]
+ [[ host 172.16.1.6 =~ ^set[[:space:]]+comment[[:space:]] ]]
+ [[ host 172.16.1.6 == \n\e\x\t ]]
+ [[ host 172.16.1.6 == \e\n\d ]]
+ data_sets+=("${trimmed}")
+ for line in "${restored_block[@]}"
++ sed -E 's/^[[:space:]]*//;s/[[:space:]]*$//'
+ local 'trimmed=description Branch router uplink NAT'
+ [[ -z description Branch router uplink NAT ]]
+ [[ description branch router uplink nat =~ ^description[[:space:]] ]]
++ sed -E 's/^description[[:space:]]+//'
+ description_value='Branch router uplink NAT'
+ continue
+ [[ object network BlackWidow-Core == \o\b\j\e\c\t\ \n\e\t\w\o\r\k\ \B\l\a\c\k\W\i\d\o\w\-\C\o\r\e ]]
+ data_sets=("${data_sets[@]:1}")
+ items=()
+ local -a items
+ others=()
+ local -a others
+ for line in "${data_sets[@]}"
+ grep -Eq '(^|[^0-9.])172\.16\.1\.6([^0-9.]|$)'
+ items+=("$(sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//' <<< "${line}")")
++ sed -E 's/^[[:space:]]+//;s/[[:space:]]+$//'
++ printf '%s\n' 'host 172.16.1.6'
++ jq -R .
++ jq --slurp .
+ local 'items_json=[
  "host 172.16.1.6"
]'
++ printf '%s\n'
++ sed '/^[[:space:]]*$/d'
++ jq -R .
++ jq --slurp .
+ local 'others_json=[]'
+ local group_value=Unclassified
+ [[ true == true ]]
+ local object_key
++ awk '{print $NF}'
++ sed -E 's/[[:punct:]]*$//'
+ object_key=network
++ jq -r --arg key network 'map( select( .match[]? | contains( $key ) ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
++ jq -r --arg desc 'Branch router uplink NAT' 'map( select( .match[]? == $desc ) ) | .[0].group'
+ group_value=null
+ [[ -z null ]]
+ [[ null == \n\u\l\l ]]
+ group_value=Unclassified
++ jq -n --arg object object --arg type network --arg partner BlackWidow-Core --arg description 'Branch router uplink NAT' --argjson items '[
  "host 172.16.1.6"
]' --argjson others '[]' --arg group Unclassified '{
          object: $object,
          type: ( $type // false ),
          partner: ( $partner | select(. != "" and . != "null" and . != "false") // false ),
          description: ( $description | select(. != "" and . != "null" and . != "false") // false ),
          items: $items,
          others: $others,
          group: $group
        }'
+ local 'target_json={
  "object": "object",
  "type": "network",
  "partner": "BlackWidow-Core",
  "description": "Branch router uplink NAT",
  "items": [
    "host 172.16.1.6"
  ],
  "others": [],
  "group": "Unclassified"
}'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for object in "${restored_block[@]}"
+ message 'object network BlackWidow-Core'
+ [[ -n object network BlackWidow-Core ]]
+ local 'message=object network BlackWidow-Core'
+ echo -e 'object network BlackWidow-Core'
+ for object in "${restored_block[@]}"
+ message '  host 172.16.1.6'
+ [[ -n   host 172.16.1.6 ]]
+ local 'message=  host 172.16.1.6'
+ echo -e '  host 172.16.1.6'
+ for object in "${restored_block[@]}"
+ message '  description Branch router uplink NAT'
+ [[ -n   description Branch router uplink NAT ]]
+ local 'message=  description Branch router uplink NAT'
+ echo -e '  description Branch router uplink NAT'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'JSON Object (output):'
+ [[ -n JSON Object (output): ]]
+ local 'message=JSON Object (output):'
+ echo -e 'JSON Object (output):'
+ jq -r .
+ [[ -n {
  "object": "object",
  "type": "network",
  "partner": "BlackWidow-Core",
  "description": "Branch router uplink NAT",
  "items": [
    "host 172.16.1.6"
  ],
  "others": [],
  "group": "Unclassified"
} ]]
+ jq -r .
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.list.objects
     1	{
     2	  "object": "interface",
     3	  "type": "GigabitEthernet0/0/2",
     4	  "partner": false,
     5	  "description": "Dev VLAN",
     6	  "items": [
     7	    "ip address 10.0.2.3 255.255.255.0"
     8	  ],
     9	  "others": [],
    10	  "group": "Unclassified"
    11	}
    12	{
    13	  "object": "interface",
    14	  "type": "GigabitEthernet0/0/0",
    15	  "partner": false,
    16	  "description": "ISP uplink",
    17	  "items": [
    18	    "ip address 172.16.1.6 255.255.255.0"
    19	  ],
    20	  "others": [],
    21	  "group": "Unclassified"
    22	}
    23	{
    24	  "object": "object-group",
    25	  "type": "network",
    26	  "partner": "Lantern-DMZ",
    27	  "description": "Protected but public-facing zone",
    28	  "items": [
    29	    "network-object host 172.18.1.20"
    30	  ],
    31	  "others": [
    32	    "network-object host 192.168.1.11"
    33	  ],
    34	  "group": "Unclassified"
    35	}
    36	{
    37	  "object": "object",
    38	  "type": "network",
    39	  "partner": "BlackWidow-Core",
    40	  "description": "Branch router uplink NAT",
    41	  "items": [
    42	    "host 172.16.1.6"
    43	  ],
    44	  "others": [],
    45	  "group": "Unclassified"
    46	}
    47	{
    48	  "object": "object",
    49	  "type": "network",
    50	  "partner": "Panther-Gateway",
    51	  "description": "Secure outbound concentrator",
    52	  "items": [
    53	    "host 10.0.2.3"
    54	  ],
    55	  "others": [],
    56	  "group": "Unclassified"
    57	}
+ return 0
