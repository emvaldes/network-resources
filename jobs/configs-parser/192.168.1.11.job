+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=reports/192.168.1.11
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=reports/192.168.1.11
+ configs_dirpath=reports/192.168.1.11
+ [[ configs =~ ^(index|n)$ ]]
+ [[ configs =~ ^(ip-addr|i)$ ]]
+ [[ configs =~ ^(logger|l)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --index=3
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ index =~ ^(configs|c)$ ]]
+ [[ index =~ ^(index|n)$ ]]
+ local target_index=3
+ [[ index =~ ^(ip-addr|i)$ ]]
+ [[ index =~ ^(logger|l)$ ]]
+ [[ index =~ ^(matrix|m)$ ]]
+ [[ index =~ ^(reports|r)$ ]]
+ [[ index =~ ^(classify|g)$ ]]
+ [[ index =~ ^(validate|v)$ ]]
+ [[ index == \d\e\b\u\g ]]
+ [[ index == \d\r\y\-\r\u\n ]]
+ [[ index == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ip-addr=192.168.1.11
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ip-addr =~ ^(configs|c)$ ]]
+ [[ ip-addr =~ ^(index|n)$ ]]
+ [[ ip-addr =~ ^(ip-addr|i)$ ]]
+ local target_address=192.168.1.11
+ [[ ip-addr =~ ^(logger|l)$ ]]
+ [[ ip-addr =~ ^(matrix|m)$ ]]
+ [[ ip-addr =~ ^(reports|r)$ ]]
+ [[ ip-addr =~ ^(classify|g)$ ]]
+ [[ ip-addr =~ ^(validate|v)$ ]]
+ [[ ip-addr == \d\e\b\u\g ]]
+ [[ ip-addr == \d\r\y\-\r\u\n ]]
+ [[ ip-addr == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(configs|c)$ ]]
+ [[ logger =~ ^(index|n)$ ]]
+ [[ logger =~ ^(ip-addr|i)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console
+ [[ logger =~ ^(matrix|m)$ ]]
+ [[ logger =~ ^(reports|r)$ ]]
+ [[ logger =~ ^(classify|g)$ ]]
+ [[ logger =~ ^(validate|v)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ matrix =~ ^(configs|c)$ ]]
+ [[ matrix =~ ^(index|n)$ ]]
+ [[ matrix =~ ^(ip-addr|i)$ ]]
+ [[ matrix =~ ^(logger|l)$ ]]
+ [[ matrix =~ ^(matrix|m)$ ]]
+ local matrix_filename=matrix.json
+ [[ matrix =~ ^(reports|r)$ ]]
+ [[ matrix =~ ^(classify|g)$ ]]
+ [[ matrix =~ ^(validate|v)$ ]]
+ [[ matrix == \d\e\b\u\g ]]
+ [[ matrix == \d\r\y\-\r\u\n ]]
+ [[ matrix == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --reports=reports
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ reports =~ ^(configs|c)$ ]]
+ [[ reports =~ ^(index|n)$ ]]
+ [[ reports =~ ^(ip-addr|i)$ ]]
+ [[ reports =~ ^(logger|l)$ ]]
+ [[ reports =~ ^(matrix|m)$ ]]
+ [[ reports =~ ^(reports|r)$ ]]
+ local reports_location=reports
+ [[ reports =~ ^(classify|g)$ ]]
+ [[ reports =~ ^(validate|v)$ ]]
+ [[ reports == \d\e\b\u\g ]]
+ [[ reports == \d\r\y\-\r\u\n ]]
+ [[ reports == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(index|n)$ ]]
+ [[ classify =~ ^(ip-addr|i)$ ]]
+ [[ classify =~ ^(logger|l)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(index|n)$ ]]
+ [[ verbose =~ ^(ip-addr|i)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export verbose=true
+ verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(index|n)$ ]]
+ [[ debug =~ ^(ip-addr|i)$ ]]
+ [[ debug =~ ^(logger|l)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \d\e\b\u\g ]]
+ export debug=true
+ debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console ]]
+ local configs_extract__logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-extract.log
+ :
+ [[ -z matrix.json ]]
+ [[ ! -f matrix.json ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export configs_dirpath=reports/192.168.1.11
+ configs_dirpath=reports/192.168.1.11
+ export reports_location=reports
+ reports_location=reports
+ [[ -z 3 ]]
+ [[ -z false ]]
+ local target_configlist_json=targets/192.168.1.11.json
+ [[ ! -f targets/192.168.1.11.json ]]
+ [[ true == true ]]
+ message 'Loading target config list from: targets/192.168.1.11.json'
+ [[ -n Loading target config list from: targets/192.168.1.11.json ]]
+ local 'message=Loading target config list from: targets/192.168.1.11.json'
+ echo -e 'Loading target config list from: targets/192.168.1.11.json'
Loading target config list from: targets/192.168.1.11.json
+ source_configs=()
+ declare -ga source_configs
+ mapfile -t source_configs
++ jq -r --arg reports reports '
        .target as $ip
        | .locations
        | to_entries[]
        | .key as $site
        | .value.devices[]
        | "\($reports)/\($ip)/\($site)/\(.config.object)"
      ' targets/192.168.1.11.json
+ [[ true == true ]]
+ message 'Found 2 configurations:'
+ [[ -n Found 2 configurations: ]]
+ local 'message=Found 2 configurations:'
+ echo -e 'Found 2 configurations:'
Found 2 configurations:
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ for config in "${source_configs[@]}"
+ message '  - reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n   - reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=  - reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -e '  - reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
  - reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ for config in "${source_configs[@]}"
+ message '  - reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ -n   - reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=  - reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ echo -e '  - reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
  - reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ -z 192.168.1.11 ]]
++ print 192.168.1.11
++ sed -E 's/[[:space:]]+//g'
++ [[ -n 192.168.1.11 ]]
++ echo -en 192.168.1.11
++ tr -d '\r'
+ target_address=192.168.1.11
+ [[ false == true ]]
+ extract_jobs_pid=()
+ declare -ga extract_jobs_pid
+ extract_jobs2files_mapping=()
+ declare -gA extract_jobs2files_mapping
+ extract_jobs2console_mapping=()
+ declare -gA extract_jobs2console_mapping
+ local configs_extract__script=configs-extract
+ local object_fragments=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json
++ dirname /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json
+ mkdir -p /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11
+ for config_filename in "${source_configs[@]}"
++ basename reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local cfg_basename=branch-isr-02.list
+ local object_fragments_per_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ local extract_location=jobs/configs-extract/192.168.1.11
+ mkdir -p jobs/configs-extract/192.168.1.11
+ local logging_filename=branch-isr-02
+ local configs_extract__console=console/configs-extract.console
+ local configs_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02
+ local job_pid=31720
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2files_mapping["${target_address}::${job_pid}"]=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ extract_jobs2console_mapping["${target_address}::${job_pid}"]=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02
+ for config_filename in "${source_configs[@]}"
+ configs_extract --config=reports/192.168.1.11/cisco/.objects/branch-isr-02.list --search=192.168.1.11 --listing=targets/192.168.1.11.json --output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/branch-isr-02.console
++ basename reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ local cfg_basename=fg-campus-core.list
+ local object_fragments_per_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ local extract_location=jobs/configs-extract/192.168.1.11
+ mkdir -p jobs/configs-extract/192.168.1.11
+ local logging_filename=fg-campus-core
+ local configs_extract__console=console/configs-extract.console
+ local configs_extract__logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/fg-campus-core
+ local job_pid=31765
+ extract_jobs_pid+=("${job_pid}")
+ extract_jobs2files_mapping["${target_address}::${job_pid}"]=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ extract_jobs2console_mapping["${target_address}::${job_pid}"]=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/fg-campus-core
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ configs_extract --config=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list --search=192.168.1.11 --listing=targets/192.168.1.11.json --output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/fg-campus-core.console
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ valid_extract_jobs_pid+=("${pid}")
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ valid_extract_jobs_pid+=("${pid}")
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  2 > 0  ))
+ valid_extract_jobs_pid=()
+ local valid_extract_jobs_pid
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31720
+ for key in "${!extract_jobs2files_mapping[@]}"
+ [[ 192.168.1.11::31720 == \1\9\2\.\1\6\8\.\1\.\1\1\:\:\3\1\7\2\0 ]]
+ logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ break
+ for pid in "${extract_jobs_pid[@]}"
+ kill -0 31765
+ for key in "${!extract_jobs2files_mapping[@]}"
+ [[ 192.168.1.11::31720 == \1\9\2\.\1\6\8\.\1\.\1\1\:\:\3\1\7\6\5 ]]
+ continue
+ for key in "${!extract_jobs2files_mapping[@]}"
+ [[ 192.168.1.11::31765 == \1\9\2\.\1\6\8\.\1\.\1\1\:\:\3\1\7\6\5 ]]
+ logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ break
+ extract_jobs_pid=("${valid_extract_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ :
+ message '>>> Listing Jobs->Files (extract_jobs2files_mapping): '
+ [[ -n >>> Listing Jobs->Files (extract_jobs2files_mapping):  ]]
+ local 'message=>>> Listing Jobs->Files (extract_jobs2files_mapping): '
+ echo -e '>>> Listing Jobs->Files (extract_jobs2files_mapping): '
>>> Listing Jobs->Files (extract_jobs2files_mapping): 
+ for key in "${!extract_jobs2files_mapping[@]}"
+ echo '192.168.1.11::31720 = /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json'
192.168.1.11::31720 = /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ for key in "${!extract_jobs2files_mapping[@]}"
+ echo '192.168.1.11::31765 = /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json'
192.168.1.11::31765 = /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ for key in "${!extract_jobs2files_mapping[@]}"
+ [[ 192.168.1.11::31720 == \1\9\2\.\1\6\8\.\1\.\1\1\:\:* ]]
+ fragment=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ ls -al /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
-rw-r--r--  1 emvaldes  staff  1038 Jun  9 22:55 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
     1	{
     2	  "site": "cisco",
     3	  "specs": {
     4	    "vendor": "cisco",
     5	    "model": "",
     6	    "version": "16.9",
     7	    "domain": "",
     8	    "hostname": "branch-isr-02"
     9	  },
    10	  "device": "branch-isr-02",
    11	  "objects": [
    12	    {
    13	      "object": "object",
    14	      "type": "network",
    15	      "partner": "Hydra-Link",
    16	      "description": "Branch NAT egress",
    17	      "items": [
    18	        "host 198.51.100.75"
    19	      ],
    20	      "others": [],
    21	      "group": "Unclassified"
    22	    },
    23	    {
    24	      "object": "interface",
    25	      "type": "GigabitEthernet0/0/1",
    26	      "partner": false,
    27	      "description": "Workstation LAN",
    28	      "items": [
    29	        "ip address 192.168.2.12 255.255.255.0"
    30	      ],
    31	      "others": [],
    32	      "group": "Unclassified"
    33	    },
    34	    {
    35	      "object": "object-group",
    36	      "type": "network",
    37	      "partner": "Lantern-DMZ",
    38	      "description": "Protected but public-facing zone",
    39	      "items": [
    40	        "network-object host 192.168.1.11"
    41	      ],
    42	      "others": [
    43	        "network-object host 172.18.1.20"
    44	      ],
    45	      "group": "Unclassified"
    46	    }
    47	  ]
    48	}
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--branch-isr-02.list--2041.json
+ for key in "${!extract_jobs2files_mapping[@]}"
+ [[ 192.168.1.11::31765 == \1\9\2\.\1\6\8\.\1\.\1\1\:\:* ]]
+ fragment=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ ls -al /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
-rw-r--r--  1 emvaldes  staff  1081 Jun  9 22:55 /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ cat -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
     1	{
     2	  "site": "fortinet",
     3	  "specs": {
     4	    "vendor": "fortinet",
     5	    "model": "FortiGate-200F",
     6	    "version": "",
     7	    "domain": "",
     8	    "hostname": "fg-campus-core"
     9	  },
    10	  "device": "fg-campus-core",
    11	  "objects": [
    12	    {
    13	      "object": "config",
    14	      "type": "firewall address",
    15	      "partner": "Cap-HQ",
    16	      "description": "Captain America’s secure endpoint",
    17	      "items": [
    18	        "set subnet 192.168.1.11 255.255.255.255"
    19	      ],
    20	      "others": [],
    21	      "group": "Unclassified"
    22	    },
    23	    {
    24	      "object": "config",
    25	      "type": "firewall address",
    26	      "partner": "Vision-Link",
    27	      "description": "Vision’s quantum channel",
    28	      "items": [
    29	        "set subnet 192.168.2.12 255.255.255.255"
    30	      ],
    31	      "others": [],
    32	      "group": "Unclassified"
    33	    },
    34	    {
    35	      "object": "config",
    36	      "type": "system interface",
    37	      "partner": "wifi",
    38	      "description": false,
    39	      "items": [
    40	        "set ip 192.168.100.100 255.255.255.0"
    41	      ],
    42	      "others": [
    43	        "set alias \"Wireless VLAN\""
    44	      ],
    45	      "group": "Unclassified"
    46	    }
    47	  ]
    48	}
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/fragments--fg-campus-core.list--27349.json
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ message 'Fragment Configuration file: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]'
+ [[ -n Fragment Configuration file: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ] ]]
+ local 'message=Fragment Configuration file: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]'
+ echo -e 'Fragment Configuration file: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]'
Fragment Configuration file: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]
+ jq -s -r '
                .[] | "\(.site)/\(.device) → \( .objects | length ) objects"
                ' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json
cisco/branch-isr-02 → 3 objects
fortinet/fg-campus-core → 3 objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ mkdir -p /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11
+ export json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/192.168.1.11.json
+ json_outfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/192.168.1.11.json
+ [[ -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json ]]
+ jq --raw-output --slurp --arg ipref targets/192.168.1.11.json '
                        sort_by( .site, .device ) | 
                        group_by( .site + "/" + .device )[] as $group | 
                        "- " + ( $group[0].site + "/" + $group[0].device ) + 
                        " ( " + ( $group | length | tostring ) + " fragments ) -> " + $ipref, 
                        ( 
                          $group[].objects[]? | 
                          "  • object: " + ( .object // "unknown" ) + 
                          " ( type: " + ( .type // "n/a" ) + " )" 
                        ) 
                        ' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json
- cisco/branch-isr-02 ( 1 fragments ) -> targets/192.168.1.11.json
  • object: object ( type: network )
  • object: interface ( type: GigabitEthernet0/0/1 )
  • object: object-group ( type: network )
- fortinet/fg-campus-core ( 1 fragments ) -> targets/192.168.1.11.json
  • object: config ( type: firewall address )
  • object: config ( type: firewall address )
  • object: config ( type: system interface )
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ jq --slurp --arg target 192.168.1.11 '{
                          target: $target,
                          configs: (
                            group_by( .site + "|" + .device ) | map({
                              site: .[0].site,
                              device: .[0].device,
                              specs: .[0].specs,
                              objects: ( map( .objects[]) | unique )
                            })
                          )
                        }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/configs-extract--fragments.json
++ mktemp
+ tmp_merged=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LP7kEnTEqb
+ local final_outfile=reports/192.168.1.11/192.168.1.11.json
++ dirname reports/192.168.1.11/192.168.1.11.json
+ mkdir -p reports/192.168.1.11
+ local 'jq_merge_expr={
        target: .[0].target,
        configs:
          (
            reduce .[].configs[] as $cfg (
              [];
              if any( .[]; .site == $cfg.site and .device == $cfg.device )
                then map(
                  if .site == $cfg.site and .device == $cfg.device
                    then .objects = (
                      ( .objects + $cfg.objects )
                      | unique_by( .type, .name, .object, ( .sets | tostring ) )
                    )
                  else . end
                )
              else . + [ $cfg ] end
            )
            | sort_by(.site, .device)
          )
      }'
+ [[ -f reports/192.168.1.11/192.168.1.11.json ]]
+ jq --slurp '{
        target: .[0].target,
        configs:
          (
            reduce .[].configs[] as $cfg (
              [];
              if any( .[]; .site == $cfg.site and .device == $cfg.device )
                then map(
                  if .site == $cfg.site and .device == $cfg.device
                    then .objects = (
                      ( .objects + $cfg.objects )
                      | unique_by( .type, .name, .object, ( .sets | tostring ) )
                    )
                  else . end
                )
              else . + [ $cfg ] end
            )
            | sort_by(.site, .device)
          )
      }' /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/192.168.1.11.json
+ mv /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.LP7kEnTEqb reports/192.168.1.11/192.168.1.11.json
+ rm -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/192.168.1.11/192.168.1.11.json
+ configs_export --config=reports/192.168.1.11/192.168.1.11.json --target=reports/reports.csv
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=reports/192.168.1.11/192.168.1.11.json
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(initialize|i)$ ]]
+ [[ config =~ ^(sort|s)$ ]]
+ [[ config =~ ^(target|t)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ -e reports/192.168.1.11/192.168.1.11.json ]]
++ basename -- reports/192.168.1.11/192.168.1.11.json
+ [[ 192.168.1.11.json =~ \.json$ ]]
+ message 'Listing Configuration File: reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Listing Configuration File: reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Listing Configuration File: reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Listing Configuration File: reports/192.168.1.11/192.168.1.11.json'
Listing Configuration File: reports/192.168.1.11/192.168.1.11.json
+ source_config=('reports/192.168.1.11/192.168.1.11.json')
+ declare -a source_config
+ cat reports/192.168.1.11/192.168.1.11.json
+ local request_action=append
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --target=reports/reports.csv
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(initialize|i)$ ]]
+ [[ target =~ ^(sort|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local reports_filename=reports/reports.csv
+ [[ target =~ ^(config|c)$ ]]
+ [[ target == \h\e\l\p ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ local initialize=false
+ [[ -z append ]]
+ [[ -z reports/reports.csv ]]
+ [[ -z reports/192.168.1.11/192.168.1.11.json ]]
+ [[ reports/reports.csv != false ]]
++ dirname reports/reports.csv
+ local reports_location=reports
+ mkdir -p reports
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ false == true ]]
++ mktemp
+ local temporary_output=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5J90N1kPtR
+ output_structure=('target=$target' 'site=.site' 'device=.device' 'vendor=.specs.vendor' 'model=.specs.model' 'version=.specs.version' 'domain=.specs.domain' 'hostname=.specs.hostname' 'object=$obj.object' 'type=$obj.type' 'items=$obj.items[0]' 'partner=$obj.partner' 'description=$obj.description' 'group=$obj.group')
+ local -a output_structure
+ local csv_header=
+ local parameters=
+ for item in "${output_structure[@]}"
+ local index=target
+ local 'value=$target'
+ csv_header+=target,
+ [[ $target =~ // ]]
+ value='$target // "none"'
+ parameters+='$target // "none", '
+ for item in "${output_structure[@]}"
+ local index=site
+ local value=.site
+ csv_header+=site,
+ [[ .site =~ // ]]
+ value='.site // "none"'
+ parameters+='.site // "none", '
+ for item in "${output_structure[@]}"
+ local index=device
+ local value=.device
+ csv_header+=device,
+ [[ .device =~ // ]]
+ value='.device // "none"'
+ parameters+='.device // "none", '
+ for item in "${output_structure[@]}"
+ local index=vendor
+ local value=.specs.vendor
+ csv_header+=vendor,
+ [[ .specs.vendor =~ // ]]
+ value='.specs.vendor // "none"'
+ parameters+='.specs.vendor // "none", '
+ for item in "${output_structure[@]}"
+ local index=model
+ local value=.specs.model
+ csv_header+=model,
+ [[ .specs.model =~ // ]]
+ value='.specs.model // "none"'
+ parameters+='.specs.model // "none", '
+ for item in "${output_structure[@]}"
+ local index=version
+ local value=.specs.version
+ csv_header+=version,
+ [[ .specs.version =~ // ]]
+ value='.specs.version // "none"'
+ parameters+='.specs.version // "none", '
+ for item in "${output_structure[@]}"
+ local index=domain
+ local value=.specs.domain
+ csv_header+=domain,
+ [[ .specs.domain =~ // ]]
+ value='.specs.domain // "none"'
+ parameters+='.specs.domain // "none", '
+ for item in "${output_structure[@]}"
+ local index=hostname
+ local value=.specs.hostname
+ csv_header+=hostname,
+ [[ .specs.hostname =~ // ]]
+ value='.specs.hostname // "none"'
+ parameters+='.specs.hostname // "none", '
+ for item in "${output_structure[@]}"
+ local index=object
+ local 'value=$obj.object'
+ csv_header+=object,
+ [[ $obj.object =~ // ]]
+ value='$obj.object // "none"'
+ parameters+='$obj.object // "none", '
+ for item in "${output_structure[@]}"
+ local index=type
+ local 'value=$obj.type'
+ csv_header+=type,
+ [[ $obj.type =~ // ]]
+ value='$obj.type // "none"'
+ parameters+='$obj.type // "none", '
+ for item in "${output_structure[@]}"
+ local index=items
+ local 'value=$obj.items[0]'
+ csv_header+=items,
+ [[ $obj.items[0] =~ // ]]
+ value='$obj.items[0] // "none"'
+ parameters+='$obj.items[0] // "none", '
+ for item in "${output_structure[@]}"
+ local index=partner
+ local 'value=$obj.partner'
+ csv_header+=partner,
+ [[ $obj.partner =~ // ]]
+ value='$obj.partner // "none"'
+ parameters+='$obj.partner // "none", '
+ for item in "${output_structure[@]}"
+ local index=description
+ local 'value=$obj.description'
+ csv_header+=description,
+ [[ $obj.description =~ // ]]
+ value='$obj.description // "none"'
+ parameters+='$obj.description // "none", '
+ for item in "${output_structure[@]}"
+ local index=group
+ local 'value=$obj.group'
+ csv_header+=group,
+ [[ $obj.group =~ // ]]
+ value='$obj.group // "none"'
+ parameters+='$obj.group // "none", '
+ parameters='$target // "none", .site // "none", .device // "none", .specs.vendor // "none", .specs.model // "none", .specs.version // "none", .specs.domain // "none", .specs.hostname // "none", $obj.object // "none", $obj.type // "none", $obj.items[0] // "none", $obj.partner // "none", $obj.description // "none", $obj.group // "none"'
+ [[ false == true ]]
+ message 'Skipping Initialization'
+ [[ -n Skipping Initialization ]]
+ local 'message=Skipping Initialization'
+ echo -e 'Skipping Initialization'
Skipping Initialization
+ [[ 1 -gt 0 ]]
+ printf '%s\n' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ message 'Processing reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Processing reports/192.168.1.11/192.168.1.11.json ]]
+ local 'message=Processing reports/192.168.1.11/192.168.1.11.json'
+ echo -e 'Processing reports/192.168.1.11/192.168.1.11.json'
Processing reports/192.168.1.11/192.168.1.11.json
+ local 'json2csv_transformation=
          .target as $target
          | .configs[]
          | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
          | .objects[] as $obj
          | select( (try ($obj.items | join(" ") | contains($target)) catch false) )
          | [ $target // "none", .site // "none", .device // "none", .specs.vendor // "none", .specs.model // "none", .specs.version // "none", .specs.domain // "none", .specs.hostname // "none", $obj.object // "none", $obj.type // "none", $obj.items[0] // "none", $obj.partner // "none", $obj.description // "none", $obj.group // "none" ]
          | @csv
        '
+ jq --exit-status --raw-output '
          .target as $target
          | .configs[]
          | select( .objects != null and ( .objects | type == "array" and length > 0 ) )
          | .objects[] as $obj
          | select( (try ($obj.items | join(" ") | contains($target)) catch false) )
          | [ $target // "none", .site // "none", .device // "none", .specs.vendor // "none", .specs.model // "none", .specs.version // "none", .specs.domain // "none", .specs.hostname // "none", $obj.object // "none", $obj.type // "none", $obj.items[0] // "none", $obj.partner // "none", $obj.description // "none", $obj.group // "none" ]
          | @csv
        ' reports/192.168.1.11/192.168.1.11.json
+ read -r json
+ return 0
+ [[ true == true ]]
+ print 'Merged [ targets/192.168.1.11.json ] → reports/192.168.1.11/192.168.1.11.json'
+ [[ -n Merged [ targets/192.168.1.11.json ] → reports/192.168.1.11/192.168.1.11.json ]]
+ echo -en 'Merged [ targets/192.168.1.11.json ] → reports/192.168.1.11/192.168.1.11.json'
Merged [ targets/192.168.1.11.json ] → reports/192.168.1.11/192.168.1.11.json+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.90hwuJyGl8/configs-parser--192.168.1.11.console ]]
+ return 0
