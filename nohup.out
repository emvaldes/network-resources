+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/tools-devops.shell
++ [[ -n '' ]]
++ readonly __TOOLS_DEVOPS_SOURCED=1
++ __TOOLS_DEVOPS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-newline=newline
++ alias print-line=print
++ alias print-message=message
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias error-message=error_message
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias print-file=print_file
++ alias pause=pause
++ alias display-help=display_help
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=.logs
++ logs_location=.logs
++ export targets_location=targets
++ targets_location=targets
+++ pwd
++ export actions_logsfile=/Users/emvaldes/.repos/github/networking/network-resources/actions.output
++ actions_logsfile=/Users/emvaldes/.repos/github/networking/network-resources/actions.output
++ export targets_logsfile=.logs/targets.jobs
++ targets_logsfile=.logs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODE0NjMxNzEyODg3OTAwMAo
++ divisor=MTc0ODE0NjMxNzEyODg3OTAwMAo
+ source ./scripts/tools-listings.shell
++ [[ -n '' ]]
++ readonly __TOOLS_LISTINGS_SOURCED=1
++ __TOOLS_LISTINGS_SOURCED=1
++ alias generate-configslist=generate_configslist
++ alias generate-csvoutput=generate_csvoutput
++ alias manage-configs=manage_configs
++ alias matching-configs=matching_configs
++ alias parse-configs=parse_configs
+ alias parse-listings=main
+ :
+ rm -rf .cache
+ mkdir -p .cache/jobs .cache/targets
+ rm -rf .logs
+ mkdir -p .logs/errors .logs/jobs
+ rm -rf targets
+ mkdir -p targets
+ [[ -z '' ]]
+ export script_name=./scripts/parse-listings.shell
+ script_name=./scripts/parse-listings.shell
+ [[ 8 -ge 1 ]]
+ [[ --verbose =~ ^-*(h|help)$ ]]
+ main --verbose --debug --logs --configs=configs --classify --ips-list=ips.list --sites=cisco,fortinet,misc --devices=devices.list
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(classify|g)$ ]]
+ [[ verbose =~ ^(configs|c)$ ]]
+ [[ verbose =~ ^(devices|d)$ ]]
+ [[ verbose =~ ^(file-ext|x)$ ]]
+ [[ verbose =~ ^(interval|l)$ ]]
+ [[ verbose =~ ^(ips-list|i)$ ]]
+ [[ verbose =~ ^(logs|o)$ ]]
+ [[ verbose =~ ^(jobs|j)$ ]]
+ [[ verbose =~ ^(matrix|m)$ ]]
+ [[ verbose =~ ^(reports|r)$ ]]
+ [[ verbose =~ ^(sites|s)$ ]]
+ [[ verbose =~ ^(validate|v)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --debug
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ debug =~ ^(classify|g)$ ]]
+ [[ debug =~ ^(configs|c)$ ]]
+ [[ debug =~ ^(devices|d)$ ]]
+ [[ debug =~ ^(file-ext|x)$ ]]
+ [[ debug =~ ^(interval|l)$ ]]
+ [[ debug =~ ^(ips-list|i)$ ]]
+ [[ debug =~ ^(logs|o)$ ]]
+ [[ debug =~ ^(jobs|j)$ ]]
+ [[ debug =~ ^(matrix|m)$ ]]
+ [[ debug =~ ^(reports|r)$ ]]
+ [[ debug =~ ^(sites|s)$ ]]
+ [[ debug =~ ^(validate|v)$ ]]
+ [[ debug == \h\e\l\p ]]
+ [[ debug == \d\e\b\u\g ]]
+ local debug=true
+ [[ debug == \d\r\y\-\r\u\n ]]
+ [[ debug == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logs =~ ^(classify|g)$ ]]
+ [[ logs =~ ^(configs|c)$ ]]
+ [[ logs =~ ^(devices|d)$ ]]
+ [[ logs =~ ^(file-ext|x)$ ]]
+ [[ logs =~ ^(interval|l)$ ]]
+ [[ logs =~ ^(ips-list|i)$ ]]
+ [[ logs =~ ^(logs|o)$ ]]
+ export enable_logging=true
+ enable_logging=true
+ [[ logs =~ ^(jobs|j)$ ]]
+ [[ logs =~ ^(matrix|m)$ ]]
+ [[ logs =~ ^(reports|r)$ ]]
+ [[ logs =~ ^(sites|s)$ ]]
+ [[ logs =~ ^(validate|v)$ ]]
+ [[ logs == \h\e\l\p ]]
+ [[ logs == \d\e\b\u\g ]]
+ [[ logs == \d\r\y\-\r\u\n ]]
+ [[ logs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --configs=configs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ configs =~ ^(classify|g)$ ]]
+ [[ configs =~ ^(configs|c)$ ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ configs =~ ^(devices|d)$ ]]
+ [[ configs =~ ^(file-ext|x)$ ]]
+ [[ configs =~ ^(interval|l)$ ]]
+ [[ configs =~ ^(ips-list|i)$ ]]
+ [[ configs =~ ^(logs|o)$ ]]
+ [[ configs =~ ^(jobs|j)$ ]]
+ [[ configs =~ ^(matrix|m)$ ]]
+ [[ configs =~ ^(reports|r)$ ]]
+ [[ configs =~ ^(sites|s)$ ]]
+ [[ configs =~ ^(validate|v)$ ]]
+ [[ configs == \h\e\l\p ]]
+ [[ configs == \d\e\b\u\g ]]
+ [[ configs == \d\r\y\-\r\u\n ]]
+ [[ configs == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --classify
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ classify =~ ^(classify|g)$ ]]
+ export classify_targets=true
+ classify_targets=true
+ [[ classify =~ ^(configs|c)$ ]]
+ [[ classify =~ ^(devices|d)$ ]]
+ [[ classify =~ ^(file-ext|x)$ ]]
+ [[ classify =~ ^(interval|l)$ ]]
+ [[ classify =~ ^(ips-list|i)$ ]]
+ [[ classify =~ ^(logs|o)$ ]]
+ [[ classify =~ ^(jobs|j)$ ]]
+ [[ classify =~ ^(matrix|m)$ ]]
+ [[ classify =~ ^(reports|r)$ ]]
+ [[ classify =~ ^(sites|s)$ ]]
+ [[ classify =~ ^(validate|v)$ ]]
+ [[ classify == \h\e\l\p ]]
+ [[ classify == \d\e\b\u\g ]]
+ [[ classify == \d\r\y\-\r\u\n ]]
+ [[ classify == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --ips-list=ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ips-list =~ ^(classify|g)$ ]]
+ [[ ips-list =~ ^(configs|c)$ ]]
+ [[ ips-list =~ ^(devices|d)$ ]]
+ [[ ips-list =~ ^(file-ext|x)$ ]]
+ [[ ips-list =~ ^(interval|l)$ ]]
+ [[ ips-list =~ ^(ips-list|i)$ ]]
+ export target_addresses=ips.list
+ target_addresses=ips.list
+ [[ ips-list =~ ^(logs|o)$ ]]
+ [[ ips-list =~ ^(jobs|j)$ ]]
+ [[ ips-list =~ ^(matrix|m)$ ]]
+ [[ ips-list =~ ^(reports|r)$ ]]
+ [[ ips-list =~ ^(sites|s)$ ]]
+ [[ ips-list =~ ^(validate|v)$ ]]
+ [[ ips-list == \h\e\l\p ]]
+ [[ ips-list == \d\e\b\u\g ]]
+ [[ ips-list == \d\r\y\-\r\u\n ]]
+ [[ ips-list == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --sites=cisco,fortinet,misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ sites =~ ^(classify|g)$ ]]
+ [[ sites =~ ^(configs|c)$ ]]
+ [[ sites =~ ^(devices|d)$ ]]
+ [[ sites =~ ^(file-ext|x)$ ]]
+ [[ sites =~ ^(interval|l)$ ]]
+ [[ sites =~ ^(ips-list|i)$ ]]
+ [[ sites =~ ^(logs|o)$ ]]
+ [[ sites =~ ^(jobs|j)$ ]]
+ [[ sites =~ ^(matrix|m)$ ]]
+ [[ sites =~ ^(reports|r)$ ]]
+ [[ sites =~ ^(sites|s)$ ]]
+ export target_sites=cisco,fortinet,misc
+ target_sites=cisco,fortinet,misc
+ [[ sites =~ ^(validate|v)$ ]]
+ [[ sites == \h\e\l\p ]]
+ [[ sites == \d\e\b\u\g ]]
+ [[ sites == \d\r\y\-\r\u\n ]]
+ [[ sites == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ devices =~ ^(classify|g)$ ]]
+ [[ devices =~ ^(configs|c)$ ]]
+ [[ devices =~ ^(devices|d)$ ]]
+ export target_devices=devices.list
+ target_devices=devices.list
+ [[ devices =~ ^(file-ext|x)$ ]]
+ [[ devices =~ ^(interval|l)$ ]]
+ [[ devices =~ ^(ips-list|i)$ ]]
+ [[ devices =~ ^(logs|o)$ ]]
+ [[ devices =~ ^(jobs|j)$ ]]
+ [[ devices =~ ^(matrix|m)$ ]]
+ [[ devices =~ ^(reports|r)$ ]]
+ [[ devices =~ ^(sites|s)$ ]]
+ [[ devices =~ ^(validate|v)$ ]]
+ [[ devices == \h\e\l\p ]]
+ [[ devices == \d\e\b\u\g ]]
+ [[ devices == \d\r\y\-\r\u\n ]]
+ [[ devices == \v\e\r\b\o\s\e ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ export delaying_factor=0.01
+ delaying_factor=0.01
+ [[ -z ips.list ]]
+ [[ -z devices.list ]]
+ [[ -z '' ]]
+ export parallel_threads=100
+ parallel_threads=100
+ [[ -z cisco,fortinet,misc ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
++ date '+%Y-%m-%d %H:%M:%S'
+ local 'start_time=2025-05-24 21:11:57'
+ SECONDS=0
+ [[ -z true ]]
+ export configs_dirpath=configs
+ configs_dirpath=configs
+ [[ -z '' ]]
+ file_extensions=(cfg conf cnf)
+ target_devices_source=()
+ declare -a target_devices_source
+ [[ -n devices.list ]]
+ [[ -f devices.list ]]
+ mapfile -t target_devices_source
++ grep -v '^\s*$' devices.list
++ tr -d '\r'
+ [[ -z '' ]]
+ export matrix_filename=matrix.json
+ matrix_filename=matrix.json
+ [[ ! -f matrix.json ]]
+ jq -e 'length > 0' matrix.json
++ cat matrix.json
+ export 'matrix_configs=[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ matrix_configs='[
  {
    "match": ["BU1-NETWORK", "SOME-THING"],
    "group": "Identified Matching Entries"
  },
  {
    "match": ["Corporate HQ Subnets", "Server-192-168-1-10"],
    "group": "Business-Unit-HQ"
  },
  {
    "match": ["Remote-Site-Office", "All-Offices", "Branch-Office"],
    "group": "Business-Unit-Remote"
  },
  {
    "match": ["HQ-Server", "Production-Servers"],
    "group": "Business-Unit-Production"
  },
  {
    "match": ["Web-Server", "Data-Backup"],
    "group": "Business-Unit-Backup"
  },
  {
    "match": ["web_pool", "db_pool"],
    "group": "Business-Unit-Apps"
  },
  {
    "match": ["Vlan1", "Vlan2"],
    "group": "Business-Unit-Networks"
  },
  {
    "match": ["External-203-0-113-25"],
    "group": "Business-Unit-External"
  },
  {
    "match": ["Unused-Host"],
    "group": "Business-Unit-Orphan"
  }
]'
+ export reports_folder=reports
+ reports_folder=reports
+ mkdir -p reports
+ export output_csv=reports/reports.csv
+ output_csv=reports/reports.csv
+ [[ -z '' ]]
+ export validate_address=false
+ validate_address=false
+ [[ true == true ]]
+ message '[INFO] Date: 2025-05-24 21:11:57'
+ [[ -n [INFO] Date: 2025-05-24 21:11:57 ]]
+ local 'message=[INFO] Date: 2025-05-24 21:11:57'
+ echo -e '[INFO] Date: 2025-05-24 21:11:57'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Script: ./scripts/parse-listings.shell'
+ [[ -n [INFO] Script: ./scripts/parse-listings.shell ]]
+ local 'message=[INFO] Script: ./scripts/parse-listings.shell'
+ echo -e '[INFO] Script: ./scripts/parse-listings.shell'
+ message '[INFO] PID: 94079'
+ [[ -n [INFO] PID: 94079 ]]
+ local 'message=[INFO] PID: 94079'
+ echo -e '[INFO] PID: 94079'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ whoami
+ message '[INFO] User: emvaldes'
+ [[ -n [INFO] User: emvaldes ]]
+ local 'message=[INFO] User: emvaldes'
+ echo -e '[INFO] User: emvaldes'
++ hostname
+ message '[INFO] Host: emvaldes-imac-desktop.local'
+ [[ -n [INFO] Host: emvaldes-imac-desktop.local ]]
+ local 'message=[INFO] Host: emvaldes-imac-desktop.local'
+ echo -e '[INFO] Host: emvaldes-imac-desktop.local'
+ message '[INFO] OS: darwin23.4.0'
+ [[ -n [INFO] OS: darwin23.4.0 ]]
+ local 'message=[INFO] OS: darwin23.4.0'
+ echo -e '[INFO] OS: darwin23.4.0'
+ message '[INFO] Shell: 5.2.37(1)-release'
+ [[ -n [INFO] Shell: 5.2.37(1)-release ]]
+ local 'message=[INFO] Shell: 5.2.37(1)-release'
+ echo -e '[INFO] Shell: 5.2.37(1)-release'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Logging Output Directory: .logs'
+ [[ -n [INFO] Logging Output Directory: .logs ]]
+ local 'message=[INFO] Logging Output Directory: .logs'
+ echo -e '[INFO] Logging Output Directory: .logs'
+ message '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF'
+ [[ -n [INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF ]]
+ local 'message=[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF'
+ echo -e '[INFO] Temp Directory: /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Classify Targets: true'
+ [[ -n [INFO] Classify Targets: true ]]
+ local 'message=[INFO] Classify Targets: true'
+ echo -e '[INFO] Classify Targets: true'
+ message '[INFO] Configurations Path: configs'
+ [[ -n [INFO] Configurations Path: configs ]]
+ local 'message=[INFO] Configurations Path: configs'
+ echo -e '[INFO] Configurations Path: configs'
+ message '[INFO] Filtering Devices: devices.list'
+ [[ -n [INFO] Filtering Devices: devices.list ]]
+ local 'message=[INFO] Filtering Devices: devices.list'
+ echo -e '[INFO] Filtering Devices: devices.list'
+ message '[INFO] File Extensions: cfg'
+ [[ -n [INFO] File Extensions: cfg ]]
+ local 'message=[INFO] File Extensions: cfg'
+ echo -e '[INFO] File Extensions: cfg'
+ message '[INFO] Delaying Factor: 0.01'
+ [[ -n [INFO] Delaying Factor: 0.01 ]]
+ local 'message=[INFO] Delaying Factor: 0.01'
+ echo -e '[INFO] Delaying Factor: 0.01'
+ message '[INFO] Target Addresses: ips.list'
+ [[ -n [INFO] Target Addresses: ips.list ]]
+ local 'message=[INFO] Target Addresses: ips.list'
+ echo -e '[INFO] Target Addresses: ips.list'
+ message '[INFO] Enable Logging: true'
+ [[ -n [INFO] Enable Logging: true ]]
+ local 'message=[INFO] Enable Logging: true'
+ echo -e '[INFO] Enable Logging: true'
+ message '[INFO] Parallelism Factor: 100'
+ [[ -n [INFO] Parallelism Factor: 100 ]]
+ local 'message=[INFO] Parallelism Factor: 100'
+ echo -e '[INFO] Parallelism Factor: 100'
+ message '[INFO] Matrix Filename: matrix.json'
+ [[ -n [INFO] Matrix Filename: matrix.json ]]
+ local 'message=[INFO] Matrix Filename: matrix.json'
+ echo -e '[INFO] Matrix Filename: matrix.json'
+ message '[INFO] Reports Folder: reports'
+ [[ -n [INFO] Reports Folder: reports ]]
+ local 'message=[INFO] Reports Folder: reports'
+ echo -e '[INFO] Reports Folder: reports'
+ message '[INFO] Target Locations: cisco,fortinet,misc'
+ [[ -n [INFO] Target Locations: cisco,fortinet,misc ]]
+ local 'message=[INFO] Target Locations: cisco,fortinet,misc'
+ echo -e '[INFO] Target Locations: cisco,fortinet,misc'
+ message '[INFO] Validate Address: false'
+ [[ -n [INFO] Validate Address: false ]]
+ local 'message=[INFO] Validate Address: false'
+ echo -e '[INFO] Validate Address: false'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '[INFO] Debug: true'
+ [[ -n [INFO] Debug: true ]]
+ local 'message=[INFO] Debug: true'
+ echo -e '[INFO] Debug: true'
+ message '[INFO] Dry-Run: false'
+ [[ -n [INFO] Dry-Run: false ]]
+ local 'message=[INFO] Dry-Run: false'
+ echo -e '[INFO] Dry-Run: false'
+ message '[INFO] Verbose: true'
+ [[ -n [INFO] Verbose: true ]]
+ local 'message=[INFO] Verbose: true'
+ echo -e '[INFO] Verbose: true'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target (devices.list) (count): 10'
+ [[ -n Target (devices.list) (count): 10 ]]
+ local 'message=Target (devices.list) (count): 10'
+ echo -e 'Target (devices.list) (count): 10'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for device in "${target_devices_source[@]}"
+ message '  - access-sw1-west.cfg'
+ [[ -n   - access-sw1-west.cfg ]]
+ local 'message=  - access-sw1-west.cfg'
+ echo -e '  - access-sw1-west.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - branch-isr-02.cfg'
+ [[ -n   - branch-isr-02.cfg ]]
+ local 'message=  - branch-isr-02.cfg'
+ echo -e '  - branch-isr-02.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - campus-sw-access01.cfg'
+ [[ -n   - campus-sw-access01.cfg ]]
+ local 'message=  - campus-sw-access01.cfg'
+ echo -e '  - campus-sw-access01.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - dmz-fw2-backup.cfg'
+ [[ -n   - dmz-fw2-backup.cfg ]]
+ local 'message=  - dmz-fw2-backup.cfg'
+ echo -e '  - dmz-fw2-backup.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-branch-vpn-01.cfg'
+ [[ -n   - fg-branch-vpn-01.cfg ]]
+ local 'message=  - fg-branch-vpn-01.cfg'
+ echo -e '  - fg-branch-vpn-01.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-campus-core.cfg'
+ [[ -n   - fg-campus-core.cfg ]]
+ local 'message=  - fg-campus-core.cfg'
+ echo -e '  - fg-campus-core.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - fg-testing-config.cfg'
+ [[ -n   - fg-testing-config.cfg ]]
+ local 'message=  - fg-testing-config.cfg'
+ echo -e '  - fg-testing-config.cfg'
+ for device in "${target_devices_source[@]}"
+ message '  - fw1'
+ [[ -n   - fw1 ]]
+ local 'message=  - fw1'
+ echo -e '  - fw1'
+ for device in "${target_devices_source[@]}"
+ message '  - fw3'
+ [[ -n   - fw3 ]]
+ local 'message=  - fw3'
+ echo -e '  - fw3'
+ for device in "${target_devices_source[@]}"
+ message '  - perimeter-fw1.cfg'
+ [[ -n   - perimeter-fw1.cfg ]]
+ local 'message=  - perimeter-fw1.cfg'
+ echo -e '  - perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local configs_list_cache=.cache/configs.list
+ [[ ! -f .cache/configs.list ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Generating .cache/configs.list <--- configs files ...'
+ [[ -n Generating .cache/configs.list <--- configs files ... ]]
+ local 'message=Generating .cache/configs.list <--- configs files ...'
+ echo -e 'Generating .cache/configs.list <--- configs files ...'
+ message ---------------------------------------
+ [[ -n --------------------------------------- ]]
+ local message=---------------------------------------
+ echo -e ---------------------------------------
+ message 'Searching for configuration files in: configs'
+ [[ -n Searching for configuration files in: configs ]]
+ local 'message=Searching for configuration files in: configs'
+ echo -e 'Searching for configuration files in: configs'
+ message 'File Extensions: cfg conf cnf'
+ [[ -n File Extensions: cfg conf cnf ]]
+ local 'message=File Extensions: cfg conf cnf'
+ echo -e 'File Extensions: cfg conf cnf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ find_cmd=('find' 'configs' '-type' 'f' '(')
+ local -a find_cmd
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ for ext in "${file_extensions[@]}"
+ find_cmd+=(-iname "*.${ext}" -o)
+ unset 'find_cmd[-1]'
+ find_cmd+=(\))
+ discovered_files=()
+ declare -a discovered_files
+ IFS=
+ read -r fullpath
++ find configs -type f '(' -iname '*.cfg' -o -iname '*.conf' -o -iname '*.cnf' ')'
++ sort
++ basename configs/cisco/access-sw1-west.cfg
+ filename=access-sw1-west.cfg
+ device_name=access-sw1-west
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-sw1-west =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/access-switch-07.cfg
+ filename=access-switch-07.cfg
+ device_name=access-switch-07
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ access-switch-07 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-fw-03.cfg
+ filename=branch-fw-03.cfg
+ device_name=branch-fw-03
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-03 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-fw-snmp.cfg
+ filename=branch-fw-snmp.cfg
+ device_name=branch-fw-snmp
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-fw-snmp =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/branch-isr-02.cfg
+ filename=branch-isr-02.cfg
+ device_name=branch-isr-02
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ branch-isr-02 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/campus-sw-access01.cfg
+ filename=campus-sw-access01.cfg
+ device_name=campus-sw-access01
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ campus-sw-access01 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/core-fw-dmz-01.cfg
+ filename=core-fw-dmz-01.cfg
+ device_name=core-fw-dmz-01
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-fw-dmz-01 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/core-router-01.cfg
+ filename=core-router-01.cfg
+ device_name=core-router-01
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ core-router-01 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/datacenter-fw-core.cfg
+ filename=datacenter-fw-core.cfg
+ device_name=datacenter-fw-core
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ datacenter-fw-core =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/dmz-fw2-backup.cfg
+ filename=dmz-fw2-backup.cfg
+ device_name=dmz-fw2-backup
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ dmz-fw2-backup =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/hq-core-rtr-02.cfg
+ filename=hq-core-rtr-02.cfg
+ device_name=hq-core-rtr-02
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr-02 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/hq-core-rtr.cfg
+ filename=hq-core-rtr.cfg
+ device_name=hq-core-rtr
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ hq-core-rtr =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/cisco/perimeter-fw1.cfg
+ filename=perimeter-fw1.cfg
+ device_name=perimeter-fw1
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ perimeter-fw1 =~ fw1 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-branch-vpn-01.cfg
+ filename=fg-branch-vpn-01.cfg
+ device_name=fg-branch-vpn-01
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-branch-vpn-01 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-campus-core.cfg
+ filename=fg-campus-core.cfg
+ device_name=fg-campus-core
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-campus-core =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-datacenter-east.cfg
+ filename=fg-datacenter-east.cfg
+ device_name=fg-datacenter-east
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-datacenter-east =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-fw-dmz-01.cfg
+ filename=fg-fw-dmz-01.cfg
+ device_name=fg-fw-dmz-01
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-fw-dmz-01 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-lab-test-fw.cfg
+ filename=fg-lab-test-fw.cfg
+ device_name=fg-lab-test-fw
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-lab-test-fw =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/fortinet/fg-testing-config.cfg
+ filename=fg-testing-config.cfg
+ device_name=fg-testing-config
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fg-testing-config =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw2.cfg
+ filename=fw2.cfg
+ device_name=fw2
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw2 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw3.cfg
+ filename=fw3.cfg
+ device_name=fw3
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw3 =~ fw3 ]]
+ matched=true
+ break
+ [[ true == false ]]
+ discovered_files+=("${fullpath}")
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw5.cfg
+ filename=fw5.cfg
+ device_name=fw5
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw5 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/fw6.cfg
+ filename=fw6.cfg
+ device_name=fw6
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ fw6 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch1.conf
+ filename=switch1.conf
+ device_name=switch1
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch1 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch2.conf
+ filename=switch2.conf
+ device_name=switch2
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch2 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch3.conf
+ filename=switch3.conf
+ device_name=switch3
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch3 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
++ basename configs/misc/switch4.conf
+ filename=switch4.conf
+ device_name=switch4
+ [[ 10 -gt 0 ]]
+ matched=false
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ access-sw1-west.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ branch-isr-02.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ campus-sw-access01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ dmz-fw2-backup.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fg-branch-vpn-01.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fg-campus-core.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fg-testing-config.cfg ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fw1 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ fw3 ]]
+ for pattern in "${target_devices_source[@]}"
+ [[ switch4 =~ perimeter-fw1.cfg ]]
+ [[ false == false ]]
+ continue
+ IFS=
+ read -r fullpath
+ printf '%s\n' configs/cisco/perimeter-fw1.cfg configs/misc/fw3.cfg
+ [[ true == true ]]
+ message 'Generated configs.list at .cache/configs.list'
+ [[ -n Generated configs.list at .cache/configs.list ]]
+ local 'message=Generated configs.list at .cache/configs.list'
+ echo -e 'Generated configs.list at .cache/configs.list'
Generated configs.list at .cache/configs.list
+ print_file .cache/configs.list
+ [[ -n .cache/configs.list ]]
+ local target_file=.cache/configs.list
+ [[ true == true ]]
+ [[ -f .cache/configs.list ]]
+ case "${target_file}" in
+ cat .cache/configs.list
configs/cisco/perimeter-fw1.cfg
configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo

+ (( i++ ))
+ (( i < count ))
+ exit 200
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k0fanNkggF
