+ local configs_matching__script=configs-matching
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.0.1.list
+ :
+ [[ -d reports/10.0.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.0.1.list ]]
+ local target_config=targets/10.0.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.0.1
+ local job_pid=97861
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.1.2
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.1.2.list
+ :
+ [[ -d reports/10.0.1.2 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.cfg'
+ configs_targets --search=10.0.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.0.1.list --target=targets/10.0.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.0.1.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.1.2.list ]]
+ local target_config=targets/10.0.1.2.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.1.2
+ local job_pid=97870
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.2.3
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.2.3.list
+ :
+ [[ -d reports/10.0.2.3 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.cfg'
+ configs_targets --search=10.0.1.2 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.1.2.list --target=targets/10.0.1.2.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.1.2.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.2.3.list ]]
+ local target_config=targets/10.0.2.3.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.2.3
+ local job_pid=97883
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.10.10.10
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.10.10.10.list
+ :
+ [[ -d reports/10.10.10.10 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.cfg'
+ configs_targets --search=10.0.2.3 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.2.3.list --target=targets/10.0.2.3.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.0.2.3.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.10.10.10.list ]]
+ local target_config=targets/10.10.10.10.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.10.10.10
+ local job_pid=97902
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.0.5
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.list
+ :
+ [[ -d reports/172.16.0.5 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.cfg'
+ configs_targets --search=10.10.10.10 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.10.10.10.list --target=targets/10.10.10.10.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--10.10.10.10.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.list ]]
+ local target_config=targets/172.16.0.5.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5
+ local job_pid=97925
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.1.6
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.list
+ :
+ [[ -d reports/172.16.1.6 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.cfg'
+ configs_targets --search=172.16.0.5 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.list --target=targets/172.16.0.5.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.list ]]
+ local target_config=targets/172.16.1.6.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6
+ local job_pid=97950
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.18.1.20
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list
+ :
+ [[ -d reports/172.18.1.20 ]]
+ configs_targets --search=172.16.1.6 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.list --target=targets/172.16.1.6.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list ]]
+ local target_config=targets/172.18.1.20.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20
+ local job_pid=97976
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.31.255.254
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list
+ :
+ [[ -d reports/172.31.255.254 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.cfg'
+ configs_targets --search=172.18.1.20 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list --target=targets/172.18.1.20.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list ]]
+ local target_config=targets/172.31.255.254.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254
+ local job_pid=98003
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.31.255.254
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.0.2.50
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list
+ :
+ [[ -d reports/192.0.2.50 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.cfg'
+ configs_targets --search=172.31.255.254 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list --target=targets/172.31.255.254.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list ]]
+ local target_config=targets/192.0.2.50.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50
+ local job_pid=98033
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list
+ :
+ [[ -d reports/192.168.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.cfg'
+ configs_targets --search=192.0.2.50 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list --target=targets/192.0.2.50.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list ]]
+ local target_config=targets/192.168.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1
+ local job_pid=98064
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97861
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97870
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ configs_targets --search=192.168.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list --target=targets/192.168.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.console --verbose
+ kill -0 97883
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97902
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97925
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97950
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97976
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98003
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98033
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98064
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97861
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97870
+ logger=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97883
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97902
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97925
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97950
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97976
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98003
+ logger=172.31.255.254
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98033
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98064
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  8 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97861
+ logger=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97883
+ logger=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97902
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97925
+ logger=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97950
+ logger=172.16.1.6
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97976
+ logger=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98033
+ logger=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 98064
+ logger=192.168.0.1
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  1 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 97902
+ logger=10.10.10.10
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ [[ true == true ]]
+ message 'Completed background jobs for matched IPs (10):'
+ [[ -n Completed background jobs for matched IPs (10): ]]
+ local 'message=Completed background jobs for matched IPs (10):'
+ echo -e 'Completed background jobs for matched IPs (10):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message ' Index  | PID    | IP Address       |'
+ [[ -n  Index  | PID    | IP Address       | ]]
+ local 'message= Index  | PID    | IP Address       |'
+ echo -e ' Index  | PID    | IP Address       |'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ cat -n
+ ip_address=172.16.0.5
+ printf '%-6s | %-15s\n' 97925 172.16.0.5
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ printf '%-6s | %-15s\n' 98033 192.0.2.50
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ printf '%-6s | %-15s\n' 98064 192.168.0.1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ printf '%-6s | %-15s\n' 97883 10.0.2.3
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ printf '%-6s | %-15s\n' 97861 10.0.0.1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ printf '%-6s | %-15s\n' 98003 172.31.255.254
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ printf '%-6s | %-15s\n' 97902 10.10.10.10
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ printf '%-6s | %-15s\n' 97950 172.16.1.6
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.1.2
+ printf '%-6s | %-15s\n' 97870 10.0.1.2
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ printf '%-6s | %-15s\n' 97976 172.18.1.20
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.0.5
+ target_config=targets/172.16.0.5.json
+ [[ -s targets/172.16.0.5.json ]]
+ [[ -f targets/172.16.0.5.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.0.5.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ jq -r . targets/172.16.0.5.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ target_config=targets/192.0.2.50.json
+ [[ -s targets/192.0.2.50.json ]]
+ [[ -f targets/192.0.2.50.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.0.2.50.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ jq -r . targets/192.0.2.50.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ target_config=targets/192.168.0.1.json
+ [[ -s targets/192.168.0.1.json ]]
+ [[ -f targets/192.168.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ jq -r . targets/192.168.0.1.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ target_config=targets/10.0.2.3.json
+ [[ -s targets/10.0.2.3.json ]]
+ [[ -f targets/10.0.2.3.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.2.3.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ jq -r . targets/10.0.2.3.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ target_config=targets/10.0.0.1.json
+ [[ -s targets/10.0.0.1.json ]]
+ [[ -f targets/10.0.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ jq -r . targets/10.0.0.1.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ target_config=targets/172.31.255.254.json
+ [[ -s targets/172.31.255.254.json ]]
+ [[ -f targets/172.31.255.254.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.31.255.254.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ jq -r . targets/172.31.255.254.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ target_config=targets/10.10.10.10.json
+ [[ -s targets/10.10.10.10.json ]]
+ [[ -f targets/10.10.10.10.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.10.10.10.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ jq -r . targets/10.10.10.10.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ target_config=targets/172.16.1.6.json
+ [[ -s targets/172.16.1.6.json ]]
+ [[ -f targets/172.16.1.6.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.1.6.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ jq -r . targets/172.16.1.6.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.1.2
+ target_config=targets/10.0.1.2.json
+ [[ -s targets/10.0.1.2.json ]]
+ [[ -f targets/10.0.1.2.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.1.2.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ jq -r . targets/10.0.1.2.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ target_config=targets/172.18.1.20.json
+ [[ -s targets/172.18.1.20.json ]]
+ [[ -f targets/172.18.1.20.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.18.1.20.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ jq -r . targets/172.18.1.20.json
+ return 0
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.0.5.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ json_head='{
+ local rel_path site device cfg_lines json_head json_spec
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/misc/fw3.cfg ]]
+ rel_path=misc/fw3.cfg
+ site=misc
+ device=fw3.cfg
+ [[ ! -d reports/172.16.0.5/misc ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ jq -e .
++ wc -l
+ cfg_lines=26
++ tr -d ' '
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ jq -n --arg file fw3.cfg --argjson lines 18 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
            config: {
        ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ echo -e --search=172.31.255.254
+ [[ logger =~ ^(search|p)$ ]]
+ [[ source =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ source =~ ^(source|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.console
+ [[ source =~ ^(target|t)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ cfg_lines=17
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
+ IFS=
              print;
+ read -r config_file
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/misc/fw3.cfg
+ [[ ! -f reports/10.0.1.2/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ json_head='{
+ device=switch1.conf
  "vendor": "fortinet",
+ [[ ! -d reports/10.0.1.2/misc ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ echo -e --target=targets/172.18.1.20.json
}'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=172.31.255.254
+ [[ search =~ ^(source|s)$ ]]
++ wc -l
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d ' '
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/172.18.1.20.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo '{
+ IFS=' 	
  "vendor": "cisco",
'
  "model": "",
  "version": "",
  "domain": "",
+ [[ -z true ]]
  "hostname": ""
+ [[ -z false ]]
}'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.16.1.6.list ]]
+ jq -e .
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ cfg_lines=11
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
++ sed -e '1s|^\(-\)\{1,\}||'
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.1.2/misc/switch1.conf
++ wc -l
++ jq -n --arg file fw3.cfg --argjson lines 27 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
++ tr -d ' '
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.0.2.50
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.2.3/misc/fw1.cfg ]]
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/10.0.2.3/misc ]]
++ echo -e --target=targets/172.31.255.254.json
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=19
++ wc -l
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ tr -d ' '
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.0.2.50
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --verbose
+ [[ target =~ ^(search|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/172.31.255.254.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 26 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ cfg_lines=18
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.console
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ oIFS=' 	
'
+ jq -e .
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ jq -n --arg file fw3.cfg --argjson lines 17 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ verbose =~ ^(search|p)$ ]]
}' '{
+ [[ verbose =~ ^(source|s)$ ]]
            specs: ($specs | fromjson),
+ [[ verbose =~ ^(target|t)$ ]]
            config: {
+ [[ verbose =~ ^(logger|l)$ ]]
              file: $file,
+ [[ verbose == \d\e\b\u\g ]]
              lines: $lines,
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ source =~ ^(search|p)$ ]]
              object: $path
+ [[ verbose == \v\e\r\b\o\s\e ]]
            }
+ local verbose=true
          }'
+ [[ source =~ ^(source|s)$ ]]
+ IFS=' 	
'
+ [[ -z true ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list
+ [[ -z false ]]
+ [[ source =~ ^(target|t)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.console ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.18.1.20.list ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ site_device_map=()
+ for xitem in "${@}"
+ declare -A site_device_map
+ IFS==
+ local rel_path site device cfg_lines json_head json_spec
+ read -r key value
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/misc/fw1.cfg ]]
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/172.18.1.20/misc ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ rel_path=cisco/access-sw1-west.cfg
+ site=cisco
+ device=access-sw1-west.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ echo -e --search=192.168.0.1
+ json_head='{
  "vendor": "cisco",
++ wc -l
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d ' '
++ echo -e --target=targets/192.0.2.50.json
++ wc -l
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d ' '
+ jq -e .
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=13
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.168.0.1
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ awk '
          BEGIN { in_json=0; depth=0; }
+ [[ target =~ ^(search|p)$ ]]
+ IFS==
+ read -r key value
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
+ [[ target =~ ^(source|s)$ ]]
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
+ [[ target =~ ^(target|t)$ ]]
+ json_spec='{
            }
  "specs": {
          }
    "vendor": "fortinet",
        ' reports/172.18.1.20/misc/fw1.cfg
+ local target_config=targets/192.0.2.50.json
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
+ [[ target =~ ^(logger|l)$ ]]
+ cfg_lines=21
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
+ [[ target == \d\e\b\u\g ]]
}'
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ site_device_map["${site}"]+='{
  "specs": {
+ read -r key value
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--172.31.255.254.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.console
+ read -r config_file
++ wc -l
+ [[ ! -f reports/172.31.255.254/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/172.31.255.254/misc ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ site_device_map["${site}"]+='{
  "specs": {
++ tr -d ' '
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ site=cisco
+ device=perimeter-fw1.cfg
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
++ wc -l
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
+ json_head='{
  "vendor": "cisco",
            }
  "model": "",
          }'
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
++ tr -d ' '
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ wc -l
+ jq -e .
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
++ tr -d ' '
+ cfg_lines=16
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ [[ logger =~ ^(search|p)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.console
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch3.conf
+ cfg_lines=11
++ echo -e --target=targets/192.168.0.1.json
++ jq -n --arg file fw1.cfg --argjson lines 18 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ echo -e --verbose
+ json_spec='{
  "specs": {
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
++ sed -e '1s|^\(-\)\{1,\}||'
    "vendor": "cisco",
            if (in_json) {
    "model": "",
    "version": "",
+ cfg_lines=21
    "domain": "",
              print;
    "hostname": ""
              depth += gsub(/{/, "{");
  },
              depth -= gsub(/}/, "}");
  "config": {
              if (depth == 0) exit;
    "file": "switch1.conf",
            }
    "lines": 11,
          }
    "object": ".objects/switch1.list"
        ' reports/172.31.255.254/misc/switch1.conf
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ printf ' { "target": "%s", "locations": { ' 10.0.1.2
+ first=true
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq .
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/192.168.0.1.json
+ jq -e .
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
++ printf '%s\n' fortinet misc
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.console ]]
+ json_head='{
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list ]]
  "vendor": "cisco",
  "model": "",
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.0.2.50.list ]]
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ site=cisco
+ device=perimeter-fw1.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ sort -u
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.console
+ jq -e .
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
++ wc -l
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ jq -e .
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ site=fortinet
+ device=fg-campus-core.cfg
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ tr -d ' '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' fortinet
++ jq -n --arg file fw1.cfg --argjson lines 13 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ logger =~ ^(search|p)$ ]]
++ wc -l
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ print '{
  "specs": {
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.console
    "vendor": "fortinet",
+ [[ logger == \d\e\b\u\g ]]
    "model": "FortiGate-60F",
+ [[ logger == \d\r\y\-\r\u\n ]]
    "version": "v7.2.5.F",
+ [[ logger == \v\e\r\b\o\s\e ]]
    "domain": "",
+ for xitem in "${@}"
    "hostname": "fg-branch-vpn-01"
+ IFS==
  },
+ read -r key value
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ -n {
  "specs": {
}' '{
            specs: ($specs | fromjson),
    "vendor": "fortinet",
    "model": "FortiGate-60F",
            config: {
              file: $file,
    "version": "v7.2.5.F",
    "domain": "",
              lines: $lines,
              object: $path
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
            }
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
          }'
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
++ tr -d ' '
  },
+ jq -s .
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ cfg_lines=18
+ [[ ! -f reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/10.0.2.3/cisco ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
+ cfg_lines=18
++ tr -d ' '
++ jq -n --arg file switch3.conf --argjson lines 16 --arg path .objects/switch3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ [[ verbose =~ ^(search|p)$ ]]
+ cfg_lines=19
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ local verbose=true
  "hostname": "perimeter-fw1"
}'
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CiEK7yRWrn/configs-targets--192.168.0.1.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
+ IFS=
  "version": "",
+ jq -e .
+ read -r config_file
  "domain": "",
  "hostname": ""
}' '{
+ [[ ! -f reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
+ rel_path=cisco/access-sw1-west.cfg
              object: $path
            }
+ site=cisco
          }'
+ device=access-sw1-west.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 21 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ json_spec='{
  "specs": {
+ echo '{
  "vendor": "fortinet",
    "vendor": "cisco",
  "model": "FortiGate-200F",
    "model": "",
    "version": "",
  "version": "",
    "domain": "",
  "domain": "",
    "hostname": ""
  "hostname": "fg-campus-core"
}'
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}'
++ wc -l
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
+ printf ' } '
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
  }
}'
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
+ site_device_map["${site}"]+='{
  "specs": {
    "version": "",
    "vendor": "cisco",
    "domain": "",
    "hostname": ""
    "model": "",
    "version": "12.4",
    "domain": "",
  },
+ jq -e .
  "config": {
    "hostname": "access-sw1-west"
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  },
  }
  "config": {
    "file": "access-sw1-west.cfg",
}
    "lines": 21,
 ]]
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ false
+ printf ,
+ IFS=
+ read -r config_file
+ printf ' "%s": { "devices": ' misc
+ [[ ! -f reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
++ tr -d ' '
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
+ echo '{
  "vendor": "cisco",
    "model": "",
  "model": "",
    "version": "",
    "domain": "",
  "version": "16.9",
  "domain": "",
    "hostname": ""
  "hostname": "branch-isr-02"
}'
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
++ wc -l
+ jq -e .
++ wc -l
++ tr -d ' '
++ tr -d ' '
+ cfg_lines=21
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ cfg_lines=16
+ cfg_lines=17
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
++ wc -l
        ' reports/172.18.1.20/cisco/branch-isr-02.cfg
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ tr -d ' '
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
+ json_head='{
  "config": {
  "vendor": "cisco",
    "file": "perimeter-fw1.cfg",
  "model": "",
    "lines": 21,
  "version": "12.4",
  "domain": "",
    "object": ".objects/perimeter-fw1.list"
  }
}'
  "hostname": "access-sw1-west"
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 18 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' { "target": "%s", "locations": { ' 172.31.255.254
+ first=true
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
+ printf ' { "target": "%s", "locations": { ' 172.16.0.5
+ first=true
+ jq .
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ jq -e .
+ jq .
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ cfg_lines=13
}'
++ printf '%s\n' misc
+ jq -e .
++ sort -u
++ jq -n --arg file fg-campus-core.cfg --argjson lines 18 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ printf '%s\n' misc cisco
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
+ echo '{
  "vendor": "cisco",
  "model": "",
          }'
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
++ sort -u
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch1.conf
+ jq -e .
+ printf ' } '
+ printf ' } } '
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ return 0
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
+ [[ -z {
  "specs": {
    "model": "",
+ json_head='{
    "version": "",
    "domain": "",
    "hostname": ""
    "vendor": "cisco",
  "vendor": "cisco",
  },
    "model": "ASA",
  "model": "",
  "config": {
  "version": "",
    "version": "9.14(3)",
  "domain": "",
    "file": "switch1.conf",
  "hostname": ""
    "domain": "edge.dc.example.com",
}'
    "hostname": "perimeter-fw1"
  },
    "lines": 11,
  "config": {
    "object": ".objects/switch1.list"
  }
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
}
  }
 ]]
}
+ true
 ]]
+ first=false
+ printf ' "%s": { "devices": ' misc
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ jq -e .
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
+ print '{
  "specs": {
    "vendor": "cisco",
    "lines": 11,
    "object": ".objects/switch1.list"
    "model": "ASA",
  }
}
    "version": "9.14(3)",
 ]]
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
+ echo -en '{
  "specs": {
    "file": "perimeter-fw1.cfg",
    "vendor": "cisco",
    "model": "",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
    "version": "",
  }
+ jq -s .
}
    "domain": "",
'
    "hostname": ""
+ jq -s .
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/172.16.1.6/misc ]]
++ wc -l
++ jq -n --arg file branch-isr-02.cfg --argjson lines 16 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ tr -d ' '
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 17 --arg path .objects/campus-sw-access01.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
++ tr -d ' '
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ cfg_lines=16
+ printf ' { "target": "%s", "locations": { ' 10.0.2.3
+ first=true
+ jq .
+ printf ' } '
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ printf ' } } '
+ [[ -z {
  "specs": {
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
    "vendor": "cisco",
    "model": "",
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
    "version": "",
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
    "domain": "",
              depth -= gsub(/}/, "}");
    "hostname": ""
              if (depth == 0) exit;
            }
  },
          }
  "config": {
+ cfg_lines=11
    "file": "fw3.cfg",
        ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
++ printf '%s\n' misc cisco
++ jq -n --arg file switch1.conf --argjson lines 13 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
++ sort -u
              file: $file,
              lines: $lines,
              object: $path
+ return 0
++ awk '
            }
          BEGIN { in_json=0; depth=0; }
          }'
          {
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
'
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
+ jq -s .
          }
        ' reports/172.16.1.6/misc/switch3.conf
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
+ json_head='{
  "vendor": "cisco",
  "version": "9.12(4)",
  "model": "",
  "domain": "global.dmz.example.net",
  "version": "",
  "hostname": "dmz-fw2-backup"
  "domain": "",
}'
  "hostname": ""
}'
+ jq -e .
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ echo '{
  "vendor": "cisco",
    "version": "16.9",
  "model": "",
    "domain": "",
  "version": "",
  "domain": "",
  "hostname": ""
    "hostname": "branch-isr-02"
}'
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ json_spec='{
  "specs": {
+ json_spec='{
    "vendor": "cisco",
  "specs": {
    "model": "",
    "vendor": "cisco",
    "version": "16.9",
    "model": "",
    "domain": "",
    "hostname": "branch-isr-02"
    "version": "12.2",
    "domain": "",
  },
  "config": {
    "hostname": "campus-sw-access01"
    "file": "branch-isr-02.cfg",
  },
    "lines": 16,
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/branch-isr-02.list"
    "object": ".objects/campus-sw-access01.list"
  }
  }
}'
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ site_device_map["${site}"]+='{
  "specs": {
    "version": "16.9",
    "vendor": "cisco",
    "domain": "",
    "model": "",
    "hostname": "branch-isr-02"
    "version": "12.2",
  },
    "domain": "",
  "config": {
    "hostname": "campus-sw-access01"
    "file": "branch-isr-02.cfg",
  },
    "lines": 16,
  "config": {
    "object": ".objects/branch-isr-02.list"
    "file": "campus-sw-access01.cfg",
  }
    "lines": 17,
}
    "object": ".objects/campus-sw-access01.list"
'
  }
}
'
+ IFS=
++ wc -l
+ read -r config_file
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ tr -d ' '
+ printf ' { "target": "%s", "locations": { ' 172.18.1.20
+ first=true
+ jq .
++ wc -l
++ tr -d ' '
++ printf '%s\n' misc cisco
++ sort -u
+ cfg_lines=21
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
+ json_spec='{
  "specs": {
              if (depth == 0) exit;
    "vendor": "cisco",
            }
    "model": "",
          }
    "version": "",
        ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
+ printf ' } '
    "model": "",
    "version": "",
+ printf ' } } '
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ cfg_lines=26
+ printf ' { "target": "%s", "locations": { ' 10.0.0.1
+ first=true
+ jq .
+ return 0
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
++ awk '
+ [[ -z {
          BEGIN { in_json=0; depth=0; }
          {
  "specs": {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
    "vendor": "cisco",
            if (in_json) {
    "model": "",
              print;
    "version": "16.9",
              depth += gsub(/{/, "{");
    "domain": "",
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
    "hostname": "branch-isr-02"
            }
  },
          }
  "config": {
        ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
+ json_head='{
  "vendor": "cisco",
}
  "model": "",
'
  "version": "12.2",
  "domain": "",
+ jq -s .
  "hostname": "campus-sw-access01"
}'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
+ printf ' } '
    "version": "16.9",
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
    "domain": "",
+ [[ -z {
    "hostname": "branch-isr-02"
  },
  "config": {
  "specs": {
    "file": "branch-isr-02.cfg",
    "vendor": "cisco",
    "lines": 16,
    "model": "",
    "version": "",
    "object": ".objects/branch-isr-02.list"
    "domain": "",
  }
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
}
  }
 ]]
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "version": "",
    "model": "",
    "domain": "",
    "version": "16.9",
    "hostname": ""
    "domain": "",
  },
    "hostname": "branch-isr-02"
  "config": {
  },
  "config": {
+ echo '{
    "file": "branch-isr-02.cfg",
    "file": "fw1.cfg",
  "vendor": "cisco",
    "lines": 18,
  "model": "",
    "object": ".objects/fw1.list"
  }
    "lines": 16,
}
    "object": ".objects/branch-isr-02.list"
 ]]
  "version": "12.2",
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 16 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "domain": "",
  "hostname": "campus-sw-access01"
++ jq -n --arg file switch3.conf --argjson lines 11 --arg path .objects/switch3.list --arg specs '{
  "vendor": "cisco",
}'
  "model": "",
+ false
+ jq -e .
  }
  "version": "",
}
  "vendor": "cisco",
+ printf ,
'
  "domain": "",
+ printf ' "%s": { "devices": ' misc
  "hostname": ""
  "model": "ASA",
  "version": "9.12(4)",
}' '{
            specs: ($specs | fromjson),
  "domain": "global.dmz.example.net",
            config: {
  "hostname": "dmz-fw2-backup"
              file: $file,
              lines: $lines,
              object: $path
}' '{
            specs: ($specs | fromjson),
            }
            config: {
          }'
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
+ jq -s .
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
+ [[ -z {
  },
  "specs": {
  "config": {
    "vendor": "cisco",
    "file": "fw3.cfg",
    "model": "ASA",
    "lines": 18,
    "version": "9.14(3)",
    "object": ".objects/fw3.list"
    "domain": "edge.dc.example.com",
  }
    "hostname": "perimeter-fw1"
}
+ echo '{
  },
  "vendor": "cisco",
{
  "config": {
  "specs": {
  "model": "ASA",
    "file": "perimeter-fw1.cfg",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
    "lines": 22,
  "hostname": "dmz-fw2-backup"
    "object": ".objects/perimeter-fw1.list"
    "vendor": "cisco",
  }
}'
    "model": "",
}
    "version": "",
 ]]
    "domain": "",
    "hostname": ""
+ jq -e .
  },
+ true
  "config": {
    "file": "fw1.cfg",
+ first=false
    "lines": 18,
    "object": ".objects/fw1.list"
+ printf ' "%s": { "devices": ' cisco
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
+ json_spec='{
    "hostname": ""
  },
  "specs": {
  "config": {
    "vendor": "cisco",
    "file": "fw1.cfg",
    "model": "ASA",
    "lines": 13,
    "object": ".objects/fw1.list"
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
  }
    "hostname": "dmz-fw2-backup"
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 21 --arg path .objects/campus-sw-access01.list --arg specs '{
}
  "vendor": "cisco",
'
  "model": "",
  },
  "version": "12.2",
  "config": {
  "domain": "",
    "file": "dmz-fw2-backup.cfg",
  "hostname": "campus-sw-access01"
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}' '{
}'
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
+ site_device_map["${site}"]+='{
              object: $path
  "specs": {
            }
    "vendor": "cisco",
          }'
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
+ json_spec='{
    "hostname": "fg-branch-vpn-01"
  "specs": {
  },
    "vendor": "cisco",
  "config": {
    "model": "",
    "version": "",
    "domain": "",
+ printf ' } '
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "hostname": ""
    "object": ".objects/fg-branch-vpn-01.list"
  },
  }
}
+ printf ' } } '
  "config": {
 ]]
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
+ false
  }
+ printf ,
}'
+ printf ' "%s": { "devices": ' fortinet
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ printf ' { "target": "%s", "locations": { ' 192.0.2.50
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
+ first=true
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ jq .
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 26 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
+ jq -s .
'
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
+ printf ' { "target": "%s", "locations": { ' 172.16.1.6
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
+ first=true
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
+ jq .
+ return 0
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ printf '%s\n' cisco
++ sort -u
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
+ jq -s .
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -n {
  "specs": {
    "vendor": "cisco",
+ [[ -z {
  "specs": {
    "model": "ASA",
    "version": "9.14(3)",
    "vendor": "cisco",
    "domain": "edge.dc.example.com",
    "model": "",
    "hostname": "perimeter-fw1"
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
  "config": {
    "file": "branch-isr-02.cfg",
    "object": ".objects/perimeter-fw1.list"
    "lines": 19,
  }
}
{
    "object": ".objects/branch-isr-02.list"
  "specs": {
  }
}
    "vendor": "cisco",
 ]]
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
+ true
  "config": {
+ first=false
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
+ printf ' "%s": { "devices": ' cisco
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ return 0
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ site=fortinet
+ device=fg-branch-vpn-01.cfg
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
+ printf ' } '
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
+ IFS=
    "vendor": "cisco",
+ read -r config_file
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
+ [[ ! -f reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
+ rel_path=fortinet/fg-campus-core.cfg
{
  "specs": {
+ site=fortinet
    "vendor": "cisco",
    "model": "",
+ device=fg-campus-core.cfg
    "version": "",
    "domain": "",
+ [[ ! -d reports/10.10.10.10/fortinet ]]
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
++ wc -l
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
++ tr -d ' '
+ jq -s .
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
++ wc -l
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
 ]]
++ tr -d ' '
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ cfg_lines=19
+ cfg_lines=25
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
+ printf ' } '
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
+ printf ' } } '
+ printf ' } '
            }
          }
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
        ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
+ return 0
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ jq -e .
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
+ printf ' } '
+ printf ' } } '
+ return 0
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
++ jq -n --arg file fg-campus-core.cfg --argjson lines 25 --arg path .objects/fg-campus-core.list --arg specs '{
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 19 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "model": "FortiGate-200F",
  "version": "v7.2.5.F",
  "version": "",
  "domain": "",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
  "hostname": "fg-campus-core"
}' '{
}' '{
            specs: ($specs | fromjson),
            specs: ($specs | fromjson),
            config: {
              file: $file,
            config: {
              lines: $lines,
              file: $file,
              object: $path
              lines: $lines,
            }
              object: $path
          }'
            }
          }'
+ printf ' } '
+ printf ' } } '
+ return 0
+ json_spec='{
  "specs": {
+ json_spec='{
    "vendor": "fortinet",
  "specs": {
    "model": "FortiGate-60F",
    "vendor": "fortinet",
    "version": "v7.2.5.F",
    "model": "FortiGate-200F",
    "domain": "",
    "version": "",
    "hostname": "fg-branch-vpn-01"
    "domain": "",
  },
    "hostname": "fg-campus-core"
  "config": {
  },
    "file": "fg-branch-vpn-01.cfg",
  "config": {
    "lines": 19,
    "file": "fg-campus-core.cfg",
    "object": ".objects/fg-branch-vpn-01.list"
    "lines": 25,
  }
}'
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
+ site_device_map["${site}"]+='{
    "vendor": "fortinet",
  "specs": {
    "model": "FortiGate-60F",
    "vendor": "fortinet",
    "version": "v7.2.5.F",
    "model": "FortiGate-200F",
    "domain": "",
    "version": "",
    "hostname": "fg-branch-vpn-01"
    "domain": "",
  },
    "hostname": "fg-campus-core"
  "config": {
  },
    "file": "fg-branch-vpn-01.cfg",
  "config": {
    "lines": 19,
    "file": "fg-campus-core.cfg",
    "object": ".objects/fg-branch-vpn-01.list"
    "lines": 25,
  }
    "object": ".objects/fg-campus-core.list"
}
  }
'
}
'
+ IFS=
+ IFS=
+ read -r config_file
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ rel_path=fortinet/fg-testing-config.cfg
+ site=fortinet
+ device=fg-testing-config.cfg
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ printf ' { "target": "%s", "locations": { ' 192.168.0.1
+ first=true
+ jq .
++ wc -l
++ tr -d ' '
++ printf '%s\n' fortinet cisco
++ sort -u
+ cfg_lines=24
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
++ awk '
          BEGIN { in_json=0; depth=0; }
}
          {
 ]]
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
+ true
              depth -= gsub(/}/, "}");
+ first=false
              if (depth == 0) exit;
            }
          }
+ printf ' "%s": { "devices": ' cisco
        ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ jq -n --arg file fg-testing-config.cfg --argjson lines 24 --arg path .objects/fg-testing-config.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' } '
+ printf ' } } '
+ return 0
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 10.10.10.10
+ first=true
+ jq .
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
+ jq -s .
}
'
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
+ return 0
