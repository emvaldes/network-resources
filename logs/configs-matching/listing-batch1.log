+ local configs_matching__script=configs-matching
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.0.1.list
+ :
+ [[ -d reports/10.0.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.0.1.list ]]
+ local target_config=targets/10.0.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.0.1
+ local job_pid=79084
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.1.2
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.1.2.list
+ :
+ [[ -d reports/10.0.1.2 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.cfg'
+ configs_targets --search=10.0.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.0.1.list --target=targets/10.0.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.0.1.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.1.2.list ]]
+ local target_config=targets/10.0.1.2.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.1.2
+ local job_pid=79093
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.2.3
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.2.3.list
+ :
+ [[ -d reports/10.0.2.3 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.cfg'
+ configs_targets --search=10.0.1.2 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.1.2.list --target=targets/10.0.1.2.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.1.2.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.2.3.list ]]
+ local target_config=targets/10.0.2.3.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.2.3
+ local job_pid=79106
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.10.10.10
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.10.10.10.list
+ :
+ [[ -d reports/10.10.10.10 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.cfg'
+ configs_targets --search=10.0.2.3 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.2.3.list --target=targets/10.0.2.3.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.0.2.3.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.10.10.10.list ]]
+ local target_config=targets/10.10.10.10.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.10.10.10
+ local job_pid=79124
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.0.5
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.list
+ :
+ [[ -d reports/172.16.0.5 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.cfg'
+ configs_targets --search=10.10.10.10 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.10.10.10.list --target=targets/10.10.10.10.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--10.10.10.10.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.list ]]
+ local target_config=targets/172.16.0.5.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5
+ local job_pid=79148
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.1.6
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.list
+ :
+ [[ -d reports/172.16.1.6 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.cfg'
+ configs_targets --search=172.16.0.5 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.list --target=targets/172.16.0.5.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.list ]]
+ local target_config=targets/172.16.1.6.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6
+ local job_pid=79176
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.18.1.20
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list
+ :
+ configs_targets --search=172.16.1.6 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.list --target=targets/172.16.1.6.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.console --verbose
+ [[ -d reports/172.18.1.20 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list ]]
+ local target_config=targets/172.18.1.20.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20
+ local job_pid=79200
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.31.255.254
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list
+ :
+ [[ -d reports/172.31.255.254 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.cfg'
+ configs_targets --search=172.18.1.20 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list --target=targets/172.18.1.20.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list ]]
+ local target_config=targets/172.31.255.254.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254
+ local job_pid=79232
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.31.255.254
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.0.2.50
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list
+ :
+ [[ -d reports/192.0.2.50 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.cfg'
+ configs_targets --search=172.31.255.254 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list --target=targets/172.31.255.254.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list ]]
+ local target_config=targets/192.0.2.50.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50
+ local job_pid=79260
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list
+ :
+ [[ -d reports/192.168.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.cfg'
+ configs_targets --search=192.0.2.50 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list --target=targets/192.0.2.50.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list ]]
+ local target_config=targets/192.168.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1
+ local job_pid=79289
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79084
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79093
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79106
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79124
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79148
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79176
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79200
+ configs_targets --search=192.168.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list --target=targets/192.168.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.console --verbose
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79232
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79260
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79289
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79084
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79093
+ logger=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79106
+ logger=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79124
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79148
+ logger=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79176
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79200
+ logger=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79232
+ logger=172.31.255.254
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79260
+ logger=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79289
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79084
+ logger=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79124
+ logger=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79176
+ logger=172.16.1.6
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 79289
+ logger=192.168.0.1
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ [[ true == true ]]
+ message 'Completed background jobs for matched IPs (10):'
+ [[ -n Completed background jobs for matched IPs (10): ]]
+ local 'message=Completed background jobs for matched IPs (10):'
+ echo -e 'Completed background jobs for matched IPs (10):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message ' Index  | PID    | IP Address       |'
+ [[ -n  Index  | PID    | IP Address       | ]]
+ local 'message= Index  | PID    | IP Address       |'
+ echo -e ' Index  | PID    | IP Address       |'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ cat -n
+ ip_address=10.0.1.2
+ printf '%-6s | %-15s\n' 79093 10.0.1.2
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ printf '%-6s | %-15s\n' 79232 172.31.255.254
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ printf '%-6s | %-15s\n' 79200 172.18.1.20
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ printf '%-6s | %-15s\n' 79289 192.168.0.1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ printf '%-6s | %-15s\n' 79084 10.0.0.1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ printf '%-6s | %-15s\n' 79176 172.16.1.6
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ printf '%-6s | %-15s\n' 79106 10.0.2.3
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ printf '%-6s | %-15s\n' 79124 10.10.10.10
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.0.5
+ printf '%-6s | %-15s\n' 79148 172.16.0.5
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ printf '%-6s | %-15s\n' 79260 192.0.2.50
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.1.2
+ target_config=targets/10.0.1.2.json
+ [[ -s targets/10.0.1.2.json ]]
+ [[ -f targets/10.0.1.2.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.1.2.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ jq -r . targets/10.0.1.2.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ target_config=targets/172.31.255.254.json
+ [[ -s targets/172.31.255.254.json ]]
+ [[ -f targets/172.31.255.254.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.31.255.254.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ jq -r . targets/172.31.255.254.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ target_config=targets/172.18.1.20.json
+ [[ -s targets/172.18.1.20.json ]]
+ [[ -f targets/172.18.1.20.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.18.1.20.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ jq -r . targets/172.18.1.20.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ target_config=targets/192.168.0.1.json
+ [[ -s targets/192.168.0.1.json ]]
+ [[ -f targets/192.168.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ jq -r . targets/192.168.0.1.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ target_config=targets/10.0.0.1.json
+ [[ -s targets/10.0.0.1.json ]]
+ [[ -f targets/10.0.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ jq -r . targets/10.0.0.1.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ target_config=targets/172.16.1.6.json
+ [[ -s targets/172.16.1.6.json ]]
+ [[ -f targets/172.16.1.6.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.1.6.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ jq -r . targets/172.16.1.6.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ target_config=targets/10.0.2.3.json
+ [[ -s targets/10.0.2.3.json ]]
+ [[ -f targets/10.0.2.3.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.2.3.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ jq -r . targets/10.0.2.3.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ target_config=targets/10.10.10.10.json
+ [[ -s targets/10.10.10.10.json ]]
+ [[ -f targets/10.10.10.10.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.10.10.10.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ jq -r . targets/10.10.10.10.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.0.5
+ target_config=targets/172.16.0.5.json
+ [[ -s targets/172.16.0.5.json ]]
+ [[ -f targets/172.16.0.5.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.0.5.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ jq -r . targets/172.16.0.5.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ target_config=targets/192.0.2.50.json
+ [[ -s targets/192.0.2.50.json ]]
+ [[ -f targets/192.0.2.50.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.0.2.50.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ jq -r . targets/192.0.2.50.json
+ return 0
 ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/172.16.1.6.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ cfg_lines=26
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.0.5.list ]]
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/misc/fw3.cfg ]]
+ rel_path=misc/fw3.cfg
+ site=misc
+ device=fw3.cfg
+ [[ ! -d reports/172.16.0.5/misc ]]
+ jq -e .
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.console
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ jq -n --arg file fw3.cfg --argjson lines 18 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
++ tr -d ' '
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.1.2/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ oIFS=' 	
'
+ [[ ! -d reports/10.0.1.2/misc ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ logger =~ ^(search|p)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=17
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ wc -l
  "hostname": "fg-branch-vpn-01"
}'
++ echo -e --search=172.31.255.254
++ tr -d ' '
+ jq -e .
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --target=targets/172.18.1.20.json
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_head='{
+ cfg_lines=11
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ search =~ ^(search|p)$ ]]
+ [[ target =~ ^(search|p)$ ]]
+ local search_pattern=172.31.255.254
+ [[ target =~ ^(source|s)$ ]]
+ [[ search =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ local target_config=targets/172.18.1.20.json
+ [[ search =~ ^(logger|l)$ ]]
+ [[ target =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|p)$ ]]
+ echo '{
+ [[ verbose =~ ^(source|s)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ verbose =~ ^(target|t)$ ]]
  "hostname": ""
}'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
++ awk '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.console ]]
          BEGIN { in_json=0; depth=0; }
+ jq -e .
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.list ]]
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.16.1.6.list ]]
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.1.2/misc/switch1.conf
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.16.1.6/cisco ]]
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
++ tr -d ' '
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ jq -n --arg file fw3.cfg --argjson lines 27 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ site_device_map["${site}"]+='{
}'
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.2.3/misc/fw1.cfg ]]
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.0.2.50
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ jq -e .
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=19
++ wc -l
++ echo -e --target=targets/172.31.255.254.json
++ tr -d ' '
++ sed -e '1s|^\(-\)\{1,\}||'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.0.2.50
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 26 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
+ [[ search =~ ^(logger|l)$ ]]
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/172.31.255.254.json
+ [[ target =~ ^(logger|l)$ ]]
+ cfg_lines=18
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list
+ [[ verbose =~ ^(search|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ awk '
+ [[ -z true ]]
          BEGIN { in_json=0; depth=0; }
+ echo '{
+ [[ -z false ]]
          {
+ [[ -z true ]]
  "vendor": "cisco",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.console ]]
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
  "model": "",
            if (in_json) {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list ]]
              print;
  "version": "16.9",
              depth += gsub(/{/, "{");
  "domain": "",
              depth -= gsub(/}/, "}");
  "hostname": "branch-isr-02"
              if (depth == 0) exit;
}'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.18.1.20.list ]]
            }
          }
        ' reports/10.0.2.3/misc/fw1.cfg
+ site_device_map=()
+ declare -A site_device_map
+ jq -e .
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/misc/fw1.cfg ]]
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/172.18.1.20/misc ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ wc -l
++ tr -d ' '
++ jq -n --arg file fw3.cfg --argjson lines 17 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=192.168.0.1
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ jq -e .
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
++ echo -e --target=targets/192.0.2.50.json
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ rel_path=cisco/access-sw1-west.cfg
+ site=cisco
+ device=access-sw1-west.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ cfg_lines=13
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.18.1.20/misc/fw1.cfg
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
++ wc -l
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ tr -d ' '
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.168.0.1
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ json_spec='{
+ local target_config=targets/192.0.2.50.json
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
+ [[ target =~ ^(logger|l)$ ]]
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ [[ target == \d\e\b\u\g ]]
+ site_device_map["${site}"]+='{
+ [[ target == \d\r\y\-\r\u\n ]]
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
+ [[ target == \v\e\r\b\o\s\e ]]
    "version": "v7.2.5.F",
    "domain": "",
+ for xitem in "${@}"
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
+ IFS==
  }
}
'
+ read -r key value
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--172.31.255.254.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ json_head='{
+ [[ ! -f reports/172.31.255.254/misc/switch1.conf ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/172.31.255.254/misc ]]
+ cfg_lines=21
++ wc -l
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.console
++ tr -d ' '
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ wc -l
++ tr -d ' '
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=16
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --target=targets/192.168.0.1.json
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
+ cfg_lines=11
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch3.conf
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ site=cisco
+ device=perimeter-fw1.cfg
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.31.255.254/misc/switch1.conf
+ jq -e .
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ jq -n --arg file fw1.cfg --argjson lines 18 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
++ tr -d ' '
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/192.168.0.1.json
+ json_head='{
+ [[ target =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ site_device_map["${site}"]+='{
  "hostname": ""
  "specs": {
}'
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ jq -e .
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.console
+ printf ' { "target": "%s", "locations": { ' 10.0.1.2
+ [[ verbose =~ ^(search|p)$ ]]
+ first=true
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ cfg_lines=21
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ jq .
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.0.2.50.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ site=cisco
+ device=perimeter-fw1.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ printf '%s\n' fortinet misc
++ sort -u
++ wc -l
++ tr -d ' '
++ jq -n --arg file fw1.cfg --argjson lines 13 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' fortinet
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ echo -e --verbose
}'
+ cfg_lines=18
+ jq -e .
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
+ rel_path=fortinet/fg-campus-core.cfg
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
+ site=fortinet
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
+ device=fg-campus-core.cfg
'
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
++ awk '
          BEGIN { in_json=0; depth=0; }
  }
          {
}
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
'
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ wc -l
++ tr -d ' '
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
  "vendor": "cisco",
  "model": "",
+ json_spec='{
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ verbose =~ ^(search|p)$ ]]
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
  "specs": {
            }
    "vendor": "cisco",
          }'
    "model": "",
    "version": "",
    "domain": "",
+ [[ verbose =~ ^(source|s)$ ]]
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}'
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
+ [[ verbose == \d\e\b\u\g ]]
    "model": "",
    "version": "",
+ [[ verbose == \d\r\y\-\r\u\n ]]
    "domain": "",
    "hostname": ""
  },
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "config": {
    "file": "fw1.cfg",
+ local verbose=true
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=' 	
'
+ [[ -z true ]]
+ IFS=
+ [[ -z false ]]
+ read -r config_file
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list ]]
+ [[ ! -f reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.X0CG1HZyIo/configs-targets--192.168.0.1.list ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ site_device_map=()
+ device=branch-isr-02.cfg
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ rel_path=cisco/access-sw1-west.cfg
+ site=cisco
+ device=access-sw1-west.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ jq -e .
++ wc -l
+ cfg_lines=18
++ wc -l
++ tr -d ' '
++ tr -d ' '
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
++ jq -n --arg file switch3.conf --argjson lines 16 --arg path .objects/switch3.list --arg specs '{
            specs: ($specs | fromjson),
  "vendor": "cisco",
            config: {
  "model": "",
              file: $file,
  "version": "",
              lines: $lines,
  "domain": "",
              object: $path
            }
++ awk '
  "hostname": ""
          }'
          BEGIN { in_json=0; depth=0; }
}' '{
          {
            specs: ($specs | fromjson),
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            config: {
            if (in_json) {
              file: $file,
              print;
              lines: $lines,
              depth += gsub(/{/, "{");
              object: $path
            }
              depth -= gsub(/}/, "}");
          }'
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ cfg_lines=19
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ cfg_lines=21
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/cisco/access-sw1-west.cfg
++ wc -l
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
++ tr -d ' '
+ jq -e .
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ false
+ printf ,
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 21 --arg path .objects/perimeter-fw1.list --arg specs '{
+ printf ' "%s": { "devices": ' misc
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
+ json_head='{
  "model": "",
  "vendor": "cisco",
  "version": "12.4",
  "model": "",
  "domain": "",
  "version": "16.9",
  "hostname": "access-sw1-west"
  "domain": "",
}'
  "hostname": "branch-isr-02"
}'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ echo '{
  "vendor": "cisco",
  "model": "",
+ jq -s .
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
+ cfg_lines=16
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
+ jq -e .
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ wc -l
++ tr -d ' '
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 18 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
+ json_head='{
    "domain": "",
  "vendor": "cisco",
    "hostname": ""
  "model": "",
  },
  "version": "16.9",
  "config": {
  "domain": "",
    "file": "switch3.conf",
  "hostname": "branch-isr-02"
    "lines": 16,
}'
    "object": ".objects/switch3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
+ printf ' { "target": "%s", "locations": { ' 172.31.255.254
+ first=true
+ jq .
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ jq -e .
++ wc -l
+ cfg_lines=17
++ printf '%s\n' misc
++ tr -d ' '
++ sort -u
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ jq -n --arg file fg-campus-core.cfg --argjson lines 18 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=13
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' misc
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch1.conf
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
+ jq -s .
}
'
+ printf ' { "target": "%s", "locations": { ' 172.16.0.5
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ printf ' } '
+ first=true
+ jq -e .
+ printf ' } } '
+ jq .
+ return 0
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
  "vendor": "cisco",
  "model": "",
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "version": "12.4",
  "vendor": "cisco",
  "domain": "",
  "model": "",
  "hostname": "access-sw1-west"
  "version": "16.9",
}' '{
  "domain": "",
            specs: ($specs | fromjson),
  "hostname": "branch-isr-02"
            config: {
}' '{
              file: $file,
            specs: ($specs | fromjson),
              lines: $lines,
            config: {
              object: $path
              file: $file,
            }
              lines: $lines,
          }'
              object: $path
            }
          }'
++ printf '%s\n' misc cisco
++ sort -u
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
+ jq -e .
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ jq -n --arg file branch-isr-02.cfg --argjson lines 16 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
++ wc -l
++ tr -d ' '
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ cfg_lines=16
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/172.16.1.6/misc ]]
+ printf ' } '
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
+ printf ' } } '
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ wc -l
+ return 0
++ tr -d ' '
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ printf ' { "target": "%s", "locations": { ' 10.0.2.3
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ first=true
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 17 --arg path .objects/campus-sw-access01.list --arg specs '{
  "version": "9.12(4)",
  "vendor": "cisco",
  "domain": "global.dmz.example.net",
  "model": "",
  "hostname": "dmz-fw2-backup"
  "version": "12.2",
}'
  "domain": "",
  "hostname": "campus-sw-access01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ jq .
+ cfg_lines=11
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
++ printf '%s\n' misc cisco
++ wc -l
++ sort -u
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/misc/switch3.conf
++ tr -d ' '
++ jq -n --arg file switch1.conf --argjson lines 13 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 172.18.1.20
+ first=true
+ jq .
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
+ cfg_lines=21
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ json_head='{
+ true
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ echo '{
  "vendor": "cisco",
+ print '{
++ printf '%s\n' misc cisco
  "model": "",
  "specs": {
  "version": "",
    "vendor": "cisco",
++ awk '
    "model": "",
  "domain": "",
          BEGIN { in_json=0; depth=0; }
          {
    "version": "16.9",
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
    "domain": "",
    "hostname": "branch-isr-02"
  "hostname": ""
  },
            if (in_json) {
  "config": {
              print;
    "file": "branch-isr-02.cfg",
}'
              depth += gsub(/{/, "{");
    "lines": 19,
              depth -= gsub(/}/, "}");
    "object": ".objects/branch-isr-02.list"
              if (depth == 0) exit;
            }
  }
}
          }
'
        ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ jq -s .
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
++ sort -u
+ jq -s .
+ jq -e .
+ [[ -n {
+ [[ -n {
  "specs": {
  "specs": {
    "vendor": "cisco",
    "vendor": "cisco",
    "model": "",
    "model": "",
    "version": "",
    "version": "16.9",
    "domain": "",
    "domain": "",
    "hostname": ""
    "hostname": "branch-isr-02"
  },
  },
  "config": {
  "config": {
    "file": "fw3.cfg",
    "file": "branch-isr-02.cfg",
    "lines": 17,
    "lines": 19,
    "object": ".objects/fw3.list"
    "object": ".objects/branch-isr-02.list"
  }
  }
}
}
 ]]
 ]]
+ echo -en '{
+ echo -en '{
  "specs": {
  "specs": {
    "vendor": "cisco",
    "vendor": "cisco",
    "model": "",
    "model": "",
    "version": "",
    "version": "16.9",
    "domain": "",
    "domain": "",
    "hostname": ""
    "hostname": "branch-isr-02"
  },
  },
  "config": {
  "config": {
    "file": "fw3.cfg",
    "file": "branch-isr-02.cfg",
    "lines": 17,
    "lines": 19,
    "object": ".objects/fw3.list"
    "object": ".objects/branch-isr-02.list"
  }
  }
}
}
'
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 16 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
+ printf ' { "target": "%s", "locations": { ' 10.0.0.1
+ first=true
++ tr -d ' '
+ jq .
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ cfg_lines=26
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ printf ' } '
+ printf ' } } '
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "specs": {
    "vendor": "cisco",
+ jq -s .
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ return 0
  "config": {
    "file": "fw1.cfg",
+ [[ -z {
    "lines": 18,
  "specs": {
    "object": ".objects/fw1.list"
    "vendor": "cisco",
  }
    "model": "ASA",
}
    "version": "9.14(3)",
'
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
++ jq -n --arg file switch3.conf --argjson lines 11 --arg path .objects/switch3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ jq -s .
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ false
+ printf ,
+ echo '{
+ printf ' "%s": { "devices": ' misc
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ [[ -n {
+ jq -s .
  "specs": {
    "vendor": "cisco",
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 21 --arg path .objects/campus-sw-access01.list --arg specs '{
    "model": "",
  "vendor": "cisco",
    "version": "",
  "model": "",
    "domain": "",
  "version": "12.2",
    "hostname": ""
  "domain": "",
  },
  "hostname": "campus-sw-access01"
  "config": {
}' '{
    "file": "fw1.cfg",
            specs: ($specs | fromjson),
    "lines": 13,
            config: {
    "object": ".objects/fw1.list"
              file: $file,
  }
              lines: $lines,
}
              object: $path
 ]]
            }
+ json_spec='{
          }'
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
+ site_device_map["${site}"]+='{
  "config": {
  "specs": {
    "file": "fw1.cfg",
    "vendor": "cisco",
    "lines": 13,
    "model": "ASA",
    "object": ".objects/fw1.list"
    "version": "9.12(4)",
  }
    "domain": "global.dmz.example.net",
}
    "hostname": "dmz-fw2-backup"
'
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 192.0.2.50
+ first=true
+ jq .
++ printf '%s\n' cisco
++ sort -u
+ printf ' } '
+ printf ' } } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ json_spec='{
  "specs": {
+ return 0
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
+ printf ' } '
}
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ false
+ printf ' { "target": "%s", "locations": { ' 172.16.1.6
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ first=true
+ jq .
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
++ printf '%s\n' fortinet misc cisco
++ sort -u
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 26 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ rel_path=fortinet/fg-branch-vpn-01.cfg
+ return 0
+ site=fortinet
+ device=fg-branch-vpn-01.cfg
+ [[ ! -d reports/192.168.0.1/fortinet ]]
++ wc -l
++ tr -d ' '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ cfg_lines=19
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
+ printf ' } '
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
+ printf ' } } '
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ jq -s .
+ return 0
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
+ json_head='{
  },
  "vendor": "fortinet",
  "config": {
  "model": "FortiGate-60F",
    "file": "switch1.conf",
  "version": "v7.2.5.F",
    "lines": 13,
  "domain": "",
    "object": ".objects/switch1.list"
  "hostname": "fg-branch-vpn-01"
  }
}'
}
 ]]
+ json_spec='{
+ echo -en '{
  "specs": {
  "specs": {
    "vendor": "cisco",
    "vendor": "cisco",
    "model": "ASA",
    "model": "",
    "version": "9.12(4)",
    "version": "",
    "domain": "global.dmz.example.net",
    "domain": "",
    "hostname": "dmz-fw2-backup"
    "hostname": ""
  },
  },
  "config": {
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "file": "switch3.conf",
    "lines": 26,
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
    "object": ".objects/switch3.list"
  }
  }
}'
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
+ site_device_map["${site}"]+='{
    "lines": 13,
  "specs": {
    "object": ".objects/switch1.list"
    "vendor": "cisco",
  }
    "model": "ASA",
}
    "version": "9.12(4)",
'
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ site=fortinet
+ device=fg-campus-core.cfg
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
++ wc -l
++ tr -d ' '
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ cfg_lines=25
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
+ printf ' } '
+ printf ' } } '
+ return 0
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 19 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
+ jq -s .
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
++ jq -n --arg file fg-campus-core.cfg --argjson lines 25 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 192.168.0.1
+ first=true
+ jq .
++ printf '%s\n' fortinet cisco
++ sort -u
+ printf ' } '
+ printf ' } } '
+ return 0
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
+ jq -s .
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ rel_path=fortinet/fg-testing-config.cfg
+ site=fortinet
+ device=fg-testing-config.cfg
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ wc -l
++ tr -d ' '
+ cfg_lines=24
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
+ json_head='{
    "hostname": "fg-branch-vpn-01"
  "vendor": "fortinet",
  },
  "model": "FortiGate-60F",
  "config": {
  "version": "v7.2.5.F",
    "file": "fg-branch-vpn-01.cfg",
  "domain": "",
    "lines": 19,
  "hostname": "fg-branch-vpn-01"
    "object": ".objects/fg-branch-vpn-01.list"
}'
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
+ printf ' } '
+ printf ' } } '
+ return 0
++ jq -n --arg file fg-testing-config.cfg --argjson lines 24 --arg path .objects/fg-testing-config.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 10.10.10.10
+ first=true
+ jq .
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
+ jq -s .
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
+ jq -s .
    "object": ".objects/fw3.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
+ return 0
