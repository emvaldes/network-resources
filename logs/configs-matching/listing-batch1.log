+ local configs_matching__script=configs-matching
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.0.1.list
+ :
+ [[ -d reports/10.0.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.0.1.list ]]
+ local target_config=targets/10.0.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.0.1
+ local job_pid=13660
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.0.1
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.1.2
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.1.2.list
+ :
+ [[ -d reports/10.0.1.2 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.cfg'
+ configs_targets --search=10.0.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.0.1.list --target=targets/10.0.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.0.1.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.1.2 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.1.2.list ]]
+ local target_config=targets/10.0.1.2.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.1.2
+ local job_pid=13669
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.1.2
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.0.2.3
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.2.3.list
+ :
+ [[ -d reports/10.0.2.3 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.cfg'
+ configs_targets --search=10.0.1.2 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.1.2.list --target=targets/10.0.1.2.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.1.2.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.0.2.3 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.2.3.list ]]
+ local target_config=targets/10.0.2.3.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.2.3
+ local job_pid=13683
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.0.2.3
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/10.10.10.10
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.10.10.10.list
+ :
+ [[ -d reports/10.10.10.10 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.cfg'
+ configs_targets --search=10.0.2.3 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.2.3.list --target=targets/10.0.2.3.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.0.2.3.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/10.10.10.10 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.10.10.10.list ]]
+ local target_config=targets/10.10.10.10.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.10.10.10
+ local job_pid=13702
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=10.10.10.10
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.0.5
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.list
+ :
+ [[ -d reports/172.16.0.5 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.cfg'
+ configs_targets --search=10.10.10.10 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.10.10.10.list --target=targets/10.10.10.10.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--10.10.10.10.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.0.5 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.list ]]
+ local target_config=targets/172.16.0.5.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5
+ local job_pid=13726
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.0.5
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.16.1.6
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.list
+ :
+ [[ -d reports/172.16.1.6 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.cfg'
+ configs_targets --search=172.16.0.5 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.list --target=targets/172.16.0.5.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.16.1.6 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.list ]]
+ local target_config=targets/172.16.1.6.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6
+ local job_pid=13747
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.16.1.6
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.18.1.20
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list
+ :
+ [[ -d reports/172.18.1.20 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.cfg'
+ configs_targets --search=172.16.1.6 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.list --target=targets/172.16.1.6.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.18.1.20 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list ]]
+ local target_config=targets/172.18.1.20.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20
+ local job_pid=13772
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.18.1.20
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/172.31.255.254
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list
+ :
+ [[ -d reports/172.31.255.254 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.cfg'
+ configs_targets --search=172.18.1.20 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list --target=targets/172.18.1.20.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/172.31.255.254 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list ]]
+ local target_config=targets/172.31.255.254.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254
+ local job_pid=13801
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=172.31.255.254
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.0.2.50
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list
+ :
+ [[ -d reports/192.0.2.50 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.cfg'
+ configs_targets --search=172.31.255.254 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list --target=targets/172.31.255.254.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.0.2.50 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list ]]
+ local target_config=targets/192.0.2.50.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50
+ local job_pid=13830
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.0.2.50
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.0.1
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list
+ :
+ [[ -d reports/192.168.0.1 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.cfg'
+ configs_targets --search=192.0.2.50 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list --target=targets/192.0.2.50.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.1 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list ]]
+ local target_config=targets/192.168.0.1.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1
+ local job_pid=13864
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13660
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13669
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13683
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13702
+ valid_targets_jobs_pid+=("${pid}")
+ configs_targets --search=192.168.0.1 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list --target=targets/192.168.0.1.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.console --verbose
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13726
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13747
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13772
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13801
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13830
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13864
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  10 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13660
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13669
+ logger=10.0.1.2
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13683
+ logger=10.0.2.3
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13702
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13726
+ logger=172.16.0.5
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13747
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13772
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13801
+ logger=172.31.255.254
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13830
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13864
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  6 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13660
+ logger=10.0.0.1
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13702
+ logger=10.10.10.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13747
+ logger=172.16.1.6
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13772
+ logger=172.18.1.20
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13830
+ logger=192.0.2.50
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 13864
+ logger=192.168.0.1
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ [[ true == true ]]
+ message 'Completed background jobs for matched IPs (10):'
+ [[ -n Completed background jobs for matched IPs (10): ]]
+ local 'message=Completed background jobs for matched IPs (10):'
+ echo -e 'Completed background jobs for matched IPs (10):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message ' Index  | PID    | IP Address       |'
+ [[ -n  Index  | PID    | IP Address       | ]]
+ local 'message= Index  | PID    | IP Address       |'
+ echo -e ' Index  | PID    | IP Address       |'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ cat -n
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ printf '%-6s | %-15s\n' 13830 192.0.2.50
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ printf '%-6s | %-15s\n' 13747 172.16.1.6
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ printf '%-6s | %-15s\n' 13660 10.0.0.1
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.1.2
+ printf '%-6s | %-15s\n' 13669 10.0.1.2
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ printf '%-6s | %-15s\n' 13772 172.18.1.20
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.0.5
+ printf '%-6s | %-15s\n' 13726 172.16.0.5
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ printf '%-6s | %-15s\n' 13702 10.10.10.10
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ printf '%-6s | %-15s\n' 13801 172.31.255.254
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ printf '%-6s | %-15s\n' 13683 10.0.2.3
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ printf '%-6s | %-15s\n' 13864 192.168.0.1
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.0.2.50
+ target_config=targets/192.0.2.50.json
+ [[ -s targets/192.0.2.50.json ]]
+ [[ -f targets/192.0.2.50.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.0.2.50.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.0.2.50.json'
+ jq -r . targets/192.0.2.50.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.1.6
+ target_config=targets/172.16.1.6.json
+ [[ -s targets/172.16.1.6.json ]]
+ [[ -f targets/172.16.1.6.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.1.6.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.1.6.json'
+ jq -r . targets/172.16.1.6.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.0.1
+ target_config=targets/10.0.0.1.json
+ [[ -s targets/10.0.0.1.json ]]
+ [[ -f targets/10.0.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.0.1.json'
+ jq -r . targets/10.0.0.1.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.1.2
+ target_config=targets/10.0.1.2.json
+ [[ -s targets/10.0.1.2.json ]]
+ [[ -f targets/10.0.1.2.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.1.2.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.1.2.json'
+ jq -r . targets/10.0.1.2.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.18.1.20
+ target_config=targets/172.18.1.20.json
+ [[ -s targets/172.18.1.20.json ]]
+ [[ -f targets/172.18.1.20.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.18.1.20.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.18.1.20.json'
+ jq -r . targets/172.18.1.20.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.16.0.5
+ target_config=targets/172.16.0.5.json
+ [[ -s targets/172.16.0.5.json ]]
+ [[ -f targets/172.16.0.5.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.16.0.5.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.16.0.5.json'
+ jq -r . targets/172.16.0.5.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.10.10.10
+ target_config=targets/10.10.10.10.json
+ [[ -s targets/10.10.10.10.json ]]
+ [[ -f targets/10.10.10.10.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.10.10.10.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.10.10.10.json'
+ jq -r . targets/10.10.10.10.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=172.31.255.254
+ target_config=targets/172.31.255.254.json
+ [[ -s targets/172.31.255.254.json ]]
+ [[ -f targets/172.31.255.254.json ]]
+ message 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ [[ -n Completed Configuration Targets (IP): targets/172.31.255.254.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ echo -e 'Completed Configuration Targets (IP): targets/172.31.255.254.json'
+ jq -r . targets/172.31.255.254.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=10.0.2.3
+ target_config=targets/10.0.2.3.json
+ [[ -s targets/10.0.2.3.json ]]
+ [[ -f targets/10.0.2.3.json ]]
+ message 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ [[ -n Completed Configuration Targets (IP): targets/10.0.2.3.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ echo -e 'Completed Configuration Targets (IP): targets/10.0.2.3.json'
+ jq -r . targets/10.0.2.3.json
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.1
+ target_config=targets/192.168.0.1.json
+ [[ -s targets/192.168.0.1.json ]]
+ [[ -f targets/192.168.0.1.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.0.1.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.0.1.json'
+ jq -r . targets/192.168.0.1.json
+ return 0
local target_config=targets/172.16.1.6.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ cfg_lines=26
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ echo '{
'
  "vendor": "cisco",
+ [[ verbose == \d\e\b\u\g ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.console ]]
+ jq -e .
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.0.5.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/misc/fw3.cfg ]]
+ rel_path=misc/fw3.cfg
+ site=misc
+ device=fw3.cfg
+ [[ ! -d reports/172.16.0.5/misc ]]
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
++ echo -e --search=172.31.255.254
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.1.2/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/10.0.1.2/misc ]]
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
++ wc -l
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
++ tr -d ' '
++ jq -n --arg file fw3.cfg --argjson lines 18 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ echo -e --target=targets/172.18.1.20.json
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
++ tr -d ' '
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=172.31.255.254
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=17
+ [[ target =~ ^(search|p)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/172.18.1.20.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/misc/fw3.cfg
+ cfg_lines=11
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.16.1.6.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.16.1.6/cisco ]]
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.1.2/misc/switch1.conf
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
++ tr -d ' '
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
++ echo -e --search=192.0.2.50
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
++ jq -n --arg file fw3.cfg --argjson lines 27 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
+ [[ logger =~ ^(logger|l)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.console
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
+ [[ logger == \d\e\b\u\g ]]
            }
+ [[ logger == \d\r\y\-\r\u\n ]]
          }'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --target=targets/172.31.255.254.json
+ IFS==
+ read -r key value
+ jq -e .
+ cfg_lines=19
++ sed -e '1s|^\(-\)\{1,\}||'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.0.2.50
++ echo -e --verbose
+ json_spec='{
+ [[ search =~ ^(source|s)$ ]]
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
+ [[ search =~ ^(target|t)$ ]]
    "object": ".objects/fw3.list"
  }
}'
+ [[ search =~ ^(logger|l)$ ]]
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
+ [[ search == \d\e\b\u\g ]]
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
+ [[ search == \d\r\y\-\r\u\n ]]
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
+ [[ search == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ IFS=
+ IFS==
+ read -r key value
+ read -r config_file
+ [[ ! -f reports/10.0.2.3/misc/fw1.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/10.0.2.3/misc ]]
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 26 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list
+ [[ target =~ ^(search|p)$ ]]
++ tr -d ' '
+ [[ target =~ ^(source|s)$ ]]
+ [[ target =~ ^(target|t)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=targets/172.31.255.254.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ jq -e .
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.18.1.20.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/misc/fw1.cfg ]]
+ rel_path=misc/fw1.cfg
+ site=misc
+ device=fw1.cfg
+ [[ ! -d reports/172.18.1.20/misc ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=18
+ [[ source =~ ^(search|p)$ ]]
++ wc -l
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d ' '
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.2.3/misc/fw1.cfg
++ echo -e --search=192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --target=targets/192.0.2.50.json
+ [[ logger =~ ^(search|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=13
++ jq -n --arg file fw3.cfg --argjson lines 17 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=192.168.0.1
+ [[ search =~ ^(source|s)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
++ sed -e '1s|^\(-\)\{1,\}||'
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.18.1.20/misc/fw1.cfg
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ json_spec='{
}' '{
  "specs": {
            specs: ($specs | fromjson),
    "vendor": "cisco",
            config: {
    "model": "",
              file: $file,
    "version": "",
              lines: $lines,
    "domain": "",
              object: $path
    "hostname": ""
            }
  },
          }'
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
+ [[ target =~ ^(search|p)$ ]]
  }
}
'
+ IFS=
+ [[ target =~ ^(source|s)$ ]]
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ target =~ ^(target|t)$ ]]
+ rel_path=cisco/access-sw1-west.cfg
+ site=cisco
+ device=access-sw1-west.cfg
+ local target_config=targets/192.0.2.50.json
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
++ wc -l
++ tr -d ' '
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.console
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--172.31.255.254.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
++ wc -l
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.31.255.254/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/172.31.255.254/misc ]]
++ tr -d ' '
+ jq -e .
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ wc -l
++ tr -d ' '
+ cfg_lines=21
++ echo -e --target=targets/192.168.0.1.json
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ cfg_lines=16
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch3.conf
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ cfg_lines=11
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
+ [[ target =~ ^(search|p)$ ]]
  "domain": "",
  "hostname": "access-sw1-west"
}'
+ [[ target =~ ^(source|s)$ ]]
++ awk '
+ [[ target =~ ^(target|t)$ ]]
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
+ local target_config=targets/192.168.0.1.json
          }
        ' reports/172.31.255.254/misc/switch1.conf
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}'
+ echo '{
  "vendor": "cisco",
+ site_device_map["${site}"]+='{
  "model": "",
  "specs": {
  "version": "12.4",
    "vendor": "cisco",
  "domain": "",
    "model": "",
  "hostname": "access-sw1-west"
    "version": "",
}'
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
+ jq -e .
+ site=cisco
+ device=perimeter-fw1.cfg
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ [[ verbose =~ ^(search|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.console
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ echo '{
+ [[ -z true ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.console ]]
  "hostname": ""
}'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.0.2.50.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ jq -e .
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ rel_path=cisco/perimeter-fw1.cfg
++ jq -n --arg file fw1.cfg --argjson lines 18 --arg path .objects/fw1.list --arg specs '{
+ site=cisco
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ device=perimeter-fw1.cfg
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
+ [[ ! -d reports/192.0.2.50/cisco ]]
          }'
++ wc -l
+ json_spec='{
++ tr -d ' '
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ wc -l
+ printf ' { "target": "%s", "locations": { ' 10.0.1.2
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ first=true
  "hostname": ""
}'
++ tr -d ' '
+ jq -e .
+ jq .
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%s\n' fortinet misc
++ sort -u
+ cfg_lines=21
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo -e --verbose
+ cfg_lines=18
++ jq -n --arg file fw1.cfg --argjson lines 13 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
++ awk '
    "object": ".objects/branch-isr-02.list"
          BEGIN { in_json=0; depth=0; }
  }
          {
}
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
'
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ site=fortinet
+ device=fg-campus-core.cfg
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' fortinet
++ wc -l
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ tr -d ' '
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
+ echo '{
'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ -z true ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.thUdFZFM2F/configs-targets--192.168.0.1.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ jq -e .
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ rel_path=cisco/access-sw1-west.cfg
+ site=cisco
+ device=access-sw1-west.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ jq -e .
++ wc -l
++ tr -d ' '
+ cfg_lines=18
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
+ json_spec='{
              if (depth == 0) exit;
  "specs": {
            }
    "vendor": "cisco",
          }
    "model": "",
    "version": "",
        ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
+ IFS=
  "vendor": "cisco",
+ read -r config_file
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ ! -f reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/10.0.2.3/cisco ]]
++ jq -n --arg file switch3.conf --argjson lines 16 --arg path .objects/switch3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=21
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
++ tr -d ' '
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ rel_path=cisco/branch-isr-02.cfg
+ site=cisco
+ device=branch-isr-02.cfg
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ cfg_lines=19
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.2.3/cisco/branch-isr-02.cfg
++ wc -l
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}'
+ jq -e .
++ tr -d ' '
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
+ jq -s .
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 21 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ cfg_lines=16
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 18 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
+ echo '{
              object: $path
  "vendor": "cisco",
            }
  "model": "",
          }'
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.0.0.1/misc/switch1.conf ]]
+ rel_path=misc/switch1.conf
+ site=misc
+ device=switch1.conf
+ [[ ! -d reports/10.0.0.1/misc ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ IFS=
+ read -r config_file
++ wc -l
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
++ tr -d ' '
+ printf ' { "target": "%s", "locations": { ' 172.31.255.254
++ wc -l
+ first=true
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
++ tr -d ' '
+ jq .
+ jq -e .
++ printf '%s\n' misc
++ sort -u
++ jq -n --arg file fg-campus-core.cfg --argjson lines 18 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=17
+ cfg_lines=13
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.0.0.1/misc/switch1.conf
++ jq -n --arg file access-sw1-west.cfg --argjson lines 21 --arg path .objects/access-sw1-west.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' misc
+ printf ' } '
+ printf ' } } '
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
+ [[ -n {
  },
  "specs": {
  "config": {
    "vendor": "cisco",
    "file": "perimeter-fw1.cfg",
    "model": "",
    "lines": 21,
    "version": "",
    "object": ".objects/perimeter-fw1.list"
    "domain": "",
  }
    "hostname": ""
}'
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ jq -s .
+ site_device_map["${site}"]+='{
+ echo -en '{
  "specs": {
  "specs": {
    "vendor": "cisco",
    "vendor": "cisco",
    "model": "ASA",
    "model": "",
    "version": "9.14(3)",
    "version": "",
    "domain": "edge.dc.example.com",
    "domain": "",
    "hostname": "perimeter-fw1"
    "hostname": ""
  },
  },
  "config": {
  "config": {
    "file": "perimeter-fw1.cfg",
    "file": "switch1.conf",
    "lines": 21,
    "lines": 11,
    "object": ".objects/perimeter-fw1.list"
    "object": ".objects/switch1.list"
  }
  }
}
}
'
'
+ IFS=
+ read -r config_file
+ return 0
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ printf ' { "target": "%s", "locations": { ' 172.16.0.5
+ first=true
+ json_head='{
+ jq .
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
+ echo '{
    "domain": "edge.dc.example.com",
  "vendor": "cisco",
    "hostname": "perimeter-fw1"
  "model": "",
  },
  "version": "12.2",
  "config": {
  "domain": "",
    "file": "perimeter-fw1.cfg",
  "hostname": "campus-sw-access01"
    "lines": 18,
}'
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site=cisco
+ device=dmz-fw2-backup.cfg
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ jq -e .
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ jq -n --arg file branch-isr-02.cfg --argjson lines 19 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ printf '%s\n' misc cisco
++ sort -u
++ wc -l
++ tr -d ' '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ cfg_lines=16
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 21,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ jq -s .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
++ jq -n --arg file branch-isr-02.cfg --argjson lines 16 --arg path .objects/branch-isr-02.list --arg specs '{
    "model": "ASA",
  "vendor": "cisco",
    "version": "9.14(3)",
  "model": "",
    "domain": "edge.dc.example.com",
  "version": "16.9",
    "hostname": "perimeter-fw1"
  "domain": "",
  },
  "hostname": "branch-isr-02"
  "config": {
}' '{
    "file": "perimeter-fw1.cfg",
            specs: ($specs | fromjson),
    "lines": 21,
            config: {
              file: $file,
    "object": ".objects/perimeter-fw1.list"
              lines: $lines,
  }
              object: $path
}
            }
'
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}'
++ awk '
+ site_device_map["${site}"]+='{
          BEGIN { in_json=0; depth=0; }
  "specs": {
          {
    "vendor": "fortinet",
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
    "model": "FortiGate-200F",
            if (in_json) {
    "version": "",
              print;
    "domain": "",
              depth += gsub(/{/, "{");
    "hostname": "fg-campus-core"
              depth -= gsub(/}/, "}");
  },
              if (depth == 0) exit;
  "config": {
            }
    "file": "fg-campus-core.cfg",
          }
    "lines": 18,
        ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/172.16.1.6/misc/switch3.conf ]]
+ rel_path=misc/switch3.conf
+ site=misc
+ device=switch3.conf
+ [[ ! -d reports/172.16.1.6/misc ]]
++ wc -l
++ tr -d ' '
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ rel_path=cisco/campus-sw-access01.cfg
+ site=cisco
+ device=campus-sw-access01.cfg
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ printf ' } '
+ printf ' } } '
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ return 0
+ jq -e .
++ wc -l
++ tr -d ' '
+ cfg_lines=11
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/172.16.1.6/misc/switch3.conf
++ jq -n --arg file switch1.conf --argjson lines 13 --arg path .objects/switch1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 17 --arg path .objects/campus-sw-access01.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' { "target": "%s", "locations": { ' 10.0.2.3
+ first=true
+ jq .
+ cfg_lines=21
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ printf '%s\n' misc cisco
++ sort -u
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ printf ' } '
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ [[ -z {
+ read -r config_file
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ print '{
+ printf ' { "target": "%s", "locations": { ' 172.18.1.20
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
+ first=true
}
'
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ echo '{
+ first=false
+ jq -s .
  "vendor": "cisco",
+ printf ' "%s": { "devices": ' cisco
+ [[ -n {
  "model": "",
  "specs": {
  "version": "12.2",
    "vendor": "cisco",
  "domain": "",
    "model": "",
  "hostname": "campus-sw-access01"
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}'
}
 ]]
+ jq .
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 17,
    "object": ".objects/fw3.list"
  }
}
'
+ jq -e .
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
+ jq -s .
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
++ printf '%s\n' misc cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 16 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ json_spec='{
  "specs": {
    "vendor": "cisco",
+ [[ ! -f reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}'
+ rel_path=cisco/dmz-fw2-backup.cfg
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
+ site=cisco
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
+ device=dmz-fw2-backup.cfg
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 10.0.0.1
+ first=true
+ jq .
++ wc -l
++ tr -d ' '
++ printf '%s\n' fortinet misc cisco
++ sort -u
++ jq -n --arg file switch3.conf --argjson lines 11 --arg path .objects/switch3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' } '
+ printf ' } } '
+ return 0
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 21 --arg path .objects/campus-sw-access01.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ printf ' } '
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ cfg_lines=26
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ print '{
+ true
  "specs": {
    "vendor": "cisco",
    "model": "",
+ first=false
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
+ printf ' "%s": { "devices": ' cisco
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
+ jq -s .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 18,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 18,
    "object": ".objects/fw1.list"
  }
}
'
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 22,
    "object": ".objects/perimeter-fw1.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ printf ' { "target": "%s", "locations": { ' 192.0.2.50
+ first=true
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
+ jq .
    "object": ".objects/fw1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
++ printf '%s\n' cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
+ json_spec='{
  },
  "specs": {
  "config": {
    "vendor": "cisco",
    "file": "perimeter-fw1.cfg",
    "model": "",
    "lines": 18,
    "version": "12.2",
    "object": ".objects/perimeter-fw1.list"
    "domain": "",
  }
    "hostname": "campus-sw-access01"
  },
}
  "config": {
{
    "file": "campus-sw-access01.cfg",
  "specs": {
    "lines": 21,
    "vendor": "cisco",
    "object": ".objects/campus-sw-access01.list"
    "model": "ASA",
  }
    "version": "9.12(4)",
}'
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
+ jq -s .
+ site_device_map["${site}"]+='{
  "specs": {
'
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ IFS=
+ printf ' { "target": "%s", "locations": { ' 172.16.1.6
+ read -r config_file
+ first=true
+ [[ ! -f reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
+ rel_path=fortinet/fg-branch-vpn-01.cfg
  },
  "config": {
    "file": "perimeter-fw1.cfg",
+ site=fortinet
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
+ device=fg-branch-vpn-01.cfg
{
  "specs": {
    "vendor": "cisco",
+ [[ ! -d reports/192.168.0.1/fortinet ]]
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
+ jq .
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 18,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
++ wc -l
++ printf '%s\n' fortinet misc cisco
+ printf ' } '
+ printf ' } } '
++ sort -u
++ tr -d ' '
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
+ return 0
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ cfg_lines=19
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ printf ' } '
+ printf ' } } '
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 19,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ return 0
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 26 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ printf ' } '
+ jq -e .
+ printf ' } } '
+ return 0
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 16,
    "object": ".objects/switch3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 13,
    "object": ".objects/switch1.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
+ [[ -n {
    "hostname": "dmz-fw2-backup"
  "specs": {
  },
    "vendor": "fortinet",
  "config": {
    "model": "FortiGate-200F",
    "file": "dmz-fw2-backup.cfg",
    "version": "",
    "lines": 26,
    "domain": "",
    "object": ".objects/dmz-fw2-backup.list"
    "hostname": "fg-campus-core"
  }
  },
}'
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ site_device_map["${site}"]+='{
  "specs": {
+ echo -en '{
    "vendor": "cisco",
  "specs": {
    "model": "ASA",
    "vendor": "fortinet",
    "version": "9.12(4)",
    "model": "FortiGate-200F",
    "domain": "global.dmz.example.net",
    "version": "",
    "hostname": "dmz-fw2-backup"
    "domain": "",
  },
    "hostname": "fg-campus-core"
  "config": {
  },
    "file": "dmz-fw2-backup.cfg",
  "config": {
    "lines": 26,
    "file": "fg-campus-core.cfg",
    "object": ".objects/dmz-fw2-backup.list"
+ jq -s .
  }
}
'
+ IFS=
    "lines": 18,
+ read -r config_file
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ [[ ! -f reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ rel_path=fortinet/fg-campus-core.cfg
+ site=fortinet
+ device=fg-campus-core.cfg
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ wc -l
++ tr -d ' '
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 19 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=25
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ printf ' } '
+ printf ' } } '
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ return 0
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
+ jq -s .
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch3.conf",
    "lines": 11,
    "object": ".objects/switch3.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 192.168.0.1
+ first=true
+ jq .
++ printf '%s\n' fortinet cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 21,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ printf ' } '
++ jq -n --arg file fg-campus-core.cfg --argjson lines 25 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ printf ' } } '
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ return 0
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ rel_path=fortinet/fg-testing-config.cfg
+ site=fortinet
+ device=fg-testing-config.cfg
+ print '{
+ [[ ! -d reports/10.10.10.10/fortinet ]]
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
++ wc -l
++ tr -d ' '
+ cfg_lines=24
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
+ printf ' } '
+ printf ' } } '
+ return 0
++ jq -n --arg file fg-testing-config.cfg --argjson lines 24 --arg path .objects/fg-testing-config.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 10.10.10.10
+ first=true
+ jq .
++ printf '%s\n' fortinet misc cisco
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' cisco
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
+ jq -s .
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' fortinet
+ print '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 25,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-testing-config.cfg",
    "lines": 24,
    "object": ".objects/fg-testing-config.list"
  }
}
'
+ printf ' } '
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ false
+ printf ,
+ printf ' "%s": { "devices": ' misc
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
+ jq -s .
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 27,
    "object": ".objects/fw3.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
+ return 0
