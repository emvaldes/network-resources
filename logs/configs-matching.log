+ local configs_matching__script=configs-matching
+ targets_jobs_pid=()
+ declare -ga targets_jobs_pid
+ targets_jobs2ips_mapping=()
+ declare -gA targets_jobs2ips_mapping
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.0.100
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.0.100.list
+ :
+ [[ -d reports/192.168.0.100 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.100 -type f -name '*.cfg'
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.0.100 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.0.100.list ]]
+ local target_config=targets/192.168.0.100.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.0.100
+ local job_pid=74292
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.0.100
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.1.10
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.10.list
+ :
+ [[ -d reports/192.168.1.10 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.1.10 -type f -name '*.cfg'
+ configs_targets --search=192.168.0.100 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.0.100.list --target=targets/192.168.0.100.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.0.100.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.1.10 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.10.list ]]
+ local target_config=targets/192.168.1.10.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.10
+ local job_pid=74301
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.10
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.1.11
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.11.list
+ :
+ [[ -d reports/192.168.1.11 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.1.11 -type f -name '*.cfg'
+ configs_targets --search=192.168.1.10 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.10.list --target=targets/192.168.1.10.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.10.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.1.11 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.11.list ]]
+ local target_config=targets/192.168.1.11.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.11
+ local job_pid=74315
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.1.11
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.2.12
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.list
+ :
+ [[ -d reports/192.168.2.12 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.2.12 -type f -name '*.cfg'
+ configs_targets --search=192.168.1.11 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.11.list --target=targets/192.168.1.11.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.1.11.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.2.12 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.list ]]
+ local target_config=targets/192.168.2.12.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12
+ local job_pid=74332
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.2.12
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/192.168.100.100
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.list
+ :
+ [[ -d reports/192.168.100.100 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.100.100 -type f -name '*.cfg'
+ configs_targets --search=192.168.2.12 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.list --target=targets/192.168.2.12.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/192.168.100.100 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.list ]]
+ local target_config=targets/192.168.100.100.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100
+ local job_pid=74354
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=192.168.100.100
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/198.51.100.75
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list
+ :
+ [[ -d reports/198.51.100.75 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/198.51.100.75 -type f -name '*.cfg'
+ configs_targets --search=192.168.100.100 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.list --target=targets/192.168.100.100.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/198.51.100.75 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list ]]
+ local target_config=targets/198.51.100.75.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75
+ local job_pid=74378
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=198.51.100.75
+ for ip_address in "${target_listing[@]}"
+ local report_path=reports/203.0.113.25
+ local configs_objects=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list
+ :
+ [[ -d reports/203.0.113.25 ]]
+ for ext in "${file_extensions[@]}"
+ find reports/203.0.113.25 -type f -name '*.cfg'
+ configs_targets --search=198.51.100.75 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list --target=targets/198.51.100.75.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.console --verbose
+ for ext in "${file_extensions[@]}"
+ find reports/203.0.113.25 -type f -name '*.conf'
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list ]]
+ local target_config=targets/203.0.113.25.json
+ local configs_targets__console=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25
+ local job_pid=74407
+ targets_jobs_pid+=("${job_pid}")
+ targets_jobs2ips_mapping["${job_pid}"]=203.0.113.25
+ ((  7 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74292
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74301
+ configs_targets --search=203.0.113.25 --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list --target=targets/203.0.113.25.json --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.console --verbose
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74315
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74332
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74354
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74378
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74407
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  7 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74292
+ logger=192.168.0.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74301
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74315
+ logger=192.168.1.11
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74332
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74354
+ logger=192.168.100.100
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74378
+ valid_targets_jobs_pid+=("${pid}")
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74407
+ valid_targets_jobs_pid+=("${pid}")
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  4 > 0  ))
+ valid_targets_jobs_pid=()
+ local valid_targets_jobs_pid
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74301
+ logger=192.168.1.10
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74332
+ logger=192.168.2.12
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74378
+ logger=198.51.100.75
+ for pid in "${targets_jobs_pid[@]}"
+ kill -0 74407
+ logger=203.0.113.25
+ targets_jobs_pid=("${valid_targets_jobs_pid[@]}")
+ sleep 0.1
+ ((  0 > 0  ))
+ [[ true == true ]]
+ message 'Completed background jobs for matched IPs (7):'
+ [[ -n Completed background jobs for matched IPs (7): ]]
+ local 'message=Completed background jobs for matched IPs (7):'
+ echo -e 'Completed background jobs for matched IPs (7):'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ message ' Index  | PID    | IP Address       |'
+ [[ -n  Index  | PID    | IP Address       | ]]
+ local 'message= Index  | PID    | IP Address       |'
+ echo -e ' Index  | PID    | IP Address       |'
+ message -------------------------------------
+ [[ -n ------------------------------------- ]]
+ local message=-------------------------------------
+ echo -e -------------------------------------
+ cat -n
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.100.100
+ printf '%-6s | %-15s\n' 74354 192.168.100.100
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.2.12
+ printf '%-6s | %-15s\n' 74332 192.168.2.12
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.100
+ printf '%-6s | %-15s\n' 74292 192.168.0.100
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.1.11
+ printf '%-6s | %-15s\n' 74315 192.168.1.11
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=198.51.100.75
+ printf '%-6s | %-15s\n' 74378 198.51.100.75
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=203.0.113.25
+ printf '%-6s | %-15s\n' 74407 203.0.113.25
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.1.10
+ printf '%-6s | %-15s\n' 74301 192.168.1.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.100.100
+ target_config=targets/192.168.100.100.json
+ [[ -s targets/192.168.100.100.json ]]
+ [[ -f targets/192.168.100.100.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.100.100.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.100.100.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.100.100.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.100.100.json'
+ jq -r . targets/192.168.100.100.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.2.12
+ target_config=targets/192.168.2.12.json
+ [[ -s targets/192.168.2.12.json ]]
+ [[ -f targets/192.168.2.12.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.2.12.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.2.12.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.2.12.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.2.12.json'
+ jq -r . targets/192.168.2.12.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.0.100
+ target_config=targets/192.168.0.100.json
+ [[ -s targets/192.168.0.100.json ]]
+ [[ -f targets/192.168.0.100.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.0.100.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.0.100.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.0.100.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.0.100.json'
+ jq -r . targets/192.168.0.100.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.1.11
+ target_config=targets/192.168.1.11.json
+ [[ -s targets/192.168.1.11.json ]]
+ [[ -f targets/192.168.1.11.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.1.11.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.1.11.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.1.11.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.1.11.json'
+ jq -r . targets/192.168.1.11.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=198.51.100.75
+ target_config=targets/198.51.100.75.json
+ [[ -s targets/198.51.100.75.json ]]
+ [[ -f targets/198.51.100.75.json ]]
+ message 'Completed Configuration Targets (IP): targets/198.51.100.75.json'
+ [[ -n Completed Configuration Targets (IP): targets/198.51.100.75.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/198.51.100.75.json'
+ echo -e 'Completed Configuration Targets (IP): targets/198.51.100.75.json'
+ jq -r . targets/198.51.100.75.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=203.0.113.25
+ target_config=targets/203.0.113.25.json
+ [[ -s targets/203.0.113.25.json ]]
+ [[ -f targets/203.0.113.25.json ]]
+ message 'Completed Configuration Targets (IP): targets/203.0.113.25.json'
+ [[ -n Completed Configuration Targets (IP): targets/203.0.113.25.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/203.0.113.25.json'
+ echo -e 'Completed Configuration Targets (IP): targets/203.0.113.25.json'
+ jq -r . targets/203.0.113.25.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ for pid in "${!targets_jobs2ips_mapping[@]}"
+ ip_address=192.168.1.10
+ target_config=targets/192.168.1.10.json
+ [[ -s targets/192.168.1.10.json ]]
+ [[ -f targets/192.168.1.10.json ]]
+ message 'Completed Configuration Targets (IP): targets/192.168.1.10.json'
+ [[ -n Completed Configuration Targets (IP): targets/192.168.1.10.json ]]
+ local 'message=Completed Configuration Targets (IP): targets/192.168.1.10.json'
+ echo -e 'Completed Configuration Targets (IP): targets/192.168.1.10.json'
+ jq -r . targets/192.168.1.10.json
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
 read -r key value
+ [[ search =~ ^(search|p)$ ]]
+ local search_pattern=198.51.100.75
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ jq -e .
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.console ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.2.12.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.2.12/misc/fw1.cfg ]]
+ rel_path=reports/192.168.2.12/misc/fw1.cfg
+ site=reports
+ device=fw1.cfg
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ json_spec='{
  "specs": {
+ oIFS=' 	
'
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list
    "vendor": "cisco",
    "model": "",
+ for xitem in "${@}"
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}'
+ [[ source =~ ^(target|t)$ ]]
+ IFS==
++ wc -l
+ read -r key value
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
+ [[ source =~ ^(logger|l)$ ]]
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
+ [[ source == \d\e\b\u\g ]]
}
'
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ IFS=
+ read -r config_file
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d ' '
+ [[ ! -f reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ rel_path=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ site=reports
+ device=campus-sw-access01.cfg
++ echo -e --verbose
++ jq -n --arg file fw3.cfg --argjson lines 14 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=203.0.113.25
++ wc -l
++ echo -e --target=targets/198.51.100.75.json
++ tr -d ' '
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cfg_lines=14
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.2.12/misc/fw1.cfg
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.console ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--192.168.100.100.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ cfg_lines=17
+ IFS=
+ read -r config_file
+ [[ search =~ ^(search|p)$ ]]
+ [[ ! -f reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local search_pattern=203.0.113.25
+ site=reports
+ device=dmz-fw2-backup.cfg
+ [[ search =~ ^(source|s)$ ]]
+ [[ search =~ ^(target|t)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ target =~ ^(search|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ target =~ ^(source|s)$ ]]
+ read -r key value
+ [[ target =~ ^(target|t)$ ]]
+ local target_config=targets/198.51.100.75.json
+ [[ target =~ ^(logger|l)$ ]]
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ [[ target == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ wc -l
++ tr -d ' '
++ echo -e --source=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ json_head='{
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.console
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}'
+ jq -e .
++ jq -n --arg file branch-isr-02.cfg --argjson lines 16 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ cfg_lines=26
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ [[ source =~ ^(search|p)$ ]]
+ [[ source =~ ^(source|s)$ ]]
+ local source_config=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list
+ [[ source =~ ^(target|t)$ ]]
+ [[ source =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|p)$ ]]
+ [[ source == \d\e\b\u\g ]]
+ [[ source == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ source == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.1.10/misc/fw1.cfg ]]
+ rel_path=reports/192.168.1.10/misc/fw1.cfg
+ site=reports
+ device=fw1.cfg
++ echo -e --target=targets/203.0.113.25.json
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
++ tr -d ' '
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
+ [[ verbose =~ ^(search|p)$ ]]
+ [[ target =~ ^(search|p)$ ]]
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ target =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ target =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_config=targets/203.0.113.25.json
+ [[ verbose == \d\e\b\u\g ]]
+ [[ target =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ target == \d\e\b\u\g ]]
+ [[ target == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ target == \v\e\r\b\o\s\e ]]
'
+ for xitem in "${@}"
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.console ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--198.51.100.75.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/198.51.100.75/misc/fw1.cfg ]]
+ rel_path=reports/198.51.100.75/misc/fw1.cfg
+ site=reports
+ device=fw1.cfg
+ cfg_lines=13
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.console
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.1.10/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ wc -l
++ tr -d ' '
++ jq -n --arg file fw1.cfg --argjson lines 14 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ cfg_lines=17
+ [[ logger =~ ^(search|p)$ ]]
+ [[ logger =~ ^(source|s)$ ]]
+ [[ logger =~ ^(target|t)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.console
    "domain": "",
    "hostname": "branch-isr-02"
+ [[ logger == \d\e\b\u\g ]]
  },
  "config": {
+ [[ logger == \d\r\y\-\r\u\n ]]
    "file": "branch-isr-02.cfg",
    "lines": 16,
+ [[ logger == \v\e\r\b\o\s\e ]]
    "object": ".objects/branch-isr-02.list"
  }
}'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
++ jq -n --arg file campus-sw-access01.cfg --argjson lines 17 --arg path .objects/campus-sw-access01.list --arg specs '{
  "vendor": "cisco",
    "lines": 16,
  "model": "",
    "object": ".objects/branch-isr-02.list"
  }
  "version": "12.2",
}
  "domain": "",
'
  "hostname": "campus-sw-access01"
+ echo '{
}' '{
  "vendor": "cisco",
            specs: ($specs | fromjson),
  "model": "",
            config: {
  "version": "",
              file: $file,
  "domain": "",
              lines: $lines,
  "hostname": ""
              object: $path
}'
            }
+ IFS=
          }'
+ read -r config_file
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
+ jq -e .
              depth += gsub(/{/, "{");
+ [[ ! -f reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
+ rel_path=reports/192.168.1.11/fortinet/fg-campus-core.cfg
          }
        ' reports/198.51.100.75/misc/fw1.cfg
+ site=reports
+ device=fg-campus-core.cfg
++ echo -e --verbose
++ wc -l
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d ' '
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
+ [[ verbose =~ ^(search|p)$ ]]
+ cfg_lines=18
+ [[ verbose =~ ^(source|s)$ ]]
+ [[ verbose =~ ^(target|t)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z true ]]
+ [[ -z false ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.console ]]
+ [[ ! -s /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zY1l0QN0QS/configs-targets--203.0.113.25.list ]]
+ site_device_map=()
+ declare -A site_device_map
+ local rel_path site device cfg_lines json_head json_spec
+ IFS=
+ read -r config_file
+ [[ ! -f reports/203.0.113.25/misc/fw3.cfg ]]
+ rel_path=reports/203.0.113.25/misc/fw3.cfg
+ site=reports
+ device=fw3.cfg
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 26 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ wc -l
++ tr -d ' '
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ echo '{
+ [[ ! -f reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ rel_path=reports/192.168.2.12/cisco/branch-isr-02.cfg
  "domain": "",
  "hostname": "fg-campus-core"
+ site=reports
}'
+ device=branch-isr-02.cfg
+ jq -e .
+ cfg_lines=13
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
++ awk '
+ IFS=
          BEGIN { in_json=0; depth=0; }
+ read -r config_file
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/203.0.113.25/misc/fw3.cfg
++ wc -l
++ tr -d ' '
++ jq -n --arg file fw1.cfg --argjson lines 13 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
+ printf ' { "target": "%s", "locations": { ' 192.168.0.100
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
+ first=true
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ jq .
++ printf '%s\n' reports
++ sort -u
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ cfg_lines=20
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ rel_path=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ site=reports
+ device=fg-campus-core.cfg
++ jq -n --arg file fw1.cfg --argjson lines 17 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
+ [[ -z {
            config: {
  "specs": {
              file: $file,
    "vendor": "cisco",
              lines: $lines,
    "model": "",
              object: $path
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
            }
  },
          }'
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
++ wc -l
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
++ tr -d ' '
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
  "config": {
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.4",
    "domain": "",
    "hostname": "access-sw1-west"
  },
  "config": {
    "file": "access-sw1-west.cfg",
    "lines": 21,
    "object": ".objects/access-sw1-west.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "12.2",
    "domain": "",
    "hostname": "campus-sw-access01"
  },
+ json_head='{
  "vendor": "cisco",
  "config": {
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
    "file": "campus-sw-access01.cfg",
    "lines": 17,
    "object": ".objects/campus-sw-access01.list"
  }
}
'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ jq -e .
+ cfg_lines=32
++ jq -n --arg file fg-campus-core.cfg --argjson lines 18 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ rel_path=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ site=reports
+ device=fg-branch-vpn-01.cfg
++ wc -l
++ tr -d ' '
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
++ jq -n --arg file fw3.cfg --argjson lines 13 --arg path .objects/fw3.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
+ json_spec='{
  "specs": {
            }
    "vendor": "cisco",
          }'
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ rel_path=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ site=reports
+ device=branch-isr-02.cfg
+ cfg_lines=19
++ awk '
+ printf ' } '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
+ printf ' } } '
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ wc -l
++ tr -d ' '
+ return 0
++ jq -n --arg file branch-isr-02.cfg --argjson lines 20 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "specs": {
  "version": "v7.2.5.F",
    "vendor": "fortinet",
  "domain": "",
    "model": "FortiGate-200F",
    "version": "",
  "hostname": "fg-branch-vpn-01"
}'
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ cfg_lines=20
+ IFS=
+ read -r config_file
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ printf ' { "target": "%s", "locations": { ' 192.168.1.11
+ jq -e .
+ first=true
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ jq .
++ printf '%s\n' reports
++ sort -u
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
++ jq -n --arg file fg-campus-core.cfg --argjson lines 32 --arg path .objects/fg-campus-core.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}'
+ json_spec='{
+ jq -e .
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/203.0.113.25/misc/fw1.cfg ]]
+ rel_path=reports/203.0.113.25/misc/fw1.cfg
+ site=reports
+ device=fw1.cfg
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
++ wc -l
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
++ tr -d ' '
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 16,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ rel_path=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ site=reports
+ device=fg-campus-core.cfg
++ wc -l
+ cfg_lines=17
++ tr -d ' '
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/203.0.113.25/misc/fw1.cfg
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 19 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=18
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
+ json_head='{
  "vendor": "cisco",
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
  "model": "",
            if (in_json) {
  "version": "",
              print;
  "domain": "",
              depth += gsub(/{/, "{");
  "hostname": ""
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
}'
            }
          }
        ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
++ jq -n --arg file branch-isr-02.cfg --argjson lines 20 --arg path .objects/branch-isr-02.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ printf ' { "target": "%s", "locations": { ' 192.168.100.100
+ first=true
+ jq .
+ printf ' } '
+ printf ' } } '
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}'
+ jq -e .
+ return 0
++ printf '%s\n' reports
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 26,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 32,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.1.10/misc/switch1.conf ]]
+ rel_path=reports/192.168.1.10/misc/switch1.conf
+ site=reports
+ device=switch1.conf
++ wc -l
++ tr -d ' '
++ jq -n --arg file fw1.cfg --argjson lines 17 --arg path .objects/fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ site=reports
+ device=dmz-fw2-backup.cfg
+ cfg_lines=11
++ wc -l
++ jq -n --arg file fg-campus-core.cfg --argjson lines 18 --arg path .objects/fg-campus-core.list --arg specs '{
++ tr -d ' '
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.1.10/misc/switch1.conf
+ json_head='{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ cfg_lines=17
+ printf ' } '
+ printf ' } } '
+ echo '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}'
+ jq -e .
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ return 0
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ rel_path=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ site=reports
+ device=perimeter-fw1.cfg
++ wc -l
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
++ tr -d ' '
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ rel_path=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ site=reports
+ device=fg-branch-vpn-01.cfg
++ wc -l
++ tr -d ' '
+ cfg_lines=33
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ jq -n --arg file switch1.conf --argjson lines 11 --arg path .objects/switch1.conf.list --arg specs '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ cfg_lines=26
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}'
+ jq -e .
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 17 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 192.168.1.10
+ first=true
+ jq .
++ printf '%s\n' reports
++ sort -u
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ rel_path=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ site=reports
+ device=fg-branch-vpn-01.cfg
++ jq -n --arg file perimeter-fw1.cfg --argjson lines 33 --arg path .objects/perimeter-fw1.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 26 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ wc -l
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
++ tr -d ' '
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
{
+ jq -s .
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 14,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
+ cfg_lines=26
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 13,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "switch1.conf",
    "lines": 11,
    "object": ".objects/switch1.conf.list"
  }
}
'
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ jq -e .
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ json_spec='{
  "specs": {
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
    "model": "ASA",
    "version": "9.14(3)",
  },
    "domain": "edge.dc.example.com",
  "config": {
    "hostname": "perimeter-fw1"
    "file": "fg-branch-vpn-01.cfg",
  },
    "lines": 26,
  "config": {
    "object": ".objects/fg-branch-vpn-01.list"
    "file": "perimeter-fw1.cfg",
  }
    "lines": 33,
}'
    "object": ".objects/perimeter-fw1.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
+ site_device_map["${site}"]+='{
  "config": {
  "specs": {
    "file": "fg-branch-vpn-01.cfg",
    "vendor": "cisco",
    "lines": 26,
    "model": "ASA",
    "object": ".objects/fg-branch-vpn-01.list"
    "version": "9.14(3)",
  }
    "domain": "edge.dc.example.com",
}
    "hostname": "perimeter-fw1"
'
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 33,
+ IFS=
    "object": ".objects/perimeter-fw1.list"
+ read -r config_file
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ rel_path=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ site=reports
+ device=dmz-fw2-backup.cfg
+ printf ' } '
+ printf ' { "target": "%s", "locations": { ' 192.168.2.12
+ printf ' } } '
+ first=true
+ jq .
++ wc -l
++ tr -d ' '
++ printf '%s\n' reports
+ return 0
++ sort -u
+ cfg_lines=16
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
++ awk '
          BEGIN { in_json=0; depth=0; }
    "lines": 18,
          {
    "object": ".objects/fg-campus-core.list"
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
  }
            if (in_json) {
}
              print;
{
              depth += gsub(/{/, "{");
  "specs": {
              depth -= gsub(/}/, "}");
    "vendor": "fortinet",
              if (depth == 0) exit;
    "model": "FortiGate-60F",
            }
    "version": "v7.2.5.F",
          }
    "domain": "",
        ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ jq -s .
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 14,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-200F",
    "version": "",
    "domain": "",
    "hostname": "fg-campus-core"
  },
  "config": {
    "file": "fg-campus-core.cfg",
    "lines": 18,
    "object": ".objects/fg-campus-core.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 26 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
    "file": "fg-branch-vpn-01.cfg",
  "vendor": "fortinet",
    "lines": 26,
  "model": "FortiGate-60F",
    "object": ".objects/fg-branch-vpn-01.list"
  "version": "v7.2.5.F",
  }
  "domain": "",
}
  "hostname": "fg-branch-vpn-01"
'
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_head='{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ echo '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}'
+ jq -e .
+ printf ' } '
+ printf ' } } '
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ return 0
+ printf ' { "target": "%s", "locations": { ' 198.51.100.75
+ first=true
+ jq .
++ jq -n --arg file dmz-fw2-backup.cfg --argjson lines 16 --arg path .objects/dmz-fw2-backup.list --arg specs '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
++ printf '%s\n' reports
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
+ jq -s .
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "16.9",
    "domain": "",
    "hostname": "branch-isr-02"
  },
  "config": {
    "file": "branch-isr-02.cfg",
    "lines": 20,
    "object": ".objects/branch-isr-02.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 17,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 26,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ json_spec='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
'
+ IFS=
+ read -r config_file
+ [[ ! -f reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ rel_path=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ site=reports
+ device=fg-branch-vpn-01.cfg
++ wc -l
++ tr -d ' '
+ printf ' } '
+ printf ' } } '
+ cfg_lines=19
++ awk '
          BEGIN { in_json=0; depth=0; }
          {
            if (!in_json && $0 ~ /^[[:space:]]*{/) in_json=1;
            if (in_json) {
              print;
              depth += gsub(/{/, "{");
              depth -= gsub(/}/, "}");
              if (depth == 0) exit;
            }
          }
        ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ return 0
+ json_head='{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ echo '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}'
+ jq -e .
++ jq -n --arg file fg-branch-vpn-01.cfg --argjson lines 19 --arg path .objects/fg-branch-vpn-01.list --arg specs '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}' '{
            specs: ($specs | fromjson),
            config: {
              file: $file,
              lines: $lines,
              object: $path
            }
          }'
+ json_spec='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}'
+ site_device_map["${site}"]+='{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ IFS=
+ read -r config_file
+ printf ' { "target": "%s", "locations": { ' 203.0.113.25
+ first=true
+ jq .
++ printf '%s\n' reports
++ sort -u
+ for site in $(printf '%s\n' "${!site_device_map[@]}" | sort -u)
+ [[ -z {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 33,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ true
+ first=false
+ printf ' "%s": { "devices": ' reports
+ print '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 33,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
+ jq -s .
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ [[ -n {
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 33,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
 ]]
+ echo -en '{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw3.cfg",
    "lines": 13,
    "object": ".objects/fw3.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "",
    "version": "",
    "domain": "",
    "hostname": ""
  },
  "config": {
    "file": "fw1.cfg",
    "lines": 17,
    "object": ".objects/fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.14(3)",
    "domain": "edge.dc.example.com",
    "hostname": "perimeter-fw1"
  },
  "config": {
    "file": "perimeter-fw1.cfg",
    "lines": 33,
    "object": ".objects/perimeter-fw1.list"
  }
}
{
  "specs": {
    "vendor": "cisco",
    "model": "ASA",
    "version": "9.12(4)",
    "domain": "global.dmz.example.net",
    "hostname": "dmz-fw2-backup"
  },
  "config": {
    "file": "dmz-fw2-backup.cfg",
    "lines": 16,
    "object": ".objects/dmz-fw2-backup.list"
  }
}
{
  "specs": {
    "vendor": "fortinet",
    "model": "FortiGate-60F",
    "version": "v7.2.5.F",
    "domain": "",
    "hostname": "fg-branch-vpn-01"
  },
  "config": {
    "file": "fg-branch-vpn-01.cfg",
    "lines": 19,
    "object": ".objects/fg-branch-vpn-01.list"
  }
}
'
+ printf ' } '
+ printf ' } } '
+ return 0
