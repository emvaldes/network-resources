+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g40cAC8Gbr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g40cAC8Gbr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ basename ./scripts/devops-resources.shell
++ mktemp -d
++ script_basename=devops-resources.shell
+++ echo -n devops-resources.shell
+++ base64
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MRlepkHMVL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MRlepkHMVL
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
+ script_filename=network-extract.shell
++ console_location=console
+ script_filename=network-extract
++ mkdir -p console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ basename ./scripts/devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ script_basename=devops-resources.shell
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ base64
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FCJUjouKBP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FCJUjouKBP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ config =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ local target_config=configs/cisco/access-sw1-west.cfg
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ echo -e --platform=cisco
++ console_location=console
+ script_filename=network-extract.shell
++ mkdir -p console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console --verbose
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ [[ platform =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local target_platform=cisco
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+++ basename ./scripts/devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local search_pattern=.cache/ips.list
++ mktemp -d
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ script_basename=devops-resources.shell
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ base64
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.V9qmazDvIb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.V9qmazDvIb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
++ alias print-line=print
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ IFS==
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
++ alias validate-address=validate_address
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
++ alias warning-message=warning
+ mapfile -t search_terms
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ echo
+ touch console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export console_location=console
+ (( i++ ))
++ console_location=console
+ (( i < count ))
++ mkdir -p console
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname .cache/resources/cisco/access-sw1-west.cfg
+++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ script_basename=devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ base64
+++ tr -dc a-zA-Z0-9
++ dirname -- ./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlVCJDnNcb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlVCJDnNcb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_config=configs/cisco/campus-sw-access01.cfg
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(extract|x)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias list-file=list_file
+ IFS==
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ verbose =~ ^(config|c)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ alias system-metrics=system_metrics
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias validate-address=validate_address
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ alias warning-message=warning
+ [[ -f .cache/ips.list ]]
++ export LC_ALL=C
+ [[ .cache/ips.list != *,* ]]
++ LC_ALL=C
+ mapfile -t search_terms
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local SCRIPT_DIR=./scripts
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filename=cisco-configs.awk
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ which awk
+ alias serialize-object=serialize_objects
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ network_extract__console=console/network-extract.console
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ touch console/network-extract.console
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
++ which awk
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console --verbose
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --search=.cache/ips.list
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ mktemp -d
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+++ basename ./scripts/devops-resources.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYVkPPH4Ga
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYVkPPH4Ga
++ script_basename=devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

++ alias list-file=list_file
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
++ alias log-error=log_error
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
++ alias log-info=log_info
 network-object host 10.10.10.10'
++ alias log-warn=log_warn
+ result=0
++ alias print-message=message
+ [[ -n {
++ alias print-newline=newline
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
++ command -v -- ./scripts/network-extract.shell

++ alias pause=pause
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
++ alias print-line=print
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
++ alias print-file=print_file
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
+++ base64
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+++ tr -dc a-zA-Z0-9
 description Controlled guest devices
++ dirname -- ./scripts/network-extract.shell
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ sed '1{/^[[:space:]]*$/d;}'

+ [[ verbose =~ ^(config|c)$ ]]
object-group network Mutant-WiFi
 description Controlled guest devices
+ [[ config =~ ^(config|c)$ ]]
 network-object host 10.10.10.10 ]]
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ [[ config =~ ^(export|r)$ ]]

+ [[ verbose =~ ^(extract|x)$ ]]
version 12.4
hostname access-sw1-west

interface Vlan1
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ [[ verbose =~ ^(platform|p)$ ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ [[ config =~ ^(logger|l)$ ]]
 description Guest VLAN Gateway
+ [[ verbose =~ ^(search|s)$ ]]

object-group network MGMT-ACCESS
+ [[ config =~ ^(platform|p)$ ]]
 description Management objects
+ [[ verbose == \h\e\l\p ]]
 network-object host 192.168.0.1
+ [[ config =~ ^(search|s)$ ]]
 network-object host 192.168.0.100
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 10.10.10.10
+ [[ config == \h\e\l\p ]]

+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
object-group network Mutant-WiFi
+ [[ config == \d\r\y\-\r\u\n ]]
 description Controlled guest devices
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object host 10.10.10.10'
+ local verbose=true
+ for xitem in "${@}"
+ IFS=' 	
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ tr -d '\r'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
+ newline 2
++ grep -v '^#'
+ local count=2
++ alias parse-listings--helper=parse_listings__helper
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ extract =~ ^(config|c)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --platform=cisco
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ (( i < count ))
++ touch console/run.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console ]]
+ script_filename=network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ script_filename=network-extract
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console ]]
+ export network_extract__console=console/network-extract.console
+ case "${target_file}" in
+ network_extract__console=console/network-extract.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ touch console/network-extract.console
++ which awk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+++ basename ./scripts/devops-resources.shell
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--access-sw1-west.cfg.console
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
++ echo -e --search=.cache/ips.list
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xaZxrzAnfn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xaZxrzAnfn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ script_basename=devops-resources.shell
++ alias list-file=list_file
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ result=0
+ exit 0
++ alias warning-message=warning
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g40cAC8Gbr ]]
+ [[ logger =~ ^(config|c)$ ]]
++ export LC_ALL=C
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.g40cAC8Gbr
++ LC_ALL=C
+ [[ logger =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ logger =~ ^(export|r)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ logger =~ ^(extract|x)$ ]]
++ export logs_location=logs
+ [[ logger =~ ^(logger|l)$ ]]
++ logs_location=logs
+++ echo -n devops-resources.shell
++ mkdir -p logs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+++ base64
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
++ alias network-configs--helper=network_configs__helper
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

++ alias network-extract--helper=network_extract__helper
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ alias serialize-object=serialize_objects
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ verbose =~ ^(logger|l)$ ]]
  "hostname": "branch-isr-02"
}

+ [[ verbose =~ ^(platform|p)$ ]]
version 16.9
hostname branch-isr-02
+ [[ config =~ ^(config|c)$ ]]

+ [[ verbose =~ ^(search|s)$ ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ verbose == \h\e\l\p ]]
 description ISP uplink
+ [[ verbose == \d\e\b\u\g ]]

+ [[ verbose == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(console|o)$ ]]
+ local verbose=true
 description Workstation LAN

interface GigabitEthernet0/0/2
+ IFS=' 	
 ip address 10.0.2.3 255.255.255.0
'
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z '' ]]
 description Dev VLAN
+ debug=false
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z '' ]]

+ [[ config =~ ^(extract|x)$ ]]
+ dry_run=false
object network BlackWidow-Core
+ [[ config =~ ^(logger|l)$ ]]
 host 172.16.1.6
 description Branch router uplink NAT
+ [[ -z true ]]

++ export console_location=console
object network Hydra-Link
+ [[ -z '' ]]
 host 198.51.100.75
++ console_location=console
 description Branch NAT egress
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
+ export console_output=false
++ mkdir -p console

+ console_output=false
+ local script_filename=cisco-configs.awk
object-group network Hydra-Edge
 description Remote site uplink
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object host 192.168.2.12
+ [[ config =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
 network-object host 198.51.100.75
+ local export_objects=false

object network Panther-Gateway
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console ]]
 host 10.0.2.3
+ [[ config == \d\e\b\u\g ]]
 description Secure outbound concentrator

+ [[ -z '' ]]
object-group network Lantern-DMZ
+ [[ config == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ config == \v\e\r\b\o\s\e ]]
 description Protected but public-facing zone
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
 network-object host 172.18.1.20
+ read -r key value
 network-object host 192.168.1.11'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ which awk
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ tr -d '\r'
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ grep -v '^#'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ newline 2
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
++ mktemp -d
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ export targets_location=targets
+ local count=17
++ targets_location=targets
+ ((  count == 0  ))
++ which awk
++ export targets_logfile=.cache/targets.jobs
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ targets_logfile=.cache/targets.jobs
+ [[ 6 -eq 0 ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
+++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9qZf1Ku1yk
+ echo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9qZf1Ku1yk
+ (( i++ ))
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --search=.cache/ips.list
++ [[ 5 -lt 4 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
++ alias detect-vendor=detect_vendor
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
++ alias exit-error=exit_error
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias print-newline=newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ script_basename=devops-resources.shell
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_platform=cisco
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ IFS==
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ echo -n devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+++ base64
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--branch-isr-02.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ export console_location=console
++ console_location=console
+ result=0
++ mkdir -p console
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MRlepkHMVL ]]
+ alias serialize-object=serialize_objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MRlepkHMVL
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ logger == \h\e\l\p ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ alias parse-cisco=main
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local 'extracted_configuration={
+ [[ config =~ ^(config|c)$ ]]
  "vendor": "cisco",
  "model": "",
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
  "version": "12.2",
  "domain": "",
+ [[ config =~ ^(console|o)$ ]]
  "hostname": "campus-sw-access01"
+ [[ config =~ ^(export|r)$ ]]
}

+ [[ config =~ ^(extract|x)$ ]]
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ [[ config =~ ^(logger|l)$ ]]
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ config =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10'
+ [[ config =~ ^(search|s)$ ]]
+ result=0
+ [[ config == \h\e\l\p ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ config == \d\e\b\u\g ]]
  "model": "",
  "version": "12.2",
+ [[ config == \d\r\y\-\r\u\n ]]
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ config == \v\e\r\b\o\s\e ]]
}

+ for xitem in "${@}"
version 12.2
hostname campus-sw-access01

+ IFS==
interface Vlan1
+ read -r key value
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --verbose
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ export actions_logfile=console/run.console

version 12.2
++ actions_logfile=console/run.console
hostname campus-sw-access01

interface Vlan1
++ touch console/run.console
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=2
+ (( i = 0 ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ IFS=' 	
+ local script_filepath=./scripts/extract/cisco-configs.awk
'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ export console_output=false
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ console_output=false
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ local export_objects=false
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ script_helper=false
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z .cache/ips.list ]]
+ for xitem in "${@}"
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ search_terms=()
+ IFS==
+ declare -a search_terms
+ read -r key value
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console --verbose
+++ basename ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ echo -e --platform=fortinet
+ set -euo pipefail
++ grep -v '^\s*$'
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ mktemp -d
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
++ script_basename=devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(console|o)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ platform =~ ^(export|r)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ [[ platform =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ platform =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ local target_platform=fortinet
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ base64
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+++ tr -dc a-zA-Z0-9
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ [[ search =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RXGOevlUgc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RXGOevlUgc
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
++ which awk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z cisco ]]
+ [[ true == true ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
++ [[ 5 -lt 4 ]]
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ alias system-metrics=system_metrics
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console ]]
++ alias validate-address=validate_address
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--campus-sw-access01.cfg.console
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local awk_bin=/usr/bin/awk
++ [[ 5 -lt 4 ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'indent=            '
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ alias parse-cisco=main
+ (( i < count ))
+ echo
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ -z x ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(console|o)$ ]]
+ export logs_location=logs
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ logs_location=logs
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export jobs_location=jobs
+ [[ config =~ ^(extract|x)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mkdir -p logs
+ [[ config =~ ^(logger|l)$ ]]
++ jobs_location=jobs
+ [[ config =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ config == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ config == \d\e\b\u\g ]]
++ mkdir -p jobs
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FCJUjouKBP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FCJUjouKBP
++ echo -e --verbose
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(export|r)$ ]]
+ IFS=' 	
+ [[ extract =~ ^(extract|x)$ ]]
'
+ [[ -z '' ]]
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ debug=false
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ export console_output=false
+ [[ extract == \d\r\y\-\r\u\n ]]
+ console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ local export_objects=false
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ 6 -eq 0 ]]
interface GigabitEthernet0/2
 nameif outside
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console --verbose
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
++ dirname -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
+ oIFS=' 	
  "model": "ASA",
  "version": "9.12(4)",
'
  "domain": "global.dmz.example.net",
++ echo -e --platform=fortinet
  "hostname": "dmz-fw2-backup"
+ for xitem in "${@}"
}

+ IFS==
ASA Version 9.12(4)
+ read -r key value
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

++ sed -e '1s|^\(-\)\{1,\}||'
interface GigabitEthernet0/1
 nameif inside
++ tr -d '\r'
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ grep -v '^\s*$'
++ grep -v '^#'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
+ sed '1{/^[[:space:]]*$/d;}'
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --search=.cache/ips.list
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
++ sed -e '1s|^\(-\)\{1,\}||'
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ local SCRIPT_DIR=./scripts
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ export targets_location=targets

++ targets_location=targets
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ local script_filename=cisco-configs.awk
 description Guest access interface
++ export targets_logfile=.cache/targets.jobs

+ local script_filepath=./scripts/extract/cisco-configs.awk
interface GigabitEthernet0/1
++ targets_logfile=.cache/targets.jobs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ [[ platform == \h\e\l\p ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ which awk
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+++ basename ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ echo
+ export LC_ALL=C
+ (( i++ ))
+ LC_ALL=C
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ [[ search =~ ^(config|c)$ ]]
+ local count=2
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ IFS==
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ read -r key value
++ mktemp -d
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
++ script_basename=devops-resources.shell
++ IFS=,
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+++ echo -n devops-resources.shell
+++ base64
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMlEcMeBtT
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMlEcMeBtT
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ [[ config =~ ^(config|c)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \h\e\l\p ]]
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \d\e\b\u\g ]]
++ alias list-file=list_file
+ [[ config == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ local awk_bin=/usr/bin/awk
++ alias print-file=print_file
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias relative-configpath=relative_configpath
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias system-metrics=system_metrics
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export 'nl=\n'
++ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias network-configs--helper=network_configs__helper
++ printf '%*s' 12 ''
++ alias network-extract--helper=network_extract__helper
+ local 'indent=            '
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
+ newline
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ alias parse-cisco=main
+ (( i++ ))
+ (( i < count ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ script_helper=false
+ [[ false == true ]]
+ output_dir=.cache/resources/fortinet
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^#'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.V9qmazDvIb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.V9qmazDvIb
++ echo -e --platform=fortinet
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
+ [[ 6 -eq 0 ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 host 203.0.113.25
 description Internet-bound IP NAT

+ local first_search_entry=10.0.0.1
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console --verbose
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
object network Stark-Tower
+ [[ true == true ]]
 host 10.0.0.1
 description Core services gateway

+ oIFS=' 	
object-group network Avengers-DMZ
'
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ for xitem in "${@}"
 network-object 192.168.2.0 255.255.255.0
+ IFS==
+ read -r key value

object-group network Panther-Edge
+ message 'Search Pattern: [ .cache/ips.list ]'
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
object network Magneto-Core
+ local 'message=Search Pattern: [ .cache/ips.list ]'
 host 172.16.0.5
 description WAN firewall entry point'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ result=0
+ local count=17
+ ((  count == 0  ))
+ [[ -n {
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ newline
domain-name edge.dc.example.com

+ local count=1
interface GigabitEthernet0/0
+ (( i = 0 ))
 nameif outside
+ (( i < count ))
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ echo
object network Stark-Tower
 host 10.0.0.1
+ (( i++ ))
 description Core services gateway
+ (( i < count ))

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local 'prompt_message=Enter configuration file to be parsed: '
 network-object 192.168.2.0 255.255.255.0

+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ -z fortinet ]]
 network-object host 203.0.113.25
+ [[ true == true ]]
 network-object host 172.16.0.5

object network Magneto-Core
++ which awk
 host 172.16.0.5
 description WAN firewall entry point ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ (( i++ ))
+ (( i < count ))
++ touch console/run.console
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
++ echo -e --search=.cache/ips.list
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

++ sed -e '1s|^\(-\)\{1,\}||'
object network Stark-Tower
+ sed '1{/^[[:space:]]*$/d;}'
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ newline 2
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
++ script_basename=devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --verbose
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ printf '%*s' 12 ''
+++ base64
+ local 'indent=            '
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
+ newline
+ [[ config =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local target_config=configs/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config =~ ^(extract|x)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ config =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config == \h\e\l\p ]]
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ [[ config == \d\e\b\u\g ]]
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ newline
+ (( i++ ))
+ IFS==
+ local count=1
+ read -r key value
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HwrKS74Sz
+ [[ verbose =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HwrKS74Sz
+ [[ verbose =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ verbose =~ ^(extract|x)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
++ alias exit-error=exit_error
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ command -v -- ./scripts/network-extract.shell
++ alias log-warn=log_warn
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ [[ 5 -lt 4 ]]
++ mkdir -p logs
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ alias serialize-object=serialize_objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--perimeter-fw1.cfg.console
+ alias parse-cisco=main
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ export logs_location=logs
+ [[ extract =~ ^(logger|l)$ ]]
+ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --platform=cisco
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlVCJDnNcb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlVCJDnNcb
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ touch console/network-extract.console
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

++ export console_location=console
config firewall address
++ console_location=console
 edit "Branch-Gateway"
++ mkdir -p console
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
++ IFS=,
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
end

config firewall address
 edit "Branch-Gateway"
+ declare -a execute__netwowrk_extract
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ [[ 6 -eq 0 ]]
  set comment "Primary LAN gateway"
 next
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console --verbose
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
++ export actions_logfile=console/run.console
 next
 edit "Public-Test"
++ actions_logfile=console/run.console
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
++ touch console/run.console
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
++ which awk
 next
end'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ newline 2
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
+ [[ logger =~ ^(config|c)$ ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(console|o)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ set -euo pipefail
+ (( i < count ))
+ export LC_ALL=C
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ LC_ALL=C
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+++ basename ./scripts/devops-resources.shell
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
++ mktemp -d
+ output_dir=.cache/resources/fortinet
+ [[ search =~ ^(console|o)$ ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ script_basename=devops-resources.shell
++ echo -e --config=configs/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
+++ echo -n devops-resources.shell
+++ base64
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+++ tr -dc a-zA-Z0-9
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tSu1bYiUeo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tSu1bYiUeo
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ local SCRIPT_DIR=./scripts
++ alias log-info=log_info
++ alias log-warn=log_warn
+ local script_filename=fortinet-configs.awk
++ alias print-message=message
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ tr -d '\r'
+ [[ config =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ local target_config=configs/misc/fw3.cfg
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ alias validate-address=validate_address
++ which awk
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ true == true ]]
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
+ source ./scripts/devops-helpers.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-branch-vpn-01.cfg.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"
++ echo -e --extract=.cache/resources/misc/fw3.cfg

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
++ alias network-extract--helper=network_extract__helper
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ sed -e '1s|^\(-\)\{1,\}||'
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ alias serialize-object=serialize_objects
config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local first_search_entry=10.0.0.1
++ export jobs_location=jobs
+ local last_search_entry=203.0.113.25
++ jobs_location=jobs
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ mkdir -p jobs
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ message 'Search Pattern: [ .cache/ips.list ]'
  set alias "Campus Core Transit"
 next
 edit "wifi"
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
 next
end

+ echo -e 'Search Pattern: [ .cache/ips.list ]'
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ local count=17
 next
end
+ ((  count == 0  ))

config firewall address
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 edit "Cap-HQ"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ sed '1{/^[[:space:]]*$/d;}'
  set subnet 192.168.1.11 255.255.255.255
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
+ newline
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ local count=1
 next
+ (( i = 0 ))
 edit "Hawkeye-Nest"
+ (( i < count ))
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ result=0
 next
+ exit 0
end'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYVkPPH4Ga ]]
+ echo
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lYVkPPH4Ga
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ IFS=,
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
+ newline
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
+ local count=1
 next
+ (( i = 0 ))
 edit "wifi"
+ (( i < count ))
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ echo
 next
end

+ (( i++ ))
config firewall address
+ (( i < count ))
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
 next
 edit "Titan-WLAN-Host"
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
  set subnet 192.168.100.100 255.255.255.255
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
  set comment "Guest WiFi node"
 next
end

+ ls -al --color=auto configs/misc/fw1.cfg
config firewall address
 edit "Cap-HQ"
+ [[ extract =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ [[ extract =~ ^(console|o)$ ]]
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ extract =~ ^(export|r)$ ]]
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ [[ extract =~ ^(extract|x)$ ]]
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
+ local extract_location=.cache/resources/misc/fw3.cfg
end ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ extract =~ ^(search|s)$ ]]
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
+ [[ extract == \h\e\l\p ]]

#hostname="fg-campus-core"
+ [[ extract == \d\e\b\u\g ]]
#model="FortiGate-200F"

+ [[ extract == \d\r\y\-\r\u\n ]]
config system interface
 edit "core"
+ [[ extract == \v\e\r\b\o\s\e ]]
  set ip 10.10.10.10 255.255.255.0
+ for xitem in "${@}"
  set alias "Campus Core Transit"
 next
+ IFS==
 edit "wifi"
+ read -r key value
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ which awk
++ export console_location=console
+ script_filename=network-extract.shell
++ console_location=console
+ script_filename=network-extract
++ mkdir -p console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
++ export actions_logfile=console/run.console
+ [[ 6 -eq 0 ]]
++ actions_logfile=console/run.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ touch console/run.console
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console --verbose
+ local 'indent=            '
+ [[ true == true ]]
+ oIFS=' 	
'
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ cfg == \c\f\g ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(export|r)$ ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ extract_location=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform =~ ^(platform|p)$ ]]
+ message '                configs/fortinet/fg-testing-config.cfg'
+ local target_platform=cisco
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ [[ platform == \h\e\l\p ]]
+ newline
+ [[ platform == \d\e\b\u\g ]]
+ local count=1
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
++ echo -e --search=.cache/ips.list
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
++ export targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console ]]
++ targets_location=targets
+ case "${target_file}" in
++ export targets_logfile=.cache/targets.jobs
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
++ targets_logfile=.cache/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ basename ./scripts/devops-resources.shell
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ script_basename=devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ logger == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-campus-core.cfg.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
++ echo -e --config=configs/misc/switch1.conf
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ dirname -- ./scripts/network-extract.shell
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ base64
+++ tr -dc a-zA-Z0-9
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ echo -e --verbose
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xaZxrzAnfn ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xaZxrzAnfn
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ newline 2
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ alias network-configs--helper=network_configs__helper
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local count=2
+ [[ -z '' ]]
+ local export_objects=false
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ [[ false == true ]]
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ [[ -z .cache/ips.list ]]
+ echo
+ search_terms=()
+ (( i++ ))
+ declare -a search_terms
+ (( i < count ))
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ which awk
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ script_filename=network-extract.shell
+ [[ false == true ]]
+ [[ true == true ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ ls -al --color=auto configs/misc/fw3.cfg
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console --verbose
+ local 'indent=            '
+ oIFS=' 	
'
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fg-testing-config.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9qZf1Ku1yk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9qZf1Ku1yk
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/misc/fw3.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch3.conf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
+ output_dir=.cache/resources/misc
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ ! -d .cache/resources/misc ]]
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ newline 2
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ echo -e --extract=.cache/resources/misc/switch3.conf
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ tr -d '\r'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^\s*$'
++ grep -v '^#'
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ local first_search_entry=10.0.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ newline
+ declare -a execute__netwowrk_extract
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw1.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ exit 0
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RXGOevlUgc ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RXGOevlUgc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ verbose =~ ^(config|c)$ ]]

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ verbose =~ ^(console|o)$ ]]
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ verbose =~ ^(extract|x)$ ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ [[ verbose =~ ^(logger|l)$ ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ [[ verbose =~ ^(platform|p)$ ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

+ [[ verbose =~ ^(search|s)$ ]]
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

+ [[ verbose == \h\e\l\p ]]
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ [[ verbose == \d\r\y\-\r\u\n ]]

object network Shield-WiFi-Alias
+ [[ verbose == \v\e\r\b\o\s\e ]]
 host 10.10.10.10
+ local verbose=true
 description Guest NAT'
+ IFS=' 	
'
+ result=0
+ [[ -z '' ]]
+ debug=false
+ [[ -n {
+ [[ -z '' ]]
  "vendor": "cisco",
+ dry_run=false
  "model": "",
+ [[ -z true ]]
  "version": "",
  "domain": "",
+ [[ -z '' ]]
  "hostname": ""
+ export console_output=false
}
+ console_output=false

object-group network Wakanda-Core
+ [[ -z '' ]]
 description National Core Routing Zone
+ local export_objects=false
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console ]]
 network-object 10.0.0.0 255.255.255.0

+ [[ -z '' ]]
object-group network Panther-Edge
+ script_helper=false
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ false == true ]]
 network-object host 172.16.0.5

+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ [[ -z .cache/ips.list ]]
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ search_terms=()
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ declare -a search_terms
 network-object 192.168.100.0 255.255.255.0

+ [[ -f .cache/ips.list ]]
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ [[ .cache/ips.list != *,* ]]

object network Edge-Terminal
+ mapfile -t search_terms
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
++ tr -d '\r'

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
+ local SCRIPT_DIR=./scripts
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

+ local script_filename=cisco-configs.awk
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object 192.168.100.0 255.255.255.0

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ grep -v '^\s*$'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
++ grep -v '^#'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ which awk
+ newline 2
+ local count=2
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ ((  count == 0  ))
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ ls -al --color=auto configs/misc/switch3.conf
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--fw3.cfg.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMlEcMeBtT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMlEcMeBtT
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HwrKS74Sz ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6HwrKS74Sz
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k5UzZ63jZe/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tSu1bYiUeo ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tSu1bYiUeo
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Goze5DqHA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Goze5DqHA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kJJEV8bKan
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kJJEV8bKan
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ set -euo pipefail
++ export jobs_location=jobs
++ jobs_location=jobs
+ export LC_ALL=C
++ mkdir -p jobs
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eYTdOKwfSU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eYTdOKwfSU
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ basename ./scripts/devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
++ export console_location=console
+ LC_ALL=C
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yYkRr5QDba
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yYkRr5QDba
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ mktemp -d
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ script_basename=devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ echo -n devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.02qUzOsHAM
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.02qUzOsHAM
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IMEPFi8G35
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IMEPFi8G35
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias log-error=log_error
+++ base64
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ tr -dc a-zA-Z0-9
++ alias pause=pause
++ export jobs_location=jobs
++ jobs_location=jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B2LUbk0Hg4
++ alias list-file=list_file
++ export actions_logfile=console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B2LUbk0Hg4
++ alias print-line=print
++ mkdir -p jobs
++ export targets_location=targets
++ actions_logfile=console/run.console
++ alias log-error=log_error
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ targets_location=targets
++ alias log-info=log_info
+ export 'nl=\n'
+ nl='\n'
++ touch console/run.console
++ alias print-file=print_file
++ export targets_logfile=.cache/targets.jobs
++ alias log-warn=log_warn
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-resources.shell
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-message=message
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
++ alias print-newline=newline
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias pause=pause
++ alias print-line=print
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias list-file=list_file
++ alias warning-message=warning
++ export LC_ALL=C
++ alias log-error=log_error
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export 'nl=\n'
++ nl='\n'
++ alias print-newline=newline
++ export cache_location=.cache
++ cache_location=.cache
+ set -euo pipefail
++ export logs_location=logs
++ alias pause=pause
+ export LC_ALL=C
++ alias system-metrics=system_metrics
++ logs_location=logs
++ alias print-line=print
+ LC_ALL=C
++ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EbClWM9AMk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EbClWM9AMk
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ cache_location=.cache
+ export 'nl=\n'
++ export logs_location=logs
+ nl='\n'
++ logs_location=logs
++ alias validate-address=validate_address
+ source ./scripts/devops-resources.shell
++ mkdir -p logs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias warning-message=warning
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ [[ 5 -lt 4 ]]
++ export logs_location=logs
++ [[ -n '' ]]
++ logs_location=logs
+++ basename ./scripts/devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ mkdir -p logs
++ alias detect-vendor=detect_vendor
++ __DEVOPS_HELPERS_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias parse-listings--helper=parse_listings__helper
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias network-configs--helper=network_configs__helper
++ alias relative-configpath=relative_configpath
++ mktemp -d
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ alias serialize-object=serialize_objects
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
++ export console_location=console
++ export targets_location=targets
++ console_location=console
++ targets_location=targets
++ mkdir -p console
++ script_basename=devops-resources.shell
+ [[ -z x ]]
++ export targets_logfile=.cache/targets.jobs
+ export logs_location=logs
++ targets_logfile=.cache/targets.jobs
+ logs_location=logs
++ export jobs_location=jobs
+ mkdir -p logs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dK2sBwH9NY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dK2sBwH9NY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias print-message=message
++ mkdir -p jobs
++ alias print-newline=newline
+++ echo -n devops-resources.shell
++ alias pause=pause
++ alias print-line=print
+++ base64
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ export console_location=console
++ console_location=console
++ script_basename=devops-resources.shell
++ mkdir -p console
++ export console_location=console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ console_location=console
++ alias validate-address=validate_address
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias warning-message=warning
++ export LC_ALL=C
++ mkdir -p console
++ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ export 'nl=\n'
++ nl='\n'
+ export network_extract__console=console/network-extract.console
++ export cache_location=.cache
+ network_extract__console=console/network-extract.console
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ touch console/network-extract.console
+ set -euo pipefail
++ mkdir -p logs
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+++ echo -n devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+++ base64
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ export jobs_location=jobs
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ jobs_location=jobs
++ touch console/run.console
++ export actions_logfile=console/run.console
++ mkdir -p jobs
+++ tr -dc a-zA-Z0-9
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.497lmw4tqb/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-configs--helper=network_configs__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias network-extract--helper=network_extract__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3lb2MUoOr
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3lb2MUoOr
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ set -euo pipefail
+ alias parse-cisco=main
+ export LC_ALL=C
++ [[ -n '' ]]
+ LC_ALL=C
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ basename ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
+ [[ -z x ]]
++ alias detect-vendor=detect_vendor
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ export actions_logfile=console/run.console
++ alias print-line=print
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export 'nl=\n'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ source ./scripts/devops-helpers.shell
++ export logs_location=logs
++ logs_location=logs
++ mktemp -d
++ mkdir -p logs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export targets_location=targets
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ script_basename=devops-resources.shell
++ targets_logfile=.cache/targets.jobs
+ script_filename=network-extract.shell
+ alias serialize-object=serialize_objects
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ basename ./scripts/devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias parse-cisco=main
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mDEEWzqky7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mDEEWzqky7
+++ basename ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+++ basename ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ search =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias print-line=print
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+++ basename ./scripts/devops-resources.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ echo -n devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ script_basename=devops-resources.shell
+++ base64
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ script_basename=devops-resources.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ziy0wenzcy/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ script_basename=devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ script_basename=devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ touch console/network-extract.console
+++ echo -n devops-resources.shell
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
+++ base64
++ export targets_logfile=.cache/targets.jobs
+++ echo -n devops-resources.shell
++ targets_logfile=.cache/targets.jobs
+++ echo -n devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+++ base64
+++ echo -n devops-resources.shell
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export jobs_location=jobs
+++ basename ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ tr -dc a-zA-Z0-9
++ jobs_location=jobs
++ mkdir -p jobs
+ source ./scripts/devops-helpers.shell
+++ tr -dc a-zA-Z0-9
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xpm1drpwxr/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console --export --verbose
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B5csBJoyAO
+ set -euo pipefail
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B5csBJoyAO
++ mktemp -d
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export LC_ALL=C
+ oIFS=' 	
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
+ LC_ALL=C
+ source ./scripts/devops-resources.shell
'
++ [[ -n '' ]]
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias list-file=list_file
++ script_basename=devops-resources.shell
++ alias log-error=log_error
++ alias network-extract--helper=network_extract__helper
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ alias serialize-object=serialize_objects
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias print-file=print_file
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias validate-address=validate_address
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
++ alias warning-message=warning
++ __DEVOPS_HELPERS_SOURCED=1
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ nl='\n'
++ __DEVOPS_HELPERS_SOURCED=1
++ export cache_location=.cache
+ [[ -z x ]]
++ cache_location=.cache
++ [[ 5 -lt 4 ]]
+ export logs_location=logs
++ export logs_location=logs
+ logs_location=logs
++ alias network-configs--helper=network_configs__helper
++ logs_location=logs
++ [[ 5 -lt 4 ]]
+ [[ config == \d\e\b\u\g ]]
++ mkdir -p logs
+ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ alias network-configs--helper=network_configs__helper
++ targets_location=targets
+ alias serialize-object=serialize_objects
++ alias network-configs--helper=network_configs__helper
++ export targets_logfile=.cache/targets.jobs
++ export console_location=console
++ targets_logfile=.cache/targets.jobs
++ console_location=console
++ mkdir -p console
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+++ echo -n devops-resources.shell
+ alias parse-cisco=main
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ basename ./scripts/devops-resources.shell
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWajPBYlVI
+++ base64
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWajPBYlVI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTOboydc0W
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTOboydc0W
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias warning-message=warning
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export LC_ALL=C
++ alias list-file=list_file
++ LC_ALL=C
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ export 'nl=\n'
++ nl='\n'
++ alias print-message=message
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias print-newline=newline
++ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ script_basename=devops-resources.shell
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export actions_logfile=console/run.console
+ script_filename=network-extract.shell
++ actions_logfile=console/run.console
++ alias validate-address=validate_address
++ touch console/run.console
+ script_filename=network-extract
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ script_filename=network-extract.shell
++ nl='\n'
+ export network_extract__console=console/network-extract.console
++ export cache_location=.cache
++ cache_location=.cache
+ script_filename=network-extract
+ network_extract__console=console/network-extract.console
++ export logs_location=logs
+ export network_extract__console=console/network-extract.console
++ logs_location=logs
+ touch console/network-extract.console
++ mkdir -p logs
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
++ [[ -n '' ]]
+ network_extract__console=console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ touch console/network-extract.console
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+++ echo -n devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ base64
+ alias parse-cisco=main
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ export jobs_location=jobs
++ export targets_location=targets
++ jobs_location=jobs
++ targets_location=targets
++ mkdir -p jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9smnwsaayv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
'
+ [[ 7 -eq 0 ]]
+ for xitem in "${@}"
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wm1qugp9ua/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.udrzb4yzlb/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mktemp -d
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console --export --verbose
++ echo -e --platform=fortinet
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ziy0wenzcy/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+++ basename ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export console_location=console
++ console_location=console
++ [[ 5 -lt 4 ]]
++ mkdir -p console
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ export console_location=console
+ [[ config =~ ^(console|o)$ ]]
++ console_location=console
+ script_filename=network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
++ mkdir -p console
+ script_filename=network-extract
+ [[ config =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ touch console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list
+ alias parse-cisco=main
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlqzsgNKNR
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlqzsgNKNR
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -z x ]]
+ [[ extract =~ ^(console|o)$ ]]
+ export logs_location=logs
+ export 'nl=\n'
+ logs_location=logs
++ script_basename=devops-resources.shell
+ mkdir -p logs
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ config == \h\e\l\p ]]
++ mkdir -p logs
+ [[ config == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ config == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ [[ config == \v\e\r\b\o\s\e ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ [[ search =~ ^(search|s)$ ]]
++ export actions_logfile=console/run.console
+ [[ search == \h\e\l\p ]]
++ actions_logfile=console/run.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
++ touch console/run.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+++ basename ./scripts/devops-resources.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_platform=fortinet
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.497lmw4tqb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console --export --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ script_filename=network-extract.shell
++ mktemp -d
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ oIFS=' 	
+ script_filename=network-extract
+ [[ search =~ ^(platform|p)$ ]]
'
+ [[ search == \h\e\l\p ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ touch console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ echo -e --platform=cisco
+++ base64
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ script_basename=devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export targets_location=targets
++ targets_location=targets
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.dgcifutrvq/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
+++ basename ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KKETboomk5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KKETboomk5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ base64
++ export console_location=console
++ alias list-file=list_file
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(console|o)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(console|o)$ ]]
++ alias log-warn=log_warn
+ [[ platform =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias pause=pause
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias print-line=print
+ [[ extract == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
++ alias relative-configpath=relative_configpath
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ tr -dc a-zA-Z0-9
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias warning-message=warning
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ set -euo pipefail
+ [[ config =~ ^(search|s)$ ]]
++ nl='\n'
+ export LC_ALL=C
+ LC_ALL=C
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config == \h\e\l\p ]]
++ script_basename=devops-resources.shell
+ [[ config == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ config == \d\r\y\-\r\u\n ]]
++ logs_location=logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
++ mkdir -p logs
++ alias network-extract--helper=network_extract__helper
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
++ script_basename=devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ mktemp -d
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --platform=cisco
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ export actions_logfile=console/run.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
++ touch console/run.console
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export jobs_location=jobs
++ jobs_location=jobs
+++ tr -dc a-zA-Z0-9
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list
+ [[ -z x ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ export logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mkdir -p logs
++ mktemp -d
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.okELZwQKCa
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.okELZwQKCa
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --export
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
++ targets_location=targets
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
++ targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ touch console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias warning-message=warning
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
++ export LC_ALL=C
++ LC_ALL=C
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
++ export 'nl=\n'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ nl='\n'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export cache_location=.cache
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
++ cache_location=.cache
+ [[ logger == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
++ logs_location=logs
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
++ mkdir -p logs
+ read -r key value
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ IFS==
++ [[ -n '' ]]
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export console_location=console
+ IFS==
++ console_location=console
+ read -r key value
++ mkdir -p console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
+++ basename ./scripts/devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(extract|x)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GQrrjbYOpJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GQrrjbYOpJ
+ [[ extract =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract =~ ^(console|o)$ ]]
+ export 'nl=\n'
+ [[ extract =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ nl='\n'
+ [[ extract =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
++ [[ -n '' ]]
+ export logs_location=logs
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(platform|p)$ ]]
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
+ [[ export =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ export =~ ^(export|r)$ ]]
+ alias parse-cisco=main
++ alias log-warn=log_warn
++ mktemp -d
+ local export_objects=true
++ alias print-message=message
+ [[ export =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export =~ ^(search|s)$ ]]
+ mkdir -p logs
++ alias pause=pause
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ echo -e --export
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ script_basename=devops-resources.shell
++ echo -e --platform=cisco
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wfj94vekap/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4o8kfou2nz/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --platform=fortinet
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QP7Uu7y2jx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QP7Uu7y2jx
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --verbose
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
++ alias log-info=log_info
++ export console_location=console
+++ tr -dc a-zA-Z0-9
++ console_location=console
++ alias log-warn=log_warn
++ mkdir -p console
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ sed -e '1s|^\(-\)\{1,\}||'
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ oIFS=' 	
'
++ export jobs_location=jobs
++ jobs_location=jobs
+ for xitem in "${@}"
++ mkdir -p jobs
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+++ basename ./scripts/devops-resources.shell
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform == \h\e\l\p ]]
+ mkdir -p logs
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mktemp -d
++ script_basename=devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ export console_location=console
++ export targets_logfile=.cache/targets.jobs
++ console_location=console
++ targets_logfile=.cache/targets.jobs
++ mkdir -p console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+++ basename ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ export =~ ^(platform|p)$ ]]
+ IFS=' 	
'
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ set -euo pipefail
+ export LC_ALL=C
+ IFS==
+ LC_ALL=C
+ read -r key value
+++ echo -n devops-resources.shell
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ script_basename=devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BQ6GewVIre
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BQ6GewVIre
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rzcchjv5nf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l6Ghp2z5u8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l6Ghp2z5u8
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ base64
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export targets_location=targets
+ set -euo pipefail
++ targets_location=targets
++ [[ -n '' ]]
+ export LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export targets_logfile=.cache/targets.jobs
+ LC_ALL=C
++ __DEVOPS_HELPERS_SOURCED=1
++ targets_logfile=.cache/targets.jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+++ basename ./scripts/devops-resources.shell
++ mkdir -p logs
+++ tr -dc a-zA-Z0-9
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+++ basename ./scripts/devops-resources.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list
++ mkdir -p jobs
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ script_basename=devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
++ [[ 5 -lt 4 ]]
++ script_basename=devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
+ set -euo pipefail
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVVyZ2gO6A
++ console_location=console
++ mkdir -p console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVVyZ2gO6A
+ alias parse-cisco=main
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+++ echo -n devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ [[ search =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ search == \h\e\l\p ]]
++ alias log-warn=log_warn
+ [[ search == \d\e\b\u\g ]]
++ alias print-message=message
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ echo -n devops-resources.shell
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+++ base64
+ [[ platform =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ set -euo pipefail
++ export logs_location=logs
++ logs_location=logs
+ export LC_ALL=C
++ mkdir -p logs
+ LC_ALL=C
++ mktemp -d
+++ base64
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
++ echo -e --platform=cisco
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
++ touch console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --verbose
+ script_filename=network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ source ./scripts/devops-helpers.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export jobs_location=jobs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ jobs_location=jobs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ mkdir -p jobs
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nkzGNupIcs
++ actions_logfile=console/run.console
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nkzGNupIcs
++ touch console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ __DEVOPS_HELPERS_SOURCED=1
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QzqDEx99om
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QzqDEx99om
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RCAwBWHLU4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RCAwBWHLU4
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias network-extract--helper=network_extract__helper
++ alias print-message=message
++ alias print-newline=newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias network-configs--helper=network_configs__helper
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ export 'nl=\n'
+ nl='\n'
+ alias serialize-object=serialize_objects
+ source ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias validate-address=validate_address
++ alias log-error=log_error
++ alias log-info=log_info
++ alias warning-message=warning
++ export LC_ALL=C
++ alias log-warn=log_warn
++ LC_ALL=C
++ alias print-message=message
++ export 'nl=\n'
++ nl='\n'
++ alias print-newline=newline
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ alias parse-cisco=main
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ alias parse-cisco=main
+ export logs_location=logs
+ [[ config =~ ^(config|c)$ ]]
+ logs_location=logs
++ alias system-metrics=system_metrics
++ export targets_location=targets
+ mkdir -p logs
++ targets_location=targets
+ [[ 7 -eq 0 ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ -z x ]]
++ targets_logfile=.cache/targets.jobs
+ export logs_location=logs
+ logs_location=logs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.focfuem6te/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ mkdir -p logs
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console --export --verbose
+ [[ config =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
++ LC_ALL=C
+ export 'nl=\n'
+ nl='\n'
++ export 'nl=\n'
++ nl='\n'
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xpqtZZQqNf
++ alias exit-error=exit_error
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xpqtZZQqNf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
++ export console_location=console
+ [[ 7 -eq 0 ]]
+ export 'nl=\n'
++ console_location=console
+ nl='\n'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qxhs4opaen/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search == \h\e\l\p ]]
++ export targets_location=targets
++ alias list-file=list_file
+ source ./scripts/devops-resources.shell
++ targets_location=targets
++ mkdir -p console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias log-error=log_error
++ [[ -n '' ]]
+++ basename ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console --export --verbose
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias log-warn=log_warn
+ oIFS=' 	
'
++ alias print-message=message
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias pause=pause
++ alias log-error=log_error
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias print-line=print
++ alias log-info=log_info
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias log-warn=log_warn
+ read -r key value
++ alias print-file=print_file
++ alias print-message=message
+ [[ verbose =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias pause=pause
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias print-line=print
+ [[ search =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ [[ search =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+++ basename ./scripts/devops-resources.shell
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ script_basename=devops-resources.shell
+ script_filename=network-extract.shell
++ export jobs_location=jobs
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ grep -v '^\s*$'
+ touch console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
++ script_basename=devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ base64
+++ echo -n devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export console_location=console
++ console_location=console
+ [[ extract =~ ^(extract|x)$ ]]
++ mkdir -p console
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ tr -dc a-zA-Z0-9
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list
+++ base64
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ export console_location=console
++ console_location=console
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list
+ for xitem in "${@}"
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
+ [[ search == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wfj94vekap/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sks6dih7jt/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
++ targets_location=targets
++ console_location=console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ mkdir -p console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search == \d\r\y\-\r\u\n ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ source ./scripts/devops-helpers.shell
+ read -r key value
++ [[ -n '' ]]
++ export jobs_location=jobs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ jobs_location=jobs
++ mkdir -p jobs
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --platform=cisco
+++ basename ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ set -euo pipefail
++ actions_logfile=console/run.console
+ export LC_ALL=C
+ LC_ALL=C
++ touch console/run.console
++ alias parse-listings--helper=parse_listings__helper
+ local first_search_entry=10.0.1.2
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ local last_search_entry=10.0.1.2
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-helpers.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
++ [[ -n '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ] ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
++ [[ 5 -lt 4 ]]
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ ((  count == 0  ))
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ actions_logfile=console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ mktemp -d
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ alias serialize-object=serialize_objects
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ export == \h\e\l\p ]]
+ export logs_location=logs
+ [[ export == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list
+ mkdir -p logs
+ [[ export == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ script_basename=devops-resources.shell
+ set -euo pipefail
++ export targets_location=targets
+ export LC_ALL=C
++ targets_location=targets
+ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ targets_location=targets
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(platform|p)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAM5H4Qud5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAM5H4Qud5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ export console_location=console
+ script_filename=network-extract.shell
++ alias log-info=log_info
++ console_location=console
+ script_filename=network-extract
++ alias log-warn=log_warn
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias print-message=message
+ [[ search =~ ^(config|c)$ ]]
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ touch console/network-extract.console
++ alias print-newline=newline
+ [[ search =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ alias pause=pause
++ alias print-line=print
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ [[ config =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(search|s)$ ]]
+ LC_ALL=C
++ alias relative-configpath=relative_configpath
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+++ basename ./scripts/devops-resources.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
++ export targets_location=targets
+ [[ config == \d\e\b\u\g ]]
+ local target_platform=cisco
++ targets_location=targets
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(search|s)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+++ echo -n devops-resources.shell
++ mkdir -p logs
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xpm1drpwxr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ script_basename=devops-resources.shell
++ script_basename=devops-resources.shell
+ script_filename=network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1kD2E6jlYj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1kD2E6jlYj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ network_extract__console=console/network-extract.console
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ touch console/network-extract.console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ alias exit-error=exit_error
++ script_basename=devops-resources.shell
++ alias list-file=list_file
++ alias log-error=log_error
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m66UthLl5D
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m66UthLl5D
++ alias log-info=log_info
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
++ alias print-message=message
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-newline=newline
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
++ alias pause=pause
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
++ alias exit-error=exit_error
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ alias print-line=print
++ [[ -n '' ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
++ export actions_logfile=console/run.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ actions_logfile=console/run.console
++ alias list-file=list_file
+ [[ extract =~ ^(extract|x)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias relative-configpath=relative_configpath
++ touch console/run.console
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \d\e\b\u\g ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ alias log-error=log_error
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
++ alias log-warn=log_warn
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
++ alias print-message=message
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias pause=pause
++ alias print-line=print
++ alias validate-address=validate_address
++ alias print-file=print_file
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ IFS==
++ alias warning-message=warning
+ read -r key value
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias system-metrics=system_metrics
+++ echo -n devops-resources.shell
+ alias serialize-object=serialize_objects
++ alias validate-address=validate_address
+++ echo -n devops-resources.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+++ base64
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+++ base64
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ alias parse-cisco=main
+++ base64
++ mktemp -d
+ [[ -z x ]]
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ export logs_location=logs
+++ tr -dc a-zA-Z0-9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4o8kfou2nz/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
+ logs_location=logs
++ console_location=console
+ mkdir -p logs
++ mkdir -p console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ config =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ config == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export jobs_location=jobs
++ [[ 5 -lt 4 ]]
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ targets_logfile=.cache/targets.jobs
++ __DEVOPS_HELPERS_SOURCED=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XXXU5ISwUQ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XXXU5ISwUQ
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export actions_logfile=console/run.console
+ export 'nl=\n'
+ nl='\n'
++ actions_logfile=console/run.console
+ source ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract
++ alias parse-listings--helper=parse_listings__helper
+ export network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ alias network-extract--helper=network_extract__helper
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
++ alias log-error=log_error
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ extract =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ logger =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias print-newline=newline
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-line=print
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
+ [[ logger =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ extract == \h\e\l\p ]]
++ alias warning-message=warning
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ export LC_ALL=C
+ [[ extract == \d\e\b\u\g ]]
+ alias parse-cisco=main
++ LC_ALL=C
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export 'nl=\n'
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ -z x ]]
+ IFS==
+ mkdir -p logs
+ [[ platform == \d\e\b\u\g ]]
++ nl='\n'
+++ basename ./scripts/devops-resources.shell
+ for xitem in "${@}"
+ export logs_location=logs
+ read -r key value
++ export cache_location=.cache
+ [[ platform == \d\r\y\-\r\u\n ]]
+ logs_location=logs
++ cache_location=.cache
+ [[ platform == \v\e\r\b\o\s\e ]]
+ mkdir -p logs
+ IFS==
+ for xitem in "${@}"
++ export logs_location=logs
++ logs_location=logs
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ mkdir -p logs
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgu776hcvi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ oIFS=' 	
'
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console --export --verbose
++ export console_location=console
++ console_location=console
++ echo -e --platform=cisco
++ mkdir -p console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wm1qugp9ua/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console --export --verbose
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --platform=cisco
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ script_basename=devops-resources.shell
++ echo -e --export
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ config =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ config =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract.shell
+++ basename ./scripts/devops-resources.shell
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(platform|p)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ export actions_logfile=console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
++ actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ script_basename=devops-resources.shell
+++ base64
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+++ tr -dc a-zA-Z0-9
+ [[ 7 -eq 0 ]]
++ echo -e --platform=cisco
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.udrzb4yzlb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ platform == \h\e\l\p ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ziy0wenzcy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.9smnwsaayv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console --export --verbose
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console --export --verbose
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ oIFS=' 	
+ [[ export =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+++ base64
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
+ IFS==
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ local target_platform=cisco
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \d\e\b\u\g ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console ]]
++ mktemp -d
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ actions_logfile=console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+++ basename ./scripts/devops-resources.shell
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local export_objects=true
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --verbose
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
++ echo -e --export
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2NjOXoYFWG
++ __DEVOPS_HELPERS_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2NjOXoYFWG
++ echo -e --verbose
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ [[ -n '' ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XllRJJm74k
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XllRJJm74k
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ echo -e --verbose
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ __DEVOPS_HELPERS_SOURCED=1
++ alias exit-error=exit_error
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias log-error=log_error
++ alias print-newline=newline
++ alias log-info=log_info
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ alias print-message=message
++ alias parse-listings--helper=parse_listings__helper
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-file=print_file
++ alias print-line=print
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias validate-address=validate_address
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ script_basename=devops-resources.shell
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ export =~ ^(search|s)$ ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
+ [[ verbose =~ ^(logger|l)$ ]]
'
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ debug=false
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ script_helper=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ local verbose=true
+ [[ config =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ config == \d\r\y\-\r\u\n ]]
'
+ search_terms=()
+ alias serialize-object=serialize_objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ declare -a search_terms
+ debug=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]]
+ [[ -z '' ]]
++ script_basename=devops-resources.shell
+ dry_run=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias network-configs--helper=network_configs__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ search_terms=()
+ [[ config =~ ^(console|o)$ ]]
+ declare -a search_terms
++ export targets_location=targets
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]]
++ targets_location=targets
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list != *,* ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS=' 	
'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
+ dry_run=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
++ echo -e --export
+ [[ -z '' ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ search_terms=()
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ declare -a search_terms
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ grep -v '^#'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ alias serialize-object=serialize_objects
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ export jobs_location=jobs
++ jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p jobs
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ alias parse-cisco=main
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ -z x ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ grep -v '^\s*$'
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+++ echo -n devops-resources.shell
++ grep -v '^#'
++ grep -v '^\s*$'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ echo -n devops-resources.shell
++ grep -v '^#'
+++ base64
++ grep -v '^#'
++ export console_location=console
++ export console_location=console
++ console_location=console
+++ base64
++ mkdir -p console
++ console_location=console
++ mkdir -p console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+++ tr -dc a-zA-Z0-9
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ extract =~ ^(console|o)$ ]]
+ local last_search_entry=172.18.1.20
+ [[ extract =~ ^(export|r)$ ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local first_search_entry=172.16.0.5
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
+ local last_search_entry=172.16.0.5
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ] ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ IFS==
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ local count=1
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ] ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ local first_search_entry=10.10.10.10
+ ((  count == 0  ))
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ local count=1
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ logger =~ ^(search|s)$ ]]
+ newline
+ echo
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ (( i++ ))
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ set -euo pipefail
+ (( i++ ))
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ export LC_ALL=C
+ newline
+ LC_ALL=C
+ local count=1
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local first_search_entry=172.16.1.6
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
++ targets_logfile=.cache/targets.jobs
+ local last_search_entry=172.16.1.6
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ true == true ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ echo
+ newline
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ (( i < count ))
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ] ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ (( i = 0 ))
+ local verbose=true
++ echo -e --platform=fortinet
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ (( i < count ))
+ IFS=' 	
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
'
+ echo
+ [[ -z cisco ]]
+ local count=1
+ [[ -z '' ]]
+ [[ true == true ]]
+ (( i++ ))
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local last_search_entry=10.0.0.1
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ newline
+ newline
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local count=1
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ (( i = 0 ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(console|o)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ export =~ ^(export|r)$ ]]
+ echo
+ (( i < count ))
++ export actions_logfile=console/run.console
+ source ./scripts/devops-helpers.shell
++ export actions_logfile=console/run.console
+ (( i++ ))
++ actions_logfile=console/run.console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
+ (( i < count ))
+ echo
+ (( i++ ))
++ [[ -n '' ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
+ alias parse-cisco=main
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ -z cisco ]]
+ [[ -z x ]]
++ mktemp -d
+ export logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
+ logs_location=logs
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ echo
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias network-extract--helper=network_extract__helper
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ grep -v '^\s*$'
++ echo -e --platform=cisco
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k7n1tjORGT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k7n1tjORGT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.So2fGFmRLK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.So2fGFmRLK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^#'
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ alias list-file=list_file
+ [[ extract =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias log-error=log_error
+ [[ extract =~ ^(platform|p)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ extract =~ ^(search|s)$ ]]
++ alias log-info=log_info
+ [[ extract == \h\e\l\p ]]
++ alias log-warn=log_warn
++ alias log-warn=log_warn
+ [[ extract == \d\e\b\u\g ]]
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
+ debug=false
+ alias parse-cisco=main
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ -z '' ]]
+ [[ true == true ]]
++ alias print-line=print
+ dry_run=false
+ [[ -z x ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
+ export logs_location=logs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ logs_location=logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ mkdir -p logs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ] ]]
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
++ LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export LC_ALL=C
++ export cache_location=.cache
+ local count=1
++ cache_location=.cache
++ LC_ALL=C
+ ((  count == 0  ))
++ export logs_location=logs
+ [[ platform =~ ^(config|c)$ ]]
++ logs_location=logs
++ export 'nl=\n'
++ mkdir -p logs
++ nl='\n'
+ [[ platform =~ ^(console|o)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ local export_objects=true
++ export logs_location=logs
++ logs_location=logs
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ mkdir -p logs
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ mkdir -p logs
+ [[ platform == \h\e\l\p ]]
+ output_dir=reports/10.0.1.2/fortinet
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ targets_location=targets
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Juomb1z6Xh
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Juomb1z6Xh
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -z true ]]
+ alias serialize-object=serialize_objects
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ [[ -n '' ]]
+ [[ -z true ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias detect-vendor=detect_vendor
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ alias exit-error=exit_error
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ local count=1
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ alias log-error=log_error
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-info=log_info
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ local first_search_entry=10.0.1.2
++ alias log-warn=log_warn
+ local target_platform=cisco
+ local last_search_entry=10.0.1.2
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+++ basename ./scripts/devops-resources.shell
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
++ alias print-message=message
+ [[ platform =~ ^(search|s)$ ]]
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ alias print-newline=newline
+ [[ platform == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
++ alias pause=pause
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ] ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
++ alias print-line=print
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-configs--ips.list ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ local count=1
+ IFS==
+ ((  count == 0  ))
+ read -r key value
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ alias relative-configpath=relative_configpath
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+++ basename ./scripts/devops-resources.shell
+ newline
+ alias parse-cisco=main
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ basename ./scripts/devops-resources.shell
++ alias system-metrics=system_metrics
+ [[ -z x ]]
+ echo
+ export logs_location=logs
+ logs_location=logs
+ (( i++ ))
+ mkdir -p logs
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ cfg == \c\f\g ]]
+ [[ -z cisco ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
++ alias validate-address=validate_address
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ search_terms=()
++ alias warning-message=warning
+ [[ cfg == \c\f\g ]]
+ newline
+ declare -a search_terms
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export LC_ALL=C
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local count=1
++ LC_ALL=C
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ export 'nl=\n'
+ (( i++ ))
++ nl='\n'
+ (( i < count ))
++ export cache_location=.cache
++ cache_location=.cache
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ export logs_location=logs
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
++ logs_location=logs
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i < count ))
++ mkdir -p logs
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z cisco ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ script_filename=network-extract
++ echo -e --export
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ script_basename=devops-resources.shell
++ script_basename=devops-resources.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.18.1.20/cisco
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ output_dir=reports/172.16.0.5/cisco
++ echo -e --platform=cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ logger =~ ^(console|o)$ ]]
+++ echo -n devops-resources.shell
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.16.1.6/cisco
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
++ jobs_location=jobs
+ [[ logger =~ ^(platform|p)$ ]]
++ mkdir -p jobs
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ echo -e --verbose
+ [[ logger == \d\e\b\u\g ]]
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ read -r key value
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export console_location=console
+ network_extract__console=console/network-extract.console
++ console_location=console
+++ base64
++ mkdir -p console
+ touch console/network-extract.console
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+++ base64
+ [[ extract =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ script_filename=network-extract.shell
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ script_filename=network-extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ export network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
++ script_basename=devops-resources.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ conf == \c\o\n\f ]]
+ [[ logger == \h\e\l\p ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ logger == \d\e\b\u\g ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --export
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/10.0.1.2/misc/switch1.conf
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export actions_logfile=console/run.console
+ source ./scripts/devops-helpers.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ touch console/run.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ echo -e --export
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ alias serialize-object=serialize_objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias network-extract--helper=network_extract__helper
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ alias serialize-object=serialize_objects
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ alias parse-cisco=main
+ output_dir=reports/10.0.1.2/misc
++ grep -v '^\s*$'
+ [[ ! -d reports/10.0.1.2/misc ]]
+ local SCRIPT_DIR=./scripts
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ alias parse-cisco=main
+ [[ export =~ ^(config|c)$ ]]
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ [[ export =~ ^(console|o)$ ]]
+ logs_location=logs
++ grep -v '^#'
+ mkdir -p logs
+ [[ export =~ ^(export|r)$ ]]
++ which awk
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(export|r)$ ]]
++ actions_logfile=console/run.console
+ [[ platform =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ which awk
++ which awk
+ [[ platform == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ [[ platform == \v\e\r\b\o\s\e ]]
++ targets_location=targets
+ for xitem in "${@}"
+ IFS==
++ export targets_logfile=.cache/targets.jobs
+ read -r key value
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xpm1drpwxr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ echo -n devops-resources.shell
+ local SCRIPT_DIR=./scripts
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console --export --verbose
+++ basename ./scripts/devops-resources.shell
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo -e --platform=cisco
+++ basename ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ touch console/network-extract.console
+++ base64
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wm1qugp9ua/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.usy0auf02b/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console --export --verbose
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ oIFS=' 	
'
+ IFS=' 	
'
+ [[ -z '' ]]
+ for xitem in "${@}"
+ debug=false
+ [[ -z '' ]]
+ IFS==
+ dry_run=false
+ read -r key value
+ oIFS=' 	
'
+ [[ -z true ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo 172.16.0.5
++ echo -e --verbose
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ IFS=,
+ touch console/network-extract.console
++ echo 10.10.10.10
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ export targets_location=targets
+ declare -a execute__netwowrk_extract
++ targets_location=targets
++ IFS=,
++ IFS=,
++ echo 172.16.1.6
++ echo 172.18.1.20
++ script_basename=devops-resources.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ script_basename=devops-resources.shell
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local first_search_entry=10.0.2.3
+ local last_search_entry=10.0.2.3
+ set -euo pipefail
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ export LC_ALL=C
+ [[ true == true ]]
+ LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ] ]]
+ export console_output=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ console_output=false
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ cfg == \c\f\g ]]
+ [[ -z '' ]]
+ script_helper=false
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local count=1
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ which awk
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xowajdtlbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ which awk
++ which awk
++ which awk
+++ basename ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ mktemp -d
++ which awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ ((  count == 0  ))
+ debug=false
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+++ echo -n devops-resources.shell
+ dry_run=false
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ export console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ console_output=false
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ [[ -z true ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_helper=false
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ 7 -eq 0 ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ source ./scripts/devops-helpers.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list != *,* ]]
++ [[ 5 -lt 4 ]]
+ mapfile -t search_terms
+++ echo -n devops-resources.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
++ echo -e --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console --export --verbose
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+++ base64
+ [[ verbose =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias network-extract--helper=network_extract__helper
+ export console_output=false
+ declare -a search_terms
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
++ script_basename=devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ search_terms=()
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local awk_bin=/usr/bin/awk
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'indent=            '
+ [[ true == true ]]
++ tr -d '\r'
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tjzCstOJjA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tjzCstOJjA
++ printf '%*s' 12 ''
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ export 'nl=\n'
+ nl='\n'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ source ./scripts/devops-resources.shell
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
++ [[ -n '' ]]
+ local count=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo 10.0.1.2
++ alias detect-vendor=detect_vendor
+ local 'indent=            '
++ alias exit-error=exit_error
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ declare -a execute__netwowrk_extract
+++ echo -n devops-resources.shell
+ source ./scripts/devops-helpers.shell
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
+ newline
++ alias log-error=log_error
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-info=log_info
+ local count=1
+ local 'indent=            '
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i = 0 ))
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ [[ true == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ grep -v '^#'
+ echo
++ alias print-message=message
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
++ tr -d '\r'
++ alias print-newline=newline
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
+ newline
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ [[ -n '' ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias pause=pause
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
++ __DEVOPS_HELPERS_SOURCED=1
+++ base64
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i < count ))
++ alias print-line=print
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
++ [[ 5 -lt 4 ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
++ alias network-extract--helper=network_extract__helper
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo
++ alias print-file=print_file
+ alias parse-cisco=main
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias relative-configpath=relative_configpath
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z x ]]
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ export logs_location=logs
+ alias serialize-object=serialize_objects
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias system-metrics=system_metrics
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ alias validate-address=validate_address
++ grep -v '^\s*$'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias warning-message=warning
+ echo
+ (( i++ ))
++ export LC_ALL=C
+ (( i < count ))
++ LC_ALL=C
+ newline
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ export 'nl=\n'
+ (( i = 0 ))
+++ tr -dc a-zA-Z0-9
++ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ alias parse-cisco=main
+ (( i++ ))
++ export cache_location=.cache
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(config|c)$ ]]
++ cache_location=.cache
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
++ mkdir -p logs
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ export logs_location=logs
+ logs_location=logs
+ [[ search =~ ^(extract|x)$ ]]
+ mkdir -p logs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ local count=1
+ [[ search == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
++ grep -v '^#'
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ alias parse-cisco=main
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local first_search_entry=192.168.1.10
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local last_search_entry=192.168.1.10
+ [[ -z x ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ for xitem in "${@}"
+ logs_location=logs
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ mkdir -p logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ ((  count == 0  ))
+ [[ platform =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local target_platform=cisco
+ newline
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ oIFS=' 	
'
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ logs_location=logs
+ [[ -z cisco ]]
+ echo
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ -z fortinet ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local first_search_entry=10.10.10.10
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias network-configs--helper=network_configs__helper
+ local last_search_entry=10.10.10.10
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ output_dir=reports/10.0.0.1/cisco
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ platform == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
++ export jobs_location=jobs
+ script_filename=network-extract.shell
+ local count=1
+ ((  count == 0  ))
++ jobs_location=jobs
+ script_filename=network-extract
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ read -r key value
++ mkdir -p jobs
+ export network_extract__console=console/network-extract.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ network_extract__console=console/network-extract.console
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ alias serialize-object=serialize_objects
++ printf '%*s' 12 ''
+ touch console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
  "model": "ASA",
+ mkdir -p logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'indent=            '
  "version": "9.14(3)",
+ [[ true == true ]]
+ (( i < count ))
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ local 'prompt_message=Enter configuration file to be parsed: '
domain-name edge.dc.example.com

+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ newline
 network-object host 172.16.0.5
+ [[ -z cisco ]]
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))

+ echo
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
+ alias parse-cisco=main
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search =~ ^(export|r)$ ]]
  "vendor": "cisco",
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "ASA",
+ [[ platform == \v\e\r\b\o\s\e ]]
  "version": "9.14(3)",
+ (( i < count ))
  "domain": "edge.dc.example.com",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z x ]]
+ echo
+ export logs_location=logs
  "hostname": "perimeter-fw1"
+ (( i++ ))
}
+ (( i < count ))
+ logs_location=logs
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ mkdir -p logs
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'

ASA Version 9.14(3)
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
 network-object host 203.0.113.25
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
++ tr -d '\r'
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ script_filename=network-extract.shell
  "hostname": "branch-isr-02"
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
}
+ touch console/network-extract.console

version 16.9
hostname branch-isr-02
++ grep -v '^\s*$'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ sed -e '1s|^\(-\)\{1,\}||'


object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ echo -e --config=.cache/resources/misc/fw3.cfg
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ -n {
 description ISP uplink
  "vendor": "cisco",
  "model": "ASA",

  "version": "9.14(3)",
object network BlackWidow-Core
  "domain": "edge.dc.example.com",
+ [[ config =~ ^(config|c)$ ]]
  "hostname": "perimeter-fw1"
}

+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
ASA Version 9.14(3)
+ [[ config =~ ^(console|o)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
+ [[ config =~ ^(export|r)$ ]]
 description Internet-facing proxy systems
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ config =~ ^(extract|x)$ ]]
 host 172.16.1.6
 network-object host 203.0.113.25
++ grep -v '^#'
 network-object host 172.16.0.5
  "model": "",
  "version": "16.9",

  "domain": "",
object network Magneto-Core
  "hostname": "branch-isr-02"
 host 172.16.0.5
}
 description WAN firewall entry point ]]
+ local 'extracted_configuration={
+ [[ config =~ ^(logger|l)$ ]]

+ echo -en '{
version 16.9
  "vendor": "cisco",
+ [[ config =~ ^(platform|p)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
hostname branch-isr-02
  "vendor": "cisco",
+ [[ config =~ ^(search|s)$ ]]
  "domain": "edge.dc.example.com",
 description Branch router uplink NAT'
+ [[ config == \h\e\l\p ]]
  "hostname": "perimeter-fw1"
}
+ [[ config == \d\e\b\u\g ]]

  "model": "",

ASA Version 9.14(3)
+ [[ config == \d\r\y\-\r\u\n ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
++ export console_location=console

object-group network Panther-Edge
+ result=0
object-group network Lantern-DMZ
 description Internet-facing proxy systems
+ [[ 7 -eq 0 ]]
 network-object host 203.0.113.25
++ console_location=console
  "version": "12.4",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rzcchjv5nf/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 172.16.0.5
 description Protected but public-facing zone

object network Magneto-Core
+ for xitem in "${@}"
 host 172.16.0.5
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console --export --verbose
 description WAN firewall entry point'
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ mktemp -d
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ -n {
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
  "vendor": "cisco",
+ read -r key value
  "domain": "",
++ mkdir -p console
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
 network-object host 172.18.1.20
+ [[ config =~ ^(console|o)$ ]]
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ config =~ ^(export|r)$ ]]
hostname access-sw1-west
  "model": "",
+ [[ config =~ ^(extract|x)$ ]]
  "version": "16.9",
  "domain": "",
 network-object host 192.168.1.11'
+ [[ config =~ ^(logger|l)$ ]]
  "hostname": "branch-isr-02"
}
+ [[ config =~ ^(platform|p)$ ]]

version 16.9

hostname branch-isr-02
object-group network MGMT-ACCESS
 description Management objects
+ [[ config =~ ^(search|s)$ ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100

+ result=0
 network-object host 10.10.10.10
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/0/0
+ [[ config == \v\e\r\b\o\s\e ]]

object-group network Mutant-WiFi
 ip address 172.16.1.6 255.255.255.0
 description Controlled guest devices
 description ISP uplink
+ for xitem in "${@}"

+ [[ -n {
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
 network-object host 10.10.10.10'
+ IFS==
+ sed '1{/^[[:space:]]*$/d;}'
  "vendor": "cisco",
+ result=0
+ read -r key value
  "model": "",
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "version": "16.9",
+ script_filename=network-extract.shell
  "domain": "",
  "hostname": "branch-isr-02"
  "domain": "",
}
  "hostname": "access-sw1-west"
+ script_filename=network-extract
}


version 12.4
version 16.9
+ export network_extract__console=console/network-extract.console
hostname branch-isr-02

object-group network Lantern-DMZ
hostname access-sw1-west
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ network_extract__console=console/network-extract.console

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.1.11 ]]
 network-object host 192.168.0.1
+ touch console/network-extract.console
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
++ command -v -- ./scripts/network-extract.shell
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ print '{
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "",
  "version": "16.9",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
  "domain": "",
  "hostname": "branch-isr-02"
}
}

version 16.9

hostname branch-isr-02
version 16.9

interface GigabitEthernet0/0/0
hostname branch-isr-02
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list
 ip address 172.16.1.6 255.255.255.0

 description ISP uplink
+ local SCRIPT_PATH=./scripts/network-extract.shell
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ -n {
hostname branch-isr-02
  "vendor": "cisco",

  "model": "",
  "version": "16.9",
interface GigabitEthernet0/0/0
  "domain": "",
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
  "hostname": "branch-isr-02"

}
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
+ print '{
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
  "vendor": "cisco",
 network-object host 192.168.1.11'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
  "model": "",
  "version": "12.4",
  "domain": "",
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
  "model": "",
  "version": "12.4",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgu776hcvi/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console --export --verbose
object-group network MGMT-ACCESS
+ [[ cfg == \c\f\g ]]
 description Management objects
 network-object host 192.168.0.1
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 192.168.0.100
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
 network-object host 10.10.10.10

+ [[ verbose =~ ^(search|s)$ ]]
object-group network Mutant-WiFi
+ newline 2
+ local 'extracted_configuration={
+ oIFS=' 	
'
 description Controlled guest devices
  "vendor": "cisco",
 network-object host 10.10.10.10 ]]
+ echo -en '{
+ for xitem in "${@}"
  "model": "",
  "vendor": "cisco",
  "version": "",
  "model": "",
  "domain": "",
  "version": "12.4",
+ IFS==
  "domain": "",
  "hostname": "access-sw1-west"
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
  "hostname": ""
+ read -r key value
}
+ (( i = 0 ))

version 12.4
}
hostname access-sw1-west
+ (( i < count ))

+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5yaFtr2A7F
+ [[ verbose == \h\e\l\p ]]
+ echo

interface Vlan10
object-group network MGMT-ACCESS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5yaFtr2A7F
 description Management objects
 network-object host 192.168.0.1
 ip address 10.0.1.2 255.255.255.0'
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.0.100
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 network-object host 10.10.10.10

+ result=0
+ export 'nl=\n'
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Mutant-WiFi
+ echo
++ export actions_logfile=console/run.console
+ [[ -n {
 description Controlled guest devices
+ source ./scripts/devops-resources.shell
  "vendor": "cisco",
+ [[ search =~ ^(extract|x)$ ]]
  "model": "",
+ (( i++ ))
 network-object host 10.10.10.10'
  "version": "",
+ (( i < count ))
  "domain": "",
+ for xitem in "${@}"
++ actions_logfile=console/run.console
  "hostname": ""
+ IFS==
}
+ read -r key value
++ touch console/run.console

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
++ [[ -n '' ]]
+ [[ true == true ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ alias detect-vendor=detect_vendor
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ alias exit-error=exit_error
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ 7 -eq 0 ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sks6dih7jt/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias list-file=list_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console --export --verbose
+ (( i++ ))
+ newline
+ (( i < count ))
++ alias log-error=log_error
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias log-info=log_info
+ oIFS=' 	
'
+ local first_search_entry=10.0.0.1
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ local last_search_entry=10.0.0.1
++ alias print-message=message
+ IFS==
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ read -r key value
++ alias print-newline=newline
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ alias pause=pause
+ [[ search =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias print-file=print_file
+ [[ search =~ ^(platform|p)$ ]]
++ alias relative-configpath=relative_configpath
+ [[ search =~ ^(search|s)$ ]]
++ alias system-metrics=system_metrics
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/misc/fw3.cfg
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ [[ config =~ ^(search|s)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ config == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ for xitem in "${@}"
+ print '{
++ export cache_location=.cache
  "vendor": "cisco",
++ cache_location=.cache
  "model": "",
  "version": "",
++ export logs_location=logs
  "domain": "",
+ IFS==
++ logs_location=logs
  "hostname": ""
}

interface Vlan10
++ mkdir -p logs
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ echo -e --export
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ output_dir=reports/192.168.1.10/fortinet
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ read -r key value
+ newline 2
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ newline 2
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline 2
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local count=2
+ for xitem in "${@}"
+ local count=2
+ IFS==
+ local count=2
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ output_dir=reports/10.10.10.10/cisco
+ (( i++ ))
+ (( i++ ))
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ (( i < count ))
+ (( i < count ))
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ true == true ]]
+ newline
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
++ targets_location=targets
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search =~ ^(platform|p)$ ]]
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ] ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i < count ))
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ script_filename=network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ script_filename=network-extract
+ [[ -z true ]]
+ [[ -z '' ]]
+ export network_extract__console=console/network-extract.console
+ export console_output=false
+ console_output=false
+ network_extract__console=console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ [[ -z true ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
++ echo -e --platform=fortinet
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ touch console/network-extract.console
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
+ [[ export =~ ^(config|c)$ ]]
++ mkdir -p jobs
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ export == \h\e\l\p ]]
++ IFS=,
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
++ echo 10.0.1.2
+ IFS==
+ read -r key value
++ echo -e --verbose
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ read -r key value
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ which awk
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z fortinet ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ export console_location=console
++ console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xijV3iT524
++ mkdir -p console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xijV3iT524
+ [[ logger =~ ^(search|s)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger == \h\e\l\p ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ logger == \d\e\b\u\g ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ echo -e --verbose
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ verbose =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
++ alias print-newline=newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
++ alias pause=pause
+ (( i++ ))
++ alias print-line=print
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ export LC_ALL=C
+ IFS==
++ LC_ALL=C
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ziy0wenzcy/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export 'nl=\n'
+ [[ config =~ ^(extract|x)$ ]]
++ nl='\n'
++ export cache_location=.cache
+ [[ config =~ ^(logger|l)$ ]]
++ cache_location=.cache
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console --export --verbose
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ mkdir -p logs
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ oIFS=' 	
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
++ echo -e --export
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ local verbose=true
+ [[ false == true ]]
+ IFS=' 	
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ tr -d '\r'
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]]
+ [[ platform =~ ^(config|c)$ ]]
+ search_terms=()
+ declare -a search_terms
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]]
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ read -r key value
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ export =~ ^(config|c)$ ]]
+ script_helper=false
+ IFS==
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ [[ export =~ ^(export|r)$ ]]
+ search_terms=()
+ [[ config =~ ^(config|c)$ ]]
+ declare -a search_terms
+ local export_objects=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(console|o)$ ]]
+ mapfile -t search_terms
++ printf '%*s' 12 ''
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --export
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local 'indent=            '
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ IFS==
++ tr -d '\r'
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
++ export actions_logfile=console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ grep -v '^\s*$'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ actions_logfile=console/run.console
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ touch console/run.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ IFS==
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ grep -v '^#'
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
++ grep -v '^#'
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
+ IFS==
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local first_search_entry=172.31.255.254
+ [[ export =~ ^(export|r)$ ]]
+ local last_search_entry=172.31.255.254
+ local export_objects=true
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export console_location=console
+ [[ -z .cache/resources/misc/switch1.conf ]]
++ console_location=console
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z cisco ]]
++ mkdir -p console
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local export_objects=true
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ output_dir=reports/10.0.2.3/cisco
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ set -euo pipefail
+ (( i < count ))
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo
+ export LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ LC_ALL=C
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=192.168.1.11
++ tr -d '\r'
+ local count=1
+ [[ extract == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ (( i = 0 ))
+ local last_search_entry=192.168.1.11
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ echo
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ (( i++ ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local first_search_entry=192.0.2.50
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ IFS==
+ (( i < count ))
+ read -r key value
+ local last_search_entry=192.0.2.50
+ [[ export == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ] ]]
+ for xitem in "${@}"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ IFS==
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
++ grep -v '^\s*$'
+ ((  count == 0  ))
+ [[ export =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ export =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local count=1
+ local export_objects=true
+ ((  count == 0  ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ [[ export =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
++ echo -e --platform=cisco
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo -e --verbose
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
++ export targets_location=targets
+ (( i < count ))
++ targets_location=targets
+ [[ extract == \h\e\l\p ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ newline
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
++ export actions_logfile=console/run.console
+ (( i = 0 ))
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ actions_logfile=console/run.console
++ touch console/run.console
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
++ echo -e --platform=fortinet
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.0.0.1/fortinet
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+++ basename ./scripts/devops-resources.shell
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=192.168.2.12
+ [[ verbose =~ ^(config|c)$ ]]
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --platform=cisco
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --export
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export targets_location=targets
+ [[ verbose =~ ^(search|s)$ ]]
++ targets_location=targets
+ [[ verbose == \h\e\l\p ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ] ]]
++ targets_logfile=.cache/targets.jobs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KaCmfeduFy
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ local SCRIPT_DIR=./scripts
+ ((  count == 0  ))
+ [[ verbose =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ platform =~ ^(export|r)$ ]]
++ script_basename=devops-resources.shell
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local verbose=true
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KaCmfeduFy
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ IFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ conf == \c\o\n\f ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
'
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ local target_platform=cisco
+ nl='\n'
+ (( i = 0 ))
+ [[ -z '' ]]
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ dry_run=false
+ (( i < count ))
++ alias detect-vendor=detect_vendor
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ export console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
++ alias exit-error=exit_error
+ local verbose=true
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform == \d\e\b\u\g ]]
+ IFS=' 	
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
'
+ console_output=false
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/misc/switch3.conf
+ IFS==
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ debug=false
+ IFS==
+ [[ -z '' ]]
+ dry_run=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console ]]
++ alias list-file=list_file
+ [[ -z '' ]]
+ [[ -z '' ]]
+++ basename ./scripts/devops-resources.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console ]]
+ (( i = 0 ))
+ script_helper=false
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ search_terms=()
+ search_terms=()
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
++ which awk
++ alias pause=pause
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-line=print
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
++ alias print-file=print_file
  "model": "FortiGate-60F",
+ [[ platform =~ ^(export|r)$ ]]
  "version": "v7.2.5.F",
+ [[ cfg == \c\f\g ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ alias relative-configpath=relative_configpath
+ declare -a search_terms
+ local verbose=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list != *,* ]]
+ IFS=' 	
+ mapfile -t search_terms
'
+ declare -a search_terms
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
+ dry_run=false
+ [[ verbose =~ ^(console|o)$ ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ platform =~ ^(extract|x)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
+ [[ platform =~ ^(logger|l)$ ]]
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ platform =~ ^(platform|p)$ ]]
 next
++ echo -e --platform=cisco
end'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local target_platform=cisco
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export console_output=false
+ result=0
+ console_output=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ -n {
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console ]]
++ alias validate-address=validate_address
  "vendor": "fortinet",
+ [[ -z '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ script_helper=false
++ export LC_ALL=C
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
  "model": "FortiGate-60F",
++ LC_ALL=C
+ [[ platform =~ ^(config|c)$ ]]
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "v7.2.5.F",
+ mapfile -t search_terms
  "domain": "",
++ export 'nl=\n'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
  "hostname": "fg-branch-vpn-01"
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(config|c)$ ]]
++ nl='\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]]
++ export cache_location=.cache
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ search_terms=()
++ cache_location=.cache
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
}
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ export logs_location=logs
+ declare -a search_terms

+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ logs_location=logs
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]]
+ local target_platform=cisco
++ mkdir -p logs
#hostname="fg-branch-vpn-01"
+ [[ verbose == \d\r\y\-\r\u\n ]]
#model="FortiGate-60F"
+ local export_objects=true
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS=' 	
config firewall address
 edit "Spidey-Sandbox"
+++ basename ./scripts/devops-resources.shell
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
'
  set subnet 10.0.1.2 255.255.255.255
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ mapfile -t search_terms
+ read -r key value
+ [[ -z '' ]]
  set comment "QA node in Peter's Lab"
+ [[ export =~ ^(platform|p)$ ]]
+ debug=false
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
 next
end ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ dry_run=false
+ [[ export == \h\e\l\p ]]
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ [[ -z true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ script_helper=false
+++ echo -n devops-resources.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
++ script_basename=devops-resources.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]]
+ local SCRIPT_DIR=./scripts
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list != *,* ]]
+ local script_filename=fortinet-configs.awk
+ mapfile -t search_terms
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+++ base64
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

++ sed -e '1s|^\(-\)\{1,\}||'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+++ tr -dc a-zA-Z0-9
config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
++ grep -v '^\s*$'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ grep -v '^\s*$'
++ tr -d '\r'
+++ echo -n devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+++ base64
++ grep -v '^#'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+++ tr -dc a-zA-Z0-9
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ which awk
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
++ echo -e --verbose
+ sed '1{/^[[:space:]]*$/d;}'
++ tr -d '\r'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local target_platform=cisco
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract == \h\e\l\p ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local first_search_entry=192.0.2.50
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ local last_search_entry=192.0.2.50
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ grep -v '^\s*$'
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ local first_search_entry=192.168.0.1
++ alias network-configs--helper=network_configs__helper
+ local last_search_entry=192.168.0.1
+ for xitem in "${@}"
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ IFS==
+ [[ true == true ]]
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.0.2.3
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
++ [[ -n '' ]]
+ alias serialize-object=serialize_objects
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ grep -v '^#'
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ] ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-configs--ips.list ]'
+ declare -a execute__netwowrk_extract
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ] ]]
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ ((  count == 0  ))
+ [[ logger =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ alias parse-cisco=main
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
+ newline
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
+ for xitem in "${@}"
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ IFS==
+ newline 2
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ echo
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ alias parse-cisco=main
+ local count=2
+ (( i++ ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ [[ -z x ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ export logs_location=logs
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(search|s)$ ]]
+ logs_location=logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ (( i++ ))
+ mkdir -p logs
+ echo
+ (( i < count ))
++ which awk
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS=' 	
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ for xitem in "${@}"
'
+ [[ -z cisco ]]
+ [[ -z '' ]]
+ echo
+ debug=false
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z '' ]]
+ (( i++ ))
+ [[ true == true ]]
+ dry_run=false
+ [[ -z cisco ]]
+ IFS==
++ echo -e --export
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ true == true ]]
+ [[ -z true ]]
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
++ dirname -- ./scripts/network-extract.shell
+ script_helper=false
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
++ echo 10.0.0.1
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ echo
+ search_terms=()
+ (( i++ ))
+ declare -a search_terms
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ local first_search_entry=192.168.0.100
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list != *,* ]]
+ local last_search_entry=192.168.0.100
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ local count=1
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ (( i = 0 ))
+ (( i = 0 ))
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
++ export console_location=console
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i++ ))
+ (( i++ ))
+ [[ true == true ]]
+ newline
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i < count ))
++ console_location=console
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
++ mkdir -p console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ (( i < count ))
+ echo
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i++ ))
++ echo -e --export
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -z cisco ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ output_dir=reports/192.168.2.12/cisco
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ script_filename=network-extract.shell
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ script_filename=network-extract
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ touch console/network-extract.console
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ script_basename=devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
++ echo -e --export
++ tr -d '\r'
++ which awk
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ [[ logger =~ ^(logger|l)$ ]]
+ export LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
+ LC_ALL=C
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
++ grep -v '^\s*$'
+ IFS==
+ read -r key value
++ which awk
++ which awk
++ printf '%*s' 12 ''
+ [[ export =~ ^(config|c)$ ]]
++ grep -v '^#'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4o8kfou2nz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ export =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
++ echo -e --verbose
+ for xitem in "${@}"
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
++ export actions_logfile=console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ local 'indent=            '
+ [[ export =~ ^(search|s)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ export == \h\e\l\p ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ newline
+ [[ 7 -eq 0 ]]
+ local count=1
+ for xitem in "${@}"
+ [[ export =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.focfuem6te/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console --export --verbose
+ for xitem in "${@}"
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ export =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ [[ export =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ mktemp -d
'
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ for xitem in "${@}"
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local count=1
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ IFS==
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ serialize_objects
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ search =~ ^(extract|x)$ ]]
+ local first_search_entry=10.0.2.3
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local last_search_entry=10.0.2.3
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ config == \d\e\b\u\g ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search == \d\e\b\u\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ printf '%*s' 12 ''
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local count=1
++ IFS=,
+ (( i = 0 ))
++ echo 172.31.255.254
++ IFS=,
++ IFS=,
++ echo 192.168.1.11
++ echo 192.0.2.50
++ echo -e --export
+ local 'indent=            '
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ (( i < count ))
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ -z cisco ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --verbose
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ local count=1
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ (( i < count ))
++ echo -e --verbose
+ (( i = 0 ))
++ export targets_logfile=.cache/targets.jobs
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list
++ targets_logfile=.cache/targets.jobs
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
+ IFS=' 	
+ [[ logger =~ ^(platform|p)$ ]]
'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ output_dir=reports/192.0.2.50/cisco
+ debug=false
+ [[ logger == \h\e\l\p ]]
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ which awk
++ which awk
++ which awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnGLpCN6ub
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnGLpCN6ub
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+++ basename ./scripts/devops-resources.shell
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ export console_output=false
+ IFS==
+ console_output=false
+ [[ -z true ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ local export_objects=true
+ script_helper=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ [[ export =~ ^(platform|p)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ export =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list != *,* ]]
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ output_dir=reports/192.168.100.100/cisco
+ [[ ! -d reports/192.168.100.100/cisco ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ read -r key value
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ verbose =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ alias print-file=print_file
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local parent_dir=reports/10.0.1.2/fortinet
++ alias relative-configpath=relative_configpath
+ output_dir=reports/192.168.0.100/cisco
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ verbose == \h\e\l\p ]]
++ alias system-metrics=system_metrics
+ [[ verbose == \d\e\b\u\g ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
++ command -v -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ search =~ ^(config|c)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(console|o)$ ]]
+ export LC_ALL=C
+ [[ search =~ ^(export|r)$ ]]
+ LC_ALL=C
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
++ alias validate-address=validate_address
+ [[ search =~ ^(extract|x)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
+ [[ verbose =~ ^(extract|x)$ ]]
  "hostname": "branch-isr-02"
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS=' 	
+ [[ verbose == \h\e\l\p ]]
'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
}
+ [[ search =~ ^(search|s)$ ]]

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ dry_run=false
+ [[ verbose == \h\e\l\p ]]

++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \d\e\b\u\g ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ -z true ]]
++ script_basename=devops-resources.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local verbose=true
+ IFS==
+ IFS=' 	
+ read -r key value
object network Panther-Gateway
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ local verbose=true
+ IFS=' 	
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -z '' ]]
+ export console_output=false
+ debug=false
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ result=0
+ console_output=false
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ mktemp -d
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -n {
+ [[ -z true ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ local SCRIPT_PATH=./scripts/network-extract.shell
}

version 16.9
hostname branch-isr-02
++ echo -e --verbose

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]]
+ [[ -z '' ]]
+ search_terms=()
+ export console_output=false
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]]
+ [[ -z '' ]]
+ console_output=false
+ script_helper=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list != *,* ]]
++ IFS=,
++ dirname -- ./scripts/network-extract.shell
++ echo 192.168.2.12
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
++ printf '%*s' 12 ''
+ [[ cfg == \c\f\g ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ tr -d '\r'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]]
+ [[ false == true ]]
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ search_terms=()
++ printf '%*s' 12 ''
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ dirname -- ./scripts/network-extract.shell
}
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --export
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]]
+ local 'indent=            '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
++ grep -v '^\s*$'

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local 'indent=            '
config firewall address
+ [[ true == true ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print '{
+ (( i++ ))
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
  "vendor": "cisco",
+ [[ config == \h\e\l\p ]]
  "model": "",
+ [[ config == \d\e\b\u\g ]]
  "version": "16.9",
+ [[ config == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ config == \v\e\r\b\o\s\e ]]
  "hostname": "branch-isr-02"
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ grep -v '^#'
 edit "IronMan-HQ"
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
  "version": "16.9",
+ newline
  "domain": "",
  "hostname": "branch-isr-02"
 next
}
+ local count=1

+ (( i = 0 ))
version 16.9
+ (( i < count ))
hostname branch-isr-02

+ echo
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
+ (( i++ ))
 host 10.0.2.3
+ (( i < count ))
 description Secure outbound concentrator ]]
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local search_pattern
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -en '{
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
++ printf '%*s' 12 ''

object network Panther-Gateway
 host 10.0.2.3
++ dirname -- ./scripts/network-extract.shell
 description Secure outbound concentrator'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+++ echo -n devops-resources.shell
+ local 'indent=            '
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.riyFgOqD17
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.riyFgOqD17
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ [[ -n '' ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ which awk
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
++ export jobs_location=jobs
++ alias detect-vendor=detect_vendor
++ jobs_location=jobs
++ alias exit-error=exit_error
++ mkdir -p jobs
end ]]
++ alias list-file=list_file
+ local SCRIPT_DIR=./scripts
+++ base64
++ alias log-error=log_error
+ newline
++ alias log-info=log_info
+ local count=1
+ (( i = 0 ))
++ alias log-warn=log_warn
+ (( i < count ))
+ echo
++ alias print-message=message
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
++ tr -d '\r'
++ alias print-newline=newline
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
++ alias pause=pause
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
++ alias print-line=print
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-file=print_file
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias relative-configpath=relative_configpath
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ grep -v '^\s*$'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ tr -d '\r'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^\s*$'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
++ grep -v '^#'
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ verbose =~ ^(search|s)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ grep -v '^\s*$'
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^#'
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ verbose == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i < count ))
+ IFS=' 	
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
++ cut -d/ -f2
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ grep -v '^#'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ] ]]
+ local export_objects=true
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ output_dir=reports/10.0.2.3/misc
+ local awk_bin=/usr/bin/awk
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -z '' ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ debug=false
+ local count=2
+ [[ -z '' ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ dry_run=false
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ [[ export =~ ^(extract|x)$ ]]
+ (( i < count ))
+ export console_output=false
+ [[ export =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ [[ extract =~ ^(console|o)$ ]]
+ read -r key value
+ ((  count == 0  ))
++ export jobs_location=jobs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local first_search_entry=172.18.1.20
+ [[ extract =~ ^(export|r)$ ]]
++ jobs_location=jobs
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ local last_search_entry=172.18.1.20
++ mkdir -p jobs
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ console_output=false
+ [[ extract == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console ]]
+ (( i++ ))
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ echo
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ script_helper=false
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ false == true ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ newline
+ search_terms=()
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
+ (( i++ ))
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ source ./scripts/devops-helpers.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
}
+ [[ export == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ] ]]

++ which awk
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
#hostname="fg-branch-vpn-01"
+ local count=1
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-configs--ips.list ]'
+ search_pattern=10.0.1.2
+ (( i = 0 ))
#model="FortiGate-60F"
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
++ printf '%*s' 12 ''
+ mkdir -p reports/10.0.1.2/fortinet/.objects
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ which awk

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local first_search_entry=192.168.0.1
+ [[ -n {
++ export console_location=console
+ local 'prompt_message=Enter configuration file to be parsed: '
  "vendor": "fortinet",
+ local last_search_entry=192.168.0.1
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ console_location=console
+ [[ -z fortinet ]]
  "model": "FortiGate-60F",
+ [[ true == true ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
  "version": "v7.2.5.F",
+ IFS==
+ local count=1
+ [[ true == true ]]
+ read -r key value
  "domain": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ] ]]
++ [[ -n '' ]]
  "hostname": "fg-branch-vpn-01"
+ ((  count == 0  ))
}

++ mkdir -p console
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
#hostname="fg-branch-vpn-01"
+ newline
#model="FortiGate-60F"
+ local 'indent=            '
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=1
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]

+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ true == true ]]
config firewall address
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-configs--ips.list ]'
  set comment "Main node at Stark Tower"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ] ]]
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
 next
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
end ]]
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ (( i < count ))
+ echo -en '{
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-60F",
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
  "version": "v7.2.5.F",
+ local count=1
  "domain": "",
+ ((  count == 0  ))
  "hostname": "fg-branch-vpn-01"
+ echo
}
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ (( i++ ))
++ which awk

+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ alias parse-listings--helper=parse_listings__helper
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ newline
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
 edit "IronMan-HQ"
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
  set subnet 10.0.0.1 255.255.255.255
+ local 'prompt_message=Enter configuration file to be parsed: '
+ sed '1{/^[[:space:]]*$/d;}'
  set comment "Main node at Stark Tower"
 next
end'
+ local count=1
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ (( i = 0 ))
+ ((  count == 0  ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
++ alias network-configs--helper=network_configs__helper
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ newline
+ local count=1
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ alias serialize-object=serialize_objects
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
+ newline
++ echo -e --platform=fortinet
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
++ tr -d '\r'
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ true == true ]]
++ export console_location=console
++ console_location=console
++ IFS=,
++ mkdir -p console
+ newline
+ alias parse-cisco=main
++ echo 192.0.2.50
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -z x ]]
+ (( i < count ))
++ grep -v '^\s*$'
+ echo
}
+ export logs_location=logs
+ (( i++ ))

+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ logs_location=logs
+ (( i < count ))
+ echo
+ mkdir -p logs
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ echo -e --verbose
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ grep -v '^#'
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ result=0
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ export actions_logfile=console/run.console
}
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local count=2
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ which awk
+++ echo -n devops-resources.shell
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline 2
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local count=2
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ actions_logfile=console/run.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ echo
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ read -r key value
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local target_platform=fortinet
+ [[ extract =~ ^(export|r)$ ]]
++ IFS=,
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ echo 10.0.0.1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ for xitem in "${@}"
+ IFS==
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ read -r key value
+ IFS==
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ newline
+ local count=1
+ source ./scripts/devops-helpers.shell
+ (( i = 0 ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ which awk
+ [[ false == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(extract|x)$ ]]

++ touch console/run.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ alias network-extract--helper=network_extract__helper
++ echo 192.168.0.1
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
++ export targets_location=targets
+ local SCRIPT_DIR=./scripts
+ mkdir -p logs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ targets_location=targets
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ newline
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local count=1
+ newline
++ echo -e --platform=cisco
+ (( i = 0 ))
+ set -euo pipefail
+ (( i < count ))
+ echo
+ export LC_ALL=C
+ LC_ALL=C
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
++ IFS=,
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local count=1
++ echo 192.168.1.10
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local count=1
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
+++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \h\e\l\p ]]
+ export LC_ALL=C
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ LC_ALL=C
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
++ mktemp -d
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ newline
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
++ script_basename=devops-resources.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ which awk
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ [[ false == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ read -r key value
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ for xitem in "${@}"
+ serialize_objects
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
++ echo 10.10.10.10
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ dirname reports/10.0.1.2/misc/switch1.conf
+++ echo -n devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
+++ base64
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qxhs4opaen/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eGiDs3gM0d
+ local awk_bin=/usr/bin/awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F90eEomOmf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F90eEomOmf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ [[ -n '' ]]

++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eGiDs3gM0d
++ [[ 5 -lt 4 ]]
interface GigabitEthernet0/1
 nameif inside
 security-level 100
+ [[ logger =~ ^(config|c)$ ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
++ alias detect-vendor=detect_vendor

+ [[ logger =~ ^(console|o)$ ]]
object network Stark-Tower
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias exit-error=exit_error
 host 10.0.0.1
+ [[ logger =~ ^(export|r)$ ]]
 description Core services gateway'
+ export 'nl=\n'
+ [[ logger =~ ^(extract|x)$ ]]
+ nl='\n'
+ result=0
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n {
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
++ alias list-file=list_file

++ [[ -n '' ]]
ASA Version 9.14(3)
hostname perimeter-fw1
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
domain-name edge.dc.example.com

interface GigabitEthernet0/1
++ alias print-newline=newline
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
 description Internal Network Interface
+ [[ logger =~ ^(platform|p)$ ]]

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ logger == \h\e\l\p ]]
++ echo -e --export
++ alias print-line=print
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local parent_dir=reports/10.0.1.2/misc
++ alias print-file=print_file
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias relative-configpath=relative_configpath
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
++ alias detect-vendor=detect_vendor
+ [[ logger =~ ^(logger|l)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print '{
+ IFS==
  "vendor": "cisco",
+ read -r key value
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ printf '%*s' 12 ''
domain-name edge.dc.example.com
+ [[ extract =~ ^(config|c)$ ]]

interface GigabitEthernet0/1
 nameif inside
+ [[ extract =~ ^(console|o)$ ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ -n {
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ extract =~ ^(export|r)$ ]]
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ extract =~ ^(extract|x)$ ]]
domain-name edge.dc.example.com

interface GigabitEthernet0/1
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
 nameif inside
 security-level 100
++ alias exit-error=exit_error
+ [[ extract =~ ^(logger|l)$ ]]
 ip address 10.0.0.1 255.255.255.0
++ basename reports/10.0.1.2/misc/switch1
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ [[ extract =~ ^(export|r)$ ]]
+ echo -en '{
  "vendor": "cisco",
++ alias list-file=list_file
+ [[ extract =~ ^(extract|x)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ set -euo pipefail
  "hostname": "perimeter-fw1"
++ alias log-error=log_error
}

+ [[ platform =~ ^(export|r)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

+ [[ extract =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
object network Stark-Tower
 host 10.0.0.1
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
 description Core services gateway'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ read -r key value
+ export LC_ALL=C
+ local 'indent=            '
+ LC_ALL=C
++ alias log-info=log_info
++ echo -e --export
+ [[ true == true ]]
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ newline
+ local count=1
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ echo -e --export
+ alias serialize-object=serialize_objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
++ alias validate-address=validate_address
+ (( i < count ))
+ local export_objects=true
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
++ export jobs_location=jobs
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ jobs_location=jobs
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ mkdir -p jobs
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
++ nl='\n'
+ [[ search =~ ^(extract|x)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(search|s)$ ]]
++ mkdir -p logs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ local search_pattern
+ [[ -z x ]]
+ for xitem in "${@}"
+ export logs_location=logs
+ logs_location=logs
+ IFS==
+ read -r key value
+ mkdir -p logs
+ [[ export =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ export == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ [[ false == true ]]
+ (( i = 0 ))
+ read -r key value
++ echo -e --export
+ (( i < count ))
+ echo
+ local 'indent=            '
+ [[ true == true ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=fortinet
+ (( i++ ))
+ (( i < count ))
+ echo
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ export =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ echo
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --platform=cisco
+ for xitem in "${@}"
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ IFS==
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
++ export console_location=console
+ [[ logger =~ ^(platform|p)$ ]]
+ local export_objects=true
++ console_location=console
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ mkdir -p console
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ echo reports/10.0.1.2/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
++ cut -d/ -f2
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ set -euo pipefail
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GfYcenMKJi
++ echo -e --verbose
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
++ export jobs_location=jobs
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
++ jobs_location=jobs
+ export LC_ALL=C
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ LC_ALL=C
++ mkdir -p jobs
+ serialize_objects
++ echo -e --verbose
++ echo -e --verbose
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GfYcenMKJi
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ script_filename=network-extract.shell
+ [[ platform =~ ^(export|r)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ export 'nl=\n'
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
++ echo -e --verbose
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
+ network_extract__console=console/network-extract.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ touch console/network-extract.console
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.1.2/misc/.objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ debug=false
+ nl='\n'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ dry_run=false
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ export console_output=false
+ [[ export =~ ^(config|c)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ [[ -z '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(export|r)$ ]]
++ mktemp -d
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ local verbose=true
+ local parent_dir=reports/10.0.0.1/cisco
+ [[ export =~ ^(extract|x)$ ]]
+ IFS=' 	
++ export targets_location=targets
'
++ targets_location=targets
+ [[ -z '' ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ debug=false
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ dry_run=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ export console_output=false
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ console_output=false
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
  "model": "FortiGate-60F",
+ [[ -z true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "v7.2.5.F",
++ [[ -n '' ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ search_terms=()
+++ basename ./scripts/devops-resources.shell
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ basename reports/10.0.0.1/cisco/perimeter-fw1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ logger == \v\e\r\b\o\s\e ]]
}
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ tr -d '\r'
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export console_location=console
+ [[ extract =~ ^(console|o)$ ]]
++ console_location=console
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
++ mkdir -p console
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --verbose
+ [[ 7 -eq 0 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.usy0auf02b/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "model": "",
  "version": "12.2",
++ tr -d '\r'
  "domain": "",
++ grep -v '^\s*$'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xmckjp7Qfj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xmckjp7Qfj
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console --export --verbose

#hostname="fg-branch-vpn-01"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
#model="FortiGate-60F"
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mktemp -d
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ script_basename=devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-error=log_error
++ alias log-info=log_info
++ grep -v '^\s*$'
++ alias log-warn=log_warn
++ tr -d '\r'
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ alias print-file=print_file
+ local search_pattern
++ alias relative-configpath=relative_configpath
+ oIFS=' 	
'
+ local verbose=true
++ alias list-file=list_file
+ for xitem in "${@}"
+ IFS=' 	
++ alias system-metrics=system_metrics
'
++ alias log-error=log_error
+ IFS==
+ [[ -z '' ]]
+ debug=false
++ alias log-info=log_info
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ alias validate-address=validate_address
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias log-warn=log_warn
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ grep -v '^\s*$'
++ grep -v '^#'
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+++ base64
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ search_terms=()
  "hostname": "campus-sw-access01"
}
+ [[ verbose =~ ^(config|c)$ ]]
+ declare -a search_terms

+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UP28AYWcJZ
+ local first_search_entry=172.16.1.6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UP28AYWcJZ
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local last_search_entry=172.16.1.6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8rnQumNoB
+ [[ verbose == \h\e\l\p ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8rnQumNoB
+ [[ verbose == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ [[ 5 -lt 4 ]]
+ IFS=' 	
'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ tr -dc a-zA-Z0-9
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
++ alias list-file=list_file
+ [[ -z '' ]]
+ local first_search_entry=10.0.2.3
+ debug=false
++ alias log-error=log_error
+ [[ -z '' ]]
+ dry_run=false
+ local last_search_entry=10.0.2.3
++ alias log-info=log_info
++ cut -d/ -f2
+ [[ -z true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ] ]]
+ [[ -z '' ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ alias log-warn=log_warn
+ export console_output=false
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
+ [[ true == true ]]
+ console_output=false
++ alias print-message=message
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-configs--ips.list ]'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -z true ]]

+ read -r key value
++ alias print-newline=newline
config firewall address
++ alias print-message=message
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
++ alias pause=pause
+ [[ -z '' ]]
++ export jobs_location=jobs
+ script_helper=false
++ jobs_location=jobs
++ alias print-line=print
+ local count=1
+ [[ false == true ]]
++ mkdir -p jobs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ] ]]
+ ((  count == 0  ))
++ alias print-file=print_file
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
++ alias relative-configpath=relative_configpath
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local first_search_entry=198.51.100.75
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ local count=1
+ search_terms=()
+ local last_search_entry=198.51.100.75
+ ((  count == 0  ))
+ newline
++ alias system-metrics=system_metrics
version 12.2
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ export 'nl=\n'
+ declare -a search_terms
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ nl='\n'
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ local count=1
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ local count=1
+ [[ platform =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ alias validate-address=validate_address
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
++ alias warning-message=warning
+ [[ platform =~ ^(platform|p)$ ]]
++ export LC_ALL=C
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
++ LC_ALL=C
+ local target_platform=fortinet
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ] ]]
++ export 'nl=\n'
++ nl='\n'
+ echo
+ [[ platform =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
++ cache_location=.cache
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ (( i < count ))
 edit "Panther-Vault"
++ alias print-newline=newline
  set subnet 192.168.1.10 255.255.255.255
+ [[ platform == \h\e\l\p ]]
++ export logs_location=logs
  set comment "Wakandan data store"
+ local count=1
+ echo
+ ((  count == 0  ))
++ logs_location=logs
++ alias pause=pause
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ mkdir -p logs
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ logger =~ ^(config|c)$ ]]
++ alias print-line=print
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ logger =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
++ alias print-file=print_file
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias relative-configpath=relative_configpath
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ IFS==
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list != *,* ]]
+ read -r key value
+ mapfile -t search_terms
+ (( i < count ))
+ [[ true == true ]]
hostname campus-sw-access01
+ source ./scripts/devops-resources.shell
++ alias system-metrics=system_metrics
+ echo
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo
++ alias validate-address=validate_address
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
++ alias warning-message=warning
+ [[ true == true ]]
++ export LC_ALL=C
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ LC_ALL=C
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline
 next
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ newline
end'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local count=1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg

++ export 'nl=\n'
+ (( i = 0 ))
+ (( i = 0 ))
+ result=0
++ nl='\n'
+ case "${target_platform}" in
++ [[ -n '' ]]
++ echo -e --export
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
++ alias exit-error=exit_error
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ (( i < count ))
                      in_json_header = 0;
+ echo
                      next;
+ (( i < count ))
+ (( i++ ))
                    }
+ echo
+ [[ logger =~ ^(console|o)$ ]]
                  }
                  (in_json_header == 1) { next }
+ [[ logger =~ ^(export|r)$ ]]
                  /^[^[:space:]]/ {
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ (( i < count ))
                  }
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
                  }
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
                ' reports/10.0.1.2/misc/switch1.conf
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
object-group network Floor-Networks
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n {
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ export cache_location=.cache
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
  "vendor": "fortinet",
+ [[ logger =~ ^(platform|p)$ ]]
++ export actions_logfile=console/run.console
 description End-user and service devices
+ ls -al --color=auto .cache/resources/misc/switch3.conf
 network-object host 192.168.0.1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
 network-object host 192.168.0.100
+ [[ logger == \h\e\l\p ]]
++ cache_location=.cache
 network-object host 10.10.10.10'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
  "model": "FortiGate-60F",
+ search_pattern=10.0.0.1
+ [[ logger == \d\e\b\u\g ]]
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
+ [[ -n {
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias list-file=list_file
+ mkdir -p reports/10.0.0.1/cisco/.objects
++ export logs_location=logs
++ logs_location=logs
+ [[ logger =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ mkdir -p logs
++ [[ -n '' ]]
+ [[ logger == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ actions_logfile=console/run.console
++ alias log-info=log_info
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
++ export targets_location=targets
++ alias log-warn=log_warn
++ [[ 5 -lt 4 ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
  "version": "v7.2.5.F",
++ alias print-message=message
++ touch console/run.console
  "vendor": "cisco",
  "model": "",
++ alias print-newline=newline
  "version": "12.2",
  "domain": "",
+ [[ logger == \d\r\y\-\r\u\n ]]
+ grep -F 10.0.1.2
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ alias pause=pause
+ IFS==
+ IFS==
  "hostname": "campus-sw-access01"
+ read -r key value
  "domain": "",
+ read -r key value
}
++ alias parse-listings--helper=parse_listings__helper
++ alias print-line=print
  "hostname": "fg-branch-vpn-01"
++ alias print-file=print_file
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ alias relative-configpath=relative_configpath
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
++ alias network-configs--helper=network_configs__helper
++ tr -d '\r'

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ alias serialize-object=serialize_objects
++ export console_location=console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
++ console_location=console
++ mkdir -p console
++ tr -d '\r'
++ grep -v '^\s*$'
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ grep -v '^\s*$'
++ grep -v '^#'
++ alias system-metrics=system_metrics
++ grep -v '^#'
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ export actions_logfile=console/run.console
 network-object host 10.10.10.10'
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
+ case "${target_platform}" in
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
                  BEGIN {
+ [[ conf == \c\o\n\f ]]
                    in_json_header = 0;
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ final_output=reports/172.16.1.6/misc/switch3.conf
                    blk = "";
+ [[ logger =~ ^(config|c)$ ]]
+ extract_location=reports/172.16.1.6/misc/switch3.conf
                  }
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(console|o)$ ]]
                  /^[[:space:]]*$/ { next }
+ local first_search_entry=10.10.10.10
                  /^{$/ { in_json_header = 1; next }
+ [[ logger =~ ^(export|r)$ ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ [[ logger =~ ^(extract|x)$ ]]
                    }
+ local last_search_entry=10.10.10.10
+ [[ logger =~ ^(logger|l)$ ]]
                  }
++ alias validate-address=validate_address
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
                  (in_json_header == 1) { next }
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
                  /^[^[:space:]]/ {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ logger =~ ^(platform|p)$ ]]
++ alias warning-message=warning
                    next;
                  }
                  {
+ [[ logger =~ ^(search|s)$ ]]
                    blk = blk divisor " " $0;
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(config|c)$ ]]
                  }
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(console|o)$ ]]
                  END {
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ IFS==
                  }
+ local export_objects=true
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]
++ export console_location=console
+ script_filename=network-extract
++ console_location=console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
++ mkdir -p console
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
++ export LC_ALL=C
+ local count=1
++ LC_ALL=C
+ [[ search =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
++ export 'nl=\n'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ search =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ newline
+ [[ search == \h\e\l\p ]]
++ nl='\n'
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ grep -F 10.0.0.1
+ (( i = 0 ))
+ local first_search_entry=203.0.113.25
+ (( i < count ))
+ print '{
++ export cache_location=.cache
+ [[ export == \d\r\y\-\r\u\n ]]
++ export jobs_location=jobs
  "vendor": "fortinet",
+ local last_search_entry=203.0.113.25
+ [[ search == \d\r\y\-\r\u\n ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ cache_location=.cache

#hostname="fg-branch-vpn-01"
++ export logs_location=logs
+ echo
#model="FortiGate-60F"
++ jobs_location=jobs
+ (( i++ ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ logs_location=logs
+ local parent_dir=reports/10.10.10.10/cisco
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ [[ search == \v\e\r\b\o\s\e ]]
  set comment "Wakandan data store"
 next
end'
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ -n {
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
  "vendor": "fortinet",
++ dirname reports/172.16.1.6/misc/switch3.conf
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local 'prompt_message=Enter configuration file to be parsed: '
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
}

#hostname="fg-branch-vpn-01"
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ true == true ]]
+ [[ -z cisco ]]

config firewall address
+ [[ true == true ]]
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ mkdir -p jobs
+ for xitem in "${@}"
++ mkdir -p logs
+ for xitem in "${@}"
+ newline
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ read -r key value
+ result=0
+ local count=1
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ] ]]
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ echo
++ echo -e --export
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ read -r key value
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local count=1
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
++ targets_location=targets
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ local count=1
+ set -euo pipefail
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ export LC_ALL=C
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ LC_ALL=C
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 7 -eq 0 ]]
++ mktemp -d
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgu776hcvi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console --export --verbose
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ output_dir=reports/198.51.100.75/cisco
+ output_dir=reports/172.16.1.6/misc
+ oIFS=' 	
'
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ for xitem in "${@}"
+ [[ ! -d reports/172.16.1.6/misc ]]
+ IFS==
+ read -r key value
+ local count=1
+++ basename ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ (( i++ ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo -e --verbose
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
+ newline
+ local count=1
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ newline 2
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ echo
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline 2
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ export console_location=console
++ console_location=console
++ command -v -- ./scripts/network-extract.shell
++ mkdir -p console
+++ basename ./scripts/devops-resources.shell
+ local count=2
+ local count=2
+ [[ export =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local export_objects=true
+ echo
++ export jobs_location=jobs
+ [[ export =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
++ mkdir -p jobs
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
++ script_basename=devops-resources.shell
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ cat -n
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ export == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ export == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ for xitem in "${@}"
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ IFS==
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ read -r key value
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWKx8mSS89
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWKx8mSS89
+ local count=1
+ (( i = 0 ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ echo
+ export 'nl=\n'
+ (( i++ ))
+ nl='\n'
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ set -euo pipefail
++ dirname -- ./scripts/network-extract.shell
+ export LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local count=1
++ [[ 5 -lt 4 ]]
+++ basename ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ echo -n devops-resources.shell
+ (( i = 0 ))
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ echo -e --verbose
+++ base64
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ echo -e --verbose
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias list-file=list_file
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ [[ search =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ LC_ALL=C
+ [[ config =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ script_basename=devops-resources.shell
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ search == \h\e\l\p ]]
+ echo
+ local SCRIPT_DIR=./scripts
++ export console_location=console
+ (( i++ ))
+ [[ search == \d\e\b\u\g ]]
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ local script_filename=cisco-configs.awk
+++ tr -dc a-zA-Z0-9
+ return 0
+ [[ search == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
+ read -r key value
++ console_location=console
+ (( i < count ))
++ mkdir -p console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+ local count=1
++ alias log-info=log_info
+ [[ config == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console ]]
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ echo
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ local verbose=true
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ read -r key value
++ alias print-message=message
+ return 0
+ IFS=' 	
'
+ serialize_objects
++ alias print-newline=newline
+ [[ -z '' ]]
++ script_basename=devops-resources.shell
+ debug=false
+ [[ true == true ]]
+ set -euo pipefail
+ [[ -z '' ]]
+ export LC_ALL=C
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console ]]
++ alias pause=pause
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
+ export console_output=false
++ alias print-line=print
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console ]]
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
+ [[ -z '' ]]
++ alias print-file=print_file
++ mktemp -d
++ which awk
++ alias relative-configpath=relative_configpath
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ alias system-metrics=system_metrics
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]]
+ search_terms=()
++ which awk
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]]
++ alias validate-address=validate_address
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
++ echo -e --verbose
+++ echo -n devops-resources.shell
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+++ echo -n devops-resources.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export actions_logfile=console/run.console
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(search|s)$ ]]
++ actions_logfile=console/run.console
++ [[ 5 -lt 4 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
++ alias parse-listings--helper=parse_listings__helper
+ debug=false
+++ base64
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ export console_output=false
+ local count=1
+ console_output=false
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ [[ -z '' ]]
+ script_helper=false
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ alias network-extract--helper=network_extract__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
+ alias serialize-object=serialize_objects
++ touch console/run.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ true == true ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console ]]
++ dirname -- ./scripts/network-extract.shell
+ export console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ alias parse-cisco=main
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--perimeter-fw1.cfg.console
+++ tr -dc a-zA-Z0-9
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ IFS=,
++ echo 198.51.100.75
++ tr -d '\r'
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ IFS=,
++ echo 172.16.1.6
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ console_output=false
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ echo 10.0.2.3
+ declare -a execute__netwowrk_extract
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ newline
+ script_helper=false
+ [[ false == true ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
++ grep -v '^\s*$'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ true == true ]]
++ export actions_logfile=console/run.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
+ serialize_objects
++ actions_logfile=console/run.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gyRIwnnVmN
+ declare -a execute__netwowrk_extract
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console ]]
+ local count=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gyRIwnnVmN
+ (( i = 0 ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export jobs_location=jobs
+ echo
++ jobs_location=jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
++ mkdir -p jobs
++ tr -d '\r'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ search_terms=()
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--switch1.conf.console
++ grep -v '^#'
+ declare -a search_terms
+ local SCRIPT_DIR=./scripts
++ [[ -n '' ]]
++ grep -v '^\s*$'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ which awk
++ which awk
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ which awk
+ local script_filename=cisco-configs.awk
++ alias parse-listings--helper=parse_listings__helper
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ grep -v '^#'
+ IFS=' 	
'
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ debug=false
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
++ alias network-configs--helper=network_configs__helper
+ dry_run=false
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z true ]]
+ [[ -z '' ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ export console_output=false
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ script_helper=false
+ output_dir=reports/203.0.113.25/cisco
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias network-extract--helper=network_extract__helper
+ serialize_objects
+ script_filename=network-extract.shell
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ false == true ]]
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ alias serialize-object=serialize_objects
++ alias detect-vendor=detect_vendor
+ search_terms=()
++ alias exit-error=exit_error
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ result=0
+ exit 0
++ alias list-file=list_file
++ [[ -n '' ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kJJEV8bKan ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
+ local parent_dir=reports/172.16.0.5/cisco
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kJJEV8bKan
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
++ alias pause=pause
+ [[ extract =~ ^(console|o)$ ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ serialize_objects
+ LC_ALL=C
+ (( i = 0 ))
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ alias parse-cisco=main
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ [[ -z x ]]
+ (( i < count ))
+ export logs_location=logs
+ echo
+ logs_location=logs
+ (( i++ ))
+ mkdir -p logs
+ (( i < count ))
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ [[ extract =~ ^(console|o)$ ]]
+ local last_search_entry=10.0.0.1
++ echo 192.168.0.100
+ [[ extract =~ ^(export|r)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ verbose =~ ^(logger|l)$ ]]
interface Vlan1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ newline
+ [[ extract == \d\e\b\u\g ]]
 ip address 172.31.255.254 255.255.255.0'
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ declare -a execute__netwowrk_extract
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ result=0
+ local count=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ [[ -n {
+ local verbose=true
++ IFS=,
+ [[ false == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ read -r key value
+ [[ true == true ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
++ echo 192.168.100.100
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local count=1
                    BEGIN {
  "vendor": "cisco",
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ echo
+ ((  count == 0  ))
                      blk = "";
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
                      in_json_header = 0;
  "model": "",
                    }
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
++ mktemp -d
                    /^ next$/ {
++ basename reports/10.10.10.10/cisco/access-sw1-west
                      blk = blk divisor " " $0;
                      next;
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
                    }
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
                    # Finalize block at end
  "version": "",
'
                    /^end$/ {
                      blk = blk divisor " " $0;
++ which awk
                      if (blk != "" && !seen[blk]++) print blk;
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ declare -a execute__netwowrk_extract
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
                      blk = "";
                      next;
                    }

+ newline
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ local count=1
                    }

+ (( i = 0 ))
                    END {
                      # No need for final print — all blocks end with end
+++ basename ./scripts/devops-resources.shell
+ (( i < count ))
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
  "domain": "",
+ [[ -z '' ]]
  "hostname": ""
+ debug=false
}

+ [[ -z '' ]]
interface Vlan1
+ dry_run=false
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ echo
 ip address 172.31.255.254 255.255.255.0 ]]
+ [[ -z true ]]
+ (( i++ ))
+ serialize_objects
+ (( i < count ))
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ script_helper=false
+ grep -F 10.0.1.2
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ false == true ]]
++ printf '%*s' 12 ''
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
++ alias print-line=print
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]]
++ alias print-file=print_file
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list != *,* ]]
+ newline
+ mapfile -t search_terms
++ which awk
++ alias relative-configpath=relative_configpath
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ local 'extracted_configuration={
+ local 'extracted_configuration={
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
  "vendor": "cisco",
++ alias system-metrics=system_metrics
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ true == true ]]
  "model": "",
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
  "model": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "version": "16.9",
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ sed '/^[[:space:]]*$/d'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 network-object host 192.168.1.11 ]]
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ which awk
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ echo -e --platform=cisco
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
++ script_basename=devops-resources.shell
+ local parent_dir=reports/172.16.1.6/cisco
+ local search_pattern
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local parent_dir=reports/172.18.1.20/cisco
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local awk_bin=/usr/bin/awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JTAAUQa8zB
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JTAAUQa8zB
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ alias validate-address=validate_address
+ [[ cfg == \c\f\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ alias warning-message=warning
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ export 'nl=\n'
++ export LC_ALL=C
+ newline
+ nl='\n'
++ LC_ALL=C
+ source ./scripts/devops-resources.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ tr -d '\r'
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
++ alias detect-vendor=detect_vendor
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias exit-error=exit_error
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
++ alias list-file=list_file
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
++ alias log-error=log_error
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
++ alias log-info=log_info
+ sed '1{/^[[:space:]]*$/d;}'
++ alias log-warn=log_warn
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ alias print-message=message
+ serialize_objects
++ alias print-newline=newline
+ result=0
+ [[ 0 -ne 0 ]]
+ local parent_dir=reports/10.0.2.3/cisco
+ [[ true == true ]]
++ alias pause=pause
+ local awk_bin=/usr/bin/awk
++ alias print-line=print
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ alias print-file=print_file
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ alias relative-configpath=relative_configpath
++ grep -v '^\s*$'
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ alias system-metrics=system_metrics
++ printf '%*s' 12 ''
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
  "vendor": "cisco",
  "model": "ASA",
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
  "version": "16.9",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ newline
++ alias validate-address=validate_address
+ local count=1
+ (( i = 0 ))
++ alias warning-message=warning
+ local 'indent=            '
+ (( i < count ))
++ export LC_ALL=C
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
++ LC_ALL=C
++ which awk
++ export 'nl=\n'
+++ echo -n devops-resources.shell
++ printf '%*s' 12 ''
++ grep -v '^#'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ export logs_location=logs
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ printf '%*s' 12 ''
+++ base64
++ cut -d/ -f2
++ cut -d/ -f2
+ newline
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
++ logs_location=logs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ [[ logger =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local 'indent=            '
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i++ ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline 2
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local search_pattern
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=2
+ local parent_dir=reports/10.0.0.1/fortinet
+ case "${target_file}" in
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ (( i = 0 ))
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ echo
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local search_pattern
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ (( i++ ))
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ local first_search_entry=10.0.0.1
+ (( i < count ))
++ export 'nl=\n'
+ (( i < count ))
+ local last_search_entry=10.0.0.1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ (( i++ ))
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ script_filename=network-extract.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ cat -n
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local search_pattern
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ] ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ local 'extracted_configuration={
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "ASA",
+ newline
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-configs--ips.list ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "",
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
}
  "hostname": "perimeter-fw1"
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ ((  count == 0  ))
}

+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
domain-name edge.dc.example.com
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
  "hostname": "branch-isr-02"
}
object-group network Avengers-DMZ
+ echo

 description Public access layer
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ (( i++ ))
 network-object host 192.0.2.50
+ (( i < count ))
 network-object host 203.0.113.25
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
 network-object 192.168.2.0 255.255.255.0'
++ nl='\n'
+ result=0
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ -n {
  "vendor": "cisco",
+ echo
+ newline
  "model": "ASA",
+ (( i++ ))
+ local count=1
  "version": "9.14(3)",
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ (( i < count ))
  "domain": "edge.dc.example.com",
++ export cache_location=.cache
++ dirname reports/172.16.0.5/misc/fw3.cfg
  "hostname": "perimeter-fw1"
+ script_filename=network-extract
}
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01

+ (( i < count ))
++ dirname reports/10.0.0.1/misc/switch1.conf
ASA Version 9.14(3)
+ local 'prompt_message=Enter configuration file to be parsed: '
hostname perimeter-fw1
domain-name edge.dc.example.com
+ echo

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ search_pattern=172.16.0.5
+ search_pattern=10.10.10.10
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ (( i < count ))
+ mkdir -p reports/10.10.10.10/cisco/.objects
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ newline
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ local count=1
++ echo -e --export
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ __DEVOPS_HELPERS_SOURCED=1
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'

+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
version 16.9
+ ls -al --color=auto .cache/resources/misc/switch3.conf
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
ASA Version 9.12(4)
hostname dmz-fw2-backup
 description Remote site uplink
+ final_output=reports/172.18.1.20/misc/fw1.cfg
++ cache_location=.cache
domain-name global.dmz.example.net
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
 network-object host 192.168.2.12
++ export logs_location=logs

++ logs_location=logs
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ mkdir -p logs
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
+ export network_extract__console=console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo 10.0.2.3
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
+ print '{
  "vendor": "cisco",
++ alias network-extract--helper=network_extract__helper
++ cut -d/ -f2
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ jobs_location=jobs
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ mkdir -p jobs
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
++ dirname -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local target_platform=fortinet
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ output_dir=reports/10.0.0.1/misc
+ [[ platform =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ platform == \h\e\l\p ]]
+ alias parse-cisco=main
++ cut -d/ -f2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z x ]]
+ case "${target_file}" in
+ export logs_location=logs
+ local search_pattern
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
+ logs_location=logs
+ mkdir -p logs
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
 network-object host 198.51.100.75'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
+ result=0
hostname branch-isr-02
+ network_extract__console=console/network-extract.console
+ [[ -n {

  "vendor": "cisco",
+ sed '1{/^[[:space:]]*$/d;}'
+ touch console/network-extract.console
+ sed '1{/^[[:space:]]*$/d;}'
+ output_dir=reports/172.16.0.5/misc
+ [[ ! -d reports/172.16.0.5/misc ]]
+ newline
+ local count=1
+ output_dir=reports/172.16.1.6/fortinet
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ serialize_objects
+ [[ logger =~ ^(config|c)$ ]]
+ search_pattern=172.16.1.6
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ export == \h\e\l\p ]]
+ local script_filename=cisco-configs.awk
+ [[ export == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ search_pattern=172.18.1.20
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ local 'extracted_configuration={
  "vendor": "cisco",
  "version": "12.4",
  "model": "",
  "domain": "",
  "version": "12.4",
  "domain": "",
+ case "${target_platform}" in
  "hostname": "access-sw1-west"
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
++ export console_location=console

}

++ console_location=console
object-group network MGMT-ACCESS
version 12.4
+ search_pattern=10.0.2.3
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ mkdir -p reports/10.0.2.3/cisco/.objects
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ dirname reports/172.31.255.254/misc/switch1.conf
 description Management objects
 network-object host 192.168.0.1
hostname access-sw1-west

++ mkdir -p console
 network-object host 192.168.0.100
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.1
++ which awk
 network-object host 10.10.10.10 ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ newline 2
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ case "${target_platform}" in
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ cut -d/ -f2
+ [[ conf == \c\o\n\f ]]
                  BEGIN {
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/10.0.0.1/misc/switch3.conf
                    in_json_header = 0;
+ extract_location=reports/10.0.0.1/misc/switch3.conf
                    blk = "";

  "version": "9.12(4)",
                  }
+ local count=2
  "domain": "global.dmz.example.net",
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
interface Vlan100
+ grep -F 172.16.0.5
 ip address 192.168.0.100 255.255.255.0
                  }
 description Guest VLAN Gateway
                  {

                    blk = blk divisor " " $0;
object-group network MGMT-ACCESS
                  }
+ [[ true == true ]]
+ (( i = 0 ))
  "hostname": "dmz-fw2-backup"
                  END {
}
 description Management objects
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ (( i < count ))
++ echo -e --export
+ echo
 network-object host 192.168.0.1

 network-object host 192.168.0.100
+ (( i++ ))
ASA Version 9.12(4)
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 10.10.10.10 ]]
+ echo
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ (( i++ ))
interface GigabitEthernet0/1
+ (( i < count ))
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console ]]
object network Titan-WLAN-Host
+ output_dir=reports/172.18.1.20/misc
 host 192.168.100.100
 description Backup inside NAT IP

+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
object-group network Sector-Wireless
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console ]]
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ case "${target_file}" in
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.497LmW4tQb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ result=0
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ grep -F 10.10.10.10
+ [[ -n {
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ newline
ASA Version 9.12(4)
+ [[ -n {
+ local count=1
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
+ echo
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '/^[[:space:]]*$/d'
++ dirname reports/10.0.0.1/misc/switch3.conf
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ script_filename=network-extract.shell
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
+ script_filename=network-extract
 description Management objects
 network-object host 192.168.0.1
+ export network_extract__console=console/network-extract.console
+ local parent_dir=reports/172.31.255.254/misc
+ network_extract__console=console/network-extract.console
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ touch console/network-extract.console
+ [[ -n {
hostname dmz-fw2-backup
domain-name global.dmz.example.net

  "vendor": "cisco",
  "model": "",
interface GigabitEthernet0/1
  "version": "12.4",
 nameif inside
  "domain": "",
+ (( i++ ))
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
+ search_pattern=10.0.0.1
+ (( i < count ))
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
+ mkdir -p reports/10.0.0.1/fortinet/.objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local SCRIPT_DIR=./scripts
 ip address 192.168.100.100 255.255.255.0
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
version 12.4
 description Inside LAN segment
interface GigabitEthernet0/0/1
hostname access-sw1-west
  "model": "ASA",
+ local script_filename=cisco-configs.awk


+ local script_filepath=./scripts/extract/cisco-configs.awk
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 description Guest VLAN Gateway
object network Titan-WLAN-Host
 host 192.168.100.100

object-group network MGMT-ACCESS
 description Backup inside NAT IP
 description Management objects

 network-object host 192.168.0.1
object-group network Sector-Wireless
 network-object host 192.168.0.100
 description Staff WiFi clients
 network-object host 10.10.10.10'
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
++ export actions_logfile=console/run.console
+ sed '1{/^[[:space:]]*$/d;}'
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ ! -d reports/172.18.1.20/misc ]]
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
++ basename reports/172.31.255.254/misc/switch1
+ case "${target_platform}" in
++ command -v -- ./scripts/network-extract.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
++ IFS=,
+ case "${target_platform}" in
++ echo 192.168.0.1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
++ which awk
                    }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ print '{
                  }
  "vendor": "cisco",
                  (in_json_header == 1) { next }
                  BEGIN {
                  /^[^[:space:]]/ {
+ [[ export =~ ^(config|c)$ ]]
  "model": "ASA",
                    in_json_header = 0;
  "version": "9.12(4)",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "domain": "global.dmz.example.net",
                    blk = "";
                    blk = $0;
  "hostname": "dmz-fw2-backup"
+ [[ export =~ ^(console|o)$ ]]
                  }
                    next;
}
                  }

                  {
ASA Version 9.12(4)
                    blk = blk divisor " " $0;
hostname dmz-fw2-backup
                  /^[[:space:]]*$/ { next }
                  }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
domain-name global.dmz.example.net
                  END {

                    if (in_json_header == 1) {
interface GigabitEthernet0/1
 nameif inside
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      in_json_header = 0;
 ip address 192.168.100.100 255.255.255.0
                  }
 description Inside LAN segment

                      next;
+ output_dir=reports/10.0.0.1/misc
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
object network Titan-WLAN-Host
                    }
 host 192.168.100.100
                  }
 description Backup inside NAT IP
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
object-group network Sector-Wireless
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description Staff WiFi clients
                    blk = $0;
 network-object host 192.168.100.100
                    next;
 network-object host 10.10.10.10'
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ grep -F 172.16.1.6

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
+ result=0
 host 192.168.100.100
 description Backup inside NAT IP
+ [[ 0 -ne 0 ]]

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
object-group network Sector-Wireless
+ [[ true == true ]]
+ grep -F 10.0.2.3
 description Staff WiFi clients
+ [[ export =~ ^(export|r)$ ]]
+ declare -a execute__netwowrk_extract
 network-object host 192.168.100.100
+ result=0
+ local export_objects=true
 network-object host 10.10.10.10 ]]
+ [[ 0 -ne 0 ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ echo -en '{
+ [[ verbose =~ ^(config|c)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ export =~ ^(logger|l)$ ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ [[ export =~ ^(platform|p)$ ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
+ [[ export =~ ^(search|s)$ ]]
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ export == \h\e\l\p ]]
object network Titan-WLAN-Host
 host 192.168.100.100
+ [[ export == \d\e\b\u\g ]]
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
+ [[ export == \d\r\y\-\r\u\n ]]
 network-object host 192.168.100.100
+ [[ export == \v\e\r\b\o\s\e ]]
 network-object host 10.10.10.10'
+ for xitem in "${@}"
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ IFS==
+ read -r key value
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ result=0
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ grep -F 172.18.1.20
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Goze5DqHA ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xowajdtlbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Goze5DqHA
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ newline 2
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ oIFS=' 	
'
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ echo
+ local search_pattern
+ newline 2
+ echo
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ export console_output=false
+ console_output=false
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ (( i++ ))
+ (( i++ ))
+ script_helper=false
+ (( i < count ))
+ (( i < count ))
+ echo
+ local count=2
+ (( i++ ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i < count ))
+ (( i++ ))
+ newline 2
+ [[ false == true ]]
+ local count=1
+ (( i < count ))
++ which awk
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ (( i = 0 ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ (( i < count ))
+ echo
+ declare -a search_terms
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ mapfile -t search_terms
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ false == true ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ case "${target_platform}" in
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
                      in_json_header = 0;
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
                    }
+ case "${target_file}" in

+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ echo -e --verbose
                    # Skip blank lines
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ case "${target_file}" in
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
++ IFS=,
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo 10.0.0.1
++ echo reports/172.31.255.254/misc/switch1.conf
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ local awk_bin=/usr/bin/awk
+ result=0
+ newline 2
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local count=2
 ip address 192.168.2.12 255.255.255.0
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
  "version": "9.12(4)",
 description Workstation LAN
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo
+ newline
+ newline
+ newline
  "domain": "global.dmz.example.net",
+ (( i++ ))
+ local count=1
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+++ basename ./scripts/devops-resources.shell
+ echo
+ local count=1
++ export jobs_location=jobs
+ (( i = 0 ))
++ jobs_location=jobs
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ cat -n
++ tr -d '\r'
+ echo
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ (( i++ ))
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ cat -n
+ grep -F 10.0.0.1
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ search_pattern=172.31.255.254
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p reports/172.31.255.254/misc/.objects
+ [[ verbose =~ ^(export|r)$ ]]
++ script_basename=devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ search =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ case "${target_file}" in
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ newline
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ local 'indent=            '
+ [[ search =~ ^(logger|l)$ ]]
++ which awk
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
++ mkdir -p jobs
+ [[ search == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ newline
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ for xitem in "${@}"
+ (( i < count ))
+ [[ false == true ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ IFS==
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ (( i < count ))
+ newline
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ echo
+ [[ true == true ]]
+ return 0
+ local count=1
+ local count=2
+ (( i++ ))
+ local verbose=true
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ (( i < count ))
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ true == true ]]
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS=' 	
'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ serialize_objects
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ echo
+ [[ -z true ]]
+ cat -n
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ [[ -z '' ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ serialize_objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ script_helper=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ return 0
+ cat -n
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ which awk
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]]
+ [[ true == true ]]
  "hostname": "dmz-fw2-backup"
}
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'


+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ search_terms=()
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console ]]
+ declare -a search_terms
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ cat -n
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+++ echo -n devops-resources.shell
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local first_search_entry=10.10.10.10
+ (( i++ ))
+ local last_search_entry=10.10.10.10
+ (( i < count ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+++ base64
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local parent_dir=reports/192.0.2.50/cisco
+ local awk_bin=/usr/bin/awk
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -z fortinet ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ true == true ]]
+ newline
+ result=0
+ [[ 0 -ne 0 ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ return 0
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ return 0
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ newline
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
+ serialize_objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console ]]
+ local parent_dir=reports/192.168.0.100/cisco
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local parent_dir=reports/192.168.0.1/cisco
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console ]]
+ newline
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/192.0.2.50/cisco/perimeter-fw1
++ IFS=,
+ echo
+ case "${target_platform}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console ]]
++ echo 10.0.0.1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
++ tr -d '\r'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
++ printf '%*s' 12 ''
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ local 'indent=            '
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ grep -F 172.31.255.254
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.168.0.1/cisco/access-sw1-west
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config == \h\e\l\p ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console ]]
+ read -r key value
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=1
+ case "${target_file}" in
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--access-sw1-west.cfg.console
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ grep -v '^#'
+ alias serialize-object=serialize_objects
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ cat -n
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ local parent_dir=reports/192.168.100.100/cisco
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ local search_pattern
+ result=0
+ exit 0
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B2LUbk0Hg4 ]]
+ local search_pattern
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B2LUbk0Hg4
+ [[ true == true ]]
+ local 'extracted_configuration={
+ [[ true == true ]]
+ alias parse-cisco=main
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
ASA Version 9.12(4)
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
++ export console_location=console
hostname dmz-fw2-backup
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console ]]
+ [[ true == true ]]

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
object-group network Hydra-Edge
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
version 12.2
+ case "${target_file}" in
 description Remote site uplink
+ [[ 7 -eq 0 ]]
+ [[ -z x ]]
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xowajdtlbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ local awk_bin=/usr/bin/awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console ]]
hostname campus-sw-access01

+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
interface Vlan1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--branch-isr-02.cfg.console
 ip address 192.168.0.1 255.255.255.0
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ export logs_location=logs
 description Switch Mgmt
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console --export --verbose
+ local first_search_entry=192.168.0.100
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ local last_search_entry=192.168.0.100
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ logs_location=logs
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ mkdir -p logs
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg

object-group network Floor-Networks
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--branch-isr-02.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ] ]]
 description End-user and service devices
 network-object host 192.168.0.1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
++ printf '%*s' 12 ''
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ result=0
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ 0 -ne 0 ]]
+ newline
 network-object host 192.168.0.100
+ [[ true == true ]]
+ local count=1
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ result=0
++ console_location=console
+ [[ -n {
domain-name global.dmz.example.net
  "vendor": "cisco",

 network-object host 192.168.2.12
+ local SCRIPT_DIR=./scripts
  "model": "",
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
  "version": "12.2",
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
object-group network Watchtower-DMZ
++ mkdir -p console
+ echo
  "domain": "",
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
 description Global secure relay
+ oIFS=' 	
 network-object host 198.51.100.75 ]]
  "hostname": "campus-sw-access01"
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ local 'indent=            '
}
+ local script_filename=fortinet-configs.awk

version 12.2
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
hostname campus-sw-access01
+ (( i < count ))
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'

+ newline
+ local count=1
interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ local 'prompt_message=Enter configuration file to be parsed: '
 network-object host 10.10.10.10 ]]
+ (( i = 0 ))
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
 network-object host 192.0.2.50 ]]
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ newline
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i < count ))
'
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ return 0
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console ]]
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local 'indent=            '
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
+ local count=1
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ newline
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yYkRr5QDba ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
++ cut -d/ -f2
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ cut -d/ -f2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yYkRr5QDba
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ (( i++ ))

object-group network Floor-Networks
 description End-user and service devices
+ (( i < count ))
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ cut -d/ -f2
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -en '{
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
  "model": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'

version 12.2
hostname campus-sw-access01
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local search_pattern
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ extract =~ ^(export|r)$ ]]
+ network_extract__console=console/network-extract.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ touch console/network-extract.console
+ output_dir=reports/10.10.10.10/fortinet
+ exit 0
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IMEPFi8G35 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IMEPFi8G35
+ [[ extract =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ message '                .cache/resources/misc/switch3.conf'
+ exit 0
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'extracted_configuration={
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eYTdOKwfSU ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
  "vendor": "cisco",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eYTdOKwfSU
  "model": "",
  "version": "",
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/misc/switch3.conf'
  "domain": "",
+ [[ extract =~ ^(search|s)$ ]]
  "hostname": ""
}
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
+ result=0

+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
object-group network Avengers-Office
+ [[ extract == \d\e\b\u\g ]]
 description VLAN access layer
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ newline
+ exit 0
 network-object host 10.0.0.1
+ [[ extract == \d\r\y\-\r\u\n ]]
 network-object 192.168.12.0 255.255.255.0'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.02qUzOsHAM ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.02qUzOsHAM
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ cat -n
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ print '{
+ print '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "ASA",
  "version": "16.9",
  "version": "9.12(4)",
  "domain": "",
  "domain": "global.dmz.example.net",
  "hostname": "branch-isr-02"
  "hostname": "dmz-fw2-backup"
}
}


version 16.9
ASA Version 9.12(4)
hostname branch-isr-02
hostname dmz-fw2-backup

domain-name global.dmz.example.net
interface GigabitEthernet0/0/1

 ip address 192.168.2.12 255.255.255.0
object-group network Watchtower-DMZ
 description Workstation LAN
 description Global secure relay

 network-object host 192.0.2.50'
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n {
  "vendor": "cisco",
  "version": "9.12(4)",
  "model": "",
  "domain": "global.dmz.example.net",
  "version": "16.9",
  "hostname": "dmz-fw2-backup"
  "domain": "",
}
  "hostname": "branch-isr-02"

}
ASA Version 9.12(4)

hostname dmz-fw2-backup
version 16.9
domain-name global.dmz.example.net
hostname branch-isr-02


object-group network Watchtower-DMZ
interface GigabitEthernet0/0/1
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ search_pattern=192.0.2.50
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

+ search_pattern=192.168.0.100
+ echo -en '{
++ command -v -- ./scripts/network-extract.shell
  "vendor": "cisco",
object-group network Hydra-Edge
  "model": "ASA",
+ mkdir -p reports/192.168.0.100/cisco/.objects
 description Remote site uplink
+ search_pattern=192.168.0.1
 network-object host 192.168.2.12
+ mkdir -p reports/192.0.2.50/cisco/.objects
  "version": "9.12(4)",
 network-object host 198.51.100.75 ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ echo -en '{
  "vendor": "cisco",

ASA Version 9.12(4)
  "model": "",
  "version": "16.9",
  "domain": "",
hostname dmz-fw2-backup
  "hostname": "branch-isr-02"
domain-name global.dmz.example.net
}

object-group network Watchtower-DMZ
 description Global secure relay

 network-object host 192.0.2.50'
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ mkdir -p reports/192.168.0.1/cisco/.objects
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ echo -e --platform=fortinet
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qxhs4opaen/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=2
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console --export --verbose
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console ]]
+ oIFS=' 	
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
++ dirname -- ./scripts/network-extract.shell
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ -n {
  "vendor": "cisco",
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
  "model": "",
  "version": "",
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--fg-branch-vpn-01.cfg.console
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
'

+ (( i = 0 ))
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ search_pattern=192.168.100.100
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ local SCRIPT_DIR=./scripts
+ echo
+ (( i++ ))
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local script_filename=cisco-configs.awk
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(logger|l)$ ]]
++ export actions_logfile=console/run.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ local 'extracted_configuration={
  "vendor": "cisco",
                  /^{$/ { in_json_header = 1; next }
  "model": "",
                  /^}$/ {
  "version": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
  "domain": "",
                    if (in_json_header == 1) {
  "hostname": ""
                      in_json_header = 0;
}
                      next;

++ sed -e '1s|^\(-\)\{1,\}||'
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ newline
                    }

                  }
object-group network Spider-Net
                  (in_json_header == 1) { next }
 description Web access switches
                  /^[^[:space:]]/ {
 network-object host 10.0.0.1
                    if (blk != "" && !seen[blk]++) print blk "\n";
 network-object 192.168.12.0 255.255.255.0'
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ result=0
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
++ which awk
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ grep -F 192.0.2.50
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ grep -F 192.168.0.100
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ result=0
+ newline 2
+ exit 0
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
++ actions_logfile=console/run.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EbClWM9AMk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EbClWM9AMk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ print '{
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
  "version": "",
+ grep -F 192.168.0.1
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
+ [[ search =~ ^(extract|x)$ ]]
+ echo
  "model": "",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
  "version": "",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ (( i < count ))
  "hostname": ""
++ touch console/run.console
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console ]]

interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ [[ false == true ]]

+ [[ true == true ]]
+ [[ true == true ]]
object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ [[ search =~ ^(logger|l)$ ]]
 network-object 192.168.12.0 255.255.255.0 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ echo -en '{
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console ]]
+ [[ search =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ case "${target_file}" in
  "model": "",
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
  "version": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dgCIfUtRvq/network-extract--switch1.conf.console
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
  "domain": "",
  "hostname": ""
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
}
+ [[ search == \h\e\l\p ]]
+ serialize_objects

interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'

+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ search == \d\e\b\u\g ]]
object-group network Spider-Net
+ [[ search == \d\r\y\-\r\u\n ]]
 description Web access switches
 network-object host 10.0.0.1
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
 network-object 192.168.12.0 255.255.255.0'
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
++ which awk
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
++ IFS=,
++ echo 10.10.10.10
+ case "${target_platform}" in
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ result=0
+ result=0
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ 0 -ne 0 ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ echo
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ which awk
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ search =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ grep -F 192.168.100.100
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ result=0
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ 0 -ne 0 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i++ ))
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ newline 2
+ local parent_dir=reports/192.168.0.1/cisco
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ result=0
+ exit 0
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3lb2MUoOr ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ sed '/^[[:space:]]*$/d'
+ local count=2
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ (( i = 0 ))
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3lb2MUoOr
+ echo
+ [[ true == true ]]
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ echo
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ (( i++ ))
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ (( i < count ))
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ true == true ]]
+ newline
++ echo -e --export
+ local count=1
+ (( i = 0 ))
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ (( i < count ))
+ local count=1
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
++ which awk
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
++ echo -e --export
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ cat -n
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ local awk_bin=/usr/bin/awk
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ serialize_objects
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ dirname reports/10.0.0.1/misc/switch1.conf
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ local 'indent=            '
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ newline
+ local count=1
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ (( i = 0 ))
+ local search_pattern
++ which awk
+ (( i < count ))
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ echo
+ local export_objects=true
+ (( i++ ))
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
++ export targets_location=targets
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ echo
++ targets_location=targets
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ return 0
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ (( i++ ))
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \v\e\r\b\o\s\e ]]
+ return 0
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
+ IFS==
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
++ targets_logfile=.cache/targets.jobs
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ message '                .cache/resources/misc/fw1.cfg'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ newline
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
++ IFS=,
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
++ export console_location=console
++ IFS=,
+ echo
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
++ echo 172.16.0.5
+ [[ export =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ echo 172.16.1.6
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ case "${target_file}" in
+ local export_objects=true
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ case "${target_file}" in
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
+ return 0
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ export =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ true == true ]]
+ newline
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ (( i++ ))
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console ]]
+ echo
+ echo
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
++ export targets_location=targets
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console ]]
+ (( i < count ))
++ export targets_location=targets
+ case "${target_file}" in
+ (( i < count ))
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ export == \v\e\r\b\o\s\e ]]
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ config =~ ^(search|s)$ ]]
++ targets_location=targets
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ config == \h\e\l\p ]]
++ export targets_logfile=.cache/targets.jobs
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ IFS=,
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ newline
++ echo 172.18.1.20
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ (( i < count ))
+ local count=1
+ IFS==
+ (( i = 0 ))
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i++ ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+++ basename ./scripts/devops-resources.shell
+ [[ false == true ]]
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ true == true ]]
+ cat -n
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ local parent_dir=reports/10.0.0.1/misc
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ serialize_objects
++ which awk
++ targets_location=targets
++ echo -e --verbose
++ console_location=console
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ which awk
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ cut -d/ -f2
++ targets_logfile=.cache/targets.jobs
+ newline
++ mkdir -p console
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.0.1/misc/switch1
++ echo -e --verbose
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local first_search_entry=192.168.1.11
+ [[ extract =~ ^(search|s)$ ]]
+ local last_search_entry=192.168.1.11
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ alias network-extract--helper=network_extract__helper
+ newline
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local count=1
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local parent_dir=reports/10.10.10.10/cisco
+ alias serialize-object=serialize_objects
+ local awk_bin=/usr/bin/awk
++ command -v -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ alias parse-cisco=main
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ [[ -z x ]]
+ (( i < count ))
+ export logs_location=logs
+ logs_location=logs
++ export actions_logfile=console/run.console
+ [[ false == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ mkdir -p logs
++ actions_logfile=console/run.console
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
++ touch console/run.console
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+++ basename ./scripts/devops-resources.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+++ basename ./scripts/devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "version": "",
+ [[ false == true ]]
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ serialize_objects
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
  "domain": "",
  "hostname": ""
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
}

object-group network Metropolis-Internal
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

+ serialize_objects
object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ result=0
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
++ tr -d '\r'
+ newline
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ -n {
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
+ (( i < count ))
  "version": "",
+ echo
+ (( i++ ))
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ serialize_objects
  "domain": "",
  "hostname": ""
+ (( i < count ))
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ result=0
+ exit 0
 network-object host 10.0.2.3
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dK2sBwH9NY ]]
++ printf '%*s' 12 ''
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dK2sBwH9NY
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ which awk
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ local parent_dir=reports/192.168.1.10/fortinet

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local 'indent=            '
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
++ tr -d '\r'
+ newline
+ local count=1
++ printf '%*s' 12 ''
++ grep -v '^#'
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'indent=            '
+ [[ true == true ]]
++ grep -v '^#'
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ export targets_location=targets
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
++ targets_location=targets
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
++ export targets_logfile=.cache/targets.jobs
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
++ targets_logfile=.cache/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ script_basename=devops-resources.shell
+ newline
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ print '{
  "vendor": "cisco",
  "model": "",
+ local search_pattern
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ local SCRIPT_DIR=./scripts
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ script_filename=network-extract.shell

+ local script_filename=cisco-configs.awk
+ script_filename=network-extract
object-group network Metropolis-Internal
+ local count=1
++ script_basename=devops-resources.shell
++ printf '%*s' 12 ''
+ export network_extract__console=console/network-extract.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
 description Core internal LAN for application clusters
+ (( i < count ))
 network-object host 10.0.2.3
+ echo
 network-object 192.168.2.0 255.255.255.0
+ local parent_dir=reports/192.0.2.50/cisco
 network-object host 192.168.2.12
+ (( i++ ))
+ local parent_dir=reports/192.168.1.11/cisco
+ (( i < count ))
+ local first_search_entry=192.168.100.100

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
object network Kent-Server
+ local parent_dir=reports/192.168.2.12/cisco
+ local last_search_entry=192.168.100.100
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 host 10.0.2.3
 description Internal mail & identity services ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ network_extract__console=console/network-extract.console

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+++ basename ./scripts/devops-resources.shell
 network-object 192.168.2.0 255.255.255.0
+ touch console/network-extract.console
 network-object host 192.168.2.12

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object network Kent-Server
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
 host 10.0.2.3
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Internal mail & identity services'
+ [[ true == true ]]
+ local 'indent=            '
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ] ]]
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ platform =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local target_platform=cisco
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-configs--ips.list ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ message '                .cache/resources/misc/fw3.cfg'
+ ((  count == 0  ))
+ local count=1
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ for xitem in "${@}"
+ local search_pattern
+ newline
+ IFS==
+ local awk_bin=/usr/bin/awk
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ local first_search_entry=192.168.1.10
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local last_search_entry=192.168.1.10
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ [[ true == true ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+++ echo -n devops-resources.shell
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ] ]]
+++ echo -n devops-resources.shell
+++ base64
++ cut -d/ -f2
+++ tr -dc a-zA-Z0-9
+++ base64
++ script_basename=devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ newline 2
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ 7 -eq 0 ]]
+ local search_pattern
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xowajdtlbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ which awk
+ local search_pattern
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console --export --verbose
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ oIFS=' 	
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=2
'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ for xitem in "${@}"
+ [[ -z cisco ]]
+ [[ true == true ]]
+ IFS==
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ search_pattern=10.10.10.10
  "domain": "",
+ read -r key value
+ (( i++ ))
+ mkdir -p reports/10.10.10.10/cisco/.objects
+++ echo -n devops-resources.shell
+ newline
  "hostname": "fg-campus-core"
+ (( i < count ))
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
}
+ echo
+ [[ true == true ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ (( i++ ))
config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ result=0
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'

++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ base64
+ (( i < count ))
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
config firewall address
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ newline
  set comment "Remote sniper node"
 next
end ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ cat -n reports/10.0.2.3/misc/fw1.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ search_pattern=192.168.1.10
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ source ./scripts/devops-helpers.shell
+++ tr -dc a-zA-Z0-9
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ [[ 5 -lt 4 ]]
++ cut -d/ -f2
++ cut -d/ -f2
++ alias parse-listings--helper=parse_listings__helper
++ cut -d/ -f2
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias network-configs--helper=network_configs__helper
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ alias serialize-object=serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ print '{
  "vendor": "fortinet",
 network-object host 172.16.0.5
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
 next
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
end'
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ [[ -n {
  "vendor": "fortinet",
++ readonly __DEVOPS_HELPERS_SOURCED=1
  "model": "FortiGate-200F",
++ __DEVOPS_HELPERS_SOURCED=1
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

++ [[ 5 -lt 4 ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ output_dir=reports/192.168.1.11/fortinet

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
+ [[ ! -d reports/192.168.1.11/fortinet ]]
  set comment "Remote sniper node"
 next
end ]]

object network Edge-Terminal
 host 172.16.0.5
+ echo -en '{
 description Internet firewall handoff'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ IFS=,
++ alias parse-listings--helper=parse_listings__helper
  "version": "",
+ result=0
  "domain": "",
  "hostname": "fg-campus-core"
}

+ [[ -n {
#hostname="fg-campus-core"
+ local 'extracted_configuration={
++ echo 203.0.113.25
  "vendor": "cisco",
  "vendor": "cisco",
#model="FortiGate-200F"
  "model": "",

  "version": "",
config firewall address
  "domain": "",
 edit "Hawkeye-Nest"
  "hostname": ""
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -z x ]]
 network-object host 172.18.1.20
object-group network Panther-Edge
 description Internet-facing proxy systems
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ alias network-configs--helper=network_configs__helper
+ export logs_location=logs
 network-object host 203.0.113.25
+ search_pattern=192.168.1.11
+ logs_location=logs
 network-object host 192.168.1.10'
 network-object host 172.16.0.5
++ alias network-extract--helper=network_extract__helper
+ search_pattern=192.168.2.12
+ declare -a execute__netwowrk_extract
+ mkdir -p logs
+ result=0

+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ -n {
object network Edge-Terminal
+ mkdir -p reports/192.168.1.11/cisco/.objects
  "vendor": "cisco",
+ mkdir -p reports/192.168.2.12/cisco/.objects
  "model": "",
+ [[ cfg == \c\f\g ]]
++ alias network-extract--helper=network_extract__helper
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
 host 172.16.0.5
 description Internet firewall handoff ]]
+ alias serialize-object=serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "",
+ alias serialize-object=serialize_objects
  "domain": "",
+ search_pattern=192.0.2.50
  "hostname": ""
+ mkdir -p reports/192.0.2.50/cisco/.objects
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local awk_bin=/usr/bin/awk
+ case "${target_platform}" in
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ script_basename=devops-resources.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ verbose =~ ^(export|r)$ ]]
                      in_json_header = 0;
                      next;
                    }
+ [[ verbose =~ ^(extract|x)$ ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ verbose =~ ^(logger|l)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ verbose =~ ^(platform|p)$ ]]
                  }
                  {
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
                    blk = blk divisor " " $0;
+ [[ verbose =~ ^(search|s)$ ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 10.10.10.10
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
++ echo -e --export
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
++ sed -e '1s|^\(-\)\{1,\}||'
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ newline
+ newline 2
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=2
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ false == true ]]
+ export network_extract__console=console/network-extract.console
+ [[ true == true ]]
+ network_extract__console=console/network-extract.console
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ touch console/network-extract.console
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ script_filename=network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ sed '/^[[:space:]]*$/d'
+ [[ search =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ script_filename=network-extract
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ [[ search == \h\e\l\p ]]
+ export network_extract__console=console/network-extract.console
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ search == \d\e\b\u\g ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ serialize_objects
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ (( i++ ))
+ grep -F 192.168.1.10
+ read -r key value
+ [[ export =~ ^(config|c)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ export =~ ^(console|o)$ ]]
  "hostname": ""
+ [[ export =~ ^(export|r)$ ]]
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ local export_objects=true
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
  "version": "",
  "domain": "",
  "hostname": ""
}

+ case "${target_platform}" in
+ output_dir=reports/192.168.100.100/fortinet
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
+ case "${target_platform}" in
  "model": "",
  "version": "",
  "domain": "",
+ [[ export =~ ^(search|s)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
  "hostname": ""
                  BEGIN {
}
                    in_json_header = 0;

                    blk = "";
object-group network Fortress-Wireless
                  }
 description Secure wireless access layer
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
 network-object host 172.18.1.20
                  /^[[:space:]]*$/ { next }
                  BEGIN {
                  /^{$/ { in_json_header = 1; next }
                    in_json_header = 0;
+ [[ export == \h\e\l\p ]]
                  /^}$/ {
+ [[ export == \d\e\b\u\g ]]
 network-object host 192.168.1.10'
+ [[ ! -d reports/192.168.100.100/fortinet ]]
                    if (in_json_header == 1) {
                    blk = "";
                  }
                      in_json_header = 0;
                      next;
                  /^[[:space:]]*$/ { next }
                    }
                  /^{$/ { in_json_header = 1; next }
                  }
                  /^}$/ {
                  (in_json_header == 1) { next }
                    if (in_json_header == 1) {
                  /^[^[:space:]]/ {
                      in_json_header = 0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      next;
                    blk = $0;
                    }
++ printf '%*s' 12 ''
                    next;
                  }
                  }
                  {
                  (in_json_header == 1) { next }
                    blk = blk divisor " " $0;
                  /^[^[:space:]]/ {
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  END {
                    blk = $0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    next;
                  }
                  }
+ sed '1{/^[[:space:]]*$/d;}'
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ export == \d\r\y\-\r\u\n ]]
+ export network_extract__console=console/network-extract.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ IFS==
+ touch console/network-extract.console
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ local 'indent=            '
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ grep -F 192.168.2.12
+ case "${target_platform}" in
+ grep -F 192.168.1.11
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ local count=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ 7 -eq 0 ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ result=0
+ grep -F 192.0.2.50
+ output_dir=reports/192.168.1.10/misc
+ newline 2
+ [[ ! -d reports/192.168.1.10/misc ]]
+ sed '/^[[:space:]]*$/d'
+ [[ 7 -eq 0 ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qxhs4opaen/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console --export --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ oIFS=' 	
'
+ sed '/^[[:space:]]*$/d'
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ which awk
+ newline 2
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local count=2
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ IFS==
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ read -r key value
+ newline
+ local count=1
+ [[ 0 -ne 0 ]]
++ echo -e --verbose
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ echo
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ local parent_dir=reports/10.0.2.3/misc
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ newline
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jbahorgr7q/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ config =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console --export --verbose
+ echo
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ read -r key value
+ (( i++ ))
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ newline
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ serialize_objects
+ [[ true == true ]]
+ local count=1
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ oIFS=' 	
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/10.0.2.3/misc/fw1
'
+ echo
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ (( i++ ))
+ for xitem in "${@}"
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ IFS==
+ read -r key value
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ 7 -eq 0 ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local first_search_entry=192.168.2.12
+ newline
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
++ printf '%*s' 12 ''
+ cat -n
+ newline
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ IFS=' 	
+ [[ extract =~ ^(logger|l)$ ]]
'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ script_filename=network-extract.shell
++ IFS=,
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ network_extract__console=console/network-extract.console
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ echo 10.10.10.10
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ IFS=,
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ echo 192.168.1.11
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ touch console/network-extract.console
+ [[ -z '' ]]
+ export console_output=false
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ console_output=false
+++ echo -n devops-resources.shell
+ declare -a execute__netwowrk_extract
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ search_terms=()
+ case "${target_file}" in
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list != *,* ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.usy0auf02b/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ mapfile -t search_terms
+ local 'indent=            '
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local last_search_entry=192.168.2.12
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+++ base64
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ [[ search =~ ^(console|o)$ ]]
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ cat -n
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local script_filename=fortinet-configs.awk
+ for xitem in "${@}"
+ IFS==
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ read -r key value
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ local search_pattern
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ echo
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local parent_dir=reports/172.16.1.6/fortinet
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ newline
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ local count=1
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ (( i = 0 ))
domain-name global.dmz.example.net
+ (( i < count ))

+ echo
object network Sentinel-NAT
+ (( i++ ))
+ (( i < count ))
+ cat -n
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console ]]
+ [[ search =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ [[ search =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ [[ search =~ ^(search|s)$ ]]
 host 203.0.113.25
 description Corporate NAT edge ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list
+ newline
+ [[ search == \h\e\l\p ]]
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ false == true ]]
+ serialize_objects
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
++ which awk
+ for xitem in "${@}"
+ return 0
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ (( i < count ))
+ read -r key value
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
++ echo reports/10.0.2.3/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ local count=1
++ grep -v '^\s*$'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ return 0
+ case "${target_file}" in
+ [[ search =~ ^(config|c)$ ]]
+ serialize_objects
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ local 'indent=            '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ case "${target_file}" in
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ search =~ ^(platform|p)$ ]]
+ (( i++ ))
+ for xitem in "${@}"
+ dry_run=false
++ basename reports/172.16.1.6/fortinet/fg-campus-core
++ cut -d/ -f2
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ return 0
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list
+ print '{
  "vendor": "cisco",
+ [[ search == \h\e\l\p ]]
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.12(4)",
+ [[ search == \d\e\b\u\g ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]

++ grep -v '^#'
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console ]]
+ [[ search == \v\e\r\b\o\s\e ]]
domain-name global.dmz.example.net

object network Sentinel-NAT
+ for xitem in "${@}"
 host 203.0.113.25
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ IFS==
 description Corporate NAT edge'
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ case "${target_file}" in
+ declare -a execute__netwowrk_extract
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ echo -e --platform=cisco
+ [[ true == true ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local search_pattern
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console ]]
+ search_pattern=10.0.2.3
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--campus-sw-access01.cfg.console
+ mkdir -p reports/10.0.2.3/misc/.objects
+ local count=1
+ local parent_dir=reports/172.18.1.20/misc
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=198.51.100.75
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local last_search_entry=198.51.100.75
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console ]]
+ newline
+ [[ true == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ oIFS=' 	
+ local count=1
+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ] ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ case "${target_file}" in
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ newline
+ [[ -z '' ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local count=1
+ export console_output=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ] ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ console_output=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--branch-isr-02.cfg.console
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ ((  count == 0  ))
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local parent_dir=reports/172.16.0.5/misc
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
++ printf '%*s' 12 ''
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --platform=cisco
++ IFS=,
++ which awk
++ echo 192.168.1.10
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i < count ))
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.100.100
++ basename reports/172.16.0.5/misc/fw3
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ config =~ ^(config|c)$ ]]
+ declare -a execute__netwowrk_extract
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \h\e\l\p ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ for xitem in "${@}"
++ basename reports/172.18.1.20/misc/fw1
+ [[ config == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--dmz-fw2-backup.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console ]]
+ for xitem in "${@}"
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ newline 2
+ (( i < count ))
+ IFS==
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--branch-isr-02.cfg.console
+ read -r key value
++ which awk
+ local count=2
+ source ./scripts/devops-helpers.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ script_helper=false
+ [[ false == true ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ ((  count == 0  ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local awk_bin=/usr/bin/awk
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ IFS==
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ 7 -eq 0 ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ result=0
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ exit 0
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTOboydc0W ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTOboydc0W
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(console|o)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ platform =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ result=0
+ [[ platform =~ ^(extract|x)$ ]]
+ exit 0
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.okELZwQKCa ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.okELZwQKCa
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local search_pattern
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_platform}" in
+ [[ config == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ search_terms=()
+ [[ config == \d\e\b\u\g ]]
+ declare -a search_terms
+ local search_pattern
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list != *,* ]]
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ for xitem in "${@}"
                    }
                  }
+ IFS==
                  (in_json_header == 1) { next }
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                  /^[^[:space:]]/ {
+ search_pattern=172.16.1.6
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ mkdir -p reports/172.16.1.6/fortinet/.objects
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ set -euo pipefail
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ extract =~ ^(config|c)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local awk_bin=/usr/bin/awk
+ IFS==
+ read -r key value
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mDEEWzqky7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mDEEWzqky7
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ result=0
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ -n {
  "vendor": "fortinet",
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
  "model": "FortiGate-200F",
  "version": "",
+ grep -F 10.0.2.3
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ result=0
+ exit 0
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlqzsgNKNR ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jlqzsgNKNR
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ echo reports/172.16.0.5/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWajPBYlVI ]]
++ printf '%*s' 12 ''
+ message '                .cache/resources/misc/switch3.conf'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OWajPBYlVI
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'indent=            '
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local 'indent=            '
++ echo reports/172.18.1.20/misc/fw1.cfg
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ newline
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ print '{
+ (( i < count ))
  "vendor": "fortinet",
+ echo
+ newline
++ echo -e --platform=cisco
  "model": "FortiGate-200F",
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
}
+ (( i++ ))
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'

#hostname="fg-campus-core"
+ (( i < count ))
#model="FortiGate-200F"
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/misc/switch3.conf'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'

+ (( i = 0 ))
++ cut -d/ -f2
++ alias network-configs--helper=network_configs__helper
+ serialize_objects
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sgu776hcvi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
config firewall address
+ (( i++ ))
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ mapfile -t search_terms
 edit "Cap-HQ"
+ (( i < count ))
  set subnet 192.168.1.11 255.255.255.255
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  set comment "Captain America’s secure endpoint"
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 next
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
end'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -en '{
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
  "version": "",
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
  "domain": "",
  "hostname": "fg-campus-core"
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
}

++ sed -e '1s|^\(-\)\{1,\}||'
#hostname="fg-campus-core"
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ message '                .cache/resources/misc/fw1.cfg'
+ (( i = 0 ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ extract =~ ^(search|s)$ ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
+ newline
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ (( i = 0 ))
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ local 'indent=            '
+ echo -e '                .cache/resources/misc/switch3.conf'
+ [[ true == true ]]
+ newline
+ local count=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console --export --verbose
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ case "${target_platform}" in
+ (( i < count ))
+ result=0
+ search_pattern=172.16.0.5
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ 0 -ne 0 ]]
                    BEGIN {
                      blk = "";
+ [[ true == true ]]
+ mkdir -p reports/172.16.0.5/misc/.objects
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ [[ logger =~ ^(config|c)$ ]]

                    # Start of a new block
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
                      next;
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
                    }

+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
+ newline
                    }

+ local count=1
                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
                      next;
                    }

+ [[ logger =~ ^(console|o)$ ]]
                    # Finalize block at end
+ (( i < count ))
                    /^end$/ {
+ local count=1
+ [[ logger =~ ^(export|r)$ ]]
                      blk = blk divisor " " $0;
+ echo
+ (( i = 0 ))
+ (( i = 0 ))
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ search_pattern=172.18.1.20
++ alias network-extract--helper=network_extract__helper
                      next;
+ [[ extract =~ ^(console|o)$ ]]
                    }
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))

+ mkdir -p reports/172.18.1.20/misc/.objects
                    # Accumulate middle lines
                    {
+ [[ extract =~ ^(export|r)$ ]]
                      blk = blk divisor " " $0;
                    }

+ [[ logger =~ ^(extract|x)$ ]]
                    END {
                      # No need for final print — all blocks end with end
                    }
+ [[ logger =~ ^(logger|l)$ ]]
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ grep -F 172.16.1.6
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ oIFS=' 	
+ read -r key value
'
+ (( i < count ))
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z fortinet ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ IFS=,
+ for xitem in "${@}"
+ output_dir=reports/198.51.100.75/cisco
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ sed '/^[[:space:]]*$/d'
++ echo 192.168.0.100
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
++ tr -d '\r'
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ newline 2
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ grep -v '^\s*$'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ cat -n
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
++ grep -v '^#'
++ echo -e --platform=fortinet
++ echo -e --export
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ result=0
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n {
  "hostname": "fg-campus-core"
  "vendor": "cisco",
  "model": "",
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
}

  "version": "",
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
  "domain": "",
#hostname="fg-campus-core"
  "hostname": ""
}
#model="FortiGate-200F"

object-group network Fortress-Wireless
+ newline
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local count=1
+ case "${target_platform}" in

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
 network-object host 192.168.1.10 ]]
  set alias "Wireless VLAN"
 next
end
+ (( i = 0 ))
+ (( i < count ))

+ echo
config firewall address
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
 edit "Titan-WLAN-Host"
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ (( i++ ))
                  /^}$/ {
++ dirname -- ./scripts/network-extract.shell
                    if (in_json_header == 1) {
+ (( i < count ))
                      in_json_header = 0;
                      next;
                    }
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
                  }
 next
                  (in_json_header == 1) { next }
end
                  /^[^[:space:]]/ {

                    if (blk != "" && !seen[blk]++) print blk "\n";
config firewall address
                    blk = $0;
+ [[ platform =~ ^(config|c)$ ]]
                    next;
 edit "Wanda-Field"
                  }
  set subnet 192.168.100.100 255.255.255.255
                  {
  set comment "Wanda’s chaos relay"
+ [[ platform =~ ^(console|o)$ ]]
+ newline
 next
                    blk = blk divisor " " $0;
+ [[ platform =~ ^(export|r)$ ]]
                  }
                  END {
+ local count=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
end'
+ newline
                  }
+ local count=1
+ case "${target_platform}" in
+ alias parse-cisco=main
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
                ' reports/172.16.0.5/misc/fw3.cfg
+ result=0
+ (( i = 0 ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i = 0 ))
+ [[ -n {
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ echo
  "vendor": "fortinet",
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ platform =~ ^(platform|p)$ ]]
  "model": "FortiGate-200F",
                  BEGIN {
  "version": "",
                    in_json_header = 0;
+ (( i++ ))
                    blk = "";
  "domain": "",
+ (( i < count ))
+ local target_platform=fortinet
+ [[ logger =~ ^(config|c)$ ]]
                  }
  "hostname": "fg-campus-core"
                  /^[[:space:]]*$/ { next }
+ return 0
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8cZuvZ2WK0
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
                    if (in_json_header == 1) {
}
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8cZuvZ2WK0
+ [[ true == true ]]
                      in_json_header = 0;

#hostname="fg-campus-core"
+ [[ platform == \h\e\l\p ]]
                      next;
+ (( i < count ))
+ local search_pattern
+ [[ platform == \d\e\b\u\g ]]
#model="FortiGate-200F"
                    }
+ [[ -z x ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
                  }
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console

                  (in_json_header == 1) { next }
+ [[ platform == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
                  /^[^[:space:]]/ {
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ grep -F 172.16.0.5
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/misc/fw1.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
config system interface
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
+ [[ platform == \v\e\r\b\o\s\e ]]
 edit "wifi"
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ IFS==
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

+ grep -F 172.18.1.20
config firewall address
+ print '{
  "vendor": "cisco",
  "model": "",
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  "version": "",
  set comment "Wanda’s chaos relay"
  "domain": "",
 next
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(extract|x)$ ]]
+ logs_location=logs
  "hostname": ""
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
end ]]
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ logger =~ ^(platform|p)$ ]]
+ local first_search_entry=192.168.0.1
+ newline
+ [[ platform =~ ^(config|c)$ ]]
}
+ [[ logger =~ ^(search|s)$ ]]

+ [[ export =~ ^(config|c)$ ]]
object-group network Fortress-Wireless
+ [[ platform =~ ^(console|o)$ ]]
 description Secure wireless access layer
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
 network-object host 172.18.1.20
+ [[ platform =~ ^(export|r)$ ]]
 network-object host 192.168.1.10'
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ export =~ ^(console|o)$ ]]
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ platform =~ ^(logger|l)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_platform=fortinet
+ local count=1
+ echo -en '{
+ [[ platform =~ ^(search|s)$ ]]
+ sed '/^[[:space:]]*$/d'
  "vendor": "cisco",
+ (( i = 0 ))
+ export 'nl=\n'
+ local export_objects=true
  "model": "",
+ nl='\n'
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\e\b\u\g ]]
  "version": "",
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
  "domain": "",
+ [[ export =~ ^(extract|x)$ ]]
  "hostname": ""
}
+ echo
+ for xitem in "${@}"

+ [[ export =~ ^(logger|l)$ ]]
object-group network Fortress-Wireless
+ IFS==
 description Secure wireless access layer
+ read -r key value
+ (( i++ ))
+ [[ export =~ ^(platform|p)$ ]]
 network-object host 172.18.1.20
+ [[ logger =~ ^(config|c)$ ]]
 network-object host 192.168.1.10'
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ sed '/^[[:space:]]*$/d'
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ mkdir -p logs
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local last_search_entry=192.168.0.1
+ cat -n
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local count=1
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ serialize_objects
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ] ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ source ./scripts/devops-resources.shell
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ cut -d/ -f2
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
++ echo -e --verbose
++ [[ -n '' ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
++ which awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console ]]
+ [[ search =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw1.cfg.console
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
++ echo -e --export
+ result=0
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
+ [[ true == true ]]
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ [[ 5 -lt 4 ]]
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ local 'extracted_configuration={
+ result=0
+ local count=2
++ alias detect-vendor=detect_vendor
+ [[ -n {
+ local 'extracted_configuration={
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
  "vendor": "cisco",
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-configs--ips.list ]'
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(console|o)$ ]]
++ alias exit-error=exit_error
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(export|r)$ ]]
  "model": "",
  "model": "",
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
  "vendor": "cisco",
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ search =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ newline
+ (( i++ ))
  "version": "",
+ local count=1
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ echo
  "model": "",
  "version": "",
+ (( i++ ))
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ (( i = 0 ))
  "domain": "",
  "domain": "",
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ (( i < count ))
  "version": "16.9",
+ (( i < count ))
  "hostname": ""
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ (( i++ ))
++ alias list-file=list_file
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ return 0
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ [[ search == \h\e\l\p ]]
++ alias log-warn=log_warn
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ search =~ ^(search|s)$ ]]
  "hostname": ""
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
  "domain": "",
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console ]]
}

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
object-group network Wakanda-Core
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ local count=1
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ cat -n reports/192.168.1.10/misc/fw1.cfg

interface Vlan2
++ alias print-message=message
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list
 ip address 172.16.1.6 255.255.255.0 ]]
 description National Core Routing Zone
+ [[ search == \h\e\l\p ]]
  "hostname": "branch-isr-02"
+ (( i < count ))
}

+ search_pattern=203.0.113.25
version 16.9
hostname branch-isr-02
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ IFS==
+ read -r key value
++ alias print-newline=newline
++ echo -e --export
 network-object host 192.168.1.10
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
 network-object host 10.0.2.3
+ local parent_dir=reports/192.168.1.11/fortinet
++ alias pause=pause
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
++ alias print-line=print
+ [[ search == \d\e\b\u\g ]]
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ for xitem in "${@}"
+ IFS==
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ read -r key value
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ newline 2
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local count=2
+ [[ logger =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
+ local export_objects=true
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ IFS==
++ IFS=,
++ echo 198.51.100.75
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ search_terms=()
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l6Ghp2z5u8 ]]

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.l6Ghp2z5u8
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

++ alias print-file=print_file
object-group network Hydra-Edge
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
 network-object 10.0.0.0 255.255.255.0
++ alias relative-configpath=relative_configpath

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ print '{
  "vendor": "cisco",
  "model": "",
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
  "version": "",
  "domain": "",
  "hostname": ""
+ declare -a execute__netwowrk_extract
+ local search_pattern
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ alias validate-address=validate_address
+ [[ true == true ]]
+ [[ -n {
+ [[ extract =~ ^(config|c)$ ]]
++ alias warning-message=warning
  "vendor": "cisco",
  "model": "",
+ [[ extract =~ ^(console|o)$ ]]
  "version": "",
  "domain": "",
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
  "hostname": ""
+ [[ extract =~ ^(extract|x)$ ]]
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ newline
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ true == true ]]
}

+ local count=1
+ search_pattern=192.168.0.1
interface Vlan2
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
 ip address 172.16.1.6 255.255.255.0'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console ]]
 description Remote site uplink
 network-object host 192.168.2.12
+ result=0
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
++ export LC_ALL=C
++ echo -e --verbose
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WFj94VeKap/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
++ dirname reports/10.0.0.1/misc/switch3.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ return 0
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ extract =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(config|c)$ ]]
 network-object host 198.51.100.75'
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
+ [[ extract == \d\e\b\u\g ]]
  "vendor": "fortinet",
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--access-sw1-west.cfg.console
  "model": "FortiGate-200F",
+ [[ extract == \v\e\r\b\o\s\e ]]
+ script_filename=network-extract.shell
+ result=0
+ newline
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
++ LC_ALL=C
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local 'extracted_configuration={
+ [[ verbose =~ ^(export|r)$ ]]
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
  "version": "",
+ [[ export =~ ^(console|o)$ ]]
++ export 'nl=\n'
  "vendor": "cisco",
+ sed '1{/^[[:space:]]*$/d;}'
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
  "domain": "",
+ [[ -n {
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console ]]
  "model": "",
+ local count=1
  "version": "16.9",
+ IFS==
  "domain": "",
+ script_filename=network-extract
  "hostname": "branch-isr-02"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
  "hostname": "fg-campus-core"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--access-sw1-west.cfg.console
}
+ (( i < count ))
  "model": "ASA",
  "version": "9.12(4)",
++ nl='\n'
+ [[ export =~ ^(export|r)$ ]]
  "domain": "global.dmz.example.net",
+ read -r key value
+ export network_extract__console=console/network-extract.console
}
+ local export_objects=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ network_extract__console=console/network-extract.console

+ (( i++ ))

+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
  "hostname": "dmz-fw2-backup"
}
+ print '{

+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
ASA Version 9.12(4)
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
version 16.9
+ case "${target_file}" in
  "vendor": "cisco",
+ [[ export =~ ^(extract|x)$ ]]
++ export cache_location=.cache
  "model": "",
#hostname="fg-campus-core"
  "version": "",
+ touch console/network-extract.console
  "domain": "",
+ [[ verbose =~ ^(platform|p)$ ]]
  "hostname": ""
++ sed -e '1s|^\(-\)\{1,\}||'
}

+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
object-group network Wakanda-Core
+ [[ verbose == \h\e\l\p ]]
 description National Core Routing Zone
++ which awk
 network-object host 192.168.1.10
+ [[ export =~ ^(platform|p)$ ]]
hostname branch-isr-02
#model="FortiGate-200F"
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose == \d\e\b\u\g ]]
++ cache_location=.cache


+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
hostname dmz-fw2-backup
+ [[ verbose == \d\r\y\-\r\u\n ]]
 network-object host 10.0.2.3
+ [[ export =~ ^(search|s)$ ]]
 network-object 10.0.0.0 255.255.255.0

+ [[ verbose == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
object network Panther-Gateway
++ echo -e --config=.cache/resources/misc/switch1.conf
 host 10.0.2.3
++ export logs_location=logs
 description Secure outbound concentrator'
object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ [[ -n {
  "vendor": "cisco",
config system interface
 edit "core"
domain-name global.dmz.example.net
  set ip 10.10.10.10 255.255.255.0

  set alias "Campus Core Transit"
interface GigabitEthernet0/0
 next
  "model": "",
 nameif guest
  "version": "",
  "domain": "",
+ local verbose=true
end
  "hostname": ""
++ logs_location=logs
}

object-group network Wakanda-Core
 description National Core Routing Zone
++ mkdir -p logs
+ [[ export == \h\e\l\p ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ [[ export == \d\e\b\u\g ]]
 network-object 10.0.0.0 255.255.255.0

+ [[ export == \d\r\y\-\r\u\n ]]
object network Panther-Gateway
 host 10.0.2.3
+ [[ export == \v\e\r\b\o\s\e ]]
 description Secure outbound concentrator ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ sed -e '1s|^\(-\)\{1,\}||'
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10

+ IFS=' 	
 description Guest NAT
'

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
object-group network Sector-Wireless
  set comment "Wireless AP Gateway"
++ echo reports/10.0.0.1/misc/switch1.conf
+ [[ -z '' ]]
 description Staff WiFi clients
+ debug=false
 next
++ echo -e --platform=cisco
end'
++ cut -d/ -f2
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ [[ -z '' ]]
+ dry_run=false
++ echo -e --platform=cisco
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ newline 2
  "domain": "",
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local parent_dir=reports/10.0.0.1/misc
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
 next
+ (( i = 0 ))
+ (( i < count ))
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ result=0
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ result=0
+ exit 0
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B5csBJoyAO ]]
end

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.B5csBJoyAO
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ config =~ ^(config|c)$ ]]
+ result=0
config firewall address
+ exit 0
+ (( i++ ))
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KKETboomk5 ]]
+ [[ config =~ ^(console|o)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KKETboomk5
+ [[ config =~ ^(export|r)$ ]]
+ export console_output=false
+ [[ config =~ ^(extract|x)$ ]]
+ console_output=false
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
+ exit 0
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ config == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ config == \d\e\b\u\g ]]
+ print '{
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
  "vendor": "cisco",
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
  "model": "",
  "version": "16.9",
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  "domain": "",
+ search_terms=()
  "hostname": "branch-isr-02"
+ [[ 7 -eq 0 ]]
}

+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.usy0auf02b/network-configs--ips.list =~ ^-*(h|help)$ ]]
version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
  set comment "Wireless AP Gateway"
 next
 description Branch NAT egress
end ]]

object-group network Hydra-Edge
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console --export --verbose
+ (( i < count ))
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ print '{
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
++ echo -e --verbose
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
+ [[ -n {
  "vendor": "cisco",
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
  "model": "",

  "version": "16.9",
object network Shield-WiFi-Alias
  "domain": "",
 host 10.10.10.10
  "hostname": "branch-isr-02"
 description Guest NAT
}


object-group network Sector-Wireless
version 16.9
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ [[ -n {
object-group network Hydra-Edge
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
 description Remote site uplink
  "hostname": "dmz-fw2-backup"
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
}

++ basename reports/10.0.0.1/misc/switch3
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

+ echo -en '{
  "vendor": "cisco",
object-group network Sector-Wireless
 description Staff WiFi clients
  "model": "",
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ echo -en '{
  "vendor": "cisco",
}
  "model": "ASA",
+ declare -a search_terms
+ [[ config == \v\e\r\b\o\s\e ]]
  "version": "9.12(4)",

  "domain": "global.dmz.example.net",
version 16.9
  "hostname": "dmz-fw2-backup"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QP7Uu7y2jx ]]
hostname branch-isr-02
+ search_pattern=10.0.0.1

}
object network Hydra-Link
 host 198.51.100.75

ASA Version 9.12(4)
 description Branch NAT egress
hostname dmz-fw2-backup

domain-name global.dmz.example.net

object-group network Hydra-Edge
 description Remote site uplink
interface GigabitEthernet0/0
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
 network-object host 192.168.2.12
 nameif guest
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
 ip address 10.10.10.10 255.255.255.0
 network-object host 198.51.100.75'
+ oIFS=' 	
 description Guest access interface

+ [[ platform =~ ^(config|c)$ ]]
object network Shield-WiFi-Alias
 host 10.10.10.10
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
 description Guest NAT

+ [[ platform =~ ^(console|o)$ ]]
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ case "${target_platform}" in
+ newline 2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
++ command -v -- ./scripts/network-extract.shell
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list != *,* ]]
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ mapfile -t search_terms
                  }
+ for xitem in "${@}"
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ IFS==
+ sed '1{/^[[:space:]]*$/d;}'
+ read -r key value
++ printf '%*s' 12 ''
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QP7Uu7y2jx
+ mkdir -p reports/10.0.0.1/misc/.objects
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
'
++ export jobs_location=jobs
  "version": "",
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
  "domain": "",
++ jobs_location=jobs
  "hostname": "fg-campus-core"
+ for xitem in "${@}"
}
+ [[ platform =~ ^(export|r)$ ]]

+ [[ true == true ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
+ local SCRIPT_PATH=./scripts/network-extract.shell
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end
+ local count=2

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ (( i = 0 ))
 next
+ (( i < count ))
end'
+ echo
+ local 'indent=            '
+ newline
+ (( i++ ))
++ mkdir -p jobs
+ (( i < count ))
+ local count=1
+ echo
+ [[ -n {
+ [[ platform =~ ^(extract|x)$ ]]
  "vendor": "fortinet",
+ (( i++ ))
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
  "model": "FortiGate-200F",
+ (( i = 0 ))
+ [[ true == true ]]
  "version": "",
+ [[ platform =~ ^(console|o)$ ]]
  "domain": "",
+ [[ platform =~ ^(logger|l)$ ]]
  "hostname": "fg-campus-core"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ case "${target_file}" in
  "hostname": "fg-campus-core"
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ (( i < count ))
 next
end'
+ grep -F 192.168.0.1
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ local target_platform=cisco
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ echo
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ cfg == \c\f\g ]]
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ verbose =~ ^(export|r)$ ]]
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ newline
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ verbose =~ ^(logger|l)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local search_pattern
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ cat -n reports/10.0.2.3/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ local verbose=true
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ sed '/^[[:space:]]*$/d'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ newline 2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ newline 2
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list != *,* ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ mapfile -t search_terms
+ local count=2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ declare -a execute__netwowrk_extract
+ local count=2
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ (( i = 0 ))
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/10.0.0.1/misc/switch3.conf
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ tr -d '\r'
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
++ cut -d/ -f2
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
++ export console_location=console
++ console_location=console
+ local SCRIPT_DIR=./scripts
++ mkdir -p console
+ local script_filename=fortinet-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ newline 2
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GQrrjbYOpJ ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GQrrjbYOpJ
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
++ grep -v '^\s*$'
+ newline
+ [[ false == true ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ echo
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ echo
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ newline
+ case "${target_platform}" in
+ (( i < count ))
++ grep -v '^#'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
+ newline
++ which awk
                    blk = blk divisor " " $0;
+ (( i++ ))
                  }
                  END {
+ [[ extract =~ ^(search|s)$ ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local count=1
+ [[ true == true ]]
+ newline
+ (( i = 0 ))
+ local count=1
+ local count=1
+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ serialize_objects
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo
+ local first_search_entry=203.0.113.25
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ (( i++ ))
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ local last_search_entry=203.0.113.25
+ search_pattern=10.0.0.1
+ [[ search == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ (( i < count ))
+ output_dir=reports/192.168.0.1/fortinet
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ logger =~ ^(logger|l)$ ]]
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ read -r key value
+ grep -F 10.0.0.1
+ [[ true == true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ logger == \h\e\l\p ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ] ]]
+ local count=1
+ IFS==
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ read -r key value
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ (( i < count ))
+ echo
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ serialize_objects
+ [[ logger == \d\r\y\-\r\u\n ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
++ echo -e --platform=fortinet
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ for xitem in "${@}"
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ IFS==
+ newline
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local first_search_entry=203.0.113.25
+ sed '/^[[:space:]]*$/d'
++ dirname reports/172.16.1.6/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ read -r key value
+ local 'extracted_configuration={
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
  "vendor": "cisco",
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "model": "",
  "version": "12.2",
+ [[ -z fortinet ]]
  "domain": "",
+ [[ true == true ]]
  "hostname": "campus-sw-access01"
}

version 12.2
+ local count=1
++ dirname reports/10.0.2.3/misc/fw3.cfg
hostname campus-sw-access01
+ ((  count == 0  ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat -n

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ newline
+ result=0
+ local count=1
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ IFS=,
++ echo 192.168.2.12
++ echo -e --export
+ (( i < count ))
  "model": "",
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo
  "version": "12.2",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
  "domain": "",
  "hostname": "campus-sw-access01"
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
}
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ local parent_dir=reports/172.16.1.6/misc
+ [[ 0 -ne 0 ]]
+ newline

version 12.2
+ (( i < count ))
+ [[ true == true ]]
hostname campus-sw-access01
+ local count=1

object-group network Floor-Networks
+ (( i = 0 ))
 description End-user and service devices
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ false == true ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo -e --export
+ local target_platform=fortinet
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -z cisco ]]
+ newline
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ local count=1
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ (( i++ ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ serialize_objects
+ local parent_dir=reports/10.0.2.3/misc
+ newline
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ return 0
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ newline
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
+ newline
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local count=1
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
                  BEGIN {
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console ]]
                    in_json_header = 0;
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
                    blk = "";
                  }
++ export targets_location=targets
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
                  /^[[:space:]]*$/ { next }
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
                  /^{$/ { in_json_header = 1; next }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console ]]
                  /^}$/ {
++ targets_location=targets
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ case "${target_file}" in
                      next;
+ [[ false == true ]]
                    }
++ basename reports/172.16.1.6/misc/switch3
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch3.conf
+ print '{
  "vendor": "cisco",
  "model": "",
++ export targets_logfile=.cache/targets.jobs
  "version": "12.2",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --export
+ [[ true == true ]]
+ [[ -n {
++ targets_logfile=.cache/targets.jobs
  "vendor": "cisco",
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
object-group network Floor-Networks
 description End-user and service devices
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ echo -en '{
+ case "${target_file}" in
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ cat reports/10.0.0.1/misc/.objects/switch1.list
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ grep -F 10.0.0.1
+ serialize_objects
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.2.3/misc/fw3
+ [[ config =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ cat -n
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ local export_objects=true
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ export =~ ^(logger|l)$ ]]
+ local search_pattern
+ [[ export =~ ^(platform|p)$ ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+++ basename ./scripts/devops-resources.shell
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ read -r key value
+ local search_pattern
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ which awk
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ for xitem in "${@}"
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ read -r key value
+ (( i < count ))
+ local count=1
+ return 0
+ echo
+ (( i = 0 ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ newline 2
+ case "${target_platform}" in
++ printf '%*s' 12 ''
++ which awk
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=2
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ return 0
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
++ echo reports/172.16.1.6/misc/switch3.conf
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console ]]
+ echo
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
++ script_basename=devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console ]]
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ [[ export =~ ^(export|r)$ ]]
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
+ [[ cfg == \c\f\g ]]
+ newline
++ cut -d/ -f2
++ echo -e --verbose
+ (( i < count ))
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ echo reports/10.0.2.3/misc/fw3.cfg
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
++ echo -e --verbose
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ result=0
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console ]]
+ local export_objects=true
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i < count ))
+ for xitem in "${@}"
+ newline
+ [[ true == true ]]
+ IFS==
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ (( i = 0 ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ (( i < count ))
+ echo
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ false == true ]]
+ local search_pattern
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 203.0.113.25
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
++ IFS=,
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ echo 192.168.0.1
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+++ echo -n devops-resources.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ declare -a execute__netwowrk_extract
+ local search_pattern
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+++ base64
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --export
+ [[ logger =~ ^(console|o)$ ]]
+ search_pattern=172.16.1.6
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ search_pattern=10.0.2.3
+ [[ logger =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ result=0
+++ tr -dc a-zA-Z0-9
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
+ exit 0
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BQ6GewVIre ]]
+ [[ logger =~ ^(search|s)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BQ6GewVIre
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p reports/172.16.1.6/misc/.objects
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
+ console_output=false
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ IFS==
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ read -r key value
+ local search_pattern
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console ]]
+ (( i = 0 ))
+ cat -n
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ case "${target_file}" in
+ IFS==
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch1.conf.console
++ which awk
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list != *,* ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ mapfile -t search_terms
++ command -v -- ./scripts/network-extract.shell
+ local verbose=true
+ [[ true == true ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ search_terms=()
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
++ cut -d/ -f2
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ serialize_objects
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ newline
+ [[ export =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local count=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ export =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local export_objects=true
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ echo
+ search_pattern=10.10.10.10
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ return 0
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ [[ export == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
  "model": "FortiGate-60F",
+ [[ export == \d\r\y\-\r\u\n ]]
  "version": "v7.2.5.F",
  "domain": "",
+ [[ export == \v\e\r\b\o\s\e ]]
  "hostname": "fg-branch-vpn-01"
+ for xitem in "${@}"
}
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk

+ IFS==
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
#hostname="fg-branch-vpn-01"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console ]]
+ read -r key value
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
config system interface
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console ]]
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
++ alias network-configs--helper=network_configs__helper
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
  set alias "User LAN"
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ dirname -- ./scripts/network-extract.shell
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console ]]
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ case "${target_file}" in
end

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
+ (( i++ ))
++ alias network-extract--helper=network_extract__helper
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ read -r key value
}
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]

+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ declare -a search_terms
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ dirname -- ./scripts/network-extract.shell
+ alias serialize-object=serialize_objects
++ echo -e --platform=cisco

++ tr -d '\r'
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
config system interface
 edit "internal"
++ echo -e --export
++ tr -d '\r'
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ case "${target_platform}" in
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ printf '%*s' 12 ''
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
++ grep -v '^\s*$'
++ echo -e --export
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
++ grep -v '^\s*$'
                    in_json_header = 0;
+ [[ -z x ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ export logs_location=logs
+ local 'indent=            '
+ logs_location=logs
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ search_pattern=198.51.100.75
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/misc/switch3.conf
++ grep -v '^#'
+ grep -F 10.0.2.3
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
++ echo -e --verbose
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
++ grep -v '^#'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RCAwBWHLU4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RCAwBWHLU4
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ mkdir -p logs
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local parent_dir=reports/192.168.0.100/cisco
+ local script_filename=cisco-configs.awk
+ local script_filename=fortinet-configs.awk
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ sed '/^[[:space:]]*$/d'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZiY0WEnzcY/network-extract--switch3.conf.console
+ sed '1{/^[[:space:]]*$/d;}'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ case "${target_platform}" in
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ read -r key value
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                  }
                  /^[[:space:]]*$/ { next }
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ newline
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ local count=1
                    next;
+ [[ export =~ ^(logger|l)$ ]]
                  }
+ (( i = 0 ))
+ local first_search_entry=192.168.1.10
                  {
+ local first_search_entry=192.168.2.12
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ verbose =~ ^(config|c)$ ]]
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local last_search_entry=192.168.1.10
+ grep -F 172.16.1.6
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ local last_search_entry=192.168.2.12
+ [[ export == \h\e\l\p ]]
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ verbose =~ ^(search|s)$ ]]
++ which awk
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
++ which awk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ] ]]
+ script_helper=false
+ [[ export == \d\e\b\u\g ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ search_terms=()
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ declare -a search_terms
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ IFS==
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ local count=1
+ sed '/^[[:space:]]*$/d'
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i++ ))
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ grep -F 10.10.10.10
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ true == true ]]
+ [[ -z cisco ]]
+ serialize_objects
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ newline
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ script_filename=network-extract.shell
+ echo
+ (( i = 0 ))
+ script_filename=network-extract
+ (( i < count ))
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ export network_extract__console=console/network-extract.console
+ (( i++ ))
+ newline
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ local count=1
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ touch console/network-extract.console
+ echo
+ (( i < count ))
+ (( i++ ))
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ (( i < count ))
+ local search_pattern
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ newline 2
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
++ sed -e '1s|^\(-\)\{1,\}||'
                      in_json_header = 0;
+ case "${target_platform}" in
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
++ tr -d '\r'
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                      next;
                    }
                    in_json_header = 0;
++ echo -e --verbose

                    blk = "";
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
                    # Add edit line to current block
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
                    /^ edit / {
                  }
                      blk = blk divisor " " $0;
                      next;
                    }
                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
                    # Add next to block
                  /^}$/ {
                    /^ next$/ {
                    if (in_json_header == 1) {
                      blk = blk divisor " " $0;
                      in_json_header = 0;
                      next;
                      next;
                    }

+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
                    }
                    # Finalize block at end
                  }
                    /^end$/ {
                  (in_json_header == 1) { next }
+ result=0
                  /^[^[:space:]]/ {
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
                      blk = blk divisor " " $0;
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
                      if (blk != "" && !seen[blk]++) print blk;
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ exit 0
                      blk = "";
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XXXU5ISwUQ ]]
                    blk = $0;
                      next;
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XXXU5ISwUQ
                    next;
                    }
+ case "${target_file}" in
                  }

+ cat reports/10.0.2.3/misc/.objects/fw3.list
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                  {
                    }
                    blk = blk divisor " " $0;
                  }

                  END {
                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
+ grep -F 10.10.10.10
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ 0 -ne 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ true == true ]]
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ result=0
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ newline
+ cat -n
++ IFS=,
++ echo 203.0.113.25
+ grep -F 198.51.100.75
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ IFS=,
++ echo 203.0.113.25
++ grep -v '^#'
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
++ cut -d/ -f2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ sed '/^[[:space:]]*$/d'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xowajdtlbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console --export --verbose
+ sed '/^[[:space:]]*$/d'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ logger =~ ^(config|c)$ ]]
config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
  set comment "Backup uplink for Milano crew"
 next
end'
+ oIFS=' 	
'
+ result=0
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "fortinet",
+ IFS==
  "model": "FortiGate-60F",
+ read -r key value
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ [[ verbose =~ ^(config|c)$ ]]
 next
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
++ which awk
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
end ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
++ which awk
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local first_search_entry=198.51.100.75
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ return 0
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'indent=            '
+ [[ 0 -ne 0 ]]
+ local last_search_entry=198.51.100.75
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ true == true ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ verbose == \h\e\l\p ]]
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ [[ true == true ]]
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ verbose == \d\e\b\u\g ]]
+ search_pattern=192.168.0.100
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ local verbose=true
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ IFS=' 	
+ [[ logger == \d\e\b\u\g ]]
'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ debug=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ dry_run=false
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console ]]
+ newline
+ newline
+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console ]]
+ export console_output=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ] ]]
+ case "${target_file}" in
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ console_output=false
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ (( i = 0 ))
+ newline
+ [[ -z true ]]
+ (( i < count ))
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ echo
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ script_helper=false
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ (( i < count ))
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ [[ false == true ]]
+ newline
+ search_terms=()
+ [[ true == true ]]
+ local count=1
+ declare -a search_terms
+ (( i = 0 ))
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
  set comment "Backup uplink for Milano crew"
+ cat -n
+ echo
 next
end'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ serialize_objects
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ result=0
  "version": "v7.2.5.F",
  "domain": "",
+ [[ 0 -ne 0 ]]
  "hostname": "fg-branch-vpn-01"
+ [[ true == true ]]
}
+ (( i++ ))

+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i < count ))
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
end ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ dirname reports/192.168.2.12/misc/fw1.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ echo -en '{
  "vendor": "fortinet",
+ case "${target_file}" in
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ newline
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i++ ))
+ (( i = 0 ))
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ (( i < count ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local awk_bin=/usr/bin/awk
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --export
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ newline
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local count=1
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local 'indent=            '
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ output_dir=reports/192.168.1.10/misc
+ output_dir=reports/192.168.2.12/misc
+ [[ true == true ]]
++ grep -v '^\s*$'
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ ! -d reports/192.168.2.12/misc ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console ]]
++ grep -v '^#'
+ case "${target_file}" in
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XPM1dRPwxr/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ local parent_dir=reports/192.168.2.12/fortinet
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline 2
+ [[ search =~ ^(export|r)$ ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ case "${target_file}" in
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9smnwSAAYV/network-extract--fw3.cfg.console
+ local count=2
+ local count=1
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ (( i = 0 ))
+ case "${target_file}" in
+ cat -n
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ (( i < count ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ search == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ search == \d\e\b\u\g ]]
+ echo
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.udRZb4yzlB/network-extract--fw1.cfg.console
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_platform}" in
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ IFS==
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ local export_objects=true
+ echo
+ [[ export =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ (( i++ ))
+ [[ export =~ ^(extract|x)$ ]]
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ (( i < count ))
+ newline
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local export_objects=true
+ echo
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local verbose=true
+ grep -F 192.168.0.100
+ IFS=' 	
'
++ basename reports/192.168.1.10/misc/fw1
+ [[ -z '' ]]
+ debug=false
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ [[ export =~ ^(logger|l)$ ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ dry_run=false
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ [[ -z true ]]
+ serialize_objects
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ newline
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ echo
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ return 0
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-configs--ips.list ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console ]]
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ case "${target_file}" in
+ ((  count == 0  ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--switch3.conf.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ result=0
++ echo -e --verbose
+ exit 0
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAM5H4Qud5 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AAM5H4Qud5
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local SCRIPT_DIR=./scripts
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ case "${target_file}" in
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--dmz-fw2-backup.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ console_output=false
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ for xitem in "${@}"
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ false == true ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ IFS==
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ read -r key value
+ [[ true == true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console ]]
+ local search_pattern
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wM1qugp9uA/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ result=0
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z true ]]
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ exit 0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ serialize_objects
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
++ which awk
++ which awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nkzGNupIcs ]]
+ [[ config =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "cisco",
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ [[ config =~ ^(export|r)$ ]]

ASA Version 9.14(3)
+ [[ config =~ ^(extract|x)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ config =~ ^(logger|l)$ ]]
interface GigabitEthernet0/0
+ local 'extracted_configuration={
 nameif outside
  "vendor": "fortinet",
 security-level 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
  "model": "FortiGate-60F",
 ip address 203.0.113.25 255.255.255.0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console ]]
+ [[ config =~ ^(search|s)$ ]]
 description External Internet-facing Interface
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ config == \h\e\l\p ]]
+ result=0

+ [[ config == \d\e\b\u\g ]]
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console ]]
object network NAT-Edge
}
++ cut -d/ -f2
+ exit 0
+ [[ config == \d\r\y\-\r\u\n ]]
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m66UthLl5D ]]
 host 203.0.113.25
+ case "${target_file}" in
 description Internet-bound IP NAT
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.m66UthLl5D
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-campus-core.cfg.console


#hostname="fg-branch-vpn-01"
+ [[ true == true ]]
object-group network Avengers-DMZ
 description Public access layer
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
#model="FortiGate-60F"
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ case "${target_file}" in
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nkzGNupIcs
+ IFS==
 network-object 192.168.2.0 255.255.255.0

+ result=0
+ local parent_dir=reports/192.168.100.100/fortinet
+ exit 0
config firewall address
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xpqtZZQqNf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xpqtZZQqNf
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(console|o)$ ]]
+ read -r key value

 edit "Public-Test"
+ [[ verbose =~ ^(export|r)$ ]]
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ verbose =~ ^(extract|x)$ ]]
object-group network Panther-Edge
+ [[ verbose =~ ^(logger|l)$ ]]
 description Internet-facing proxy systems
+ result=0
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ result=0
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ -n {
}
+ [[ verbose =~ ^(platform|p)$ ]]
  "vendor": "cisco",

  "model": "ASA",
#hostname="fg-branch-vpn-01"
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
+ [[ verbose =~ ^(search|s)$ ]]
 description Internet-bound IP NAT
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

object-group network Avengers-DMZ

 description Public access layer
+ IFS=' 	
config firewall address
+ cat -n
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
 network-object host 192.0.2.50
 network-object host 203.0.113.25
  set comment "Public NAT exposure for Red Skull trap"
+ mapfile -t search_terms
 network-object 192.168.2.0 255.255.255.0
'

 next
end ]]
++ echo -e --verbose
object-group network Panther-Edge
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
 description Internet-facing proxy systems
+ output_dir=reports/198.51.100.75/fortinet
+ [[ -z true ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ -z '' ]]
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console ]]
++ echo reports/192.168.1.10/misc/fw1.cfg
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]]
++ tr -d '\r'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ cut -d/ -f2
++ grep -v '^\s*$'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ print '{
  "vendor": "fortinet",
}
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

ASA Version 9.14(3)
  "domain": "",
hostname perimeter-fw1
domain-name edge.dc.example.com

  "hostname": "fg-branch-vpn-01"
interface GigabitEthernet0/0
}

#hostname="fg-branch-vpn-01"
 nameif outside
+ local parent_dir=reports/192.168.0.1/fortinet
 security-level 0
#model="FortiGate-60F"
 ip address 203.0.113.25 255.255.255.0
#config-version=FGT_60F-v7.2.5.F-build1517-230421

 description External Internet-facing Interface
config firewall address

 edit "Public-Test"
object network NAT-Edge
  set subnet 203.0.113.25 255.255.255.255
 host 203.0.113.25
  set comment "Public NAT exposure for Red Skull trap"
 description Internet-bound IP NAT
 next

object-group network Avengers-DMZ
 description Public access layer
end'
 network-object host 192.0.2.50
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

++ basename reports/192.168.100.100/fortinet/fg-campus-core
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ -n {
  "vendor": "cisco",
 edit "Public-Test"
  "model": "ASA",
  "version": "9.14(3)",
  set subnet 203.0.113.25 255.255.255.255
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
  set comment "Public NAT exposure for Red Skull trap"
 next
}
end ]]

ASA Version 9.14(3)
hostname perimeter-fw1
+ local search_pattern
domain-name edge.dc.example.com

+ echo -en '{
interface GigabitEthernet0/0
  "vendor": "fortinet",
 nameif outside
  "model": "FortiGate-60F",
 security-level 0
++ command -v -- ./scripts/network-extract.shell
  "version": "v7.2.5.F",
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
  "domain": "",
  "hostname": "fg-branch-vpn-01"
 description Internet-bound IP NAT
}


object-group network Avengers-DMZ
 description Public access layer
#hostname="fg-branch-vpn-01"
++ grep -v '^#'
 network-object host 192.0.2.50
#model="FortiGate-60F"
 network-object host 203.0.113.25
#config-version=FGT_60F-v7.2.5.F-build1517-230421

 network-object 192.168.2.0 255.255.255.0

config firewall address
object-group network Panther-Edge
 description Internet-facing proxy systems
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
 network-object host 203.0.113.25
  set comment "Public NAT exposure for Red Skull trap"
 network-object host 172.16.0.5 ]]
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ verbose =~ ^(export|r)$ ]]
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ [[ verbose =~ ^(extract|x)$ ]]
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ [[ verbose =~ ^(logger|l)$ ]]

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ [[ verbose =~ ^(platform|p)$ ]]

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

+ [[ verbose == \h\e\l\p ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ newline
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ local count=1
+ export console_output=false
+ console_output=false
+ (( i = 0 ))
+ [[ -z true ]]
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ search_pattern=192.168.2.12
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ search_terms=()
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ exit 0
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ search_pattern=192.168.1.10
+ [[ verbose =~ ^(extract|x)$ ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1kD2E6jlYj ]]
+ return 0
+ [[ verbose =~ ^(platform|p)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1kD2E6jlYj
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
++ IFS=,
+ debug=false
+ [[ -z '' ]]
+ result=0
+ dry_run=false
+ exit 0
++ echo 192.168.1.10
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QzqDEx99om ]]
+ export console_output=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ console_output=false
+ [[ -z true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console ]]
+ script_helper=false
+ case "${target_file}" in
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
++ IFS=,
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ echo 192.168.2.12
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QzqDEx99om
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ local search_pattern
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ result=0
++ tr -d '\r'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
++ dirname reports/192.168.1.10/misc/switch1.conf
++ grep -v '^\s*$'
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
++ cut -d/ -f2
+ sed '1{/^[[:space:]]*$/d;}'
++ tr -d '\r'
++ grep -v '^\s*$'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVVyZ2gO6A ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tVVyZ2gO6A
++ grep -v '^#'
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
++ grep -v '^\s*$'
+ [[ true == true ]]
++ grep -v '^#'
++ grep -v '^#'
++ tr -d '\r'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ] ]]
+ search_pattern=192.168.1.11
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-configs--ips.list ]'
++ grep -v '^\s*$'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ output_dir=reports/192.168.1.10/misc
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ print '{
+ local SCRIPT_DIR=./scripts
++ which awk
  "vendor": "cisco",
+ local script_filename=fortinet-configs.awk
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
  "vendor": "cisco",
++ grep -v '^#'
+ local 'prompt_message=Enter configuration file to be parsed: '
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ] ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ -z fortinet ]]
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ] ]]
+ case "${target_platform}" in
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
                    /^config / {
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ newline

+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
                    # Add next to block
                    /^ next$/ {
+ (( i < count ))
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
++ cut -d/ -f2
                      blk = blk divisor " " $0;
+ local first_search_entry=10.10.10.10
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
+ local last_search_entry=10.10.10.10
+ echo
                    }
+ case "${target_platform}" in

+ (( i++ ))
                    # Accumulate middle lines
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ (( i < count ))
                    {
+ (( i < count ))
+ [[ true == true ]]
+ newline
                      blk = blk divisor " " $0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
                    }
+ local count=1

                    END {
                      # No need for final print — all blocks end with end
                    }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ local 'prompt_message=Enter configuration file to be parsed: '
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ [[ -z cisco ]]
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
                    blk = "";
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console ]]
                  }
+ (( i < count ))
+ newline
+ echo
+ newline 2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
                  /^[[:space:]]*$/ { next }
+ newline
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ (( i++ ))
+ case "${target_file}" in
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
                  /^{$/ { in_json_header = 1; next }
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local count=1
+ result=0
+ ((  count == 0  ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--dmz-fw2-backup.cfg.console
+ local 'prompt_message=Enter configuration file to be parsed: '
                  /^}$/ {
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ exit 0
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
                    if (in_json_header == 1) {
+ local count=2
+ (( i < count ))
+ echo
+ echo
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i++ ))
                      in_json_header = 0;
+ [[ extract =~ ^(export|r)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -z cisco ]]
+ declare -a execute__netwowrk_extract
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2NjOXoYFWG ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
                      next;
+ (( i < count ))
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ newline
                    }
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
                  }
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2NjOXoYFWG
                  (in_json_header == 1) { next }
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ newline
                  /^[^[:space:]]/ {
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
                    blk = $0;
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ (( i < count ))
                    next;
+ local awk_bin=/usr/bin/awk
                  }
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
+ (( i = 0 ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
                  }
+ echo
                ' reports/192.168.1.10/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ grep -F 192.168.1.10
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ grep -F 192.168.2.12
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ (( i = 0 ))
+ local search_pattern
+ (( i < count ))
+ echo
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ return 0
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local first_search_entry=10.10.10.10
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ local last_search_entry=10.10.10.10
+ [[ true == true ]]
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ case "${target_platform}" in
+ sed '/^[[:space:]]*$/d'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ printf '%*s' 12 ''
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ true == true ]]
+ search_pattern=192.168.100.100
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ mkdir -p reports/192.168.100.100/fortinet/.objects
                    }

+ newline
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

+ local count=1
                    # Skip platform metadata
+ (( i = 0 ))
                    /^#(hostname|model|config-version)=/ { next }
+ (( i < count ))

                    # Start of a new block
                    /^config / {
+ echo
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
+ (( i++ ))
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
+ (( i < count ))
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ local 'indent=            '
                      next;
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
                    }
+ local count=2

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ (( i = 0 ))
+ grep -F 192.168.1.11
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ local script_filename=cisco-configs.awk
+ (( i = 0 ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ (( i++ ))
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ result=0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ [[ 0 -ne 0 ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XllRJJm74k ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XllRJJm74k
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ (( i < count ))
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
++ IFS=,
+ echo -e '                .cache/resources/misc/fw3.cfg'
++ echo 198.51.100.75
++ which awk
+ newline
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
++ which awk
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ case "${target_file}" in
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ (( i++ ))
+ newline 2
+ (( i < count ))
+ result=0
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ 0 -ne 0 ]]
++ cut -d/ -f2
+ [[ true == true ]]
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ case "${target_file}" in
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local count=2
++ which awk
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ (( i = 0 ))
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ (( i < count ))
+ cat -n
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ echo
+ case "${target_platform}" in
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ IFS==
                    BEGIN {
+ read -r key value
                      blk = "";
                      in_json_header = 0;
                    }

+ [[ cfg == \c\f\g ]]
+ cat -n
                    # Skip blank lines
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
                    (in_json_header == 1) { next }
+ (( i++ ))

                    # Skip platform metadata
+ local awk_bin=/usr/bin/awk
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
                      blk = $0;
                      next;
                    }
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'

                    # Add edit line to current block
+ (( i < count ))
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ echo
                    /^ edit / {
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
                      blk = blk divisor " " $0;
+ (( i++ ))
                      next;
                    }

+ (( i < count ))
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
                    # Add next to block
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
                      if (blk != "" && !seen[blk]++) print blk;
+ newline
                      blk = "";
                      next;
                    }
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list

                    # Accumulate middle lines
                    {
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
                      blk = blk divisor " " $0;
                    }

+ case "${target_file}" in
                    END {
                      # No need for final print — all blocks end with end
                    }
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo
+ grep -F 192.168.100.100
+ cat -n
+ newline
+ local count=1
+ output_dir=reports/203.0.113.25/misc
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/203.0.113.25/misc ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ output_dir=reports/192.168.2.12/fortinet
+ local awk_bin=/usr/bin/awk
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
++ IFS=,
+ output_dir=reports/198.51.100.75/misc
+ serialize_objects
+ [[ ! -d reports/198.51.100.75/misc ]]
++ echo 192.168.1.10
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local count=1
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console ]]
object-group network Wakanda-Core
++ command -v -- ./scripts/network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
 description National Core Routing Zone
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console ]]
 network-object host 192.168.1.10
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ result=0
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ local 'indent=            '
object-group network Wakanda-Core
 description National Core Routing Zone
+ [[ true == true ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ search_pattern=192.168.0.1
+ echo
+ return 0
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ output_dir=reports/10.10.10.10/fortinet
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console ]]
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ dirname -- ./scripts/network-extract.shell
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ newline
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fOcfUem6te/network-extract--campus-sw-access01.cfg.console
+ newline
+ print '{
  "vendor": "cisco",
+ local count=1
  "model": "",
+ (( i = 0 ))
  "version": "",
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
+ echo
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ (( i++ ))
 network-object host 192.168.1.10
+ (( i < count ))
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --platform=cisco
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n {
  "vendor": "cisco",
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ message '             -f ./scripts/extract/cisco-configs.awk \'
object-group network Wakanda-Core
 description National Core Routing Zone
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 network-object 10.0.0.0 255.255.255.0 ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -en '{
  "vendor": "cisco",
+ message '                .cache/resources/misc/fw1.cfg'
  "model": "",
  "version": "",
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
  "domain": "",
  "hostname": ""
+ local 'message=                .cache/resources/misc/fw1.cfg'
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local parent_dir=reports/198.51.100.75/cisco
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-branch-vpn-01.cfg.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ serialize_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console ]]
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZcChjv5nF/network-extract--fg-campus-core.cfg.console
++ which awk
+ local 'indent=            '
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ newline 2
+ local script_filename=cisco-configs.awk
++ which awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat -n
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(config|c)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ platform =~ ^(export|r)$ ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ platform =~ ^(extract|x)$ ]]
++ which awk
+ newline
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ local count=1
+ echo -e '                .cache/resources/misc/switch1.conf'
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ newline
+ (( i < count ))
+ local target_platform=cisco
+ local count=1
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ result=0
+ (( i < count ))
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5yaFtr2A7F ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5yaFtr2A7F
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ [[ false == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ serialize_objects
++ which awk
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
+ local 'extracted_configuration={
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.So2fGFmRLK ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.So2fGFmRLK
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
++ which awk
+ grep -F 192.168.0.1
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tjzCstOJjA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tjzCstOJjA
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k7n1tjORGT ]]
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.k7n1tjORGT
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
++ IFS=,
++ echo 203.0.113.25
+ sed '/^[[:space:]]*$/d'
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute__netwowrk_extract
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
++ echo 10.10.10.10
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ [[ -n {
++ cut -d/ -f2
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local parent_dir=reports/203.0.113.25/fortinet
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ serialize_objects
++ IFS=,
++ echo 192.168.2.12
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
++ which awk
  "vendor": "cisco",
++ IFS=,
++ echo 10.10.10.10
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ declare -a execute__netwowrk_extract
+ local parent_dir=reports/203.0.113.25/cisco
+ result=0
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ [[ -n {
+ search_pattern=198.51.100.75
  "hostname": ""
  "vendor": "cisco",
  "model": "",
}
  "version": "",

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ result=0
+ mkdir -p reports/198.51.100.75/cisco/.objects
  "domain": "",
+ declare -a execute__netwowrk_extract
++ IFS=,
object-group network Metropolis-Internal
+ [[ 0 -ne 0 ]]
  "hostname": ""
 description Core internal LAN for application clusters
+ [[ true == true ]]
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
}
 network-object host 192.168.2.12'

interface Vlan20
++ echo 198.51.100.75
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
 ip address 192.168.1.10 255.255.255.0 ]]
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
++ which awk
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ print '{
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ logger == \h\e\l\p ]]
  "version": "",
  "domain": "",
+ [[ logger == \d\e\b\u\g ]]
  "vendor": "cisco",
  "hostname": ""
+ [[ logger == \d\r\y\-\r\u\n ]]
}
  "model": "",
+ [[ logger == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
  "version": "",
+ IFS==
  "domain": "",
  "hostname": ""
 network-object host 10.0.2.3
}
 network-object 192.168.2.0 255.255.255.0

+ read -r key value
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
interface Vlan20
 network-object host 192.168.2.12'
 ip address 192.168.1.10 255.255.255.0'
+ [[ true == true ]]
++ which awk
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n {
  "domain": "",
  "vendor": "cisco",
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
  "model": "",
  "hostname": ""
+ case "${target_file}" in
  "version": "",
}
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
  "domain": "",
  "hostname": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console

}
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console ]]
object-group network Metropolis-Internal

 description Core internal LAN for application clusters
interface Vlan20
 network-object host 10.0.2.3
 ip address 192.168.1.10 255.255.255.0 ]]
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
+ echo -en '{
+ echo -en '{
  "vendor": "cisco",
  "vendor": "cisco",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console ]]
  "model": "",
  "model": "",
  "version": "",
  "domain": "",
+ case "${target_file}" in
  "version": "",
  "hostname": ""
  "domain": "",
  "hostname": ""
}

interface Vlan20
}
 ip address 192.168.1.10 255.255.255.0'
+ local awk_bin=/usr/bin/awk

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SkS6dIh7jt/network-extract--fg-campus-core.cfg.console
object-group network Metropolis-Internal
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local parent_dir=reports/192.168.1.10/misc
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local search_pattern
+ local awk_bin=/usr/bin/awk
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local search_pattern
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'indent=            '
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --export
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/192.168.1.10/misc/fw3
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ printf '%*s' 12 ''
+ newline 2
++ printf '%*s' 12 ''
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ local 'indent=            '
+ local 'indent=            '
+ (( i++ ))
+ [[ true == true ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ (( i < count ))
+ echo
+ grep -F 198.51.100.75
+ (( i++ ))
+ result=0
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ exit 0
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Juomb1z6Xh ]]
+ (( i < count ))
+ local count=1
+ local 'indent=            '
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ (( i = 0 ))
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Juomb1z6Xh
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))
+ echo
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ (( i = 0 ))
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo
+ return 0
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ case "${target_file}" in
++ cut -d/ -f2
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
++ cut -d/ -f2
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ newline
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ sed '/^[[:space:]]*$/d'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ local count=1
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ (( i < count ))
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local count=1
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/cisco/.objects
++ echo reports/192.168.1.10/misc/fw3.cfg
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
++ cut -d/ -f2
+ local 'extracted_configuration={
++ echo -e --verbose
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
++ sed -e '1s|^\(-\)\{1,\}||'
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
  "domain": "",
  "vendor": "cisco",
  "model": "",
  "version": "",
  "hostname": ""
  "domain": "",
}
  "hostname": ""

}
object-group network Shield-WiFi

+ newline
object-group network Krypton-Cloud
 description Shield-controlled wireless network
+ newline
 description Cloud-facing external nodes
 network-object host 10.10.10.10
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ local count=1
 network-object 192.168.100.0 255.255.255.0
+ (( i = 0 ))

+ (( i < count ))
object network Krypton-Gateway
 host 203.0.113.25
+ echo
+ local count=1
 description Secure NAT boundary for cloud access ]]

+ (( i = 0 ))
+ (( i++ ))
object-group network Shield-WiFi
+ (( i < count ))
+ echo -en '{
 description Shield-controlled wireless network
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
 network-object host 10.10.10.10
  "version": "",
+ [[ true == true ]]
+ echo
 network-object 192.168.100.0 255.255.255.0
  "domain": "",

+ (( i++ ))
+ [[ false == true ]]
object-group network Shield-WiFi
  "hostname": ""
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
}
+ [[ true == true ]]
 description Shield-controlled wireless network
+ local count=1
 network-object host 10.10.10.10
+ local parent_dir=reports/198.51.100.75/fortinet
+ (( i < count ))

 network-object 192.168.100.0 255.255.255.0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console ]]

object-group network Krypton-Cloud
object network Shield-WiFi-Alias
 description Cloud-facing external nodes
 host 10.10.10.10
 network-object host 198.51.100.75
 description Guest NAT'
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ (( i < count ))
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
  "version": "",
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
  "hostname": ""
+ case "${target_file}" in
}

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4o8KfOU2nZ/network-extract--fg-branch-vpn-01.cfg.console
object-group network Shield-WiFi
+ serialize_objects
 description Shield-controlled wireless network
+ [[ false == true ]]
 network-object host 10.10.10.10
+ [[ true == true ]]
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ serialize_objects
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ case "${target_file}" in
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "",
  "domain": "",
  "hostname": ""
}
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ local 'extracted_configuration={
 network-object host 198.51.100.75
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
 network-object host 203.0.113.25

  "domain": "",
object network External-Failover
  "hostname": "fg-campus-core"
 host 198.51.100.75
}
 description Secondary outbound route for edge'

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
+ result=0
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n {
 next
  "vendor": "cisco",
end'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ result=0
}

object-group network Krypton-Cloud
+ [[ -n {
 description Cloud-facing external nodes
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 198.51.100.75
 network-object host 203.0.113.25
  "vendor": "fortinet",
+ case "${target_platform}" in
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline 2

  "model": "FortiGate-200F",
++ dirname reports/192.168.1.10/misc/switch1.conf
+ [[ verbose =~ ^(logger|l)$ ]]
object network External-Failover
  "version": "",
+ print '{
  "domain": "",
 host 198.51.100.75
  "vendor": "cisco",
  "hostname": "fg-campus-core"
}
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ verbose =~ ^(platform|p)$ ]]

  "model": "",
                    BEGIN {
 description Secondary outbound route for edge ]]
#hostname="fg-campus-core"
                      blk = "";
  "version": "",
                      in_json_header = 0;
                    }
+ local count=2
#model="FortiGate-200F"
  "domain": "",
+ (( i = 0 ))

  "hostname": ""
                    # Skip blank lines
}
                    /^[[:space:]]*$/ { next }


object-group network Shield-WiFi
+ (( i < count ))
 description Shield-controlled wireless network

+ [[ verbose =~ ^(search|s)$ ]]
                    # Skip JSON preamble
 network-object host 10.10.10.10
+ [[ verbose == \h\e\l\p ]]
                    /^{$/            { in_json_header = 1; next }
 network-object 192.168.100.0 255.255.255.0
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }

                    (in_json_header == 1) { next }
+ [[ verbose == \d\e\b\u\g ]]
+ echo

+ cat -n
config firewall address
+ (( i++ ))
object-group network Shield-WiFi
 edit "Vision-Link"
+ (( i < count ))
 description Shield-controlled wireless network
+ [[ verbose == \d\r\y\-\r\u\n ]]
 network-object host 10.10.10.10
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
                    # Skip platform metadata
 next
                    /^#(hostname|model|config-version)=/ { next }
+ echo
 network-object 192.168.100.0 255.255.255.0
end ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]

object-group network Shield-WiFi
+ local verbose=true

+ (( i++ ))
 description Shield-controlled wireless network
+ (( i < count ))
++ dirname reports/192.168.2.12/misc/fw1.cfg
                    # Start of a new block
 network-object host 10.10.10.10
+ grep -F 203.0.113.25
 network-object 192.168.100.0 255.255.255.0

+ print '{
+ IFS=' 	
'
                    /^config / {
+ [[ -z '' ]]
object network Shield-WiFi-Alias
  "vendor": "fortinet",
                      if (blk != "") print blk;
+ debug=false
                      blk = $0;
 host 10.10.10.10
                      next;
  "model": "FortiGate-60F",
                    }

 description Guest NAT'
                    # Add edit line to current block
  "version": "v7.2.5.F",
                    /^ edit / {
                      blk = blk divisor " " $0;
  "domain": "",
+ [[ true == true ]]
  "hostname": "fg-branch-vpn-01"
                      next;
                    }
}

+ [[ -z '' ]]

+ dry_run=false
#hostname="fg-branch-vpn-01"
                    # Add next to block
+ [[ -z true ]]
#model="FortiGate-60F"
+ [[ -z '' ]]
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ export console_output=false
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ console_output=false
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'

+ [[ -z true ]]
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
config firewall policy
                      next;
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ case "${target_platform}" in
                    }
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
 edit 13
+ [[ -n {
  set name "Remote NAT"

  set srcintf "dmz"
+ newline
  set dstintf "wan1"
  "vendor": "cisco",
+ local count=1
                    # Finalize block at end
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
  set srcaddr "10.10.10.10"
  "model": "",
  set dstaddr "203.0.113.10"
  "version": "",
  set action accept
  "domain": "",
  set logtraffic all
                    /^end$/ {
+ print '{
+ [[ -z '' ]]
+ cat -n reports/203.0.113.25/misc/fw1.cfg
  "vendor": "cisco",
 next
  "model": "",
                      blk = blk divisor " " $0;
  "hostname": ""
  "version": "",
                      if (blk != "" && !seen[blk]++) print blk;
}
                      blk = "";
  "domain": "",
                    in_json_header = 0;
end'

                      next;
  "hostname": ""
+ sed '1{/^[[:space:]]*$/d;}'
                    blk = "";
object-group network Shield-WiFi
                  }
 description Shield-controlled wireless network
                  /^[[:space:]]*$/ { next }
 network-object host 10.10.10.10
                  /^{$/ { in_json_header = 1; next }
 network-object 192.168.100.0 255.255.255.0
                  /^}$/ {
+ [[ -n {

                    if (in_json_header == 1) {
object-group network Shield-WiFi
+ sed '/^[[:space:]]*$/d'
 description Shield-controlled wireless network
 network-object host 10.10.10.10
}

 network-object 192.168.100.0 255.255.255.0
object-group network Krypton-Cloud

 description Cloud-facing external nodes
object-group network Shield-WiFi
 network-object host 198.51.100.75
 description Shield-controlled wireless network
 network-object host 203.0.113.25
 network-object host 10.10.10.10

 network-object 192.168.100.0 255.255.255.0
object network External-Failover

 host 198.51.100.75
object network Shield-WiFi-Alias
 description Secondary outbound route for edge'
 host 10.10.10.10
 description Guest NAT ]]
  "vendor": "fortinet",
                    }
                      in_json_header = 0;
  "model": "FortiGate-60F",

+ echo -en '{
  "vendor": "cisco",
                      next;
                    # Accumulate middle lines
  "version": "v7.2.5.F",
                    {
                    }
  "model": "",
                      blk = blk divisor " " $0;
+ [[ -n {
                    }
  "version": "",
  "domain": "",

  "hostname": "fg-branch-vpn-01"
                  }
  "domain": "",
  "vendor": "cisco",
}
                    END {
  "model": "",
                  (in_json_header == 1) { next }

                      # No need for final print — all blocks end with end
                  /^[^[:space:]]/ {
  "hostname": ""
  "version": "",
                    }
}
#hostname="fg-branch-vpn-01"
  "domain": "",
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg

#model="FortiGate-60F"
  "hostname": ""
object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
                    if (blk != "" && !seen[blk]++) print blk "\n";
#config-version=FGT_60F-v7.2.5.F-build1517-230421

}
                    blk = $0;
 network-object 192.168.100.0 255.255.255.0
config firewall policy
                    next;

object-group network Krypton-Cloud

 edit 13
object-group network Shield-WiFi
  set name "Remote NAT"
 description Shield-controlled wireless network
  set srcintf "dmz"
 network-object host 10.10.10.10
                  }
                  {
  set dstintf "wan1"
 description Cloud-facing external nodes
 network-object 192.168.100.0 255.255.255.0
                    blk = blk divisor " " $0;

                  }
 network-object host 198.51.100.75
                  END {
+ sed '1{/^[[:space:]]*$/d;}'
  set srcaddr "10.10.10.10"
                    if (blk != "" && !seen[blk]++) print blk "\n";
object-group network Shield-WiFi
 network-object host 203.0.113.25
  set dstaddr "203.0.113.10"
                  }
  set action accept
 description Shield-controlled wireless network

object network External-Failover
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
  set logtraffic all
 host 198.51.100.75
 description Secondary outbound route for edge ]]
 next
end ]]
 network-object host 10.10.10.10
+ print '{
 network-object 192.168.100.0 255.255.255.0
  "vendor": "fortinet",

  "model": "FortiGate-200F",
object network Shield-WiFi-Alias
  "version": "",
 host 10.10.10.10
+ echo -en '{
  "domain": "",
+ echo -en '{
 description Guest NAT'
  "hostname": "fg-campus-core"
}
  "vendor": "cisco",
  "model": "",

  "vendor": "fortinet",
#hostname="fg-campus-core"
#model="FortiGate-200F"
  "model": "FortiGate-60F",

  "version": "",
config firewall address
  "domain": "",
 edit "Vision-Link"
  "hostname": ""
  set subnet 192.168.2.12 255.255.255.255
}
  set comment "Vision’s quantum channel"

 next
object-group network Krypton-Cloud
end'
  "version": "v7.2.5.F",
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ -n {
  "vendor": "fortinet",
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "model": "FortiGate-200F",

  "version": "",
config firewall policy
  "domain": "",
 edit 13
  "hostname": "fg-campus-core"
  set name "Remote NAT"
}
  set srcintf "dmz"

  set dstintf "wan1"
#hostname="fg-campus-core"
  set srcaddr "10.10.10.10"
#model="FortiGate-200F"
  set dstaddr "203.0.113.10"

  set action accept
config firewall address
  set logtraffic all
 edit "Vision-Link"
 next
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
end'
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
end'
+ local search_pattern
+ local parent_dir=reports/192.168.1.10/misc
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list != *,* ]]
+ local count=1
+ mapfile -t search_terms
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local parent_dir=reports/192.168.2.12/misc
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ grep -F 203.0.113.25
+ exit 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xijV3iT524 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xijV3iT524
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ newline 2
+ newline 2
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ local count=2
+ [[ true == true ]]
+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ echo
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ (( i++ ))
                  }
+ (( i < count ))
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ echo
++ basename reports/192.168.1.10/misc/switch1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
                    blk = $0;
+ (( i < count ))
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
                  END {
+ [[ true == true ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
++ basename reports/192.168.2.12/misc/fw1
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ local count=1
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ sed '/^[[:space:]]*$/d'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local count=2
+ (( i = 0 ))
+ grep -F 192.168.1.10
+ (( i < count ))
+ newline
+ echo
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
++ tr -d '\r'
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ serialize_objects
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
++ grep -v '^\s*$'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ local search_pattern
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ newline 2
+ local search_pattern
++ grep -v '^#'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ (( i < count ))
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--dmz-fw2-backup.cfg.console
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat -n
+ newline
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=198.51.100.75
+ newline
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ false == true ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ serialize_objects
++ echo reports/192.168.2.12/misc/fw1.cfg
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
++ echo reports/192.168.1.10/misc/switch1.conf
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ newline
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local count=1
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ echo
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ (( i++ ))
+ (( i < count ))
+ serialize_objects
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
++ cut -d/ -f2
+ local first_search_entry=203.0.113.25
++ cut -d/ -f2
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ true == true ]]
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ local parent_dir=reports/203.0.113.25/misc
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-configs--ips.list ]'
+ (( i < count ))
+ local count=1
+ echo
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ echo
+ (( i++ ))
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ cat -n
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ serialize_objects
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ cat -n
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ basename reports/203.0.113.25/misc/fw1
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.riyFgOqD17 ]]
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.riyFgOqD17
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ search_pattern=192.168.2.12
+ (( i < count ))
+ mkdir -p reports/192.168.2.12/misc/.objects
+ search_pattern=192.168.1.10
+ local count=1
+ [[ false == true ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ (( i = 0 ))
+ local parent_dir=reports/10.10.10.10/misc
+ [[ true == true ]]
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local parent_dir=reports/10.10.10.10/fortinet

                    # Start of a new block
                    /^config / {
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
                      if (blk != "") print blk;
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ newline
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
+ local count=1
                      next;
+ (( i = 0 ))
+ echo
+ serialize_objects
                    }
+ (( i < count ))

                    # Finalize block at end
+ echo
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ (( i++ ))
                      blk = "";
+ (( i < count ))
+ (( i++ ))
                      next;
+ (( i < count ))
                    }

+ return 0
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
+ return 0
                    }
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list

                    END {
+ local search_pattern
                      # No need for final print — all blocks end with end
                    }
+ [[ true == true ]]
+ grep -F 198.51.100.75
+ [[ true == true ]]
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console ]]
++ basename reports/10.10.10.10/misc/fw3
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ local parent_dir=reports/198.51.100.75/misc
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ echo reports/203.0.113.25/misc/fw1.cfg
++ basename reports/198.51.100.75/misc/fw1
++ cut -d/ -f2
+ case "${target_platform}" in
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ local search_pattern
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local search_pattern
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ grep -F 192.168.1.10
+ local parent_dir=reports/192.168.2.12/fortinet
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--fw3.cfg.console
+ grep -F 192.168.2.12
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ (( i < count ))
+ local search_pattern
++ echo reports/10.10.10.10/misc/fw3.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ sed '/^[[:space:]]*$/d'
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ cut -d/ -f2
++ cut -d/ -f2
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ output_dir=reports/203.0.113.25/misc
++ echo reports/198.51.100.75/misc/fw1.cfg
+ [[ ! -d reports/203.0.113.25/misc ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ result=0
+ cat -n
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ cut -d/ -f2
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ result=0
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ exit 0
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F90eEomOmf ]]
+ result=0
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.F90eEomOmf
+ [[ 0 -ne 0 ]]
+ local count=1
+ search_pattern=10.10.10.10
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ mkdir -p reports/10.10.10.10/misc/.objects
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
++ command -v -- ./scripts/network-extract.shell
+ exit 0
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ search_pattern=10.10.10.10
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KaCmfeduFy ]]
+ result=0
+ newline
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KaCmfeduFy
+ exit 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnGLpCN6ub ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnGLpCN6ub
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ cat -n
+ case "${target_platform}" in
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
                    in_json_header = 0;
                    blk = "";
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ case "${target_file}" in
                      next;
                    }
                  }
+ cat reports/192.168.2.12/misc/.objects/fw1.list
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ grep -F 203.0.113.25
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=198.51.100.75
+ return 0
+ mkdir -p reports/198.51.100.75/misc/.objects
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ local SCRIPT_DIR=./scripts
+ case "${target_platform}" in
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ grep -F 10.10.10.10
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console ]]
+ return 0
+ case "${target_file}" in
+ grep -F 10.10.10.10
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ which awk
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ case "${target_platform}" in
+ [[ true == true ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
                    blk = "";
                  }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
                  /^}$/ {
                    if (in_json_header == 1) {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console ]]
                      in_json_header = 0;
                      next;
                    }
+ case "${target_file}" in
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fg-branch-vpn-01.cfg.console
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ grep -F 198.51.100.75
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ cat -n
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
+ local count=1
                      blk = "";
                      in_json_header = 0;
                    }
+ (( i = 0 ))

                    # Skip blank lines
+ (( i < count ))
                    /^[[:space:]]*$/ { next }
+ echo

                    # Skip JSON preamble
+ (( i++ ))
                    /^{$/            { in_json_header = 1; next }
+ (( i < count ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ [[ true == true ]]

                    # Add next to block
                    /^ next$/ {
+ result=0
                      blk = blk divisor " " $0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
                      next;
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console ]]
                    }
+ [[ true == true ]]

+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console
                    # Finalize block at end
                    /^end$/ {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console ]]
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ case "${target_file}" in
                      blk = "";
                      next;
                    }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sGU776HCvi/network-extract--switch1.conf.console

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'

+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
                    END {
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
                      # No need for final print — all blocks end with end
                    }
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ grep -F 192.168.2.12
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fw1.cfg.console
++ IFS=,
++ echo 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute__netwowrk_extract
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xmckjp7Qfj ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xmckjp7Qfj
+ result=0
+ cat -n
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
++ which awk
+ [[ true == true ]]
+ cat -n
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8rnQumNoB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.r8rnQumNoB
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JTAAUQa8zB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JTAAUQa8zB
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ return 0
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ true == true ]]
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw1.cfg.console
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
++ printf '%*s' 12 ''
+ cat -n
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ return 0
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fw3.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jbAHoRGr7q/network-extract--fg-testing-config.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eGiDs3gM0d ]]
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.eGiDs3gM0d
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uSy0Auf02b/network-extract--fw1.cfg.console
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UP28AYWcJZ ]]
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UP28AYWcJZ
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWKx8mSS89 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWKx8mSS89
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ true == true ]]
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
+ [[ -n {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console
  "model": "",
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console ]]
  "domain": "",
+ case "${target_file}" in
  "hostname": ""
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qxHS4OPaeN/network-extract--fg-campus-core.cfg.console

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
+ result=0
  "model": "",
  "version": "",
+ exit 0
  "domain": "",
  "hostname": ""
}
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gyRIwnnVmN ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gyRIwnnVmN
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GfYcenMKJi ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GfYcenMKJi
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ local parent_dir=reports/203.0.113.25/misc
++ basename reports/203.0.113.25/misc/fw3
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat -n
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XoWaJDtlbR/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8cZuvZ2WK0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8cZuvZ2WK0
