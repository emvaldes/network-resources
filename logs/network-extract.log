+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaiWFQbeQu
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaiWFQbeQu
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ mktemp -d
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ByA1fYHws3
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ByA1fYHws3
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
+ source ./scripts/configs-objects.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias serialize-object=configs_objects
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
+ alias parse-cisco=main
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ [[ -z x ]]
++ export default_addresses=ips.list
+ export logs_location=logs
++ default_addresses=ips.list
+ logs_location=logs
++ export default_devices=devices.list
+ mkdir -p logs
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
+ script_filename=network-extract.shell
++ mkdir -p jobs
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vvZ1NBrQAJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vvZ1NBrQAJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias network-extract--helper=network_extract__helper
++ alias log-error=log_error
+ source ./scripts/configs-objects.shell
++ alias log-info=log_info
++ alias log-warn=log_warn
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias print-message=message
++ __CONFIGS_OBJECTS__=1
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias serialize-object=configs_objects
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ alias parse-cisco=main
++ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ platform =~ ^(platform|p)$ ]]
++ console_location=console
+ local target_platform=cisco
++ mkdir -p console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ 6 -eq 0 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local verbose=true
+ IFS==
+ IFS=' 	
+ read -r key value
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+++ echo -n devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ grep -v '^\s*$'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wTUM1trNP2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wTUM1trNP2
++ alias parse-listings--helper=parse_listings__helper
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias network-configs--helper=network_configs__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ grep -v '^#'
++ alias exit-error=exit_error
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ alias list-file=list_file
++ [[ -n '' ]]
++ alias log-error=log_error
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias serialize-object=configs_objects
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ alias parse-cisco=main
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ export jobs_location=jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console --verbose
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export console_location=console
+ for xitem in "${@}"
+ oIFS=' 	
++ console_location=console
'
+ IFS==
++ mkdir -p console
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
++ echo -e --search=.cache/ips.list
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
+ __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ dirname -- ./scripts/network-extract.shell
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+++ echo -n devops-resources.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GL9NWgKtHC
+ source ./scripts/devops-helpers.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GL9NWgKtHC
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
+ export 'nl=\n'
++ readonly __DEVOPS_HELPERS__=1
+ nl='\n'
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias parse-listings--helper=parse_listings__helper
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ tr -d '\r'
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
++ grep -v '^\s*$'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ alias validate-address=validate_address
++ readonly __CONFIGS_OBJECTS__=1
++ grep -v '^#'
++ __CONFIGS_OBJECTS__=1
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ alias serialize-object=configs_objects
++ logs_location=logs
++ mkdir -p logs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ alias parse-cisco=main
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ declare -a execute__netwowrk_extract
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local awk_bin=/usr/bin/awk
+ export network_extract__console=console/network-extract.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ network_extract__console=console/network-extract.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ touch console/network-extract.console
++ printf '%*s' 12 ''
++ export console_location=console
+ local 'indent=            '
++ console_location=console
++ mkdir -p console
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_platform=cisco
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ platform =~ ^(search|s)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \h\e\l\p ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message '                configs/cisco/access-sw1-west.cfg'
+ for xitem in "${@}"
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ IFS==
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ read -r key value
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(console|o)$ ]]
++ targets_location=targets
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ output_dir=.cache/resources/cisco
+ [[ search =~ ^(logger|l)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ ! -d .cache/resources/cisco ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
++ command -v -- ./scripts/network-extract.shell
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
++ echo -e --verbose
}
+ local SCRIPT_PATH=./scripts/network-extract.shell

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+++ base64
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ print '{
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7yuaQypjKZ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7yuaQypjKZ
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
  "version": "12.4",
  "domain": "",
+ export 'nl=\n'
  "hostname": "access-sw1-west"
+ nl='\n'
}

version 12.4
+ source ./scripts/devops-resources.shell
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
++ [[ -n '' ]]

++ declare -gr __DEVOPS_RESOURCES__=1
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
++ [[ 5 -lt 4 ]]

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ [[ verbose =~ ^(console|o)$ ]]
+++ echo -n devops-resources.shell
++ alias relative-configpath=relative_configpath
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ alias validate-address=validate_address
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias warning-message=warning
+ [[ -z '' ]]
++ export LC_ALL=C
+ local export_objects=false
++ LC_ALL=C
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console ]]
+ [[ config =~ ^(config|c)$ ]]
++ export 'nl=\n'
+ [[ -z '' ]]
++ nl='\n'
+ script_helper=false
++ export default_addresses=ips.list
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
++ default_addresses=ips.list
+ [[ false == true ]]
+ [[ config =~ ^(console|o)$ ]]
++ export default_devices=devices.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ default_devices=devices.list
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z .cache/ips.list ]]
+ [[ config =~ ^(export|r)$ ]]
++ export default_matrix=matrix.json
+ search_terms=()
+ source ./scripts/devops-helpers.shell
++ default_matrix=matrix.json
+ declare -a search_terms
+ [[ config =~ ^(extract|x)$ ]]
++ export cache_location=.cache
+ [[ -f .cache/ips.list ]]
++ cache_location=.cache
++ which awk
++ [[ -n '' ]]
+ [[ .cache/ips.list != *,* ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export logs_location=logs
++ readonly __DEVOPS_HELPERS__=1
++ logs_location=logs
++ __DEVOPS_HELPERS__=1
+ [[ config =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ mapfile -t search_terms
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ newline 2
++ alias network-configs--helper=network_configs__helper
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
++ __CONFIGS_OBJECTS__=1
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ alias serialize-object=configs_objects
++ tr -d '\r'
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ which awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ IFS==
+ read -r key value
+ local count=17
+ ((  count == 0  ))
+ script_filename=network-extract.shell
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ script_filename=network-extract
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ export network_extract__console=console/network-extract.console
+ newline
+ network_extract__console=console/network-extract.console
+ local count=1
+ (( i = 0 ))
+ touch console/network-extract.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --platform=cisco
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ 6 -eq 0 ]]
+ echo
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console --verbose
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ case "${target_file}" in
+ oIFS=' 	
'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--access-sw1-west.cfg.console
+ for xitem in "${@}"
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n '' ]]
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
++ export actions_logfile=console/run.console
+ local 'message=                configs/cisco/branch-isr-02.cfg'
++ actions_logfile=console/run.console
+ readonly __NETWORK_EXTRACT__=1
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ __NETWORK_EXTRACT__=1
++ touch console/run.console
+ newline
+ set -euo pipefail
+ local count=1
+ export LC_ALL=C
+ (( i = 0 ))
+ LC_ALL=C
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ echo -e --search=.cache/ips.list
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ result=0
+ exit 0
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaiWFQbeQu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaiWFQbeQu
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+++ base64
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMdokABBuS
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMdokABBuS
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+++ tr -dc a-zA-Z0-9
+ nl='\n'
+ source ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ [[ logger =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ [[ logger =~ ^(extract|x)$ ]]
++ alias print-message=message
+ local 'extracted_configuration={
+ [[ logger =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ output_dir=.cache/resources/cisco
}
++ alias print-newline=newline
+ [[ ! -d .cache/resources/cisco ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console

version 16.9
hostname branch-isr-02
+ [[ logger =~ ^(platform|p)$ ]]
++ alias pause=pause

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ [[ logger =~ ^(search|s)$ ]]
++ alias print-line=print

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN
+ [[ logger == \h\e\l\p ]]

+ [[ logger == \d\e\b\u\g ]]
interface GigabitEthernet0/0/2
+ [[ logger == \d\r\y\-\r\u\n ]]
 ip address 10.0.2.3 255.255.255.0
+ [[ logger == \v\e\r\b\o\s\e ]]
 description Dev VLAN
+ for xitem in "${@}"
++ alias print-file=print_file

++ echo -e --config=configs/cisco/perimeter-fw1.cfg
object network BlackWidow-Core
+ IFS==
 host 172.16.1.6
++ alias relative-configpath=relative_configpath
+ read -r key value
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
++ alias system-metrics=system_metrics
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ command -v -- ./scripts/network-extract.shell
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

++ alias validate-address=validate_address
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
++ alias warning-message=warning
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

++ export LC_ALL=C
interface GigabitEthernet0/0/1
++ LC_ALL=C
 ip address 192.168.2.12 255.255.255.0
+ local SCRIPT_PATH=./scripts/network-extract.shell
 description Workstation LAN

interface GigabitEthernet0/0/2
++ export 'nl=\n'
 ip address 10.0.2.3 255.255.255.0
++ nl='\n'
 description Dev VLAN
++ export default_addresses=ips.list

++ default_addresses=ips.list
object network BlackWidow-Core
 host 172.16.1.6
++ export default_devices=devices.list
 description Branch router uplink NAT

object network Hydra-Link
++ default_devices=devices.list
+++ echo -n devops-resources.shell
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
++ export default_matrix=matrix.json
 description Remote site uplink
++ default_matrix=matrix.json
 network-object host 192.168.2.12
 network-object host 198.51.100.75
++ export cache_location=.cache

++ cache_location=.cache
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

++ export logs_location=logs
object-group network Lantern-DMZ
++ logs_location=logs
 description Protected but public-facing zone
 network-object host 172.18.1.20
++ mkdir -p logs
 network-object host 192.168.1.11 ]]
++ echo -e --verbose
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
++ alias parse-listings--helper=parse_listings__helper
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
++ alias network-configs--helper=network_configs__helper
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

++ alias network-extract--helper=network_extract__helper
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT
+ source ./scripts/configs-objects.shell

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75
++ [[ -n '' ]]

++ readonly __CONFIGS_OBJECTS__=1
object network Panther-Gateway
++ __CONFIGS_OBJECTS__=1
 host 10.0.2.3
+ [[ config =~ ^(config|c)$ ]]
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local target_config=configs/cisco/perimeter-fw1.cfg
 network-object host 172.18.1.20
+ [[ config =~ ^(console|o)$ ]]
 network-object host 192.168.1.11 ]]
+ [[ config =~ ^(export|r)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ config =~ ^(extract|x)$ ]]
  "model": "",
++ alias serialize-object=configs_objects
  "version": "16.9",
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "",
+ [[ config =~ ^(platform|p)$ ]]
  "hostname": "branch-isr-02"
+ [[ config =~ ^(search|s)$ ]]
}

+ [[ config == \h\e\l\p ]]
version 16.9
+ [[ config == \d\e\b\u\g ]]
hostname branch-isr-02
+ [[ config == \d\r\y\-\r\u\n ]]

+ [[ config == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/0/0
+ for xitem in "${@}"
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

+ IFS==
interface GigabitEthernet0/0/1
+ read -r key value
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ alias parse-cisco=main
+ local script_filename=cisco-configs.awk
+ [[ verbose =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ verbose =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ export console_location=console
++ console_location=console
++ grep -v '^#'
++ mkdir -p console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ IFS=,
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ which awk
++ echo -e --platform=cisco
+ local first_search_entry=10.0.0.1
++ export actions_logfile=console/run.console
+ local last_search_entry=203.0.113.25
++ actions_logfile=console/run.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
++ touch console/run.console
+ [[ true == true ]]
++ mktemp -d
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ 6 -eq 0 ]]
+ (( i = 0 ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ message 'Search Pattern: [ .cache/ips.list ]'
+ echo
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ (( i++ ))
+ (( i < count ))
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ false == true ]]
+ local count=17
+ [[ false == true ]]
+ ((  count == 0  ))
+ oIFS=' 	
+ [[ true == true ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ for xitem in "${@}"
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ IFS==
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console ]]
+ read -r key value
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ echo -e --search=.cache/ips.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ platform =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OFqyM6Dcac
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OFqyM6Dcac
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export 'nl=\n'
+ nl='\n'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ source ./scripts/devops-resources.shell
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
++ [[ -n '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
++ declare -gr __DEVOPS_RESOURCES__=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--branch-isr-02.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ [[ 5 -lt 4 ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
++ alias detect-vendor=detect_vendor
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
++ alias exit-error=exit_error
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias list-file=list_file
+ (( i < count ))
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ alias system-metrics=system_metrics
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(search|s)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ local search_pattern=.cache/ips.list
++ LC_ALL=C
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ search == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ for xitem in "${@}"
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ IFS==
++ export default_devices=devices.list
+ read -r key value
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ echo -n devops-resources.shell
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ exit 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ByA1fYHws3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ByA1fYHws3
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export jobs_location=jobs
++ jobs_location=jobs
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ mkdir -p jobs
++ __CONFIGS_OBJECTS__=1
++ echo -e --verbose
++ alias serialize-object=configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
+ [[ config =~ ^(config|c)$ ]]
+ output_dir=.cache/resources/cisco
 network-object host 192.168.0.100
+ [[ ! -d .cache/resources/cisco ]]
 network-object host 10.10.10.10 ]]
+ alias parse-cisco=main
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ [[ config =~ ^(logger|l)$ ]]
+ logs_location=logs
+ [[ config =~ ^(platform|p)$ ]]
+ mkdir -p logs
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ extract =~ ^(console|o)$ ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
++ grep -v '^#'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ local SCRIPT_DIR=./scripts
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ [[ extract =~ ^(platform|p)$ ]]
++ export actions_logfile=console/run.console
+ [[ extract =~ ^(search|s)$ ]]
+ (( i < count ))
++ actions_logfile=console/run.console
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
++ touch console/run.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
++ export targets_location=targets
++ targets_location=targets
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ export targets_logfile=.cache/targets.jobs
+ newline
++ targets_logfile=.cache/targets.jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
++ echo -e --search=.cache/ips.list
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ false == true ]]
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ false == true ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ IFS=,
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ export LC_ALL=C
+ [[ platform =~ ^(config|c)$ ]]
+++ base64
+ LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(search|s)$ ]]
++++ basename ./scripts/devops-resources.shell
+ declare -a execute__netwowrk_extract
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+++ echo -n devops-resources.shell
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--campus-sw-access01.cfg.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
++ alias network-extract--helper=network_extract__helper
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9BTeyuxMPG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9BTeyuxMPG
+ source ./scripts/configs-objects.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ printf '%*s' 12 ''
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
++ alias log-info=log_info
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ logger =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias print-newline=newline
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ read -r key value
+ newline
+ local count=1
++ alias pause=pause
+ (( i = 0 ))
+ (( i < count ))
++ alias print-line=print
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias relative-configpath=relative_configpath
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ alias parse-cisco=main
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -z x ]]
++ alias system-metrics=system_metrics
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ export logs_location=logs
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ logs_location=logs
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ mkdir -p logs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
++ alias validate-address=validate_address
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ result=0
+ newline
+ exit 0
+ local count=1
+ (( i = 0 ))
++ alias warning-message=warning
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vvZ1NBrQAJ ]]
+ (( i < count ))
++ export LC_ALL=C
+ echo
++ LC_ALL=C
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vvZ1NBrQAJ
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ dirname -- ./scripts/network-extract.shell
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ export console_location=console
domain-name global.dmz.example.net
+ [[ 6 -eq 0 ]]

+ [[ extract =~ ^(config|c)$ ]]
++ console_location=console
interface GigabitEthernet0/0
+ [[ extract =~ ^(console|o)$ ]]
 nameif guest
++ mkdir -p console
+ local SCRIPT_DIR=./scripts
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ grep -v '^\s*$'
 ip address 10.10.10.10 255.255.255.0
+ [[ extract =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
 description Guest access interface

interface GigabitEthernet0/1
+ local script_filepath=./scripts/extract/cisco-configs.awk
 nameif inside
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console --verbose
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ extract =~ ^(extract|x)$ ]]
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg

interface GigabitEthernet0/2
 nameif outside
+ [[ extract =~ ^(logger|l)$ ]]
++ grep -v '^#'
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

+ oIFS=' 	
object network Titan-WLAN-Host
'
+ [[ extract =~ ^(platform|p)$ ]]
 host 192.168.100.100
 description Backup inside NAT IP

+ for xitem in "${@}"
object network Shield-WiFi-Alias
+ [[ extract =~ ^(search|s)$ ]]
 host 10.10.10.10
+ IFS==
 description Guest NAT
+ [[ extract == \h\e\l\p ]]
+ read -r key value

+ [[ extract == \d\e\b\u\g ]]
object network Sentinel-NAT
+ [[ extract == \d\r\y\-\r\u\n ]]
 host 203.0.113.25
+ [[ extract == \v\e\r\b\o\s\e ]]
 description Corporate NAT edge
+ for xitem in "${@}"

object-group network Sector-Wireless
+ IFS==
 description Staff WiFi clients
+ read -r key value
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge
++ which awk

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
++ echo -e --search=.cache/ips.list
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
++ echo -e --platform=fortinet
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
 description Corporate NAT edge
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

++ export actions_logfile=console/run.console
object network Titan-WLAN-Host
++ actions_logfile=console/run.console
 host 192.168.100.100
 description Backup inside NAT IP

++ touch console/run.console
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ echo -en '{
  "vendor": "cisco",
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
  "model": "ASA",
+ [[ true == true ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
+ message 'Search Pattern: [ .cache/ips.list ]'

+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
interface GigabitEthernet0/1
 nameif inside
+ local 'message=Search Pattern: [ .cache/ips.list ]'
 ip address 192.168.100.100 255.255.255.0
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
+ local count=17
 ip address 198.51.100.75 255.255.255.0
+ ((  count == 0  ))
 description Outbound Internet NAT interface

+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
object network Titan-WLAN-Host
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 host 192.168.100.100
 description Backup inside NAT IP
+ newline

+ local count=1
object network Shield-WiFi-Alias
+ (( i = 0 ))
 host 10.10.10.10
+ (( i < count ))
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ declare -a execute__netwowrk_extract
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ local target_platform=fortinet
+ [[ search == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ newline 2
+ IFS==
+ read -r key value
+ local count=2
++ which awk
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ (( i = 0 ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ (( i < count ))
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo
+ [[ config =~ ^(console|o)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ (( i++ ))
+++ echo -n devops-resources.shell
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ config =~ ^(export|r)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ [[ config =~ ^(logger|l)$ ]]
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ true == true ]]
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console ]]
+ IFS==
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.05QZ5LvYxd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.05QZ5LvYxd
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias validate-address=validate_address
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ alias warning-message=warning
++ echo -e --verbose
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ alias serialize-object=configs_objects
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p logs
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export jobs_location=jobs
+ [[ verbose =~ ^(extract|x)$ ]]
++ jobs_location=jobs
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ mkdir -p jobs
+ [[ verbose =~ ^(platform|p)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS=' 	
+ [[ extract == \d\e\b\u\g ]]
'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ script_filename=network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ script_filename=network-extract
+ search_terms=()
+ declare -a search_terms
+ export network_extract__console=console/network-extract.console
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ network_extract__console=console/network-extract.console
+ local 'extracted_configuration={
+ mapfile -t search_terms
  "vendor": "cisco",
+ touch console/network-extract.console
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
+ result=0
 description Core services gateway
+ exit 0

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wTUM1trNP2 ]]
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wTUM1trNP2

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
++ echo -e --platform=fortinet
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ export console_location=console
++ console_location=console
+ print '{
++ mkdir -p console
  "vendor": "cisco",
++ grep -v '^#'
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
++ which awk
 ip address 10.0.0.1 255.255.255.0
+ sed '1{/^[[:space:]]*$/d;}'
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ 6 -eq 0 ]]

interface GigabitEthernet0/0
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console --verbose
interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway
+ oIFS=' 	

object-group network Avengers-DMZ
'
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ for xitem in "${@}"
 network-object 192.168.2.0 255.255.255.0
+ IFS==

object-group network Panther-Edge
+ read -r key value
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ for xitem in "${@}"
++ actions_logfile=console/run.console
+ IFS==
+ local first_search_entry=10.0.0.1
++ touch console/run.console
+ read -r key value
+ local last_search_entry=203.0.113.25
++ echo -e --search=.cache/ips.list
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ newline 2
+ echo
+ (( i++ ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ (( i < count ))
+ echo
+ echo
+ declare -a execute__netwowrk_extract
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ base64
+ [[ logger =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ logger =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ mktemp -d
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
++ echo -e --config=configs/misc/fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ local target_config=configs/misc/fw1.cfg
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D25jYVo2WX
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D25jYVo2WX
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
+ source ./scripts/configs-objects.shell
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ alias exit-error=exit_error
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console ]]
++ alias list-file=list_file
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--perimeter-fw1.cfg.console
++ alias log-error=log_error
++ alias serialize-object=configs_objects
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
+ alias parse-cisco=main
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ alias warning-message=warning
+ [[ verbose =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ export 'nl=\n'
+ [[ verbose =~ ^(platform|p)$ ]]
++ nl='\n'
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_addresses=ips.list
+ [[ verbose =~ ^(search|s)$ ]]
+ export logs_location=logs
++ default_addresses=ips.list
+ logs_location=logs
+ [[ verbose == \h\e\l\p ]]
++ export default_devices=devices.list
+ [[ verbose == \d\e\b\u\g ]]
++ default_devices=devices.list
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ mkdir -p logs
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export default_matrix=matrix.json
+ local verbose=true
++ default_matrix=matrix.json
+ IFS=' 	
'
++ export cache_location=.cache
+ [[ -z '' ]]
++ cache_location=.cache
+ debug=false
++ export logs_location=logs
+ [[ -z '' ]]
++ logs_location=logs
++ mkdir -p logs
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
++ tr -d '\r'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GL9NWgKtHC ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GL9NWgKtHC
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^#'
++ export jobs_location=jobs
+ local 'extracted_configuration={
++ jobs_location=jobs
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ mkdir -p jobs
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ script_filename=network-extract.shell
config system interface
 edit "wan1"
+ script_filename=network-extract
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ export network_extract__console=console/network-extract.console
 next
+ network_extract__console=console/network-extract.console
end

+ touch console/network-extract.console
config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ local SCRIPT_DIR=./scripts
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ local script_filename=fortinet-configs.awk
  set alias "User LAN"
 next
+ local script_filepath=./scripts/extract/fortinet-configs.awk
end
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
++ echo -e --platform=cisco
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ local first_search_entry=10.0.0.1
  set alias "User LAN"
 next
+ local last_search_entry=203.0.113.25
end
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'

config firewall address
+ [[ true == true ]]
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ message 'Search Pattern: [ .cache/ips.list ]'
  set comment "QA node in Peter'\''s Lab"
 next
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
 edit "Panther-Vault"
+ local 'message=Search Pattern: [ .cache/ips.list ]'
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ local count=17
  set comment "Public NAT exposure for Red Skull trap"
+ ((  count == 0  ))
 next
 edit "Guardians-Relay"
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
 next
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
end

+ newline
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local count=1
 next
end'
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
++ export console_location=console
++ console_location=console
+ [[ -n {
+ [[ 6 -eq 0 ]]
  "vendor": "fortinet",
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  "model": "FortiGate-60F",
++ mkdir -p console
  "version": "v7.2.5.F",
  "domain": "",
+ echo
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console --verbose
  "hostname": "fg-branch-vpn-01"
+ (( i++ ))
}
+ (( i < count ))

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
+ local 'prompt_message=Enter configuration file to be parsed: '
  set ip 192.168.2.12 255.255.255.0
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
  set alias "User LAN"
 next
+ [[ -z fortinet ]]
end
+ oIFS=' 	

+ [[ true == true ]]
config firewall address
'
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ for xitem in "${@}"
  set comment "Primary LAN gateway"
 next
+ newline
 edit "Branch-Public"
+ IFS==
+ local count=1
  set subnet 198.51.100.75 255.255.255.255
+ (( i = 0 ))
  set comment "Branch NAT"
+ (( i < count ))
 next
+ echo
end

+ read -r key value
+ (( i++ ))
config firewall address
+ (( i < count ))
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
 next
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ platform =~ ^(config|c)$ ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(console|o)$ ]]

config system interface
 edit "wan1"
+ [[ platform =~ ^(export|r)$ ]]
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
+ [[ platform =~ ^(extract|x)$ ]]
 edit "internal"
+ [[ platform =~ ^(logger|l)$ ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ [[ platform =~ ^(platform|p)$ ]]
end

config firewall address
+ local target_platform=cisco
 edit "Branch-Gateway"
+ [[ platform =~ ^(search|s)$ ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ [[ platform == \h\e\l\p ]]
 next
+ [[ platform == \d\e\b\u\g ]]
 edit "Branch-Public"
+ [[ platform == \d\r\y\-\r\u\n ]]
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ [[ platform == \v\e\r\b\o\s\e ]]
 next
+ for xitem in "${@}"
end
+ IFS==

+ read -r key value
config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
+ declare -a execute__netwowrk_extract
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ newline 2
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
++ export targets_location=targets
+ [[ search == \h\e\l\p ]]
++ targets_location=targets
+ [[ search == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ local awk_bin=/usr/bin/awk
+ read -r key value
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ printf '%*s' 12 ''
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --config=configs/misc/fw3.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ -n '' ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ readonly __NETWORK_EXTRACT__=1
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ __NETWORK_EXTRACT__=1
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ set -euo pipefail
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ export LC_ALL=C
+ (( i = 0 ))
+ message '                configs/fortinet/fg-campus-core.cfg'
+ LC_ALL=C
+++ base64
+ (( i < count ))
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ echo
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+++ tr -dc a-zA-Z0-9
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
++++ basename ./scripts/devops-resources.shell
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
++ mktemp -d
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+++ echo -n devops-resources.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ local verbose=true
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-branch-vpn-01.cfg.console
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias parse-listings--helper=parse_listings__helper
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J9IsyNOCXG
+ [[ false == true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J9IsyNOCXG
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ search_terms=()
+ declare -a search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -f .cache/ips.list ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ .cache/ips.list != *,* ]]
+ export 'nl=\n'
+ mapfile -t search_terms
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ echo -e --extract=.cache/resources/misc/fw3.cfg
++ [[ -n '' ]]
++ alias network-extract--helper=network_extract__helper
++ declare -gr __DEVOPS_RESOURCES__=1
+ source ./scripts/configs-objects.shell
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias exit-error=exit_error
++ __CONFIGS_OBJECTS__=1
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias serialize-object=configs_objects
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ alias parse-cisco=main
++ LC_ALL=C
++ tr -d '\r'
++ export 'nl=\n'
++ nl='\n'
+ [[ -z x ]]
++ export default_addresses=ips.list
+ export logs_location=logs
++ default_addresses=ips.list
+ logs_location=logs
++ export default_devices=devices.list
+ mkdir -p logs
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ grep -v '^\s*$'
++ mkdir -p logs
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ local SCRIPT_DIR=./scripts
  set alias "Campus Core Transit"
 next
+ local script_filename=fortinet-configs.awk
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ local script_filepath=./scripts/extract/fortinet-configs.awk
 next
end
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ [[ extract =~ ^(config|c)$ ]]
+ result=0
+ exit 0
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7yuaQypjKZ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7yuaQypjKZ
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

+ script_filename=network-extract.shell
config firewall address
+ script_filename=network-extract
+ sed '1{/^[[:space:]]*$/d;}'
+ export network_extract__console=console/network-extract.console
 edit "Cap-HQ"
+ network_extract__console=console/network-extract.console
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
++ export jobs_location=jobs
+ touch console/network-extract.console
 next
++ jobs_location=jobs
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
++ mkdir -p jobs
 next
+ local first_search_entry=10.0.0.1
 edit "Hawkeye-Nest"
+ local last_search_entry=203.0.113.25
  set subnet 172.16.1.6 255.255.255.255
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
+ [[ true == true ]]
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n {
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
  "vendor": "fortinet",
+ local 'message=Search Pattern: [ .cache/ips.list ]'
  "model": "FortiGate-200F",
++ echo -e --platform=cisco
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ local count=17
#model="FortiGate-200F"
+ ((  count == 0  ))

config system interface
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 edit "core"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  set ip 10.10.10.10 255.255.255.0
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  set alias "Campus Core Transit"
 next
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "wifi"
+ newline
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ local count=1
 next
+ (( i = 0 ))
end
+ (( i < count ))

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ echo
end
+ (( i++ ))

+ (( i < count ))
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
+ local 'prompt_message=Enter configuration file to be parsed: '
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ [[ -z configs/misc/fw1.cfg ]]
 next
+ [[ -z cisco ]]
 edit "Hawkeye-Nest"
+ [[ true == true ]]
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -en '{
+ echo
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ (( i++ ))
  "domain": "",
  "hostname": "fg-campus-core"
+ (( i < count ))
}
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'

+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
#hostname="fg-campus-core"
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
#model="FortiGate-200F"
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'

config system interface
+ ls -al --color=auto configs/misc/fw1.cfg
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export console_location=console
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console --verbose
++ console_location=console
++ IFS=,
++ mkdir -p console
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ oIFS=' 	
'
+ newline 2
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ echo
+ [[ platform =~ ^(export|r)$ ]]
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
++ which awk
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline
++ dirname .cache/resources/misc/fw1.cfg
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ IFS==
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ export targets_location=targets
++ targets_location=targets
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
++ export targets_logfile=.cache/targets.jobs
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
++ targets_logfile=.cache/targets.jobs
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-campus-core.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+++ echo -n devops-resources.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ alias network-configs--helper=network_configs__helper

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ alias network-extract--helper=network_extract__helper
+ local SCRIPT_DIR=./scripts

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ local script_filename=cisco-configs.awk
+ source ./scripts/configs-objects.shell
 edit 13
+ result=0
  set name "Remote NAT"
+ exit 0
  set srcintf "dmz"
+ local script_filepath=./scripts/extract/cisco-configs.awk
  set dstintf "wan1"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMdokABBuS ]]
++ [[ -n '' ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UMdokABBuS
  set srcaddr "10.10.10.10"
++ tr -d '\r'
  set dstaddr "203.0.113.10"
++ readonly __CONFIGS_OBJECTS__=1
  set action accept
++ __CONFIGS_OBJECTS__=1
  set logtraffic all
++ grep -v '^\s*$'
 next
end ]]
++ alias serialize-object=configs_objects
++ grep -v '^#'
+ print '{
++ which awk
+ alias parse-cisco=main
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ [[ -z x ]]
 edit 13
+ export logs_location=logs
  set name "Remote NAT"
+ logs_location=logs
  set srcintf "dmz"
  set dstintf "wan1"
+ mkdir -p logs
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract =~ ^(config|c)$ ]]
end'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ extract =~ ^(export|r)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ extract =~ ^(extract|x)$ ]]
}

#hostname="fg-branch-vpn-01"
+ local extract_location=.cache/resources/misc/switch1.conf
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ extract =~ ^(logger|l)$ ]]

config firewall policy
 edit 13
+ [[ extract =~ ^(platform|p)$ ]]
  set name "Remote NAT"
  set srcintf "dmz"
+ [[ extract =~ ^(search|s)$ ]]
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
+ [[ extract == \h\e\l\p ]]
  set dstaddr "203.0.113.10"
+ [[ extract == \d\e\b\u\g ]]
  set action accept
+ [[ extract == \d\r\y\-\r\u\n ]]
  set logtraffic all
+ [[ extract == \v\e\r\b\o\s\e ]]
 next
+ for xitem in "${@}"
end ]]
+ IFS==
+ read -r key value
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ echo -e --platform=cisco
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ script_filename=network-extract.shell
+ (( i < count ))
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ network_extract__console=console/network-extract.console
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ touch console/network-extract.console
+ [[ true == true ]]
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
++ IFS=,
+ (( i = 0 ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ echo
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ ls -al --color=auto configs/misc/fw3.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ declare -a execute__netwowrk_extract
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/misc/fw3.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console ]]
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fg-testing-config.cfg.console
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --verbose
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OFqyM6Dcac ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OFqyM6Dcac
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ config =~ ^(config|c)$ ]]
}
+ [[ verbose =~ ^(config|c)$ ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ local target_config=configs/misc/switch3.conf
+ [[ verbose =~ ^(console|o)$ ]]
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ verbose =~ ^(export|r)$ ]]
 network-object host 192.168.2.12
+ [[ config =~ ^(console|o)$ ]]

+ [[ verbose =~ ^(extract|x)$ ]]
object-group network Krypton-Cloud
+ [[ config =~ ^(export|r)$ ]]
 description Cloud-facing external nodes
+ [[ verbose =~ ^(logger|l)$ ]]
 network-object host 198.51.100.75
+ [[ config =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
+ [[ verbose =~ ^(platform|p)$ ]]

+ [[ config =~ ^(logger|l)$ ]]
object-group network Fortress-Wireless
+ [[ verbose =~ ^(search|s)$ ]]
 description Secure wireless access layer
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
 network-object host 172.18.1.20
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
 network-object host 192.168.1.10

+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
object network Kent-Server
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
 host 10.0.2.3
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
 description Internal mail & identity services
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS=' 	

'
+ for xitem in "${@}"
object network Krypton-Gateway
+ [[ -z '' ]]
+ IFS==
 host 203.0.113.25
+ debug=false
+ read -r key value
 description Secure NAT boundary for cloud access

object network External-Failover
+ [[ -z '' ]]
 host 198.51.100.75
+ dry_run=false
 description Secondary outbound route for edge ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

++ echo -e --extract=.cache/resources/misc/switch3.conf
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

++ tr -d '\r'
object network Krypton-Gateway
++ which awk
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ grep -v '^\s*$'

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
++ grep -v '^#'
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline 2
++ IFS=,
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ (( i++ ))
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ (( i < count ))
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ [[ true == true ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ declare -a execute__netwowrk_extract
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ (( i = 0 ))
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ (( i < count ))
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
++ which awk
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ dirname .cache/resources/misc/switch1.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw1.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ local SCRIPT_PATH=./scripts/network-extract.shell
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ result=0
  "hostname": ""
+ exit 0
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9BTeyuxMPG ]]
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9BTeyuxMPG
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ verbose =~ ^(config|c)$ ]]
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
+ [[ verbose =~ ^(console|o)$ ]]
 description Guest NAT ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ verbose =~ ^(platform|p)$ ]]
  "model": "",
  "version": "",
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": "",
  "hostname": ""
}
+ [[ verbose == \h\e\l\p ]]

+ [[ verbose == \d\e\b\u\g ]]
object-group network Wakanda-Core
+ [[ verbose == \d\r\y\-\r\u\n ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object host 10.0.2.3
+ local verbose=true
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
+ IFS=' 	
 description Internet-facing proxy systems
'
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ -z '' ]]

+ debug=false
object-group network Shield-WiFi
+ [[ -z '' ]]
 description Shield-controlled wireless network
+ dry_run=false
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ [[ -z true ]]

+ [[ -z '' ]]
object-group network Shield-WiFi
+ export console_output=false
 description Shield-controlled wireless network
+ console_output=false
 network-object host 10.10.10.10
+ [[ -z '' ]]
 network-object 192.168.100.0 255.255.255.0
+ local export_objects=false

+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console ]]
object network Panther-Gateway
+ [[ -z '' ]]
 host 10.0.2.3
+ script_helper=false
 description Secure outbound concentrator

+ [[ false == true ]]
object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ local SCRIPT_DIR=./scripts
+ [[ -z .cache/ips.list ]]
 network-object host 10.10.10.10
+ local script_filename=cisco-configs.awk
 network-object 192.168.100.0 255.255.255.0

+ local script_filepath=./scripts/extract/cisco-configs.awk
object network Shield-WiFi-Alias
+ search_terms=()
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 host 10.10.10.10
+ declare -a search_terms
 description Guest NAT'
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ tr -d '\r'
++ grep -v '^\s*$'
+ newline 2
+ local count=2
+ (( i = 0 ))
++ grep -v '^#'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute__netwowrk_extract
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--fw3.cfg.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.05QZ5LvYxd ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.05QZ5LvYxd
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

++ command -v -- ./scripts/network-extract.shell
interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ dirname -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
+ newline
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
++ which awk
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch1.conf.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D25jYVo2WX ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.D25jYVo2WX
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kKnmY1ybsp/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J9IsyNOCXG ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J9IsyNOCXG
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ -n '' ]]
+ export LC_ALL=C
+ readonly __NETWORK_EXTRACT__=1
+ LC_ALL=C
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnFWgdBNCI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnFWgdBNCI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6FZjhO8dkI
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xm2FKLXlSI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xm2FKLXlSI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6FZjhO8dkI
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n '' ]]
++ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ __NETWORK_EXTRACT__=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
++ declare -gr __DEVOPS_RESOURCES__=1
+ export LC_ALL=C
++ alias detect-vendor=detect_vendor
+ LC_ALL=C
++ alias exit-error=exit_error
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias detect-vendor=detect_vendor
++ alias print-message=message
++ alias exit-error=exit_error
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias list-file=list_file
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias log-error=log_error
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias warning-message=warning
++ alias relative-configpath=relative_configpath
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias system-metrics=system_metrics
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ mktemp -d
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export jobs_location=jobs
++ cache_location=.cache
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ export logs_location=logs
+ __NETWORK_EXTRACT__=1
++ logs_location=logs
++ mkdir -p logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iTtuCI3IDJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iTtuCI3IDJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ alias validate-address=validate_address
++ jobs_location=jobs
++ mkdir -p jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export console_location=console
++ export default_addresses=ips.list
+ [[ -n '' ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ readonly __NETWORK_EXTRACT__=1
++ default_matrix=matrix.json
+ __NETWORK_EXTRACT__=1
++ export cache_location=.cache
++ cache_location=.cache
++ console_location=console
++ export logs_location=logs
++ logs_location=logs
+ set -euo pipefail
++ mkdir -p console
++ mkdir -p logs
+ export LC_ALL=C
+ LC_ALL=C
++ export jobs_location=jobs
++ jobs_location=jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MPUXyqpRTd
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MPUXyqpRTd
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ mkdir -p jobs
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EC4h5YFu3B
++ mktemp -d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EC4h5YFu3B
++ alias pause=pause
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias print-line=print
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias print-file=print_file
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias relative-configpath=relative_configpath
++ alias exit-error=exit_error
++ alias system-metrics=system_metrics
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export jobs_location=jobs
++ jobs_location=jobs
++ alias warning-message=warning
++ mkdir -p jobs
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ alias validate-address=validate_address
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias warning-message=warning
++ mkdir -p logs
++ export LC_ALL=C
++ LC_ALL=C
++ export console_location=console
++ console_location=console
++ export console_location=console
++ mkdir -p console
++ console_location=console
++ mkdir -p console
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ export actions_logfile=console/run.console
++ logs_location=logs
++ actions_logfile=console/run.console
++ mkdir -p logs
++ touch console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.H5pjMhZlhA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.H5pjMhZlhA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ -n '' ]]
++ export jobs_location=jobs
+ readonly __NETWORK_EXTRACT__=1
++ jobs_location=jobs
+ __NETWORK_EXTRACT__=1
++ mkdir -p jobs
++ export targets_location=targets
++ actions_logfile=console/run.console
+ set -euo pipefail
++ targets_location=targets
++ touch console/run.console
++ touch console/run.console
+ export LC_ALL=C
++ mktemp -d
++ export jobs_location=jobs
+ LC_ALL=C
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ -n '' ]]
+ set -euo pipefail
+ readonly __NETWORK_EXTRACT__=1
+ export LC_ALL=C
+ LC_ALL=C
+ __NETWORK_EXTRACT__=1
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ set -euo pipefail
+ LC_ALL=C
+ export LC_ALL=C
+ LC_ALL=C
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wxpwi2lCwx
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wxpwi2lCwx
++ export targets_location=targets
++ targets_location=targets
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mktemp -d
++ export console_location=console
++ mktemp -d
++ console_location=console
++ mktemp -d
++ [[ -n '' ]]
++ mkdir -p console
++ declare -gr __DEVOPS_RESOURCES__=1
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nsik7S4Xhv
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nsik7S4Xhv
++ alias log-error=log_error
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias log-info=log_info
+ export 'nl=\n'
+ nl='\n'
++ alias log-warn=log_warn
+ source ./scripts/devops-resources.shell
++ alias print-message=message
++ alias print-newline=newline
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRPi9j4lU2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRPi9j4lU2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ -n '' ]]
+ export 'nl=\n'
++ alias pause=pause
+ nl='\n'
++ alias print-line=print
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ alias print-file=print_file
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
+++ base64
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++++ basename ./scripts/devops-resources.shell
++ alias list-file=list_file
++ alias relative-configpath=relative_configpath
++ alias log-error=log_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias log-info=log_info
++ alias print-newline=newline
++ alias pause=pause
+++ tr -dc a-zA-Z0-9
++ alias log-warn=log_warn
++ alias print-line=print
++ alias print-message=message
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias print-newline=newline
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
+++ base64
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias pause=pause
++++ basename ./scripts/devops-resources.shell
+++ base64
++ alias print-line=print
++ alias system-metrics=system_metrics
++ export 'nl=\n'
++ nl='\n'
++ alias print-file=print_file
++ export default_addresses=ips.list
++++ basename ./scripts/devops-resources.shell
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ alias relative-configpath=relative_configpath
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kxvHPAqUwQ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kxvHPAqUwQ
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RvFPSvcHCJ
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pZQw2CIUNs
++ export default_matrix=matrix.json
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pZQw2CIUNs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias warning-message=warning
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RvFPSvcHCJ
+++ echo -n devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export LC_ALL=C
++ export actions_logfile=console/run.console
++ export targets_location=targets
++ alias system-metrics=system_metrics
++ actions_logfile=console/run.console
++ LC_ALL=C
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ default_matrix=matrix.json
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
++ targets_location=targets
+ nl='\n'
+++ tr -dc a-zA-Z0-9
++ export cache_location=.cache
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ cache_location=.cache
++ declare -gr __DEVOPS_RESOURCES__=1
+ source ./scripts/devops-resources.shell
++ export logs_location=logs
++ export 'nl=\n'
++ [[ 5 -lt 4 ]]
++ logs_location=logs
++ nl='\n'
++ touch console/run.console
++ export default_addresses=ips.list
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ export actions_logfile=console/run.console
++ export targets_logfile=.cache/targets.jobs
++ default_addresses=ips.list
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ mkdir -p logs
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-warn=log_warn
++ alias print-message=message
++ alias exit-error=exit_error
++ alias print-newline=newline
++ actions_logfile=console/run.console
++ export default_devices=devices.list
++ alias list-file=list_file
++ default_devices=devices.list
++ alias pause=pause
++ export default_matrix=matrix.json
++ alias log-error=log_error
++ alias list-file=list_file
++ default_matrix=matrix.json
++ alias print-line=print
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias warning-message=warning
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias log-warn=log_warn
++ export cache_location=.cache
++ export LC_ALL=C
++ touch console/run.console
++ alias print-message=message
++ cache_location=.cache
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ export logs_location=logs
++ alias print-newline=newline
++ export 'nl=\n'
++ alias print-newline=newline
++ logs_location=logs
++ nl='\n'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ mkdir -p logs
++ export default_addresses=ips.list
++ alias pause=pause
++ alias system-metrics=system_metrics
++ default_addresses=ips.list
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias pause=pause
++ alias print-line=print
+ source ./scripts/devops-helpers.shell
++ alias print-line=print
++ alias print-file=print_file
++ export actions_logfile=console/run.console
+++ echo -n devops-resources.shell
++ alias print-file=print_file
++ actions_logfile=console/run.console
++ targets_logfile=.cache/targets.jobs
++ alias validate-address=validate_address
++ alias relative-configpath=relative_configpath
++ touch console/run.console
++ export default_devices=devices.list
++ [[ -n '' ]]
++ alias relative-configpath=relative_configpath
++ alias warning-message=warning
++ default_devices=devices.list
++ export LC_ALL=C
++ LC_ALL=C
++ export default_matrix=matrix.json
++ readonly __DEVOPS_HELPERS__=1
++ default_matrix=matrix.json
++ export 'nl=\n'
++ __DEVOPS_HELPERS__=1
++ export cache_location=.cache
++ nl='\n'
++ [[ 5 -lt 4 ]]
++ export default_addresses=ips.list
++ alias system-metrics=system_metrics
++ cache_location=.cache
++ alias system-metrics=system_metrics
++ export logs_location=logs
++ default_addresses=ips.list
++ logs_location=logs
++ export default_devices=devices.list
++ default_devices=devices.list
+++ echo -n devops-resources.shell
++ export default_matrix=matrix.json
++ mkdir -p logs
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias parse-listings--helper=parse_listings__helper
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ default_devices=devices.list
++ LC_ALL=C
++ export 'nl=\n'
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ nl='\n'
++ export cache_location=.cache
++ export default_addresses=ips.list
++ cache_location=.cache
++ default_addresses=ips.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export logs_location=logs
++ export default_devices=devices.list
++ alias network-extract--helper=network_extract__helper
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ logs_location=logs
++ default_devices=devices.list
++ mkdir -p logs
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ source ./scripts/configs-objects.shell
++ mkdir -p logs
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ -n '' ]]
++ __DEVOPS_HELPERS__=1
+ readonly __NETWORK_EXTRACT__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias serialize-object=configs_objects
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ __NETWORK_EXTRACT__=1
+ export LC_ALL=C
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ alias parse-listings--helper=parse_listings__helper
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ alias parse-cisco=main
++ alias serialize-object=configs_objects
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
+ [[ -z x ]]
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ export jobs_location=jobs
+++ base64
++ jobs_location=jobs
++ export targets_logfile=.cache/targets.jobs
++ mkdir -p jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
+ export logs_location=logs
++ export targets_logfile=.cache/targets.jobs
+ logs_location=logs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
+ mkdir -p logs
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+++ tr -dc a-zA-Z0-9
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export jobs_location=jobs
++ alias serialize-object=configs_objects
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+++ echo -n devops-resources.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IpPVTdpMXK
++ console_location=console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IpPVTdpMXK
++ mkdir -p console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.faw0qdCMxk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.faw0qdCMxk
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ base64
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES__=1
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+++ base64
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias exit-error=exit_error
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++++ basename ./scripts/devops-resources.shell
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export console_location=console
++ [[ 5 -lt 4 ]]
++ console_location=console
+ source ./scripts/devops-helpers.shell
++ mkdir -p console
++ alias list-file=list_file
++ [[ -n '' ]]
++++ basename ./scripts/devops-resources.shell
++ alias log-error=log_error
++ alias log-info=log_info
++ alias detect-vendor=detect_vendor
++ alias log-warn=log_warn
++ alias exit-error=exit_error
++ alias print-message=message
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias print-newline=newline
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ alias list-file=list_file
++ alias print-line=print
++ alias log-error=log_error
++ alias print-file=print_file
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias relative-configpath=relative_configpath
++ alias print-message=message
+++ tr -dc a-zA-Z0-9
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ export console_location=console
++ export console_location=console
++ alias validate-address=validate_address
++ console_location=console
++ mkdir -p console
++ alias warning-message=warning
++ console_location=console
++ export LC_ALL=C
++ export console_location=console
++ mkdir -p console
++ console_location=console
++ LC_ALL=C
++ mkdir -p console
++ alias system-metrics=system_metrics
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export console_location=console
++ export logs_location=logs
+++ base64
++ logs_location=logs
++ console_location=console
++ mkdir -p logs
++ mkdir -p console
++ alias validate-address=validate_address
++ alias warning-message=warning
++++ basename ./scripts/devops-resources.shell
++ export LC_ALL=C
+++ tr -dc a-zA-Z0-9
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export actions_logfile=console/run.console
+ touch console/network-extract.console
++ actions_logfile=console/run.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ touch console/run.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract
+ script_filename=network-extract
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+++ echo -n devops-resources.shell
+ network_extract__console=console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
+ touch console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ export actions_logfile=console/run.console
+ source ./scripts/configs-objects.shell
++ actions_logfile=console/run.console
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ touch console/run.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ [[ -n '' ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ readonly __CONFIGS_OBJECTS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ __CONFIGS_OBJECTS__=1
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ alias serialize-object=configs_objects
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ [[ -n '' ]]
++ touch console/run.console
+ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ __DEVOPS_HELPERS__=1
++ export actions_logfile=console/run.console
+ set -euo pipefail
++ actions_logfile=console/run.console
+ export LC_ALL=C
+ LC_ALL=C
++ touch console/run.console
++ alias serialize-object=configs_objects
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ alias parse-cisco=main
++ alias parse-listings--helper=parse_listings__helper
+ logs_location=logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ mkdir -p logs
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ mktemp -d
++ __CONFIGS_OBJECTS__=1
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ export targets_location=targets
++ targets_location=targets
++ alias serialize-object=configs_objects
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
++ targets_logfile=.cache/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xon8ofrukx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mnycbx3umi/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yrjs1xnyo9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console --export --verbose
+ alias parse-cisco=main
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export console_location=console
++ console_location=console
++ export targets_location=targets
++ mkdir -p console
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ oIFS=' 	
+ oIFS=' 	
'
+ [[ -z x ]]
'
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
+ IFS==
+ mkdir -p logs
+ read -r key value
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
+ IFS==
++ targets_location=targets
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export targets_location=targets
++ targets_location=targets
+ script_filename=network-extract.shell
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
++ targets_logfile=.cache/targets.jobs
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GzVkpiCNB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GzVkpiCNB
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ base64
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+++ base64
++ alias log-error=log_error
++ alias log-info=log_info
++++ basename ./scripts/devops-resources.shell
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++++ basename ./scripts/devops-resources.shell
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ export 'nl=\n'
++ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ export actions_logfile=console/run.console
+++ base64
++ actions_logfile=console/run.console
++ touch console/run.console
+++ base64
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ export console_location=console
++ console_location=console
+ [[ 7 -eq 0 ]]
++ mkdir -p console
+++ echo -n devops-resources.shell
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ypcte2olkh/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z2hqrzdnpe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console --export --verbose
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ echo -n devops-resources.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console --export --verbose
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
+ oIFS=' 	
'
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
+++ echo -n devops-resources.shell
+ source ./scripts/devops-helpers.shell
+ oIFS=' 	
'
++ [[ -n '' ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
++ readonly __DEVOPS_HELPERS__=1
+ read -r key value
++ __DEVOPS_HELPERS__=1
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ export jobs_location=jobs
++ alias parse-listings--helper=parse_listings__helper
++ jobs_location=jobs
+ export network_extract__console=console/network-extract.console
++ readonly __DEVOPS_HELPERS__=1
+ [[ search =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS__=1
++ mkdir -p jobs
+ [[ search =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ search =~ ^(export|r)$ ]]
+ network_extract__console=console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(logger|l)$ ]]
++ targets_location=targets
+ touch console/network-extract.console
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(logger|l)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list
+ [[ search =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias network-extract--helper=network_extract__helper
+ [[ search == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+++ base64
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/configs-objects.shell
+ source ./scripts/devops-helpers.shell
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
++ readonly __CONFIGS_OBJECTS__=1
+ source ./scripts/configs-objects.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
+ IFS==
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS__=1
++ __CONFIGS_OBJECTS__=1
++ __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ __DEVOPS_HELPERS__=1
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++++ basename ./scripts/devops-resources.shell
++ alias network-extract--helper=network_extract__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console --export --verbose
++ readonly __CONFIGS_OBJECTS__=1
++ [[ 5 -lt 4 ]]
+ source ./scripts/configs-objects.shell
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ oIFS=' 	
+ [[ search == \d\e\b\u\g ]]
++ alias serialize-object=configs_objects
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias serialize-object=configs_objects
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(logger|l)$ ]]
'
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ IFS==
+ IFS==
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ source ./scripts/configs-objects.shell
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
++ alias serialize-object=configs_objects
+ alias parse-cisco=main
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -z x ]]
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list
++ alias serialize-object=configs_objects
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
++ export actions_logfile=console/run.console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ actions_logfile=console/run.console
++ touch console/run.console
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ mkdir -p logs
+++ echo -n devops-resources.shell
+++ base64
++ export console_location=console
++ console_location=console
++ mkdir -p console
++++ basename ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ echo -n devops-resources.shell
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
+ set -euo pipefail
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ export LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ LC_ALL=C
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ touch console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
++ export targets_location=targets
+ [[ search =~ ^(config|c)$ ]]
+ script_filename=network-extract
++ targets_location=targets
+ export network_extract__console=console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ network_extract__console=console/network-extract.console
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(export|r)$ ]]
+ touch console/network-extract.console
+ [[ search =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ network_extract__console=console/network-extract.console
+ [[ search =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(logger|l)$ ]]
+ touch console/network-extract.console
++ export actions_logfile=console/run.console
+ script_filename=network-extract.shell
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
++ actions_logfile=console/run.console
+ script_filename=network-extract
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
++ alias network-configs--helper=network_configs__helper
++ touch console/run.console
++ [[ -n '' ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rm1egtynqn/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS__=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console --export --verbose
+ touch console/network-extract.console
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ mktemp -d
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
'
++ mktemp -d
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ IFS==
++ alias serialize-object=configs_objects
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z x ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ config =~ ^(logger|l)$ ]]
+ mkdir -p logs
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \h\e\l\p ]]
+ [[ 7 -eq 0 ]]
+++ base64
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.83mmywmgbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pyksfmeima/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yrjs1xnyo9/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console --export --verbose
+ [[ config =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console --export --verbose
++ export targets_location=targets
+ oIFS=' 	
'
++ targets_location=targets
+ oIFS=' 	
+ for xitem in "${@}"
++ export targets_logfile=.cache/targets.jobs
'
++ targets_logfile=.cache/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ oIFS=' 	
+ IFS==
+ for xitem in "${@}"
++++ basename ./scripts/devops-resources.shell
+ [[ 7 -eq 0 ]]
'
+ [[ 7 -eq 0 ]]
+ read -r key value
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8ugQbdh2rN
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opdw2Cu2lK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8ugQbdh2rN
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xon8ofrukx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opdw2Cu2lK
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n5szb6xkbt/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ export 'nl=\n'
+ [[ config =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ read -r key value
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(logger|l)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ oIFS=' 	
++ [[ -n '' ]]
'
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES__=1
+ IFS==
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ read -r key value
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias list-file=list_file
+ IFS==
++ alias list-file=list_file
+ read -r key value
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export LC_ALL=C
++ export default_devices=devices.list
++ LC_ALL=C
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
+ script_filename=network-extract.shell
++ default_matrix=matrix.json
++ export default_matrix=matrix.json
+ script_filename=network-extract
++ default_matrix=matrix.json
++ export cache_location=.cache
++ export cache_location=.cache
+ export network_extract__console=console/network-extract.console
++ cache_location=.cache
+ network_extract__console=console/network-extract.console
++ export logs_location=logs
++ logs_location=logs
+ touch console/network-extract.console
++ mkdir -p logs
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+++ echo -n devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
+ touch console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+++ base64
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+++ tr -dc a-zA-Z0-9
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
++ mktemp -d
+ [[ config =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS__=1
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ config == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mkdir -p jobs
+++ echo -n devops-resources.shell
++ export jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console --export --verbose
++ jobs_location=jobs
++ mkdir -p jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.mnycbx3umi/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console --export --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
++ readonly __DEVOPS_HELPERS__=1
+ [[ search == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
+ [[ search == \v\e\r\b\o\s\e ]]
'
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ read -r key value
+ read -r key value
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ readonly __CONFIGS_OBJECTS__=1
+ read -r key value
++ __CONFIGS_OBJECTS__=1
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias serialize-object=configs_objects
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ read -r key value
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uoTUZfohsl
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ search =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uoTUZfohsl
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ source ./scripts/configs-objects.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ [[ extract == \d\e\b\u\g ]]
+ nl='\n'
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ __CONFIGS_OBJECTS__=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
+ [[ config =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ [[ -z x ]]
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias serialize-object=configs_objects
+ for xitem in "${@}"
+ export logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ logs_location=logs
++ alias list-file=list_file
+ mkdir -p logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ IFS==
++ alias log-error=log_error
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
++ alias log-info=log_info
++ alias log-warn=log_warn
+ for xitem in "${@}"
++ alias print-message=message
++ alias print-newline=newline
+ IFS==
+ read -r key value
++ alias pause=pause
+ [[ config =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ config == \h\e\l\p ]]
++ alias relative-configpath=relative_configpath
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
+ [[ extract =~ ^(config|c)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
++ export 'nl=\n'
+ [[ extract =~ ^(export|r)$ ]]
++ nl='\n'
++ export default_addresses=ips.list
+ [[ extract =~ ^(extract|x)$ ]]
++ default_addresses=ips.list
++ export default_devices=devices.list
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export console_location=console
++ export logs_location=logs
++ console_location=console
++ logs_location=logs
++ mkdir -p console
++ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ extract == \h\e\l\p ]]
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export jobs_location=jobs
++ touch console/run.console
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ config =~ ^(export|r)$ ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ touch console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local target_platform=fortinet
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yulzv4eskd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console --export --verbose
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ export console_location=console
++ console_location=console
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
++ mkdir -p console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ targets_location=targets
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/misc/switch1.conf
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.z2hqrzdnpe/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ IFS==
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console --export --verbose
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ oIFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+++ base64
+++ base64
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list
+++ echo -n devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+++ echo -n devops-resources.shell
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(config|c)$ ]]
+ read -r key value
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ mktemp -d
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(console|o)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local target_platform=cisco
++ readonly __DEVOPS_HELPERS__=1
+ [[ platform =~ ^(search|s)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ platform =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ extract == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
++ export targets_location=targets
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ platform =~ ^(console|o)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(console|o)$ ]]
+ IFS==
++ alias parse-listings--helper=parse_listings__helper
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ extract =~ ^(export|r)$ ]]
+ read -r key value
++ echo -e --platform=cisco
++ alias network-configs--helper=network_configs__helper
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ IFS==
+ [[ extract =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ read -r key value
++ echo -e --platform=cisco
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ __CONFIGS_OBJECTS__=1
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ alias serialize-object=configs_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ksMJXbHZvc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ksMJXbHZvc
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+++ base64
++++ basename ./scripts/devops-resources.shell
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ tr -dc a-zA-Z0-9
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ -n '' ]]
++ alias print-message=message
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ alias print-newline=newline
+ alias parse-cisco=main
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
+ [[ -z x ]]
+ [[ -z x ]]
+ export logs_location=logs
++ alias system-metrics=system_metrics
+ export logs_location=logs
+ logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ mkdir -p logs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
+ [[ platform =~ ^(logger|l)$ ]]
++ default_matrix=matrix.json
+ [[ platform =~ ^(export|r)$ ]]
++ export cache_location=.cache
+ [[ platform =~ ^(export|r)$ ]]
++ cache_location=.cache
+ [[ extract =~ ^(extract|x)$ ]]
++ export logs_location=logs
+ [[ platform =~ ^(extract|x)$ ]]
++ logs_location=logs
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ mkdir -p logs
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ mktemp -d
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ echo -n devops-resources.shell
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ mktemp -d
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(config|c)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ export jobs_location=jobs
++ alias network-configs--helper=network_configs__helper
+ touch console/network-extract.console
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ alias network-extract--helper=network_extract__helper
+ touch console/network-extract.console
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VFOXw1Xa18
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VFOXw1Xa18
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ local target_platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ nl='\n'
++ alias serialize-object=configs_objects
+ source ./scripts/devops-resources.shell
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(export|r)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ alias parse-cisco=main
++ alias pause=pause
++ alias print-line=print
+ [[ -z x ]]
++ alias print-file=print_file
+ export logs_location=logs
+ logs_location=logs
++ alias relative-configpath=relative_configpath
+ mkdir -p logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z4GgC4NgYA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z4GgC4NgYA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias system-metrics=system_metrics
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias validate-address=validate_address
++ alias exit-error=exit_error
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias list-file=list_file
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ alias log-error=log_error
++ default_devices=devices.list
++ alias log-info=log_info
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ alias log-warn=log_warn
++ alias print-message=message
++ cache_location=.cache
++ alias print-newline=newline
++ export logs_location=logs
++ logs_location=logs
++ alias pause=pause
++ alias print-line=print
++ mkdir -p logs
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ echo -e --platform=cisco
++ mkdir -p logs
++ echo -e --platform=cisco
++ export console_location=console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2is3p0h4if/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.top2uy8e4m/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ oIFS=' 	
'
+ [[ platform =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hkoewwct3p/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ export targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console --export --verbose
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=console/run.console
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ mktemp -d
++ touch console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ search =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ [[ search =~ ^(search|s)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ __NETWORK_EXTRACT__=1
+ [[ -n '' ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ __NETWORK_EXTRACT__=1
+ readonly __NETWORK_EXTRACT__=1
+ export LC_ALL=C
+ set -euo pipefail
+ __NETWORK_EXTRACT__=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ LC_ALL=C
+ export LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ LC_ALL=C
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ echo -n devops-resources.shell
++ mktemp -d
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export targets_location=targets
++ mktemp -d
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9QL1sjE7Q
++ targets_logfile=.cache/targets.jobs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9QL1sjE7Q
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(config|c)$ ]]
++ mktemp -d
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
++ mktemp -d
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias parse-listings--helper=parse_listings__helper
++ alias pause=pause
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
++ alias system-metrics=system_metrics
+ source ./scripts/configs-objects.shell
+ [[ -n '' ]]
++ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias validate-address=validate_address
+++ base64
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ base64
++ export 'nl=\n'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ nl='\n'
++ export default_addresses=ips.list
++++ basename ./scripts/devops-resources.shell
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++++ basename ./scripts/devops-resources.shell
++ default_matrix=matrix.json
++ alias serialize-object=configs_objects
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p82neLUyNF
++ export cache_location=.cache
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.syvYAoM5Ot
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p82neLUyNF
++ cache_location=.cache
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.syvYAoM5Ot
+ [[ search =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
++ export logs_location=logs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ logs_location=logs
++ declare -gr __DEVOPS_RESOURCES__=1
+ export 'nl=\n'
+ nl='\n'
++ mkdir -p logs
++ [[ 5 -lt 4 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w6kNmqbr1c
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YLbaKvenhx
+ source ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YLbaKvenhx
+ [[ config =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w6kNmqbr1c
++ [[ -n '' ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ export 'nl=\n'
+ nl='\n'
++ alias list-file=list_file
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-resources.shell
++ alias log-error=log_error
++ alias exit-error=exit_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ alias parse-cisco=main
++ [[ -n '' ]]
++ alias print-message=message
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias print-newline=newline
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
+ [[ -z x ]]
+ export logs_location=logs
++ alias pause=pause
+ logs_location=logs
++ alias detect-vendor=detect_vendor
+ mkdir -p logs
++ alias list-file=list_file
++ alias print-line=print
++ alias log-error=log_error
++ alias print-file=print_file
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias relative-configpath=relative_configpath
++ alias print-message=message
++ alias print-newline=newline
++ alias system-metrics=system_metrics
++ alias pause=pause
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias detect-vendor=detect_vendor
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias exit-error=exit_error
++ alias relative-configpath=relative_configpath
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias system-metrics=system_metrics
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-error=log_error
++ alias print-message=message
++ alias print-newline=newline
++ alias log-info=log_info
+++ echo -n devops-resources.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xvT074jvnr
++ alias log-warn=log_warn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xvT074jvnr
++ alias pause=pause
++ alias validate-address=validate_address
++ alias print-message=message
+++ echo -n devops-resources.shell
++ alias warning-message=warning
++ alias print-newline=newline
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias print-line=print
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ alias pause=pause
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export logs_location=logs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ logs_location=logs
++ mkdir -p logs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias print-line=print
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias system-metrics=system_metrics
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ alias system-metrics=system_metrics
++ alias parse-listings--helper=parse_listings__helper
++ __DEVOPS_HELPERS__=1
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias warning-message=warning
+ source ./scripts/configs-objects.shell
++ export 'nl=\n'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ nl='\n'
++ __CONFIGS_OBJECTS__=1
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ export LC_ALL=C
++ default_devices=devices.list
++ alias network-configs--helper=network_configs__helper
++ LC_ALL=C
++ export default_matrix=matrix.json
+ [[ config =~ ^(config|c)$ ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export logs_location=logs
++ export 'nl=\n'
++ alias serialize-object=configs_objects
++ export jobs_location=jobs
+ export 'nl=\n'
++ nl='\n'
++ logs_location=logs
++ jobs_location=jobs
++ alias network-extract--helper=network_extract__helper
+ nl='\n'
++ mkdir -p logs
++ export default_addresses=ips.list
+ source ./scripts/configs-objects.shell
++ default_addresses=ips.list
++ mkdir -p jobs
++ export default_devices=devices.list
++ default_devices=devices.list
++ [[ -n '' ]]
++ export default_matrix=matrix.json
++ readonly __CONFIGS_OBJECTS__=1
++ default_matrix=matrix.json
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(export|r)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ config =~ ^(extract|x)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ config =~ ^(logger|l)$ ]]
++ mkdir -p logs
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ script_filename=network-extract.shell
++ alias serialize-object=configs_objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-resources.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export network_extract__console=console/network-extract.console
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
+ IFS==
++ [[ -n '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list
+ read -r key value
+ local target_platform=cisco
+ alias parse-cisco=main
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ touch console/network-extract.console
+ [[ platform == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -n '' ]]
++ export jobs_location=jobs
+ export logs_location=logs
++ jobs_location=jobs
+ logs_location=logs
++ mkdir -p jobs
+ mkdir -p logs
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ [[ search == \d\r\y\-\r\u\n ]]
+ alias parse-cisco=main
+ [[ search == \v\e\r\b\o\s\e ]]
+ export LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ LC_ALL=C
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ -n '' ]]
++ alias exit-error=exit_error
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ set -euo pipefail
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ export LC_ALL=C
+ read -r key value
+ LC_ALL=C
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export jobs_location=jobs
+ [[ config == \d\r\y\-\r\u\n ]]
++ jobs_location=jobs
++ alias pause=pause
++ mkdir -p jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
++ alias print-line=print
++ alias print-file=print_file
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ alias system-metrics=system_metrics
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export jobs_location=jobs
++ jobs_location=jobs
++ export console_location=console
++ export default_devices=devices.list
++ console_location=console
++ mkdir -p jobs
++ mkdir -p console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u9rfChuga0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u9rfChuga0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rm1egtynqn/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console --export --verbose
+ script_filename=network-extract.shell
++ export cache_location=.cache
+ script_filename=network-extract
+ export 'nl=\n'
+ export network_extract__console=console/network-extract.console
+ nl='\n'
+ network_extract__console=console/network-extract.console
++ export console_location=console
+ touch console/network-extract.console
++ console_location=console
+ oIFS=' 	
'
++ mkdir -p console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ source ./scripts/devops-resources.shell
++ cache_location=.cache
+ script_filename=network-extract.shell
++ export logs_location=logs
+ script_filename=network-extract
++ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mkdir -p logs
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias list-file=list_file
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ platform =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-message=message
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-newline=newline
+ [[ platform =~ ^(platform|p)$ ]]
++ alias pause=pause
++ export console_location=console
++ console_location=console
++ alias print-line=print
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUo1ZmnVbF
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3MtpBMFwU7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUo1ZmnVbF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3MtpBMFwU7
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ export console_location=console
+ source ./scripts/devops-resources.shell
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ [[ -n '' ]]
++ touch console/run.console
++ console_location=console
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ -n '' ]]
++ mkdir -p console
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
+ [[ 7 -eq 0 ]]
++ alias exit-error=exit_error
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kjxnsvy9vj/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias list-file=list_file
++ alias print-file=print_file
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ alias log-error=log_error
++ alias log-info=log_info
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-warn=log_warn
+ oIFS=' 	
++ alias log-info=log_info
'
++ alias print-message=message
++ alias log-warn=log_warn
+ for xitem in "${@}"
++ alias print-newline=newline
+ IFS==
++ alias print-message=message
+ read -r key value
++ alias print-newline=newline
++ alias pause=pause
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-line=print
+ [[ extract =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
++ alias pause=pause
+ [[ 7 -eq 0 ]]
++ alias print-file=print_file
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ypcte2olkh/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
++ alias print-line=print
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console --export --verbose
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KQ6Rj4wQiU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KQ6Rj4wQiU
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ export 'nl=\n'
+ nl='\n'
++ alias system-metrics=system_metrics
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ [[ -n '' ]]
++ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES__=1
++ nl='\n'
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ extract =~ ^(export|r)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ config =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ export default_devices=devices.list
++ export LC_ALL=C
++ default_devices=devices.list
++ LC_ALL=C
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ alias warning-message=warning
++ alias exit-error=exit_error
+ [[ extract =~ ^(logger|l)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ export cache_location=.cache
++ nl='\n'
++ cache_location=.cache
++ export default_addresses=ips.list
++ export logs_location=logs
++ default_addresses=ips.list
++ logs_location=logs
++ alias list-file=list_file
++ export default_devices=devices.list
++ mkdir -p logs
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ alias log-error=log_error
++ default_matrix=matrix.json
+ [[ config =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ config =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(extract|x)$ ]]
++ alias print-message=message
++ export cache_location=.cache
+ [[ config =~ ^(logger|l)$ ]]
++ cache_location=.cache
+ [[ extract =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(search|s)$ ]]
++ export actions_logfile=console/run.console
+ [[ extract == \h\e\l\p ]]
++ actions_logfile=console/run.console
+ [[ extract == \d\e\b\u\g ]]
++ alias pause=pause
++ touch console/run.console
++ alias print-line=print
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
++ logs_location=logs
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
++ mkdir -p logs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list
++ export cache_location=.cache
++ alias validate-address=validate_address
++ cache_location=.cache
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ alias warning-message=warning
+ [[ config =~ ^(search|s)$ ]]
++ export LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ LC_ALL=C
++ export logs_location=logs
++ export jobs_location=jobs
+ [[ search =~ ^(export|r)$ ]]
++ export 'nl=\n'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ nl='\n'
++ export actions_logfile=console/run.console
++ export default_addresses=ips.list
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(logger|l)$ ]]
++ jobs_location=jobs
++ default_addresses=ips.list
++ actions_logfile=console/run.console
++ mkdir -p jobs
+ [[ search =~ ^(platform|p)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
+ [[ search =~ ^(search|s)$ ]]
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ export cache_location=.cache
+ [[ search == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
+ [[ search == \v\e\r\b\o\s\e ]]
++ touch console/run.console
++ export logs_location=logs
++ logs_location=logs
+ for xitem in "${@}"
++ mkdir -p logs
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
++ mkdir -p logs
++ export actions_logfile=console/run.console
+ [[ config == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list
++ actions_logfile=console/run.console
++ targets_location=targets
+ [[ config == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ [[ extract =~ ^(config|c)$ ]]
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
+ [[ config =~ ^(search|s)$ ]]
+ local target_platform=cisco
++ targets_logfile=.cache/targets.jobs
++ touch console/run.console
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+++ base64
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++++ basename ./scripts/devops-resources.shell
++++ basename ./scripts/devops-resources.shell
+ [[ search =~ ^(config|c)$ ]]
++ export targets_location=targets
++ targets_location=targets
+++ tr -dc a-zA-Z0-9
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ jobs_location=jobs
++ export jobs_location=jobs
+ [[ search =~ ^(search|s)$ ]]
++ jobs_location=jobs
++ mkdir -p jobs
++ mkdir -p jobs
++ export targets_location=targets
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list
++ targets_location=targets
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ search == \d\r\y\-\r\u\n ]]
++ targets_logfile=.cache/targets.jobs
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -n '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
++ export console_location=console
+ [[ config =~ ^(search|s)$ ]]
++ console_location=console
+ set -euo pipefail
+ [[ config == \h\e\l\p ]]
+ export LC_ALL=C
++ mkdir -p console
+ [[ config == \d\e\b\u\g ]]
+ LC_ALL=C
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ echo -e --config=.cache/resources/misc/fw1.cfg
+++ base64
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++++ basename ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+++ base64
++ alias network-configs--helper=network_configs__helper
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
+ source ./scripts/configs-objects.shell
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
++ alias serialize-object=configs_objects
+++ base64
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ echo -e --platform=fortinet
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export console_location=console
+ mkdir -p logs
++ console_location=console
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ mkdir -p console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ echo -n devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias parse-listings--helper=parse_listings__helper
+++ echo -n devops-resources.shell
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias network-configs--helper=network_configs__helper
+ [[ config =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ config =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ config == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ config == \d\e\b\u\g ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ config == \d\r\y\-\r\u\n ]]
++ __CONFIGS_OBJECTS__=1
+ [[ config == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
++ __DEVOPS_HELPERS__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ IFS==
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+++ echo -n devops-resources.shell
++ [[ -n '' ]]
++ alias serialize-object=configs_objects
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E6qgpsorD1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E6qgpsorD1
+ [[ platform =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(export|r)$ ]]
++ alias network-configs--helper=network_configs__helper
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ alias parse-cisco=main
+ [[ platform =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ alias network-extract--helper=network_extract__helper
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ extract =~ ^(config|c)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -z x ]]
++ alias network-extract--helper=network_extract__helper
+ export logs_location=logs
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
+ logs_location=logs
+ source ./scripts/configs-objects.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/configs-objects.shell
++ alias detect-vendor=detect_vendor
+ source ./scripts/devops-helpers.shell
++ alias exit-error=exit_error
++ [[ -n '' ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ mkdir -p logs
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ alias list-file=list_file
++ __CONFIGS_OBJECTS__=1
++ readonly __DEVOPS_HELPERS__=1
++ alias log-error=log_error
++ __CONFIGS_OBJECTS__=1
++ __DEVOPS_HELPERS__=1
++ alias log-info=log_info
++ [[ 5 -lt 4 ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ script_filename=network-extract.shell
++ alias print-newline=newline
+ script_filename=network-extract
++ alias serialize-object=configs_objects
+ export network_extract__console=console/network-extract.console
++ alias serialize-object=configs_objects
++ alias pause=pause
+ network_extract__console=console/network-extract.console
++ alias print-line=print
+ touch console/network-extract.console
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ alias validate-address=validate_address
+ __NETWORK_EXTRACT__=1
++ alias network-configs--helper=network_configs__helper
++ alias warning-message=warning
++ export LC_ALL=C
+ set -euo pipefail
++ export actions_logfile=console/run.console
++ LC_ALL=C
+ alias parse-cisco=main
+ alias parse-cisco=main
++ export jobs_location=jobs
+ export LC_ALL=C
+ local target_platform=cisco
++ export 'nl=\n'
++ actions_logfile=console/run.console
++ nl='\n'
+ LC_ALL=C
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ [[ -z x ]]
++ export default_devices=devices.list
+ export logs_location=logs
++ default_devices=devices.list
++ alias network-extract--helper=network_extract__helper
+ logs_location=logs
++ export default_matrix=matrix.json
+ [[ -z x ]]
++ touch console/run.console
++ default_matrix=matrix.json
+ mkdir -p logs
++ export cache_location=.cache
+ source ./scripts/configs-objects.shell
+ export logs_location=logs
++ cache_location=.cache
+ logs_location=logs
++ export logs_location=logs
+ [[ -n '' ]]
+ mkdir -p logs
++ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ platform =~ ^(search|s)$ ]]
++ logs_location=logs
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ readonly __CONFIGS_OBJECTS__=1
++ mkdir -p logs
++ __CONFIGS_OBJECTS__=1
+ __NETWORK_EXTRACT__=1
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ set -euo pipefail
+ [[ platform =~ ^(config|c)$ ]]
++ touch console/run.console
+ export LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ LC_ALL=C
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export actions_logfile=console/run.console
++ jobs_location=jobs
++ actions_logfile=console/run.console
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias serialize-object=configs_objects
+ [[ platform == \h\e\l\p ]]
++ touch console/run.console
+ [[ platform =~ ^(logger|l)$ ]]
++ mkdir -p jobs
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ mktemp -d
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.88qewmnopy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ extract =~ ^(export|r)$ ]]
++ targets_location=targets
+ [[ extract =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
++ export targets_location=targets
+ script_filename=network-extract.shell
++ targets_location=targets
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ [[ extract =~ ^(logger|l)$ ]]
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ extract =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ touch console/network-extract.console
++ targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(search|s)$ ]]
+ touch console/network-extract.console
+ [[ extract == \h\e\l\p ]]
++ export targets_location=targets
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_platform=fortinet
++ export targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4WE36c0o4d
+ [[ platform == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4WE36c0o4d
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ extract == \d\e\b\u\g ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ script_filename=network-extract.shell
++ declare -gr __DEVOPS_RESOURCES__=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y4SI6uwZ9A
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y4SI6uwZ9A
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias detect-vendor=detect_vendor
+ export 'nl=\n'
+ nl='\n'
++ alias exit-error=exit_error
+ source ./scripts/devops-resources.shell
++ echo -e --platform=cisco
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ IFS==
++ [[ -n '' ]]
+ touch console/network-extract.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
++ alias list-file=list_file
+ [[ platform == \v\e\r\b\o\s\e ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ echo -e --platform=fortinet
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
++ alias log-error=log_error
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ [[ -n '' ]]
++ alias log-info=log_info
+ readonly __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias exit-error=exit_error
+ __NETWORK_EXTRACT__=1
++ alias log-warn=log_warn
+ set -euo pipefail
++ alias print-message=message
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ alias list-file=list_file
++ alias pause=pause
++ alias log-error=log_error
++ alias print-line=print
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias print-message=message
++ alias relative-configpath=relative_configpath
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
++ echo -e --platform=cisco
+++ base64
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ mktemp -d
+++ base64
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
++++ basename ./scripts/devops-resources.shell
+++ tr -dc a-zA-Z0-9
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ echo -n devops-resources.shell
+++ echo -n devops-resources.shell
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export default_devices=devices.list
++ export cache_location=.cache
++ default_devices=devices.list
++ cache_location=.cache
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
+++ echo -n devops-resources.shell
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ read -r key value
++ logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ mkdir -p logs
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rbPvxRYIBD
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ platform =~ ^(search|s)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rbPvxRYIBD
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ export actions_logfile=console/run.console
+ [[ config == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
+ nl='\n'
++ actions_logfile=console/run.console
+ [[ logger =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ touch console/run.console
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \h\e\l\p ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export actions_logfile=console/run.console
+ [[ logger =~ ^(logger|l)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ source ./scripts/devops-resources.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ for xitem in "${@}"
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
++ alias exit-error=exit_error
+ IFS==
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ read -r key value
++ alias list-file=list_file
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
++ alias log-info=log_info
+ IFS==
+ read -r key value
+ local target_platform=fortinet
++ alias log-warn=log_warn
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
++ alias print-message=message
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ local target_platform=cisco
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ 7 -eq 0 ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ actions_logfile=console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hpvib95j6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ 7 -eq 0 ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ for xitem in "${@}"
++ touch console/run.console
+ [[ platform == \v\e\r\b\o\s\e ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --platform=cisco
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ export console_location=console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ export jobs_location=jobs
+ IFS==
+ read -r key value
++ jobs_location=jobs
++ console_location=console
++ export jobs_location=jobs
++ mkdir -p jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
++ echo -e --platform=cisco
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --export
++ echo -e --export
++ echo -e --export
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ IFS==
+ read -r key value
++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export console_location=console
+ [[ platform =~ ^(logger|l)$ ]]
++ console_location=console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ mkdir -p console
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ export console_location=console
+ [[ platform =~ ^(extract|x)$ ]]
++ console_location=console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
++ mkdir -p console
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ local export_objects=true
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local export_objects=true
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value
++ export targets_location=targets
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ IFS==
+ IFS==
+ read -r key value
+ [[ export =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n '' ]]
+ [[ extract == \h\e\l\p ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ extract == \d\e\b\u\g ]]
+ __NETWORK_EXTRACT__=1
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
+ set -euo pipefail
+ [[ export =~ ^(config|c)$ ]]
+ export LC_ALL=C
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iXFFp0I405
+ LC_ALL=C
+ [[ export =~ ^(export|r)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iXFFp0I405
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ for xitem in "${@}"
+ for xitem in "${@}"
+ export 'nl=\n'
+ IFS==
+ IFS==
+ read -r key value
+ nl='\n'
+ read -r key value
+ source ./scripts/devops-resources.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ echo -e --verbose
++ echo -e --verbose
++ export targets_location=targets
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ echo -e --verbose
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --platform=cisco
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export actions_logfile=console/run.console
+ [[ logger =~ ^(search|s)$ ]]
++ actions_logfile=console/run.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ touch console/run.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
++ mkdir -p jobs
+ [[ logger =~ ^(export|r)$ ]]
++ targets_location=targets
+ [[ logger =~ ^(extract|x)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UeRd9M7ey0
++ targets_logfile=.cache/targets.jobs
+ [[ logger =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UeRd9M7ey0
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ export == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(logger|l)$ ]]
++ targets_location=targets
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ export targets_location=targets
+ [[ verbose =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export actions_logfile=console/run.console
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -n '' ]]
+ local verbose=true
+ for xitem in "${@}"
+ [[ verbose == \h\e\l\p ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ targets_location=targets
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ export targets_logfile=.cache/targets.jobs
+ IFS=' 	
++ targets_logfile=.cache/targets.jobs
+ for xitem in "${@}"
+ read -r key value
+ readonly __NETWORK_EXTRACT__=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
'
++ actions_logfile=console/run.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ __NETWORK_EXTRACT__=1
+ [[ logger =~ ^(export|r)$ ]]
++ targets_logfile=.cache/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ local verbose=true
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
++ touch console/run.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS=' 	
+ [[ verbose =~ ^(platform|p)$ ]]
+ debug=false
++ alias exit-error=exit_error
'
+ [[ -z '' ]]
+ set -euo pipefail
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ export LC_ALL=C
+ [[ -z '' ]]
+ [[ platform =~ ^(export|r)$ ]]
+ dry_run=false
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ debug=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ export console_output=false
+ dry_run=false
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
++ alias list-file=list_file
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ console_output=false
+ IFS==
+ [[ -z '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ export console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ console_output=false
+ local target_platform=cisco
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ -z true ]]
++ alias log-error=log_error
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ [[ -z true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local verbose=true
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ IFS=' 	
+ [[ verbose == \h\e\l\p ]]
++ echo -e --export
'
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ platform == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ -z '' ]]
+ debug=false
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias log-warn=log_warn
+ script_helper=false
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local export_objects=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
++ alias print-message=message
+ [[ false == true ]]
+ [[ -z '' ]]
++ alias print-newline=newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ alias pause=pause
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
++ alias print-line=print
+ dry_run=false
+ search_terms=()
+ [[ -z true ]]
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ export console_output=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list != *,* ]]
+ console_output=false
+ mapfile -t search_terms
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
++ alias print-file=print_file
+ export console_output=false
+ console_output=false
++ alias relative-configpath=relative_configpath
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console ]]
++ mktemp -d
++ export targets_location=targets
+ script_helper=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
++ targets_location=targets
+ [[ export =~ ^(logger|l)$ ]]
+ [[ false == true ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(platform|p)$ ]]
++ targets_logfile=.cache/targets.jobs
+ script_helper=false
+ search_terms=()
+ [[ export =~ ^(search|s)$ ]]
+ declare -a search_terms
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
+ [[ false == true ]]
++ alias system-metrics=system_metrics
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ declare -a search_terms
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list != *,* ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list != *,* ]]
+++ base64
+ mapfile -t search_terms
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ mapfile -t search_terms
++ alias validate-address=validate_address
++ export console_location=console
++ console_location=console
++++ basename ./scripts/devops-resources.shell
++ mkdir -p console
++ echo -e --verbose
++ alias warning-message=warning
++ export LC_ALL=C
+++ base64
++ LC_ALL=C
+++ base64
++++ basename ./scripts/devops-resources.shell
++ export 'nl=\n'
++ nl='\n'
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export default_addresses=ips.list
+ for xitem in "${@}"
+ IFS==
++ default_addresses=ips.list
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ export default_devices=devices.list
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+++ echo -n devops-resources.shell
+++ base64
+++ echo -n devops-resources.shell
++++ basename ./scripts/devops-resources.shell
++ grep -v '^\s*$'
+++ echo -n devops-resources.shell
++ grep -v '^\s*$'
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ grep -v '^#'
++ touch console/run.console
+ [[ export =~ ^(config|c)$ ]]
+ [[ -n '' ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y25JJhYBNg
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(logger|l)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ export =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y25JJhYBNg
+ readonly __NETWORK_EXTRACT__=1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS__=1
+ __NETWORK_EXTRACT__=1
+ [[ export =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ local export_objects=true
+ set -euo pipefail
++ __DEVOPS_HELPERS__=1
+ export LC_ALL=C
+ for xitem in "${@}"
++ __DEVOPS_HELPERS__=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ export 'nl=\n'
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ [[ verbose =~ ^(search|s)$ ]]
++ tr -d '\r'
+ [[ verbose == \h\e\l\p ]]
++ tr -d '\r'
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ logger =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ export =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z '' ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ dry_run=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias network-configs--helper=network_configs__helper
++ alias exit-error=exit_error
+ IFS==
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ logger =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ source ./scripts/configs-objects.shell
+ [[ -z true ]]
++ grep -v '^\s*$'
+ [[ logger =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
++ alias network-extract--helper=network_extract__helper
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias list-file=list_file
+ source ./scripts/configs-objects.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
++ [[ -n '' ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ alias log-error=log_error
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -z '' ]]
++ __CONFIGS_OBJECTS__=1
+ source ./scripts/devops-helpers.shell
++ readonly __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(platform|p)$ ]]
+ script_helper=false
++ __CONFIGS_OBJECTS__=1
++ alias log-info=log_info
+ [[ false == true ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias log-warn=log_warn
++ readonly __DEVOPS_HELPERS__=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ [[ logger == \h\e\l\p ]]
++ __DEVOPS_HELPERS__=1
++ alias print-message=message
+ search_terms=()
+ declare -a search_terms
++ alias serialize-object=configs_objects
++ [[ 5 -lt 4 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ [[ logger == \d\e\b\u\g ]]
++ mktemp -d
+ local first_search_entry=172.18.1.20
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias serialize-object=configs_objects
++ alias print-newline=newline
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ grep -v '^#'
++ alias pause=pause
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local last_search_entry=172.18.1.20
++ alias print-line=print
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
++ alias print-file=print_file
+++ base64
++ alias relative-configpath=relative_configpath
++ alias network-extract--helper=network_extract__helper
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
+ source ./scripts/configs-objects.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
++ alias system-metrics=system_metrics
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ local first_search_entry=10.0.2.3
++ __CONFIGS_OBJECTS__=1
++++ basename ./scripts/devops-resources.shell
+ alias parse-cisco=main
+ local last_search_entry=10.0.2.3
+ local count=1
++ export jobs_location=jobs
++ jobs_location=jobs
+ alias parse-cisco=main
++ mkdir -p jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ -z x ]]
++ alias serialize-object=configs_objects
+ export logs_location=logs
++ LC_ALL=C
+ logs_location=logs
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ ((  count == 0  ))
++ export targets_location=targets
+ [[ -z x ]]
++ targets_location=targets
+ export logs_location=logs
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ export 'nl=\n'
+ mkdir -p logs
+ [[ true == true ]]
++ nl='\n'
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ logs_location=logs
+ mkdir -p logs
+++ tr -dc a-zA-Z0-9
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ] ]]
++ export default_addresses=ips.list
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
++ default_addresses=ips.list
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ export default_devices=devices.list
++ echo -e --verbose
++ default_devices=devices.list
++ export targets_location=targets
+ [[ export == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
++ export default_matrix=matrix.json
++ targets_location=targets
+ newline
++ default_matrix=matrix.json
+ alias parse-cisco=main
++ export cache_location=.cache
+ local count=1
++ cache_location=.cache
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ logger =~ ^(config|c)$ ]]
++ export logs_location=logs
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ (( i = 0 ))
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
++ logs_location=logs
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -z x ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ export logs_location=logs
++ mkdir -p logs
+ [[ verbose =~ ^(config|c)$ ]]
+ logs_location=logs
+ newline
+ mkdir -p logs
+ echo
+ local count=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i++ ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS__=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ logger == \d\e\b\u\g ]]
++ tr -d '\r'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ -z cisco ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
++ [[ 5 -lt 4 ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ for xitem in "${@}"
+ local count=1
++ export targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo -e --export
+ local first_search_entry=172.16.0.5
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+++ echo -n devops-resources.shell
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local last_search_entry=172.16.0.5
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
+ local first_search_entry=10.0.0.1
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ] ]]
+ local last_search_entry=10.0.0.1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rzJ2p6NFWS
+ ((  count == 0  ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rzJ2p6NFWS
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ] ]]
+ export 'nl=\n'
+ nl='\n'
++ grep -v '^#'
+ source ./scripts/devops-resources.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ [[ -n '' ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ declare -gr __DEVOPS_RESOURCES__=1
+ local count=1
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local count=1
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+++ base64
+ newline
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ local count=1
++ alias exit-error=exit_error
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias list-file=list_file
+ (( i++ ))
++ alias log-error=log_error
+ echo
+ (( i++ ))
++ alias log-info=log_info
++++ basename ./scripts/devops-resources.shell
+ (( i < count ))
+ (( i < count ))
++ alias log-warn=log_warn
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias print-message=message
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
++ alias print-newline=newline
+ [[ -z cisco ]]
+ [[ -z cisco ]]
+++ tr -dc a-zA-Z0-9
+ [[ true == true ]]
+ script_filename=network-extract.shell
++ alias pause=pause
++ echo -e --export
+ script_filename=network-extract.shell
++ alias print-line=print
+ [[ true == true ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ alias print-file=print_file
+ script_filename=network-extract
++ alias relative-configpath=relative_configpath
+ script_filename=network-extract.shell
+ export network_extract__console=console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ newline
+ touch console/network-extract.console
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ script_filename=network-extract
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ newline
+ [[ verbose =~ ^(export|r)$ ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ (( i < count ))
+ echo
++ export jobs_location=jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ echo
++ jobs_location=jobs
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
++ mkdir -p jobs
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ touch console/network-extract.console
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ alias validate-address=validate_address
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ targets_logfile=.cache/targets.jobs
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ alias warning-message=warning
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
++ export LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ verbose =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local verbose=true
++ export 'nl=\n'
+ [[ verbose == \h\e\l\p ]]
++ alias parse-listings--helper=parse_listings__helper
++ nl='\n'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS=' 	
++ export default_addresses=ips.list
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ default_addresses=ips.list
+ [[ verbose == \d\r\y\-\r\u\n ]]
'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export default_devices=devices.list
+ local verbose=true
++ default_devices=devices.list
+ [[ -z '' ]]
++ export default_matrix=matrix.json
+ IFS=' 	
++ alias network-configs--helper=network_configs__helper
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ debug=false
+ [[ -z '' ]]
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
'
++ export logs_location=logs
++ logs_location=logs
+ dry_run=false
+ [[ -z '' ]]
++ mkdir -p logs
+ [[ -z true ]]
+ debug=false
+ [[ -z '' ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ alias network-extract--helper=network_extract__helper
+ dry_run=false
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ local first_search_entry=10.10.10.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ -z true ]]
+ local last_search_entry=10.10.10.10
+ [[ export =~ ^(console|o)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ export console_output=false
+ [[ true == true ]]
+ search_terms=()
+ [[ export =~ ^(export|r)$ ]]
+ console_output=false
+ declare -a search_terms
+ [[ logger == \d\e\b\u\g ]]
+++ echo -n devops-resources.shell
+ source ./scripts/configs-objects.shell
+ [[ -z true ]]
+ local export_objects=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ [[ export =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ export =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
++ readonly __CONFIGS_OBJECTS__=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console ]]
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ script_helper=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ export == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export == \d\e\b\u\g ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ ((  count == 0  ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]]
+ IFS==
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list != *,* ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ IFS=' 	
'
+ mapfile -t search_terms
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ (( i < count ))
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z '' ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ dry_run=false
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ echo -e --export
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ echo
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ [[ 7 -eq 0 ]]
++ export actions_logfile=console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xon8ofrukx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
++ actions_logfile=console/run.console
+ (( i = 0 ))
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ -z true ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console --export --verbose
++ touch console/run.console
++ alias network-configs--helper=network_configs__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ oIFS=' 	
'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
++ export console_location=console
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ console_location=console
+ for xitem in "${@}"
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ read -r key value
++ mkdir -p console
+ source ./scripts/configs-objects.shell
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ [[ -n '' ]]
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ 7 -eq 0 ]]
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ cfg == \c\f\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hpvib95j6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
++ __CONFIGS_OBJECTS__=1
+ [[ 7 -eq 0 ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.88qewmnopy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ cfg == \c\f\g ]]
++ tr -d '\r'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console --export --verbose
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ alias serialize-object=configs_objects
+ oIFS=' 	
'
+ for xitem in "${@}"
+ oIFS=' 	
+ IFS==
'
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ grep -v '^\s*$'
++ echo -e --verbose
+ alias parse-cisco=main
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export =~ ^(console|o)$ ]]
+ mkdir -p logs
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ source ./scripts/devops-helpers.shell
+ export console_output=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
++ grep -v '^#'
+++ base64
++++ basename ./scripts/devops-resources.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
++ export targets_location=targets
++ actions_logfile=console/run.console
++ targets_location=targets
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ export targets_logfile=.cache/targets.jobs
++ touch console/run.console
++ targets_logfile=.cache/targets.jobs
+ output_dir=reports/172.18.1.20/cisco
+ [[ cfg == \c\f\g ]]
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ script_filename=network-extract.shell
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ script_filename=network-extract
+ local first_search_entry=172.16.1.6
+ export network_extract__console=console/network-extract.console
++ export console_location=console
+ network_extract__console=console/network-extract.console
+ local last_search_entry=172.16.1.6
++ console_location=console
+ [[ verbose =~ ^(config|c)$ ]]
+ touch console/network-extract.console
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ verbose =~ ^(console|o)$ ]]
++ mkdir -p console
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+++ echo -n devops-resources.shell
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
++ readonly __DEVOPS_HELPERS__=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ read -r key value
++ alias serialize-object=configs_objects
+ [[ verbose == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ] ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ local verbose=true
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ IFS=' 	
'
+ local count=1
+ [[ -z '' ]]
+ debug=false
+ ((  count == 0  ))
+ local first_search_entry=10.0.1.2
+ [[ -z '' ]]
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ dry_run=false
+ local last_search_entry=10.0.1.2
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ console_output=false
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ -z true ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ [[ true == true ]]
+ export console_output=false
+ (( i < count ))
+ console_output=false
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ] ]]
+ [[ search =~ ^(extract|x)$ ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
+ [[ search =~ ^(logger|l)$ ]]
+ search_terms=()
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z cisco ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ __DEVOPS_HELPERS__=1
+ mapfile -t search_terms
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ IFS==
+ ((  count == 0  ))
++ [[ 5 -lt 4 ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ search =~ ^(console|o)$ ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ IFS==
+ newline
+ [[ search =~ ^(export|r)$ ]]
+ read -r key value
+ newline
+ local count=1
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ export =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ script_helper=false
+ (( i = 0 ))
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ false == true ]]
+ (( i++ ))
+ local export_objects=true
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ source ./scripts/devops-helpers.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ echo -e --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ search =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ search =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z cisco ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+++ base64
++ echo -e --export
+ [[ search == \h\e\l\p ]]
+ newline
+ local count=1
+ [[ -n '' ]]
+ (( i = 0 ))
+ readonly __NETWORK_EXTRACT__=1
+ (( i < count ))
+ __NETWORK_EXTRACT__=1
+ echo
+ [[ search == \d\e\b\u\g ]]
+ set -euo pipefail
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ export LC_ALL=C
+ [[ search == \v\e\r\b\o\s\e ]]
+ LC_ALL=C
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
++ [[ -n '' ]]
+ [[ export =~ ^(extract|x)$ ]]
++++ basename ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ output_dir=reports/172.16.0.5/cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ output_dir=reports/10.0.0.1/cisco
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pyksfmeima/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ oIFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ for xitem in "${@}"
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ alias network-configs--helper=network_configs__helper
+ IFS==
++ touch console/run.console
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ logger == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/misc/switch3.conf
+ read -r key value
+ for xitem in "${@}"
+ search_terms=()
+ [[ export =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ grep -v '^\s*$'
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^#'
++ command -v -- ./scripts/network-extract.shell
++ echo -e --export
+++ echo -n devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/10.10.10.10/cisco
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local script_filename=cisco-configs.awk
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ source ./scripts/devops-helpers.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z x ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+++ base64
+ local target_config=.cache/resources/misc/switch3.conf
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++++ basename ./scripts/devops-resources.shell
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
+ local first_search_entry=172.16.0.5
+++ tr -dc a-zA-Z0-9
++ alias network-configs--helper=network_configs__helper
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OdVvm8YlTG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OdVvm8YlTG
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias network-extract--helper=network_extract__helper
+ export 'nl=\n'
+ nl='\n'
+ [[ config =~ ^(config|c)$ ]]
+ source ./scripts/configs-objects.shell
+ source ./scripts/devops-resources.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ] ]]
++ which awk
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
++ readonly __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(export|r)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
++ [[ -n '' ]]
++ export targets_location=targets
+ [[ config =~ ^(extract|x)$ ]]
++ __CONFIGS_OBJECTS__=1
++ declare -gr __DEVOPS_RESOURCES__=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
++ targets_location=targets
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ config =~ ^(logger|l)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ [[ 5 -lt 4 ]]
++ targets_logfile=.cache/targets.jobs
++ readonly __DEVOPS_HELPERS__=1
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
++ alias serialize-object=configs_objects
++ __DEVOPS_HELPERS__=1
+ ((  count == 0  ))
++ alias detect-vendor=detect_vendor
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(config|c)$ ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ newline
+ [[ config =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ local count=1
+ [[ config == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ config == \d\e\b\u\g ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
++ alias log-error=log_error
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
++ alias log-info=log_info
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(logger|l)$ ]]
+ echo
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-message=message
+ IFS==
+ [[ export == \h\e\l\p ]]
+ IFS==
+ (( i++ ))
+ [[ search =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ source ./scripts/configs-objects.shell
+ [[ search =~ ^(logger|l)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ alias parse-cisco=main
+ [[ search =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
++ alias pause=pause
+ [[ -z cisco ]]
+ [[ search == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z x ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+++ echo -n devops-resources.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
+ mkdir -p logs
+ IFS==
+ read -r key value
++ alias print-line=print
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
+ newline
+ local count=1
++ alias relative-configpath=relative_configpath
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ export logs_location=logs
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ echo
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ conf == \c\o\n\f ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
++ alias system-metrics=system_metrics
+ [[ export =~ ^(console|o)$ ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ read -r key value
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(config|c)$ ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ logs_location=logs
+ [[ platform =~ ^(export|r)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias validate-address=validate_address
+ mkdir -p logs
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias warning-message=warning
+ [[ export =~ ^(extract|x)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export 'nl=\n'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ nl='\n'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-helpers.shell
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ [[ -n '' ]]
++ export default_matrix=matrix.json
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ default_matrix=matrix.json
++ [[ 5 -lt 4 ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ tr -d '\r'
++ dirname reports/10.0.1.2/misc/switch1.conf
++ which awk
+++ base64
++ IFS=,
++ echo 172.18.1.20
++ logs_location=logs
++ mkdir -p logs
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++++ basename ./scripts/devops-resources.shell
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
+++ tr -dc a-zA-Z0-9
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/configs-objects.shell
++ grep -v '^#'
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias serialize-object=configs_objects
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ output_dir=reports/172.16.1.6/cisco
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/10.0.1.2/misc
+ [[ ! -d reports/10.0.1.2/misc ]]
++ which awk
++ IFS=,
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ echo 10.0.2.3
+ export network_extract__console=console/network-extract.console
+++ echo -n devops-resources.shell
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ alias parse-cisco=main
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ -z x ]]
+ declare -a execute__netwowrk_extract
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ which awk
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo 172.16.0.5
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
++ readonly __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ __CONFIGS_OBJECTS__=1
+ [[ config =~ ^(export|r)$ ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ extract =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS__=1
+ [[ config =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ IFS=,
+ [[ config =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
++ echo 10.0.0.1
+ [[ config == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ set -euo pipefail
+ declare -a execute__netwowrk_extract
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
+ export LC_ALL=C
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ which awk
++ alias parse-listings--helper=parse_listings__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias network-configs--helper=network_configs__helper
++ echo -e --platform=cisco
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local first_search_entry=10.0.1.2
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ verbose == \h\e\l\p ]]
+ local last_search_entry=10.0.1.2
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ source ./scripts/configs-objects.shell
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
++ alias serialize-object=configs_objects
+ [[ platform == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
++ alias serialize-object=configs_objects
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
++ export jobs_location=jobs
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
++ jobs_location=jobs
++ mkdir -p jobs
+ IFS==
+ read -r key value
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mktemp -d
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
+ source ./scripts/configs-objects.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ] ]]
++ [[ -n '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
++ readonly __CONFIGS_OBJECTS__=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-configs--ips.list ]'
++ __CONFIGS_OBJECTS__=1
+ [[ export =~ ^(platform|p)$ ]]
+ alias parse-cisco=main
+ [[ 7 -eq 0 ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ alias parse-cisco=main
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console --export --verbose
+ export network_extract__console=console/network-extract.console
++ IFS=,
++ echo 10.10.10.10
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ oIFS=' 	
'
+ [[ extract =~ ^(config|c)$ ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ [[ extract =~ ^(export|r)$ ]]
+ local 'indent=            '
+ [[ extract =~ ^(extract|x)$ ]]
+ network_extract__console=console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch console/network-extract.console
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ logs_location=logs
+ local target_platform=cisco
+ mkdir -p logs
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local SCRIPT_DIR=./scripts
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export == \h\e\l\p ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export == \d\e\b\u\g ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/172.16.0.5/misc
++ which awk
+ [[ ! -d reports/172.16.0.5/misc ]]
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PpDhzwnNJg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PpDhzwnNJg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
++ printf '%*s' 12 ''
+ [[ extract =~ ^(config|c)$ ]]
+ export 'nl=\n'
++ printf '%*s' 12 ''
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
++ which awk
+ [[ platform =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ nl='\n'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ which awk
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ local 'indent=            '
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ platform =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ newline
+ newline
+ [[ true == true ]]
+ local target_platform=cisco
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias detect-vendor=detect_vendor
+ [[ -z x ]]
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ local count=1
++ alias exit-error=exit_error
+ IFS=' 	
+ echo
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \d\e\b\u\g ]]
'
+ (( i = 0 ))
++ alias list-file=list_file
+ [[ export =~ ^(config|c)$ ]]
++ alias serialize-object=configs_objects
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ alias log-error=log_error
+ (( i++ ))
++ alias log-info=log_info
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
++ alias log-warn=log_warn
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ IFS==
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-message=message
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ (( i < count ))
+ [[ 7 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hkoewwct3p/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias print-newline=newline
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ script_filename=network-extract
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local awk_bin=/usr/bin/awk
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export network_extract__console=console/network-extract.console
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ alias pause=pause
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console --export --verbose
++ alias print-line=print
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ network_extract__console=console/network-extract.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-file=print_file
+ touch console/network-extract.console
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(export|r)$ ]]
++ alias relative-configpath=relative_configpath
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local export_objects=true
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
'
+ [[ export =~ ^(logger|l)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ for xitem in "${@}"
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
++ alias system-metrics=system_metrics
+ IFS==
+ read -r key value
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ [[ -n '' ]]
++ __DEVOPS_HELPERS__=1
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS__=1
++ echo -e --verbose
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
+ local count=1
+ [[ -z '' ]]
++ alias warning-message=warning
+ ((  count == 0  ))
++ export LC_ALL=C
+ debug=false
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ IFS==
++ echo -e --platform=fortinet
++ alias parse-listings--helper=parse_listings__helper
+ dry_run=false
+ [[ export =~ ^(search|s)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.n5szb6xkbt/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.top2uy8e4m/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.yrjs1xnyo9/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ [[ -z true ]]
++ alias network-extract--helper=network_extract__helper
+ [[ -z '' ]]
+ source ./scripts/configs-objects.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ [[ export == \h\e\l\p ]]
+ source ./scripts/configs-objects.shell
+ [[ search =~ ^(export|r)$ ]]
++ [[ -n '' ]]
++ alias network-extract--helper=network_extract__helper
++ readonly __CONFIGS_OBJECTS__=1
+ [[ search =~ ^(extract|x)$ ]]
++ __CONFIGS_OBJECTS__=1
++ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console --export --verbose
++ readonly __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(extract|x)$ ]]
+ source ./scripts/configs-objects.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console --export --verbose
+ [[ platform =~ ^(logger|l)$ ]]
++ __CONFIGS_OBJECTS__=1
+ alias parse-cisco=main
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(export|r)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ alias serialize-object=configs_objects
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console --export --verbose
++ __CONFIGS_OBJECTS__=1
+ newline
++ export 'nl=\n'
+ console_output=false
+ [[ search =~ ^(platform|p)$ ]]
+ local count=1
+ [[ export == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias serialize-object=configs_objects
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ oIFS=' 	
+ [[ logger =~ ^(logger|l)$ ]]
++ nl='\n'
+ oIFS=' 	
'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ local target_platform=fortinet
+ oIFS=' 	
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ export logs_location=logs
+ [[ export == \d\r\y\-\r\u\n ]]
++ export default_addresses=ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ for xitem in "${@}"
++ default_addresses=ips.list
++ alias serialize-object=configs_objects
+ export logs_location=logs
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo
+ logs_location=logs
'
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
++ export default_devices=devices.list
+ IFS==
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ logs_location=logs
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
'
+ [[ platform == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console ]]
++ default_devices=devices.list
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ logger == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ platform == \d\e\b\u\g ]]
++ export default_matrix=matrix.json
+ [[ platform == \d\r\y\-\r\u\n ]]
+ script_helper=false
++ default_matrix=matrix.json
+ [[ -z x ]]
+ [[ -z x ]]
+ [[ false == true ]]
+ export logs_location=logs
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export logs_location=logs
+ logs_location=logs
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ logs_location=logs
+ [[ -z fortinet ]]
+ mkdir -p logs
+ [[ true == true ]]
+ mkdir -p logs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ alias parse-cisco=main
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list != *,* ]]
++ echo -e --verbose
+ mapfile -t search_terms
+ [[ -z x ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ logger =~ ^(search|s)$ ]]
+ mkdir -p logs
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
++ echo -e --verbose
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --platform=cisco
++ export logs_location=logs
+ IFS==
++ logs_location=logs
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
++ mkdir -p logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
++ echo -e --verbose
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ script_filename=network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
+ script_filename=network-extract
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ debug=false
+ touch console/network-extract.console
+ touch console/network-extract.console
+ [[ -z '' ]]
++ mktemp -d
++ tr -d '\r'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ grep -v '^\s*$'
+ [[ platform =~ ^(extract|x)$ ]]
++ echo -e --export
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ debug=false
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ echo -e --export
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ touch console/network-extract.console
+ local target_platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ dry_run=false
+ [[ -z '' ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ local verbose=true
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ IFS=' 	
'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ debug=false
+ script_helper=false
+ [[ search =~ ^(extract|x)$ ]]
++ export jobs_location=jobs
+ [[ false == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ jobs_location=jobs
+ [[ -z '' ]]
+ console_output=false
++ mkdir -p jobs
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
+ [[ search =~ ^(config|c)$ ]]
+ search_terms=()
+ [[ logger =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ dry_run=false
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.pyksfmeima/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ 7 -eq 0 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JG3ymkNPlA
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JG3ymkNPlA
+ [[ -z true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.rm1egtynqn/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ nl='\n'
+ [[ search =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console --export --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ search == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console --export --verbose
+ [[ search == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ export console_output=false
+ console_output=false
+ [[ 7 -eq 0 ]]
+ oIFS=' 	
'
++ alias detect-vendor=detect_vendor
+ [[ -z true ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias exit-error=exit_error
+ oIFS=' 	
+ IFS==
'
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ [[ config =~ ^(logger|l)$ ]]
+ local verbose=true
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list != *,* ]]
+ IFS==
+ mapfile -t search_terms
++ alias list-file=list_file
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
++ alias log-error=log_error
+ [[ search =~ ^(search|s)$ ]]
+ oIFS=' 	
'
++ alias log-info=log_info
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
++ alias print-message=message
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ IFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
+ local first_search_entry=192.168.0.1
+ [[ search == \d\r\y\-\r\u\n ]]
'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ script_helper=false
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias pause=pause
+ local last_search_entry=192.168.0.1
+ [[ -z '' ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ -z '' ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ script_helper=false
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
++ alias print-line=print
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]]
+ [[ config == \d\e\b\u\g ]]
+ debug=false
+ [[ false == true ]]
+ [[ export =~ ^(export|r)$ ]]
+ IFS==
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
++ alias print-file=print_file
+ local export_objects=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ IFS==
+ for xitem in "${@}"
+ declare -a search_terms
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
+ dry_run=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
+ [[ -z true ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local verbose=true
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]]
+ [[ -z '' ]]
+ read -r key value
+ export console_output=false
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ console_output=false
+ IFS=' 	
+ [[ -z true ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console ]]
'
++ alias validate-address=validate_address
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ script_helper=false
+ for xitem in "${@}"
+ search_terms=()
+ [[ cfg == \c\f\g ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(config|c)$ ]]
++ alias warning-message=warning
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ [[ search =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ] ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ declare -a search_terms
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ mapfile -t search_terms
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ IFS==
+ [[ false == true ]]
+ mkdir -p logs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ [[ -z '' ]]
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ debug=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xon8ofrukx/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(export|r)$ ]]
++ LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ dry_run=false
+ mapfile -t search_terms
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export 'nl=\n'
+ ((  count == 0  ))
+ local export_objects=true
+ [[ export == \h\e\l\p ]]
+ [[ -z true ]]
+ search_terms=()
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console --export --verbose
+ [[ -z '' ]]
+ read -r key value
+ declare -a search_terms
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ export console_output=false
+ script_filename=network-extract.shell
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
++ nl='\n'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ search =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list != *,* ]]
+ [[ export == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ export =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ console_output=false
++ export default_addresses=ips.list
+ [[ logger =~ ^(platform|p)$ ]]
++ default_addresses=ips.list
+ [[ search =~ ^(extract|x)$ ]]
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ export =~ ^(platform|p)$ ]]
+ oIFS=' 	
'
+ [[ export =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z true ]]
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+ [[ search =~ ^(platform|p)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
++ tr -d '\r'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ logger == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ script_helper=false
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ (( i++ ))
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list != *,* ]]
+ [[ search == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ tr -d '\r'
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
++ grep -v '^#'
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ search == \v\e\r\b\o\s\e ]]
++ mkdir -p jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list
+ [[ search =~ ^(export|r)$ ]]
++ export console_location=console
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
++ console_location=console
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ mkdir -p console
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ output_dir=reports/10.0.1.2/fortinet
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
+ IFS==
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
++ grep -v '^#'
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ search == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.2.3
+ [[ export =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local last_search_entry=10.0.2.3
+ local export_objects=true
+ [[ config == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ echo
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ] ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ local count=1
+ ((  count == 0  ))
+ [[ export =~ ^(search|s)$ ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ config == \h\e\l\p ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
++ echo -e --verbose
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
++ tr -d '\r'
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/misc/switch3.conf
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=10.10.10.10
++ export console_location=console
+ local last_search_entry=10.10.10.10
++ console_location=console
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local first_search_entry=10.0.0.1
++ mkdir -p console
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ extract =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local first_search_entry=192.168.0.100
+ [[ -z cisco ]]
+ local last_search_entry=10.0.0.1
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ extract =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.0.100
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ [[ true == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ newline
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ config =~ ^(config|c)$ ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ export actions_logfile=console/run.console
+ [[ config =~ ^(extract|x)$ ]]
++ actions_logfile=console/run.console
+ [[ config =~ ^(logger|l)$ ]]
++ export actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
++ actions_logfile=console/run.console
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(platform|p)$ ]]
++ touch console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
++ touch console/run.console
+ [[ config == \d\e\b\u\g ]]
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local first_search_entry=192.0.2.50
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ local last_search_entry=192.0.2.50
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ((  count == 0  ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ IFS==
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ (( i++ ))
+ [[ extract =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ] ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ [[ config =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(config|c)$ ]]
++ export actions_logfile=console/run.console
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ local verbose=true
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ export =~ ^(config|c)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list
+ local count=1
+ [[ config == \d\e\b\u\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
'
+ for xitem in "${@}"
+ script_filename=network-extract
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ (( i < count ))
+ local script_filename=fortinet-configs.awk
+ [[ extract =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ -z fortinet ]]
+ local export_objects=true
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ for xitem in "${@}"
+ [[ -z '' ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local verbose=true
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ read -r key value
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ IFS=' 	
+ [[ extract == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ newline
++ actions_logfile=console/run.console
'
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ extract == \d\e\b\u\g ]]
++ touch console/run.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ debug=false
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local count=1
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ [[ -z cisco ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ dry_run=false
+ IFS==
+ [[ -z true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ (( i = 0 ))
+ export console_output=false
+ [[ export == \d\e\b\u\g ]]
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ [[ export == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ console_output=false
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ dry_run=false
+ echo
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ read -r key value
+ IFS==
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ [[ -z '' ]]
+ script_helper=false
++ export targets_location=targets
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ targets_location=targets
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ newline
++ export targets_logfile=.cache/targets.jobs
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_logfile=.cache/targets.jobs
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ (( i = 0 ))
++ echo -e --platform=cisco
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local verbose=true
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ console_output=false
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ IFS=' 	
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ [[ -z true ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
'
+ [[ -z '' ]]
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ [[ -z '' ]]
+ script_helper=false
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list != *,* ]]
+ [[ false == true ]]
+ mapfile -t search_terms
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ debug=false
+ [[ -z '' ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -z true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
++ export targets_location=targets
+ search_terms=()
++ targets_location=targets
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ export targets_logfile=.cache/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ targets_logfile=.cache/targets.jobs
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
++ tr -d '\r'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ output_dir=reports/192.168.0.1/cisco
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ grep -v '^#'
++ tr -d '\r'
+++ echo -n devops-resources.shell
++ echo -e --platform=cisco
+++ base64
++ grep -v '^\s*$'
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
++++ basename ./scripts/devops-resources.shell
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(config|c)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ alias network-extract--helper=network_extract__helper
++ tr -d '\r'
++ IFS=,
++ echo 10.0.1.2
++ echo -e --platform=cisco
+ [[ verbose == \d\e\b\u\g ]]
+ source ./scripts/configs-objects.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ [[ -n '' ]]
+ IFS=' 	
++ readonly __CONFIGS_OBJECTS__=1
'
++ __CONFIGS_OBJECTS__=1
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ declare -a execute__netwowrk_extract
+ [[ config == \d\r\y\-\r\u\n ]]
++ grep -v '^\s*$'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ [[ -z '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ debug=false
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+++ echo -n devops-resources.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ for xitem in "${@}"
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ local target_platform=cisco
++ command -v -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ local target_platform=cisco
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ alias parse-cisco=main
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ IFS=' 	
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ grep -v '^#'
+ [[ -z x ]]
+ IFS==
'
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ export logs_location=logs
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ dry_run=false
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ] ]]
+ [[ platform =~ ^(search|s)$ ]]
+ logs_location=logs
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ mkdir -p logs
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ platform =~ ^(search|s)$ ]]
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ debug=false
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ export console_output=false
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ console_output=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local first_search_entry=192.168.2.12
+ for xitem in "${@}"
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local count=1
+ for xitem in "${@}"
+ dry_run=false
++ which awk
+ [[ -z true ]]
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console ]]
+ read -r key value
+ [[ -z '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local last_search_entry=192.168.2.12
+ script_helper=false
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ [[ -z true ]]
+ source ./scripts/devops-helpers.shell
+ [[ -z '' ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ export console_output=false
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ local target_platform=cisco
+ [[ true == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ local count=1
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ ((  count == 0  ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ console_output=false
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -z true ]]
+ local count=1
+ newline
++ [[ -n '' ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console ]]
++ readonly __DEVOPS_HELPERS__=1
+ (( i < count ))
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ [[ platform =~ ^(config|c)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
++ echo -e --platform=cisco
+ read -r key value
+ local target_platform=cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(console|o)$ ]]
+ script_helper=false
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ echo
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_platform=cisco
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_platform=cisco
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ output_dir=reports/10.0.2.3/misc
+ IFS==
+ local 'prompt_message=Enter configuration file to be parsed: '
+ read -r key value
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ -z cisco ]]
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local first_search_entry=172.31.255.254
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
++ dirname -- ./scripts/network-extract.shell
+ local last_search_entry=172.31.255.254
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ search_terms=()
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ newline
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ local count=1
+ [[ -z fortinet ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ declare -a search_terms
+ echo
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ source ./scripts/configs-objects.shell
+ newline
+ (( i++ ))
+ local count=1
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
++ [[ -n '' ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ echo
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ]'
++ readonly __CONFIGS_OBJECTS__=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ] ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ]'
+ (( i++ ))
++ __CONFIGS_OBJECTS__=1
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-configs--ips.list ]'
+ (( i < count ))
+ network_extract__console=console/network-extract.console
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
++ echo -e --platform=cisco
+ touch console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias serialize-object=configs_objects
+ local count=1
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ ((  count == 0  ))
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ output_dir=reports/10.0.0.1/fortinet
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ alias parse-cisco=main
+ output_dir=reports/192.0.2.50/cisco
++ tr -d '\r'
+ [[ ! -d reports/192.0.2.50/cisco ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ newline
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local count=1
+ logs_location=logs
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ mkdir -p logs
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local 'indent=            '
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ tr -d '\r'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
++ grep -v '^\s*$'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2is3p0h4if/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local target_platform=cisco
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ grep -v '^#'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ logger =~ ^(config|c)$ ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ newline
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ for xitem in "${@}"
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
++ which awk
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ read -r key value
+ local script_filename=cisco-configs.awk
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ local first_search_entry=172.16.1.6
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(search|s)$ ]]
+ local last_search_entry=172.16.1.6
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local target_platform=cisco
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ for xitem in "${@}"
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ IFS==
+ read -r key value
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ] ]]
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ local first_search_entry=192.168.1.11
+ local count=1
+ local count=1
+ (( i = 0 ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ echo
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local last_search_entry=192.168.1.11
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
++ which awk
+ [[ true == true ]]
+ (( i < count ))
++ echo -e --export
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
++ echo -e --export
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ touch console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ ((  count == 0  ))
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local script_filename=fortinet-configs.awk
+ [[ search =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filename=cisco-configs.awk
+ newline
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ search == \h\e\l\p ]]
+ echo
++ IFS=,
+ [[ search == \d\e\b\u\g ]]
++ echo -e --export
+ [[ search == \d\r\y\-\r\u\n ]]
++ echo 192.168.0.1
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ conf == \c\o\n\f ]]
+ [[ export =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ export == \h\e\l\p ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ read -r key value
+ declare -a execute__netwowrk_extract
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ extract_location=reports/172.31.255.254/misc/switch1.conf
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.2.12/cisco
+ [[ export =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ export =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ which awk
+ local export_objects=true
+ output_dir=reports/192.168.1.10/fortinet
+ [[ logger =~ ^(console|o)$ ]]
+ [[ ! -d reports/192.168.1.10/fortinet ]]
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ export targets_location=targets
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ IFS=,
+ (( i = 0 ))
++ echo 10.0.2.3
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a execute__netwowrk_extract
+ [[ logger == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/172.31.255.254/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kjxnsvy9vj/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console --export --verbose
++ which awk
++ echo -e --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --verbose
++ echo -e --verbose
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(extract|x)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.10.10.10
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ for xitem in "${@}"
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
++ echo 10.0.0.1
++ echo -e --verbose
++ echo -e --export
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --verbose
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "fortinet",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute__netwowrk_extract
+ output_dir=reports/172.31.255.254/misc
+ [[ ! -d reports/172.31.255.254/misc ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ IFS=,
++ which awk
+ local verbose=true
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
++ echo 192.0.2.50
+ [[ verbose =~ ^(search|s)$ ]]
  "hostname": "fg-branch-vpn-01"
+ debug=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ verbose =~ ^(search|s)$ ]]
+ console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local awk_bin=/usr/bin/awk
+ local verbose=true
+ [[ cfg == \c\f\g ]]
+ [[ -z true ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
}
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg

++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ IFS=' 	
+ script_helper=false
+ [[ false == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ dirname -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
'
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z '' ]]
+ search_terms=()
+ debug=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ declare -a search_terms
+ [[ -z '' ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list
+ [[ logger == \h\e\l\p ]]
++ which awk
+ export console_output=false
+ dry_run=false
++ command -v -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ console_output=false
+ [[ -z true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ [[ -z true ]]
+ export console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console ]]
+ console_output=false
+ [[ -z '' ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ script_helper=false
+ [[ -z true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console ]]
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
#hostname="fg-branch-vpn-01"
+ [[ false == true ]]
+ script_helper=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ search_terms=()
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ declare -a search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list != *,* ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 192.168.0.100
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ [[ logger == \v\e\r\b\o\s\e ]]
+ declare -a execute__netwowrk_extract
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local SCRIPT_PATH=./scripts/network-extract.shell

++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ declare -a execute__netwowrk_extract
+ read -r key value
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Spidey-Sandbox"
+ [[ export =~ ^(console|o)$ ]]
  set subnet 10.0.1.2 255.255.255.255
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
  set comment "QA node in Peter's Lab"
+ local 'indent=            '
+ [[ verbose =~ ^(platform|p)$ ]]
 next
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ export =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(extract|x)$ ]]
+ local export_objects=true
+ local script_filename=fortinet-configs.awk
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(extract|x)$ ]]
end ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ export =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
+ local verbose=true
++ tr -d '\r'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ logger =~ ^(search|s)$ ]]
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ local awk_bin=/usr/bin/awk
+ [[ verbose == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
'
+ touch console/network-extract.console
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
++ dirname -- ./scripts/network-extract.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
++ printf '%*s' 12 ''
+ IFS==
+ (( i = 0 ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ which awk
+ local verbose=true
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ IFS=' 	
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ read -r key value
++ tr -d '\r'
+ IFS==
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ tr -d '\r'
+ (( i < count ))
+ [[ -z true ]]
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
'
+ echo
+ [[ -z '' ]]
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ debug=false
+ read -r key value
+ [[ -z '' ]]
+ [[ true == true ]]
++ grep -v '^\s*$'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ dry_run=false
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
++ printf '%*s' 12 ''
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ which awk
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ grep -v '^#'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ extract =~ ^(config|c)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
#model="FortiGate-60F"
+ [[ search =~ ^(console|o)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ which awk
++ grep -v '^#'
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ grep -v '^#'
++ echo -e --export
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list
++ which awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ [[ search == \h\e\l\p ]]
+ search_terms=()
+ declare -a search_terms
+ [[ search == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list != *,* ]]
+ IFS==
+ mapfile -t search_terms
+ read -r key value
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ local SCRIPT_DIR=./scripts
+ (( i = 0 ))
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export console_output=false
+ local script_filename=cisco-configs.awk
+ (( i < count ))
++ printf '%*s' 12 ''
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ output_dir=reports/172.16.1.6/fortinet
+ [[ ! -d reports/172.16.1.6/fortinet ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ console_output=false
+ [[ -z true ]]
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console ]]
+ echo
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local first_search_entry=10.10.10.10
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local last_search_entry=10.10.10.10
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local verbose=true
+ script_helper=false
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i++ ))
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local 'indent=            '
+ IFS=' 	
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ false == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
++ echo -e --verbose
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ targets_location=targets
+ [[ platform =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ platform =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ script_filename=network-extract
++ targets_logfile=.cache/targets.jobs
+ local target_platform=cisco
+ export network_extract__console=console/network-extract.console
+ [[ platform =~ ^(search|s)$ ]]
+ network_extract__console=console/network-extract.console
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n '' ]]
+ touch console/network-extract.console
++ echo -e --export
+ readonly __NETWORK_EXTRACT__=1
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ IFS==
+ [[ platform == \h\e\l\p ]]
+ read -r key value
++ echo -e --platform=cisco
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ set -euo pipefail
+ for xitem in "${@}"
+ IFS==
+ export LC_ALL=C
+ read -r key value
+ LC_ALL=C
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
++ mktemp -d
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ dirname -- ./scripts/network-extract.shell
++ IFS=,
++ IFS=,
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
++ printf '%*s' 12 ''
++ echo 10.0.1.2
++ echo 172.16.1.6
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++++ basename ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.top2uy8e4m/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.83mmywmgbr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ tr -dc a-zA-Z0-9
+ local 'indent=            '
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ read -r key value
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ local count=1
+ declare -a execute__netwowrk_extract
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ [[ platform =~ ^(extract|x)$ ]]
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+++ echo -n devops-resources.shell
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list
+ local target_platform=cisco
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NoRPzDNUaF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NoRPzDNUaF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
++ [[ -n '' ]]
++ which awk
++ declare -gr __DEVOPS_RESOURCES__=1
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ 5 -lt 4 ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list
++ alias detect-vendor=detect_vendor
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ alias exit-error=exit_error
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
++ readonly __DEVOPS_HELPERS__=1
+ for xitem in "${@}"
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS__=1
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias log-error=log_error
+ (( i = 0 ))
+ [[ logger == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias log-info=log_info
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger == \d\e\b\u\g ]]
+ IFS==
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias log-warn=log_warn
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
++ alias print-message=message
++ which awk
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias pause=pause
+ [[ -n '' ]]
++ alias print-line=print
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2is3p0h4if/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ set -euo pipefail
++ alias print-file=print_file
+ export LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ LC_ALL=C
++ alias relative-configpath=relative_configpath
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ oIFS=' 	
+ newline
+ [[ logger == \h\e\l\p ]]
'
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
++ alias system-metrics=system_metrics
+ (( i < count ))
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
++ alias network-extract--helper=network_extract__helper
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ source ./scripts/configs-objects.shell
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
  "model": "",
+ IFS==
++ [[ -n '' ]]
+ for xitem in "${@}"
+ read -r key value
+ echo
++ readonly __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(config|c)$ ]]
++ __CONFIGS_OBJECTS__=1
+ (( i++ ))
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
++ export default_devices=devices.list
++ alias serialize-object=configs_objects
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
++ export cache_location=.cache
++ cache_location=.cache
++ echo -e --export
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ IFS==
+ read -r key value
+ (( i < count ))
+ alias parse-cisco=main
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ local awk_bin=/usr/bin/awk
+ export logs_location=logs
+ [[ search =~ ^(config|c)$ ]]
+ logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'extracted_configuration={
+ [[ search =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \h\e\l\p ]]
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
  "model": "ASA",
  "version": "9.14(3)",
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ (( i++ ))
  "domain": "edge.dc.example.com",
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
  "hostname": "perimeter-fw1"
}

+ for xitem in "${@}"
++ echo -e --export
ASA Version 9.14(3)
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
hostname perimeter-fw1
+ read -r key value
+ IFS==
domain-name edge.dc.example.com
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ [[ search =~ ^(search|s)$ ]]
 description Internal Network Interface

object network Stark-Tower
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list
 host 10.0.0.1
+ [[ search == \h\e\l\p ]]
 description Core services gateway'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ result=0
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
+ IFS==
  "model": "ASA",
+ read -r key value
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ local 'extracted_configuration={
  "vendor": "cisco",
hostname perimeter-fw1
  "model": "ASA",
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ IFS=,
++ echo 172.16.0.5
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
++ echo -e --export
+ local 'indent=            '
domain-name edge.dc.example.com
+ [[ true == true ]]
  "version": "9.14(3)",
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ [[ config =~ ^(config|c)$ ]]
+ local 'indent=            '
+ declare -a execute__netwowrk_extract
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]

+ [[ logger =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IKpDHyiQMi
interface GigabitEthernet0/1
+ [[ config =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IKpDHyiQMi
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(logger|l)$ ]]
++ export jobs_location=jobs
+ export 'nl=\n'
  "domain": "edge.dc.example.com",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
++ jobs_location=jobs
+ [[ export =~ ^(config|c)$ ]]
+ newline
  "version": "16.9",
  "hostname": "perimeter-fw1"
+ local count=1
 nameif inside
}
  "domain": "",
+ (( i = 0 ))
+ [[ export =~ ^(console|o)$ ]]
  "hostname": "branch-isr-02"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
}
+ nl='\n'
+ [[ export =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ mkdir -p jobs

+ [[ logger =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell

+ (( i < count ))
'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ local target_platform=fortinet
 security-level 100
+ local export_objects=true
+ (( i < count ))
++ [[ -n '' ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
version 16.9
++ declare -gr __DEVOPS_RESOURCES__=1
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ export =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ script_filename=network-extract
++ alias detect-vendor=detect_vendor
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ export network_extract__console=console/network-extract.console
 ip address 10.0.0.1 255.255.255.0
ASA Version 9.14(3)
++ alias exit-error=exit_error
+ echo
+ network_extract__console=console/network-extract.console
hostname perimeter-fw1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ export == \h\e\l\p ]]
 description Internal Network Interface
++ which awk
++ command -v -- ./scripts/network-extract.shell
++ alias list-file=list_file
+ touch console/network-extract.console
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ export == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
domain-name edge.dc.example.com
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]

object-group network Panther-Edge
+ [[ config =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
 description Internet-facing proxy systems

+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ local export_objects=true
+ (( i++ ))
+ for xitem in "${@}"
++ which awk
+ (( i = 0 ))
++ alias pause=pause
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ export =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
 network-object host 203.0.113.25
++ alias print-file=print_file
+ [[ config =~ ^(search|s)$ ]]
+ (( i < count ))
object network Stark-Tower
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
 network-object host 172.16.0.5
+ [[ export == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath

+ echo
+ [[ config == \h\e\l\p ]]
object network Magneto-Core
+ [[ export == \d\r\y\-\r\u\n ]]
 host 172.16.0.5
+ [[ config == \d\e\b\u\g ]]
 host 10.0.0.1
+ (( i++ ))
hostname branch-isr-02
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
 description WAN firewall entry point'
+ for xitem in "${@}"
 description Core services gateway ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias system-metrics=system_metrics
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ result=0
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg

+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
++ alias validate-address=validate_address
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias warning-message=warning
+ [[ -n {
++ export LC_ALL=C
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "vendor": "cisco",
+ [[ platform == \h\e\l\p ]]
  "model": "ASA",
++ LC_ALL=C
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ export 'nl=\n'
  "version": "9.14(3)",
+ local 'message=                .cache/resources/misc/switch1.conf'
  "domain": "edge.dc.example.com",
++ nl='\n'
+ [[ -n '' ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export default_addresses=ips.list
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ default_addresses=ips.list
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ readonly __NETWORK_EXTRACT__=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ export =~ ^(config|c)$ ]]
+ newline
  "hostname": "perimeter-fw1"
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
}
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))

+ local export_objects=true
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ export =~ ^(extract|x)$ ]]
+ echo
ASA Version 9.14(3)
+ [[ export =~ ^(logger|l)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com

+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ -n '' ]]
object-group network Panther-Edge
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ export =~ ^(search|s)$ ]]
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ readonly __NETWORK_EXTRACT__=1
+ __NETWORK_EXTRACT__=1
+ [[ search =~ ^(console|o)$ ]]
 description Internet-facing proxy systems
+ set -euo pipefail
 network-object host 203.0.113.25
+ [[ search =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
 network-object host 172.16.0.5
+ export LC_ALL=C
  "model": "",

  "version": "12.4",
+ LC_ALL=C
+ print '{
  "vendor": "cisco",
++ echo -e --verbose
+ [[ export == \h\e\l\p ]]
  "model": "ASA",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "hostname": "perimeter-fw1"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}
+ [[ search =~ ^(extract|x)$ ]]

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(logger|l)$ ]]
ASA Version 9.14(3)
+ [[ config =~ ^(config|c)$ ]]
++ export console_location=console
object network Magneto-Core
hostname perimeter-fw1
domain-name edge.dc.example.com

++ console_location=console
++ echo -e --export
  "domain": "",
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
++ mkdir -p console
+ [[ config =~ ^(console|o)$ ]]
  "hostname": "access-sw1-west"
interface GigabitEthernet0/1
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
+ [[ config =~ ^(extract|x)$ ]]
 host 172.16.0.5
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(logger|l)$ ]]
}
 description Core services gateway'
+ [[ config =~ ^(platform|p)$ ]]

+ [[ export == \d\r\y\-\r\u\n ]]
 description WAN firewall entry point ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(search|s)$ ]]
version 12.4
+ [[ export == \v\e\r\b\o\s\e ]]
++ echo -e --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n {
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(export|r)$ ]]
hostname access-sw1-west
+ [[ config == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2is3p0h4if/network-configs--ips.list =~ ^-*(h|help)$ ]]

+ [[ config =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
  "model": "ASA",
  "version": "9.14(3)",
++ mktemp -d
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
  "domain": "edge.dc.example.com",
+ [[ config == \v\e\r\b\o\s\e ]]
  "hostname": "perimeter-fw1"
+ [[ config =~ ^(platform|p)$ ]]
}

+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network MGMT-ACCESS
+ oIFS=' 	
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
object-group network Lantern-DMZ
+ [[ search =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ config == \h\e\l\p ]]
 description Protected but public-facing zone
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
 description Management objects
+ [[ config == \d\r\y\-\r\u\n ]]
 network-object host 172.18.1.20
ASA Version 9.14(3)
+ IFS==
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ [[ config == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.1
+ sed '1{/^[[:space:]]*$/d;}'
'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
 network-object host 192.168.0.100
hostname perimeter-fw1
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
domain-name edge.dc.example.com
+ for xitem in "${@}"
+ for xitem in "${@}"

 network-object host 10.10.10.10
interface GigabitEthernet0/1
+ newline
 network-object host 192.168.1.11'
+ [[ search == \h\e\l\p ]]
 nameif inside

+ [[ platform == \d\e\b\u\g ]]
+ IFS==
 security-level 100
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ read -r key value
object-group network Mutant-WiFi
 ip address 10.0.0.1 255.255.255.0
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
 description Internal Network Interface
+ [[ search == \v\e\r\b\o\s\e ]]

object network Stark-Tower
++ mktemp -d
+ IFS==
 host 10.0.0.1
+ for xitem in "${@}"
 description Controlled guest devices
+ read -r key value
 description Core services gateway ]]
+ echo -en '{
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
}
+ IFS==

+ read -r key value
 network-object host 10.10.10.10'
ASA Version 9.14(3)
+ (( i++ ))
hostname perimeter-fw1
domain-name edge.dc.example.com
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ print '{
+ result=0
  "vendor": "cisco",

+ [[ platform == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/1
+ result=0
+ [[ config =~ ^(config|c)$ ]]
 nameif inside
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
 security-level 100
 ip address 10.0.0.1 255.255.255.0
}

 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n {
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
++ export jobs_location=jobs
 network-object host 203.0.113.25
++ printf '%*s' 12 ''
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
++ jobs_location=jobs
 description WAN firewall entry point ]]
++ mkdir -p jobs
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
+ local 'indent=            '

version 12.4
hostname access-sw1-west
+ [[ config =~ ^(console|o)$ ]]

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ [[ true == true ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
++ touch console/run.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ newline 2
+ [[ verbose =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local export_objects=true
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local count=2
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ IFS=' 	
+ [[ verbose == \d\e\b\u\g ]]
'
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ readonly __NETWORK_EXTRACT__=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxIyfL1wy3
+ [[ extract =~ ^(export|r)$ ]]
+ debug=false
+ (( i < count ))
+ (( i < count ))
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ IFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ console_output=false
'
+ [[ -z true ]]
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ debug=false
+ [[ false == true ]]
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]]
+ dry_run=false
+ [[ export == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \d\e\b\u\g ]]
+ [[ -z true ]]
+ __NETWORK_EXTRACT__=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ print '{
+ [[ extract =~ ^(extract|x)$ ]]
  "vendor": "cisco",
+ [[ config == \v\e\r\b\o\s\e ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ set -euo pipefail
+ for xitem in "${@}"
  "model": "",
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxIyfL1wy3
  "version": "12.4",
+ echo
+ read -r key value
+ [[ -n {
  "domain": "",
  "vendor": "cisco",
  "hostname": "access-sw1-west"
+ export LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ (( i++ ))
+ for xitem in "${@}"
}
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg

+ echo
version 12.4
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBifAGDZ6A
hostname access-sw1-west
+ declare -a search_terms
  "model": "",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ (( i < count ))

+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]]
+ local 'extracted_configuration={
object-group network MGMT-ACCESS
+ LC_ALL=C
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list != *,* ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBifAGDZ6A
+ mapfile -t search_terms
+ export console_output=false
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ (( i++ ))
+ export 'nl=\n'
+ console_output=false
+ nl='\n'
 description Management objects
 network-object host 192.168.0.1
+ [[ -z true ]]
 network-object host 192.168.0.100
++ echo -e --verbose
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console ]]
 network-object host 10.10.10.10
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]

+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(platform|p)$ ]]
+ script_helper=false
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "",
object-group network Mutant-WiFi
+ [[ logger == \d\e\b\u\g ]]
 description Controlled guest devices
+ [[ false == true ]]
 network-object host 10.10.10.10'
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
  "version": "16.9",
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i++ ))
+ local 'extracted_configuration={
+ [[ extract == \h\e\l\p ]]
  "domain": "",
+ [[ extract == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger == \v\e\r\b\o\s\e ]]
  "domain": "",
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "hostname": ""
+ source ./scripts/devops-resources.shell
+ read -r key value
  "vendor": "cisco",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n {
+ (( i < count ))
  "hostname": "branch-isr-02"
+ export 'nl=\n'
  "model": "",
+ newline
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
}
+ [[ extract == \v\e\r\b\o\s\e ]]
  "version": "16.9",
+ nl='\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]]
++ export console_location=console
+ for xitem in "${@}"
+ for xitem in "${@}"
  "domain": "",
}
++ console_location=console
  "vendor": "cisco",
  "hostname": "branch-isr-02"

+ source ./scripts/devops-resources.shell
+ IFS==
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ read -r key value
+ [[ true == true ]]
  "model": "",
+ IFS==
  "version": "12.4",
++ [[ -n '' ]]

++ mkdir -p console
++ sed -e '1s|^\(-\)\{1,\}||'
interface Vlan10
}
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
  "domain": "",
+ search_terms=()
++ [[ -n '' ]]
  "hostname": "access-sw1-west"
+ declare -a search_terms
}
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]]
+ newline 2

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list != *,* ]]
version 12.4
hostname access-sw1-west
+ mapfile -t search_terms

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
 ip address 10.0.1.2 255.255.255.0'
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
+ echo -en '{
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
++ [[ 5 -lt 4 ]]
  "domain": "",
++ [[ 5 -lt 4 ]]
  "hostname": "access-sw1-west"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}

version 12.4
++ alias detect-vendor=detect_vendor
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
hostname access-sw1-west

+ [[ extract =~ ^(config|c)$ ]]
++ alias detect-vendor=detect_vendor
object-group network MGMT-ACCESS
+ [[ extract =~ ^(console|o)$ ]]
+ local count=2
++ mktemp -d
 description Management objects
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ -n {
++ alias exit-error=exit_error
+ [[ extract =~ ^(export|r)$ ]]
  "vendor": "cisco",
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ extract =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ message '                .cache/resources/misc/fw3.cfg'
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ export targets_location=targets
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ targets_location=targets
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract == \h\e\l\p ]]
  "model": "",
+ [[ extract == \d\e\b\u\g ]]
++ alias list-file=list_file
+ [[ extract =~ ^(logger|l)$ ]]
  "version": "",
version 16.9
+ [[ extract == \d\r\y\-\r\u\n ]]
  "domain": "",

+ (( i < count ))
+ [[ extract == \v\e\r\b\o\s\e ]]
version 16.9
++ alias list-file=list_file
+ [[ search =~ ^(config|c)$ ]]
++ export targets_logfile=.cache/targets.jobs
hostname branch-isr-02
++ alias log-error=log_error
+ for xitem in "${@}"
+ read -r key value
++ targets_logfile=.cache/targets.jobs
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
  "hostname": ""
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
hostname branch-isr-02
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]

+ newline
+ echo
++ alias log-info=log_info
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ local 'message=                .cache/resources/misc/fw3.cfg'
}
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ [[ extract == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'

+ [[ search == \d\e\b\u\g ]]
interface Vlan10
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
 ip address 10.0.1.2 255.255.255.0 ]]
++ alias log-info=log_info
+ (( i = 0 ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ echo
+ IFS==

+ read -r key value
object-group network Lantern-DMZ
++ alias print-message=message
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
++ alias print-newline=newline
+ local count=1
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
++ echo -e --verbose
+ IFS==
+ echo
++ alias log-warn=log_warn
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
interface GigabitEthernet0/0/2
+ read -r key value
++ alias pause=pause
+ (( i < count ))
+ (( i = 0 ))
++ grep -v '^\s*$'
++ echo -e --platform=fortinet
++ tr -d '\r'
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
+ [[ config =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(export|r)$ ]]
++ alias print-line=print
+ local 'extracted_configuration={
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
++ alias pause=pause
  "vendor": "cisco",
+ echo
++ grep -v '^#'
++ alias print-file=print_file
+ (( i++ ))
+ (( i < count ))
+ newline 2
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ alias print-line=print
+ (( i < count ))
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]

version 16.9
hostname branch-isr-02

+ local count=2
interface GigabitEthernet0/0/0
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ print '{
  "vendor": "cisco",
++ touch console/run.console
  "model": "",
+ (( i++ ))
  "version": "",
  "domain": "",
  "hostname": ""
++ alias relative-configpath=relative_configpath
}
++ echo -e --export

+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
interface Vlan10
++ echo -e --platform=cisco
 ip address 10.0.1.2 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
++ grep -v '^#'
++ echo -e --platform=cisco
+++ base64
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++++ basename ./scripts/devops-resources.shell
++ alias validate-address=validate_address
++ alias print-file=print_file
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias relative-configpath=relative_configpath
++ export 'nl=\n'
++ nl='\n'
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ export default_devices=devices.list
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ echo
++ default_devices=devices.list
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
 ip address 172.16.1.6 255.255.255.0
+ (( i < count ))
 description ISP uplink

+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
++ export default_matrix=matrix.json
+ [[ verbose =~ ^(config|c)$ ]]
++ default_matrix=matrix.json
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8OKiTDaoCP
++ export cache_location=.cache
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8OKiTDaoCP
++ cache_location=.cache
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ export logs_location=logs
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(export|r)$ ]]
object network BlackWidow-Core
++ logs_location=logs
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local first_search_entry=172.18.1.20
+ [[ verbose =~ ^(extract|x)$ ]]
+ local last_search_entry=172.18.1.20
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-configs--ips.list ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
++ alias validate-address=validate_address
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ ((  count == 0  ))
+ sed '1{/^[[:space:]]*$/d;}'
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ extract =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 host 172.16.1.6
+ [[ verbose =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ nl='\n'
 description Branch router uplink NAT'
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ source ./scripts/devops-resources.shell
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ mkdir -p logs
+ [[ verbose =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ alias warning-message=warning
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
++ export LC_ALL=C
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ result=0
+ [[ -z cisco ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n {
+ [[ extract =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ extract == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+++ echo -n devops-resources.shell
++ alias exit-error=exit_error
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ [[ platform =~ ^(export|r)$ ]]
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
  "vendor": "cisco",
++ LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local first_search_entry=192.168.100.100
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ local last_search_entry=192.168.100.100
++ targets_location=targets
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ export targets_logfile=.cache/targets.jobs
+ echo
+ for xitem in "${@}"
++ targets_logfile=.cache/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ] ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ((  count == 0  ))
+ [[ platform =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ alias list-file=list_file
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ alias log-error=log_error
+ [[ platform =~ ^(platform|p)$ ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ alias log-info=log_info
+ newline
++ export 'nl=\n'
  "model": "",
++ alias log-warn=log_warn
++ nl='\n'
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias print-message=message
+ local verbose=true
+ local target_platform=cisco
+ IFS=' 	
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local count=1
++ alias print-newline=newline
+ IFS==
'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ platform == \d\e\b\u\g ]]
  "version": "16.9",
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export default_addresses=ips.list
 ip address 10.0.2.3 255.255.255.0
+ for xitem in "${@}"
++ default_addresses=ips.list
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ platform =~ ^(platform|p)$ ]]
  "domain": "",
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ alias pause=pause
++ export default_devices=devices.list
+ IFS==
++ default_devices=devices.list
 description Dev VLAN
++ export default_matrix=matrix.json
+ [[ platform =~ ^(extract|x)$ ]]
+ local verbose=true
+ source ./scripts/devops-helpers.shell
+ read -r key value
++ default_matrix=matrix.json
+ local target_platform=fortinet
  "hostname": "branch-isr-02"
+ echo
+ IFS=' 	
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
++ [[ -n '' ]]
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ debug=false
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_platform=cisco
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ print '{
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ platform == \h\e\l\p ]]
  "vendor": "cisco",
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ [[ -z cisco ]]
+ [[ platform == \d\e\b\u\g ]]
  "model": "",
++ export cache_location=.cache
}
+ [[ platform == \d\r\y\-\r\u\n ]]
++ cache_location=.cache
  "version": "16.9",
'
+ dry_run=false
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
++ alias system-metrics=system_metrics
  "domain": "",
++ export logs_location=logs
+ [[ true == true ]]
+ debug=false
+ [[ -z true ]]
  "hostname": "branch-isr-02"
+ [[ config =~ ^(config|c)$ ]]
}
+ [[ -z '' ]]
+ IFS==
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ dry_run=false
++ alias parse-listings--helper=parse_listings__helper

++ logs_location=logs

+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ newline
version 16.9
+ [[ -z true ]]
hostname branch-isr-02
++ alias validate-address=validate_address
+ [[ config =~ ^(export|r)$ ]]
+ export console_output=false

+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
version 16.9
++ mkdir -p logs
object-group network Lantern-DMZ
+ [[ config =~ ^(logger|l)$ ]]
hostname branch-isr-02
+ local count=1
+ local count=1

++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
 description Protected but public-facing zone
+ console_output=false
 network-object host 172.18.1.20
+ for xitem in "${@}"
++ export LC_ALL=C
+ (( i = 0 ))
+ [[ config == \d\e\b\u\g ]]
 network-object host 192.168.1.11'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ (( i < count ))
  "version": "16.9",
+ echo
+ IFS==
++ alias network-extract--helper=network_extract__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
+ read -r key value
  "domain": "",
+ (( i++ ))
  "hostname": "branch-isr-02"
+ (( i = 0 ))
+ (( i < count ))
}

+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
interface GigabitEthernet0/0/0
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ source ./scripts/configs-objects.shell
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
version 16.9
+ newline 2
hostname branch-isr-02
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'

+ [[ -z true ]]
object-group network Lantern-DMZ
 description Protected but public-facing zone
+ export console_output=false
 network-object host 172.18.1.20
+ console_output=false
+ IFS==
+ [[ -z true ]]
++ [[ -n '' ]]

+ (( i < count ))
+ read -r key value
++ LC_ALL=C
 ip address 172.16.1.6 255.255.255.0
++ readonly __CONFIGS_OBJECTS__=1
+ local count=2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console ]]
++ __CONFIGS_OBJECTS__=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias serialize-object=configs_objects
++ export 'nl=\n'
 description ISP uplink
+++ base64
+ (( i = 0 ))
+ echo

++ nl='\n'
++ echo -e --platform=fortinet
+ [[ -z '' ]]
++ export jobs_location=jobs
++ jobs_location=jobs
+ [[ -z '' ]]
++ mkdir -p jobs
+ script_helper=false
+ [[ false == true ]]
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
object network BlackWidow-Core
 host 172.16.1.6
+ newline
 description Branch router uplink NAT ]]
++ export default_addresses=ips.list
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_helper=false
++++ basename ./scripts/devops-resources.shell
+ [[ false == true ]]
+ (( i < count ))
++ default_addresses=ips.list
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ alias parse-cisco=main
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list != *,* ]]
+ [[ -z x ]]
+ mapfile -t search_terms
+++ tr -dc a-zA-Z0-9
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ logs_location=logs
++ export default_devices=devices.list
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list != *,* ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
++ default_devices=devices.list
+ mkdir -p logs
+ (( i = 0 ))
+ mapfile -t search_terms
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
++ export default_matrix=matrix.json
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ (( i < count ))
object network Panther-Gateway
+ echo
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
 host 10.0.2.3
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
++ default_matrix=matrix.json
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ echo -n devops-resources.shell
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
++ export cache_location=.cache
+ final_output=reports/172.18.1.20/misc/fw1.cfg
++ cache_location=.cache
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs
+ [[ false == true ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ true == true ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ source ./scripts/devops-helpers.shell
+ configs_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
++ [[ -n '' ]]
  "domain": "",
  "hostname": ""
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ [[ logger =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ print '{
  "vendor": "cisco",
  "model": "",
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \v\e\r\b\o\s\e ]]
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
++ dirname reports/172.18.1.20/misc/fw1.cfg
}
+ [[ platform =~ ^(config|c)$ ]]

version 16.9
hostname branch-isr-02

+ for xitem in "${@}"
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
+ IFS==
}
 host 172.16.1.6
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ export jobs_location=jobs
 description Branch router uplink NAT'
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ jobs_location=jobs
++ mkdir -p jobs
+ [[ logger =~ ^(config|c)$ ]]
+ source ./scripts/configs-objects.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ extract =~ ^(config|c)$ ]]
  "version": "16.9",
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ [[ -n '' ]]
+ [[ logger =~ ^(export|r)$ ]]
  "domain": "",
++ readonly __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(extract|x)$ ]]
  "hostname": "branch-isr-02"
++ __CONFIGS_OBJECTS__=1
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
++ export console_location=console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
++ console_location=console
}
+ [[ cfg == \c\f\g ]]

+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ mkdir -p console
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ extract =~ ^(console|o)$ ]]
+ configs_objects
+ [[ logger =~ ^(platform|p)$ ]]
version 16.9
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
hostname branch-isr-02
+ script_filename=network-extract.shell

+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(console|o)$ ]]
++ alias serialize-object=configs_objects

+ [[ logger =~ ^(search|s)$ ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ [[ logger == \h\e\l\p ]]
+ script_filename=network-extract
+ [[ logger == \d\e\b\u\g ]]

+ [[ logger == \d\r\y\-\r\u\n ]]
object network BlackWidow-Core
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 host 172.16.1.6
+ IFS==
+ export network_extract__console=console/network-extract.console
 description Branch router uplink NAT ]]
+ network_extract__console=console/network-extract.console
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ read -r key value
+ touch console/network-extract.console
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ extract =~ ^(config|c)$ ]]
version 16.9
+ [[ extract =~ ^(export|r)$ ]]
hostname branch-isr-02
+ [[ extract =~ ^(console|o)$ ]]
object-group network Panther-Edge
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ [[ extract =~ ^(export|r)$ ]]
 description Internet-facing proxy systems
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'

+ [[ platform =~ ^(logger|l)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ configs_objects
interface GigabitEthernet0/0/0
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 203.0.113.25
 ip address 172.16.1.6 255.255.255.0
+ [[ extract =~ ^(extract|x)$ ]]
 network-object host 172.16.0.5
+ [[ logger =~ ^(config|c)$ ]]

+ sed '1{/^[[:space:]]*$/d;}'
 description Secure outbound concentrator'
+ local target_platform=fortinet
 description ISP uplink
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]

+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ result=0
object network BlackWidow-Core
+ [[ platform == \h\e\l\p ]]
 host 172.16.1.6
object network Edge-Terminal
+ [[ logger =~ ^(export|r)$ ]]
 host 172.16.0.5
 description Branch router uplink NAT'
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ logs_location=logs
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(search|s)$ ]]
+ mkdir -p logs
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 description Internet firewall handoff'
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ result=0
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
+ [[ -n {
  "vendor": "cisco",
+ [[ logger =~ ^(platform|p)$ ]]
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
  "model": "",
+ [[ logger =~ ^(search|s)$ ]]
++ tr -d '\r'
+ newline
+ [[ logger == \h\e\l\p ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
  "version": "",
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
  "domain": "",
  "hostname": ""
+ local count=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
}
+ (( i = 0 ))
+ IFS==
++ tr -d '\r'
+ for xitem in "${@}"
+ (( i < count ))
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/misc/switch1.conf
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
++ echo -e --export
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
+ output_dir=reports/172.18.1.20/misc
+ [[ ! -d reports/172.18.1.20/misc ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ logger == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ grep -v '^#'
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
++ echo -e --platform=fortinet
+ __NETWORK_EXTRACT__=1
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ read -r key value
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console --export --verbose
+ [[ -n '' ]]
+ readonly __NETWORK_EXTRACT__=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ __NETWORK_EXTRACT__=1
+ for xitem in "${@}"
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ oIFS=' 	
'
+ read -r key value
++ export jobs_location=jobs
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export console_location=console
+ output_dir=reports/192.168.100.100/cisco
+ local parent_dir=reports/10.0.0.1/cisco
++ console_location=console
+ [[ ! -d reports/192.168.100.100/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local parent_dir=reports/172.16.0.5/cisco
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ set -euo pipefail
++ export actions_logfile=console/run.console
+ export LC_ALL=C
+ LC_ALL=C
++ jobs_location=jobs
++ mkdir -p console
+ local parent_dir=reports/10.10.10.10/cisco
++ actions_logfile=console/run.console
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ local count=2
+ network_extract__console=console/network-extract.console
+ (( i = 0 ))
+ (( i < count ))
++ mkdir -p jobs
+ touch console/network-extract.console
+ echo
+ newline 2
++ mktemp -d
++ touch console/run.console
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ print '{
+ [[ logger == \v\e\r\b\o\s\e ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
+ [[ export =~ ^(config|c)$ ]]
 description Internet firewall handoff'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
++ basename reports/10.0.0.1/cisco/perimeter-fw1
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
++ dirname -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ [[ export =~ ^(console|o)$ ]]
object network Edge-Terminal
 host 172.16.0.5
+ [[ export =~ ^(export|r)$ ]]
 description Internet firewall handoff'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ mktemp -d
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
++ echo -e --platform=fortinet
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --export
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ local target_platform=fortinet
+ (( i = 0 ))
+ [[ platform =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ] ]]
+ local SCRIPT_DIR=./scripts
++ basename reports/10.10.10.10/cisco/access-sw1-west
+ local script_filename=cisco-configs.awk
+ [[ 7 -eq 0 ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.xrk4iexmbv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ] ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console --export --verbose
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ oIFS=' 	
+ (( i < count ))
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
'
+ local count=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgi2fyosXb
+ (( i = 0 ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgi2fyosXb
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ [[ -n '' ]]
+ local search_pattern
++ declare -gr __DEVOPS_RESOURCES__=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
++ alias exit-error=exit_error
++ export actions_logfile=console/run.console
+ echo
++ actions_logfile=console/run.console
+ (( i++ ))
++ alias list-file=list_file
++ touch console/run.console
++ alias log-error=log_error
+ echo
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
++ alias log-info=log_info
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ local count=1
++ alias log-warn=log_warn
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ alias print-message=message
+ (( i < count ))
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
++ alias print-newline=newline
++ echo -e --verbose
++ alias pause=pause
++ alias print-line=print
+ local search_pattern
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --verbose
++ alias system-metrics=system_metrics
++ which awk
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
++ nl='\n'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
++ export default_addresses=ips.list
++ default_addresses=ips.list
+ local script_filename=cisco-configs.awk
++ export default_devices=devices.list
++ default_devices=devices.list
++ export default_matrix=matrix.json
++ default_matrix=matrix.json
+ local count=1
++ export cache_location=.cache
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ ((  count == 0  ))
++ cache_location=.cache
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(config|c)$ ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ export logs_location=logs
++ logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
++ mkdir -p logs
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ search =~ ^(export|r)$ ]]
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ false == true ]]
+ newline
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1I9AIyR60s
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ (( i++ ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1I9AIyR60s
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local target_platform=fortinet
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ export =~ ^(console|o)$ ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ export 'nl=\n'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z cisco ]]
+ [[ platform == \h\e\l\p ]]
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ nl='\n'
+ local search_pattern
+ [[ platform == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ configs_objects
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ which awk
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ IFS==
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(logger|l)$ ]]
+ newline 2
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export console_location=console
+ local count=1
++ console_location=console
++ export targets_location=targets
+ local 'prompt_message=Enter configuration file to be parsed: '
++ mkdir -p console
+ [[ export =~ ^(search|s)$ ]]
+ local count=2
++ targets_location=targets
++ [[ -n '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ local count=2
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ export targets_logfile=.cache/targets.jobs
+ echo
+ [[ -z '' ]]
++ targets_logfile=.cache/targets.jobs
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -n {
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ IFS==
++ declare -gr __DEVOPS_RESOURCES__=1
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ echo
+ [[ -z cisco ]]
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
++ dirname reports/10.0.1.2/misc/switch1.conf
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ cut -d/ -f2
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ verbose =~ ^(export|r)$ ]]
+ console_output=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS=' 	
'
+ search_terms=()
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
++ IFS=,
+ [[ logger =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ [[ -z '' ]]
+ [[ logger =~ ^(search|s)$ ]]
+ debug=false
+ [[ logger == \h\e\l\p ]]
++ echo 172.18.1.20
+ [[ logger == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export jobs_location=jobs
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ dry_run=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z true ]]
+ (( i < count ))
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list != *,* ]]
+ [[ -z '' ]]
+ read -r key value
++ export targets_location=targets
+ [[ true == true ]]
+ export console_output=false
++ jobs_location=jobs
+ mapfile -t search_terms
+ console_output=false
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ mkdir -p jobs
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -z '' ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ script_helper=false
+ [[ false == true ]]
+ declare -a execute__netwowrk_extract
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list != *,* ]]
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ search =~ ^(console|o)$ ]]
++ alias list-file=list_file
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ cut -d/ -f2
++ IFS=,
++ targets_location=targets
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
++ export targets_logfile=.cache/targets.jobs
++ echo 192.168.100.100
+ newline
++ targets_logfile=.cache/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ echo
+ (( i++ ))
++ which awk
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ (( i < count ))
+ (( i < count ))
++ alias log-error=log_error
+ search_pattern=10.0.0.1
++ alias log-info=log_info
+ mkdir -p reports/10.0.0.1/cisco/.objects
+ local parent_dir=reports/10.0.1.2/misc
++ alias log-warn=log_warn
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
++ echo -e --verbose
++ alias print-message=message
+ declare -a execute__netwowrk_extract
++ alias print-newline=newline
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ alias pause=pause
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ newline
++ alias print-line=print
+ local count=1
+++ base64
++++ basename ./scripts/devops-resources.shell
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
++ echo -e --export
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(console|o)$ ]]
++ touch console/run.console
+ [[ false == true ]]
+ [[ config =~ ^(export|r)$ ]]
++ tr -d '\r'
++ echo -e --export
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export console_location=console
++ console_location=console
++ mkdir -p console
+ [[ config =~ ^(extract|x)$ ]]
++ which awk
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config == \h\e\l\p ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ true == true ]]
+ search_pattern=172.16.0.5
+++ echo -n devops-resources.shell
+ [[ config == \d\e\b\u\g ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
++ alias relative-configpath=relative_configpath
+ [[ config == \d\r\y\-\r\u\n ]]
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.0.5/misc/fw3.cfg
++ basename reports/10.0.1.2/misc/switch1
++ alias system-metrics=system_metrics
+ [[ export =~ ^(config|c)$ ]]
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ export =~ ^(console|o)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ export =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ local 'indent=            '
+ [[ export =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
++ alias warning-message=warning
+ IFS==
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ newline
+ search_pattern=10.10.10.10
+ read -r key value
+ source ./scripts/devops-helpers.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ [[ -n '' ]]
+ echo
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ (( i++ ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local first_search_entry=192.168.0.100
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export actions_logfile=console/run.console
+ local last_search_entry=192.168.0.100
++ actions_logfile=console/run.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
++ touch console/run.console
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ config =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local first_search_entry=192.168.1.10
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ] ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ local last_search_entry=192.168.1.10
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ [[ config == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-configs--ips.list ]'
+ [[ config == \d\e\b\u\g ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ true == true ]]
+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ for xitem in "${@}"
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ] ]]
+ local 'indent=            '
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ verbose =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ export LC_ALL=C
+++ base64
+ newline
+ newline
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local count=1
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(export|r)$ ]]
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ newline
++ LC_ALL=C
+ configs_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i = 0 ))
+ echo
+ [[ export =~ ^(console|o)$ ]]
++ export 'nl=\n'
  "vendor": "cisco",
+ local count=1
++ nl='\n'
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ export =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++++ basename ./scripts/devops-resources.shell
+ [[ export =~ ^(export|r)$ ]]
+ (( i < count ))
++ export default_addresses=ips.list
+ debug=false
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
  "model": "",
+ [[ verbose =~ ^(platform|p)$ ]]
++ default_addresses=ips.list
+ (( i++ ))
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i++ ))
+ IFS==
+ local export_objects=true
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ local search_pattern
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i++ ))
+ [[ verbose =~ ^(search|s)$ ]]
  "version": "16.9",
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ export =~ ^(extract|x)$ ]]
++ export default_devices=devices.list
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+++ tr -dc a-zA-Z0-9
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
++ echo -e --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z cisco ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -z cisco ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ newline
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
++ alias network-extract--helper=network_extract__helper
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ source ./scripts/configs-objects.shell
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
++ [[ -n '' ]]
+ echo
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
++ readonly __CONFIGS_OBJECTS__=1
+ (( i++ ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ newline
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ export targets_location=targets
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ targets_location=targets
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
++ export targets_logfile=.cache/targets.jobs
+ echo
++ targets_logfile=.cache/targets.jobs
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
++ default_devices=devices.list
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ export default_matrix=matrix.json
+++ echo -n devops-resources.shell
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_platform}" in
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local verbose=true
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ __CONFIGS_OBJECTS__=1
+ [[ extract =~ ^(platform|p)$ ]]
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ extract =~ ^(search|s)$ ]]
                  }
++ export targets_location=targets
+ [[ extract == \h\e\l\p ]]
+ newline
+ [[ export =~ ^(search|s)$ ]]
                  /^[[:space:]]*$/ { next }
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
                  /^{$/ { in_json_header = 1; next }
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ default_matrix=matrix.json
+ local count=1
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
++ alias serialize-object=configs_objects
                    }
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
                  }
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
                  (in_json_header == 1) { next }
+ IFS==
                  /^[^[:space:]]/ {
+ read -r key value
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
++ targets_location=targets
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export cache_location=.cache
++ cache_location=.cache
+ IFS=' 	
++ export logs_location=logs
                    blk = blk divisor " " $0;
++ logs_location=logs
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
++ mkdir -p logs
                  }
                  END {
+ [[ logger == \v\e\r\b\o\s\e ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ for xitem in "${@}"
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
                  }
+ for xitem in "${@}"
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ IFS==
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
+ source ./scripts/devops-helpers.shell
'
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
+ IFS==
+ debug=false
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ readonly __DEVOPS_HELPERS__=1
+ alias parse-cisco=main
+ read -r key value
+ [[ -z '' ]]
++ __DEVOPS_HELPERS__=1
+ dry_run=false
+ [[ false == true ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ case "${target_platform}" in
+ grep -F 10.0.0.1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
++ echo reports/10.0.1.2/misc/switch1.conf
+ script_helper=false
+++ base64
+ [[ false == true ]]
++++ basename ./scripts/devops-resources.shell
++ echo -e --platform=fortinet
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ cut -d/ -f2
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ grep -F 172.16.0.5
+++ base64
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console ]]
+ local 'extracted_configuration={
++++ basename ./scripts/devops-resources.shell
++ echo -e --export
  "domain": "",
  "hostname": "branch-isr-02"
+++ tr -dc a-zA-Z0-9
}
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ dry_run=false
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ export =~ ^(config|c)$ ]]
+ read -r key value

+ (( i < count ))
+ local count=1
version 16.9
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ -z true ]]
+ local SCRIPT_DIR=./scripts
+ [[ export =~ ^(console|o)$ ]]
hostname branch-isr-02
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ read -r key value
+ [[ -z '' ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ export console_output=false
+ console_output=false
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ export =~ ^(export|r)$ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+++ echo -n devops-resources.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ local export_objects=true
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e '                .cache/resources/misc/fw1.cfg'
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
+ [[ export =~ ^(logger|l)$ ]]
 description Dev VLAN
+ [[ -z '' ]]
+ newline

+ script_helper=false
+ [[ export =~ ^(platform|p)$ ]]
object network Panther-Gateway
+ local count=1
+ [[ false == true ]]
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ export =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]]
+ IFS==
+ echo
+ read -r key value
+ search_terms=()
+ (( i++ ))
++ tr -d '\r'
+ declare -a search_terms
+ (( i < count ))
++ IFS=,
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo 172.31.255.254
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ readonly __NETWORK_EXTRACT__=1
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ __NETWORK_EXTRACT__=1
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
+ set -euo pipefail
+ newline
++ printf '%*s' 12 ''
+ local count=1
+ (( i = 0 ))
+ export LC_ALL=C
+ (( i < count ))
+ search_terms=()
+ echo
+ (( i++ ))
+ (( i < count ))
+ LC_ALL=C
+ newline 2
+ [[ config =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ echo
+ local first_search_entry=192.168.0.1
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
+ local 'indent=            '
+ local last_search_entry=192.168.0.1
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a execute__netwowrk_extract
+++ echo -n devops-resources.shell
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ echo
+ print '{
+ (( i++ ))
  "vendor": "cisco",
  "model": "",
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "16.9",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "hostname": "branch-isr-02"
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
+ declare -a search_terms

version 16.9
hostname branch-isr-02
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
++ command -v -- ./scripts/network-extract.shell
 description Dev VLAN
+ (( i++ ))

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ IFS=,
+ [[ -n {
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
  "vendor": "cisco",
++ echo 192.168.2.12
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "",
  "version": "16.9",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "",
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo -e --verbose
++ printf '%*s' 12 ''
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list != *,* ]]
++ grep -v '^#'
  "hostname": "branch-isr-02"
+ local first_search_entry=172.16.1.6
}
++ tr -d '\r'

+ [[ true == true ]]
version 16.9
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ echo
+ echo -en '{
  "vendor": "cisco",
+ local export_objects=true
+ (( i++ ))
  "model": "",
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ config =~ ^(console|o)$ ]]
++ mktemp -d
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ sed '1{/^[[:space:]]*$/d;}'
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ newline
++ echo -e --verbose
++ grep -v '^\s*$'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ (( i < count ))
++ tr -d '\r'
+ echo
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local target_platform=cisco
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
+ IFS==
'
+ read -r key value
+ (( i = 0 ))
+ [[ -z '' ]]
+ mapfile -t search_terms
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ IFS=,
++ echo 192.168.1.10
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^\s*$'
++ which awk
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ echo -e --export
++ grep -v '^#'
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ newline 2
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ local 'indent=            '
+ local count=2
+ [[ export =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ debug=false
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i++ ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i < count ))
+ [[ -z '' ]]
+ declare -a execute__netwowrk_extract
+ [[ verbose =~ ^(export|r)$ ]]
+ echo
+ newline
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=1
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo
+ [[ export =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ IFS=' 	
+ newline
+ dry_run=false
'
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ (( i < count ))
++ which awk
+ echo
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ export console_output=false
+ console_output=false
+ newline
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console ]]
+ (( i = 0 ))
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ -z '' ]]
+ (( i < count ))
+ (( i = 0 ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qSSCemnfou
  "model": "",
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ verbose =~ ^(config|c)$ ]]
+ local first_search_entry=203.0.113.25
+ (( i++ ))
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ local last_search_entry=203.0.113.25
  "version": "",
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
  "domain": "",
+ echo
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -z true ]]
+ script_helper=false
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qSSCemnfou
+ [[ config =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-configs--ips.list ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ false == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ (( i < count ))
  "hostname": ""
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ [[ -z '' ]]
+ newline
+ export 'nl=\n'
}
+ [[ verbose =~ ^(export|r)$ ]]
+ search_terms=()

+ nl='\n'
+ local count=1
object-group network Metropolis-Internal
++ IFS=,
+ source ./scripts/devops-resources.shell
+ declare -a search_terms
++ dirname -- ./scripts/network-extract.shell
 description Core internal LAN for application clusters
+ local first_search_entry=192.0.2.50
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
++ echo 192.168.1.11
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
++ [[ -n '' ]]
 network-object host 10.0.2.3
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list != *,* ]]
 network-object 192.168.2.0 255.255.255.0
++ tr -d '\r'
+ local last_search_entry=192.0.2.50
 network-object host 192.168.2.12
+ [[ verbose =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES__=1
+ mapfile -t search_terms

object network Kent-Server
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
 host 10.0.2.3
+ [[ true == true ]]
 description Internal mail & identity services'
+ newline
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ result=0
+ local count=1
+ [[ -n {
  "vendor": "cisco",
++ alias detect-vendor=detect_vendor
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ] ]]
+ (( i++ ))
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ (( i++ ))
++ alias exit-error=exit_error
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "model": "",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ ((  count == 0  ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
  "version": "",
+ (( i < count ))
  "domain": "",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ export console_output=false
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
  "hostname": ""
+ (( i < count ))
+ (( i < count ))
}
++ alias list-file=list_file
+ [[ export =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export == \v\e\r\b\o\s\e ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ echo
+ [[ config == \d\e\b\u\g ]]

+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ (( i++ ))
++ which awk
+ local verbose=true
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'extracted_configuration={
+ ((  count == 0  ))
++ grep -v '^\s*$'
++ alias log-error=log_error
object-group network Metropolis-Internal
+ console_output=false
 description Core internal LAN for application clusters
+ (( i < count ))
+ IFS=' 	
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ alias log-info=log_info
 network-object host 10.0.2.3
'
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
 network-object host 192.168.2.12
++ alias log-warn=log_warn
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ -z '' ]]

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
object network Kent-Server
+ [[ config == \d\r\y\-\r\u\n ]]
+ debug=false
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ [[ -z cisco ]]
+ [[ -z true ]]
  "model": "",
+ [[ -z '' ]]
+ declare -a execute__netwowrk_extract
 host 10.0.2.3
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
 description Internal mail & identity services ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
++ alias print-message=message
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console ]]
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ local 'extracted_configuration={
  "version": "12.4",
  "vendor": "cisco",
+ dry_run=false
+ [[ export =~ ^(console|o)$ ]]
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ [[ -z true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]
+ [[ -z '' ]]
  "domain": "",
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ export console_output=false
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ console_output=false
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ newline
+ (( i < count ))
  "model": "",
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
  "hostname": "access-sw1-west"
+ local count=1
+ local count=1
+ [[ export =~ ^(export|r)$ ]]
+ [[ -z true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "12.4",
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z '' ]]
+ script_helper=false
++ printf '%*s' 12 ''
++ alias pause=pause
++ grep -v '^#'
+ for xitem in "${@}"
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ alias print-line=print
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ local count=1
+ script_helper=false
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ IFS==
+ [[ false == true ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ alias print-file=print_file
}
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local export_objects=true
  "domain": "",
+ (( i = 0 ))
  "hostname": "access-sw1-west"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
}
++ echo -e --verbose
+ (( i < count ))
+ ((  count == 0  ))
++ alias relative-configpath=relative_configpath

+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]

+ newline
+ search_terms=()
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ (( i < count ))
+ declare -a search_terms
+ [[ export =~ ^(extract|x)$ ]]
+ echo
++ alias system-metrics=system_metrics
version 12.4
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ local SCRIPT_DIR=./scripts
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ (( i++ ))
version 12.4
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list != *,* ]]
+ echo
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
hostname access-sw1-west
+ local count=1

+ [[ export =~ ^(logger|l)$ ]]
+ local 'indent=            '
+ mapfile -t search_terms
+ print '{
+ (( i++ ))
hostname access-sw1-west
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
  "vendor": "cisco",
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ export =~ ^(platform|p)$ ]]
+ local script_filename=fortinet-configs.awk
+ (( i < count ))
interface Vlan100
++ alias validate-address=validate_address
+ (( i < count ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ search_terms=()
 ip address 192.168.0.100 255.255.255.0
+ (( i = 0 ))

+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias warning-message=warning
+ declare -a search_terms
+ newline
+ newline
++ export LC_ALL=C
interface Vlan1
++ tr -d '\r'
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ (( i = 0 ))
 description Guest VLAN Gateway
+ (( i < count ))
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "",
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
  "domain": "",

+ local script_filepath=./scripts/extract/fortinet-configs.awk
object-group network MGMT-ACCESS
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
++ LC_ALL=C
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
  "hostname": ""
+ [[ -z cisco ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list != *,* ]]
 ip address 192.168.0.1 255.255.255.0
 description Management objects
++ which awk
+ [[ true == true ]]
+ (( i = 0 ))
+ local count=1
 network-object host 192.168.0.1
}
++ export 'nl=\n'

object-group network Metropolis-Internal
 network-object host 192.168.0.100
 description Management Interface
 network-object host 10.10.10.10'
+ newline
+ mapfile -t search_terms
++ nl='\n'
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ export default_addresses=ips.list
 description Core internal LAN for application clusters
+ result=0

+ [[ true == true ]]
++ default_addresses=ips.list
+ local count=1
+ echo
+ [[ -n {
+ (( i = 0 ))
+ echo
+ [[ export == \h\e\l\p ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i = 0 ))
+ [[ export == \d\e\b\u\g ]]
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
object-group network MGMT-ACCESS
++ export default_devices=devices.list
++ grep -v '^\s*$'
  "vendor": "cisco",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i++ ))
++ default_devices=devices.list
+ echo
+ newline
+ (( i < count ))
 network-object host 10.0.2.3
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "model": "",
 network-object 192.168.2.0 255.255.255.0
  "version": "12.4",
+ (( i++ ))
 network-object host 192.168.2.12
  "domain": "",
+ (( i < count ))

++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
  "hostname": "access-sw1-west"
++ export default_matrix=matrix.json
+ echo
object network Kent-Server
}

++ default_matrix=matrix.json
 host 10.0.2.3
++ export cache_location=.cache
 description Internal mail & identity services'
+ [[ false == true ]]
+ newline
+ local awk_bin=/usr/bin/awk
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
version 12.4
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ cache_location=.cache
++ echo -e --verbose
hostname access-sw1-west
+ [[ -n {
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",

++ export logs_location=logs
interface Vlan100
  "hostname": ""
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ logs_location=logs
 ip address 192.168.0.100 255.255.255.0
}
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local count=1
+ local count=1
+ (( i = 0 ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
++ mkdir -p logs
+ [[ export == \v\e\r\b\o\s\e ]]
 description Management objects
+ (( i < count ))

 description Guest VLAN Gateway
+ for xitem in "${@}"
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
object-group network Metropolis-Internal

+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
object-group network MGMT-ACCESS
+ (( i++ ))
+ IFS==
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
 description Core internal LAN for application clusters
++ grep -v '^#'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
++ tr -d '\r'
+ echo
+ (( i++ ))
+ (( i < count ))
+ configs_objects
+ (( i = 0 ))
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ echo
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ local first_search_entry=10.0.2.3
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
++ which awk
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z cisco ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
 network-object host 192.168.0.100
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
 network-object host 10.10.10.10'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ result=0
+ [[ logger =~ ^(export|r)$ ]]
+ local last_search_entry=10.0.2.3
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ newline
+ print '{
  "vendor": "cisco",
  "model": "",
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
  "version": "12.4",
+ (( i = 0 ))
  "domain": "",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ (( i < count ))
  "hostname": "access-sw1-west"
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ newline 2
}
+ echo
+ (( i < count ))

version 12.4
hostname access-sw1-west

++ grep -v '^#'
interface Vlan100
+ [[ -n {
 ip address 192.168.0.100 255.255.255.0
+ local count=2
  "vendor": "cisco",
+ (( i = 0 ))
 description Guest VLAN Gateway
  "model": "",

object-group network MGMT-ACCESS
+ (( i < count ))
 description Management objects
+ echo
 network-object host 192.168.0.1
+ [[ true == true ]]
 network-object host 192.168.0.100
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10'
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ echo
 description Guest VLAN Gateway

+ (( i++ ))
object-group network MGMT-ACCESS
++ printf '%*s' 12 ''
+ (( i < count ))
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
  "vendor": "cisco",
+ local count=1
+ [[ true == true ]]
++ tr -d '\r'
  "model": "",
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ] ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
}

version 12.4
hostname access-sw1-west

+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
 description Guest VLAN Gateway
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ local count=1
object-group network MGMT-ACCESS
+ newline
+ (( i = 0 ))
+ local first_search_entry=10.0.0.1
+ newline
  "version": "12.4",
 description Management objects
  "domain": "",
+ local count=1
+ (( i++ ))
 network-object host 192.168.0.1
+ local last_search_entry=10.0.0.1
 network-object host 192.168.0.100
+ local count=1
 network-object host 10.10.10.10'
+ (( i = 0 ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
++ export jobs_location=jobs
++ jobs_location=jobs
++ mkdir -p jobs
++ echo -e --verbose
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^\s*$'
+ local 'indent=            '
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ] ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-configs--ips.list ]'
+ echo
+ ((  count == 0  ))
+ echo
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i < count ))
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ verbose =~ ^(console|o)$ ]]
  "hostname": "access-sw1-west"
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i < count ))
+ (( i = 0 ))
+ newline
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
+ (( i < count ))
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

+ [[ true == true ]]
version 12.2
hostname campus-sw-access01

+ (( i < count ))
object-group network Floor-Networks
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ IFS==
+ (( i = 0 ))
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ -z cisco ]]
+ read -r key value
++ grep -v '^#'
+ [[ true == true ]]
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ extract =~ ^(export|r)$ ]]
}
+ echo
+ ((  count == 0  ))
+ local parent_dir=reports/10.0.2.3/cisco
 description End-user and service devices
+ (( i++ ))
+ (( i++ ))

+ local count=1
version 12.4
++ export jobs_location=jobs
+ (( i < count ))
 network-object host 192.168.0.1
+ (( i = 0 ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
 network-object host 192.168.0.100
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ echo
hostname access-sw1-west
++ printf '%*s' 12 ''
 network-object host 10.10.10.10'
+ (( i++ ))
+ local first_search_entry=198.51.100.75
+ (( i < count ))
+ echo
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ false == true ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local last_search_entry=198.51.100.75
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ result=0
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ [[ -n {
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
interface Vlan1
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
  "model": "",
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ] ]]
++ IFS=,
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ local 'indent=            '
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
++ echo 172.16.1.6
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ newline 2
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ extract =~ ^(logger|l)$ ]]
 ip address 192.168.0.1 255.255.255.0
+ newline
  "version": "12.2",
+ local count=2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Management Interface
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
  "domain": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
++ basename reports/10.0.2.3/cisco/branch-isr-02
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo
  "hostname": "campus-sw-access01"
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i++ ))

+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')

object-group network MGMT-ACCESS
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
 description Management objects
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
 network-object host 192.168.0.1
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ message '                .cache/resources/misc/switch1.conf'
++ jobs_location=jobs
+ echo
+ (( i < count ))
+ (( i < count ))
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
version 12.2
 network-object host 192.168.0.100
+ (( i++ ))
 network-object host 10.10.10.10 ]]
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ (( i++ ))
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
hostname campus-sw-access01
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ newline
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ configs_objects
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i < count ))
+ newline

+ local count=1
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
object-group network Floor-Networks
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ local 'message=                .cache/resources/misc/switch1.conf'
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ export console_location=console
 description End-user and service devices
++ console_location=console
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
++ mkdir -p console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
 network-object host 192.168.0.1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local verbose=true
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ newline
+ [[ -z cisco ]]
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ true == true ]]
+ (( i < count ))
 network-object host 192.168.0.100
+ echo
 network-object host 10.10.10.10 ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ local first_search_entry=192.168.1.10
+ IFS==
+ IFS=' 	
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ echo
+ newline
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ local count=1
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ local count=1
+ (( i++ ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ (( i = 0 ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ echo -e --export
++ mkdir -p jobs
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'extracted_configuration={
+ newline
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local last_search_entry=192.168.1.10
+ echo
+ [[ -z '' ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ (( i < count ))
+ local count=1
++ which awk
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
  "vendor": "fortinet",
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
+ [[ verbose == \d\e\b\u\g ]]
+ [[ false == true ]]
+ (( i++ ))
+ debug=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
  "model": "FortiGate-60F",
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
hostname access-sw1-west
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ dry_run=false
  "version": "v7.2.5.F",
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ echo
+ [[ -z true ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'

+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ newline
+ (( i < count ))
interface Vlan1
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
  "domain": "",
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
 ip address 192.168.0.1 255.255.255.0
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
 description Management Interface
+ local search_pattern
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ export console_output=false

+ console_output=false
+ (( i < count ))
object-group network MGMT-ACCESS
 description Management objects
+ [[ -z true ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
 network-object host 192.168.0.1
+ local verbose=true
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ print '{
  "vendor": "cisco",
+ [[ -n {
  "model": "",
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ configs_objects
  "version": "12.4",
  "domain": "",
  "domain": "",
  "hostname": "campus-sw-access01"
  "hostname": "access-sw1-west"
}

}

version 12.4
hostname access-sw1-west
version 12.2

hostname campus-sw-access01
interface Vlan1
 ip address 192.168.0.1 255.255.255.0

 description Management Interface
object-group network Floor-Networks
 description End-user and service devices

object-group network MGMT-ACCESS
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ [[ -n {
  "vendor": "cisco",
  "version": "12.4",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
  "domain": "",
  "hostname": "access-sw1-west"
  "model": "",
}
  "version": "12.2",

  "domain": "",
version 12.4
  "hostname": "campus-sw-access01"
hostname access-sw1-west
}


interface Vlan1
version 12.2
 ip address 192.168.0.1 255.255.255.0
hostname campus-sw-access01
 description Management Interface


object-group network Floor-Networks
object-group network MGMT-ACCESS
 description End-user and service devices
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ] ]]
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
  "hostname": "fg-branch-vpn-01"
+ echo
 network-object host 192.168.0.100
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
 network-object host 10.10.10.10'
+ echo -en '{
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
  "vendor": "cisco",
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
  "model": "",
+ (( i++ ))
  "version": "12.2",
  "domain": "",
+ local count=1
  "hostname": "campus-sw-access01"
+ (( i = 0 ))
+ (( i < count ))
}
+ echo

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --platform=fortinet
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ [[ -z '' ]]
+ IFS=' 	
+ script_helper=false
'
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=reports/192.0.2.50/cisco
+ [[ -z '' ]]
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ debug=false
++ export actions_logfile=console/run.console
++ actions_logfile=console/run.console
++ touch console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
}

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
#hostname="fg-branch-vpn-01"
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ (( i < count ))
#model="FortiGate-60F"
+ sed '1{/^[[:space:]]*$/d;}'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'extracted_configuration={
+ local count=1
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'

  "vendor": "cisco",
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local awk_bin=/usr/bin/awk
+ [[ -z '' ]]
+ ((  count == 0  ))
+ dry_run=false
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
config firewall address
+ [[ false == true ]]
  "model": "ASA",
+ [[ true == true ]]
+ local parent_dir=reports/172.18.1.20/cisco
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
  "version": "9.12(4)",
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -z true ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "domain": "global.dmz.example.net",
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ conf == \c\o\n\f ]]
+ [[ conf == \c\o\n\f ]]
 edit "IronMan-HQ"
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
  "hostname": "dmz-fw2-backup"
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
}
+ [[ export =~ ^(config|c)$ ]]

ASA Version 9.12(4)
  set subnet 10.0.0.1 255.255.255.255
+ [[ export =~ ^(console|o)$ ]]
  set comment "Main node at Stark Tower"
+ newline
+ [[ export =~ ^(export|r)$ ]]
+ [[ cfg == \c\f\g ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local export_objects=true
++ cut -d/ -f2
hostname dmz-fw2-backup
 next
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ export console_output=false
+ [[ export =~ ^(extract|x)$ ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local count=1
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
domain-name global.dmz.example.net
end
+ local count=1
+ console_output=false

++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ newline
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ newline
config firewall address
+ (( i = 0 ))

+ [[ export =~ ^(logger|l)$ ]]
 edit "IronMan-HQ"
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z true ]]
+ echo
+ local count=1
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
object-group network Watchtower-DMZ
  set subnet 10.0.0.1 255.255.255.255
 description Global secure relay
+ (( i < count ))
 network-object host 192.0.2.50'
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ configs_objects
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ result=0
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
++ dirname reports/10.0.0.1/misc/switch3.conf
  set comment "Main node at Stark Tower"
+ echo
  "model": "ASA",
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ echo
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ (( i = 0 ))
+ [[ export == \h\e\l\p ]]
 next
end'
+ [[ -z '' ]]
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local parent_dir=reports/10.0.2.3/misc
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ result=0
  "version": "9.12(4)",
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ (( i++ ))
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ script_helper=false
+ configs_objects
+ newline 2
+ (( i < count ))
  "domain": "global.dmz.example.net",
+ [[ -n {
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
++ tr -d '\r'
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ dirname reports/172.16.1.6/misc/switch3.conf
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ dirname -- ./scripts/network-extract.shell
++ grep -v '^\s*$'
  "hostname": "dmz-fw2-backup"
}
  "vendor": "fortinet",
  "model": "FortiGate-60F",

  "version": "v7.2.5.F",
ASA Version 9.12(4)
+ local count=2
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ output_dir=reports/192.168.0.1/cisco
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ local 'indent=            '
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ (( i < count ))
+ (( i++ ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ newline 2
+ [[ platform =~ ^(extract|x)$ ]]
++ basename reports/10.0.2.3/misc/fw1
hostname dmz-fw2-backup
}
+ [[ true == true ]]
domain-name global.dmz.example.net

+ [[ platform =~ ^(logger|l)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=.cache/targets.jobs
++ targets_logfile=.cache/targets.jobs
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ grep -v '^#'
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ search_pattern=10.0.2.3
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ (( i < count ))

+ echo
object-group network Watchtower-DMZ
+ local 'prompt_message=Enter configuration file to be parsed: '
 description Global secure relay
+ [[ -z .cache/resources/misc/fw1.cfg ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -z cisco ]]
 network-object host 192.0.2.50 ]]
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ (( i < count ))
+ output_dir=reports/10.0.0.1/misc
+ [[ ! -d reports/10.0.0.1/misc ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
  set comment "Main node at Stark Tower"
+ newline
 next
+ [[ true == true ]]
+ local count=1
+ local count=2
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ local script_filename=cisco-configs.awk
+ local 'extracted_configuration={
+ [[ platform == \h\e\l\p ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform == \d\e\b\u\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ result=0
+ local search_pattern
+ [[ -n {
  "vendor": "cisco",
+ output_dir=reports/172.16.1.6/misc
  "model": "",
++ tr -d '\r'
+ [[ ! -d reports/172.16.1.6/misc ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
end

+ local parent_dir=reports/192.168.0.100/cisco
+ (( i = 0 ))
++ command -v -- ./scripts/network-extract.shell
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
config firewall address
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
  "vendor": "cisco",
+ echo
+ local search_pattern
+ [[ platform == \v\e\r\b\o\s\e ]]
  "version": "",
+ (( i < count ))
+ local parent_dir=reports/10.0.1.2/fortinet
 edit "IronMan-HQ"
+ echo
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ output_dir=reports/203.0.113.25/cisco
  "hostname": ""
}
  set subnet 10.0.0.1 255.255.255.255
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "model": "",
+ (( i++ ))
+ for xitem in "${@}"

+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ print '{
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ IFS==
  "version": "16.9",
  "vendor": "cisco",
+ read -r key value
  "model": "ASA",
interface Vlan1
+ echo
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
 ip address 172.31.255.254 255.255.255.0 ]]
  "version": "9.12(4)",
+ (( i < count ))
  "domain": "global.dmz.example.net",
  set comment "Main node at Stark Tower"
  "hostname": "dmz-fw2-backup"
++ command -v -- ./scripts/network-extract.shell
}
+ output_dir=reports/198.51.100.75/cisco

++ grep -v '^\s*$'
ASA Version 9.12(4)
+ local first_search_entry=10.0.0.1
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+++ base64
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local last_search_entry=10.0.0.1
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++++ basename ./scripts/devops-resources.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
++ which awk
 network-object host 192.0.2.50'
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ echo -e --verbose
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
++ grep -v '^#'
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ [[ true == true ]]
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "domain": "",
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
 next
end ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ echo reports/10.0.2.3/misc/fw1.cfg
+++ echo -n devops-resources.shell
++ cut -d/ -f2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ local search_pattern
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ source ./scripts/devops-helpers.shell
                  }
  "hostname": "branch-isr-02"
                  /^[[:space:]]*$/ { next }
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ] ]]
                  /^{$/ { in_json_header = 1; next }
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
++ [[ -n '' ]]
+ (( i++ ))
                  /^}$/ {
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
                    if (in_json_header == 1) {
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-configs--ips.list ]'
                      in_json_header = 0;
                      next;
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ readonly __DEVOPS_HELPERS__=1
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
                    blk = blk divisor " " $0;
++ __DEVOPS_HELPERS__=1
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ [[ -n {
}

  "vendor": "cisco",
  "model": "",
++ [[ 5 -lt 4 ]]
#hostname="fg-branch-vpn-01"
  "version": "",
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
  "domain": "",
#model="FortiGate-60F"
  "hostname": ""
#config-version=FGT_60F-v7.2.5.F-build1517-230421

}
config firewall address

interface Vlan1
 edit "IronMan-HQ"
 ip address 172.31.255.254 255.255.255.0 ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

+ echo -en '{
  "vendor": "cisco",
config firewall address
  "model": "",
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
++ dirname -- ./scripts/network-extract.shell
  "version": "",
+ grep -F 10.0.2.3
}
  "domain": "",
  "hostname": ""
  set comment "Main node at Stark Tower"

 next
}
end'
++ IFS=,
++ alias parse-listings--helper=parse_listings__helper
+ local 'extracted_configuration={
+ local 'extracted_configuration={

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ echo 192.0.2.50
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
++ alias network-configs--helper=network_configs__helper
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ which awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ sed '/^[[:space:]]*$/d'
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ search_pattern=10.0.2.3
+ declare -a execute__netwowrk_extract
++ alias network-extract--helper=network_extract__helper
+ mkdir -p reports/10.0.2.3/misc/.objects
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/configs-objects.shell
++ cut -d/ -f2
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ cut -d/ -f2
++ readonly __CONFIGS_OBJECTS__=1
++ __CONFIGS_OBJECTS__=1
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local count=1
+ local SCRIPT_DIR=./scripts
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ ((  count == 0  ))
version 16.9
+ local script_filename=cisco-configs.awk
  "vendor": "cisco",
hostname branch-isr-02
  "vendor": "fortinet",

++ alias serialize-object=configs_objects
+ [[ verbose =~ ^(config|c)$ ]]
interface GigabitEthernet0/0/1
+ local script_filepath=./scripts/extract/cisco-configs.awk
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
object-group network Hydra-Edge
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ which awk
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ alias parse-cisco=main
+ (( i++ ))
+ (( i < count ))
+ local first_search_entry=192.168.0.1
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local last_search_entry=192.168.0.1
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ -z x ]]
+ [[ true == true ]]
+ newline
+ export logs_location=logs
+ local count=1
+ logs_location=logs
+ (( i = 0 ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
  "model": "",
+ (( i < count ))
+ mkdir -p logs
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ local search_pattern
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ result=0
+ [[ -n {
  "vendor": "cisco",
+ [[ 0 -ne 0 ]]
++ dirname -- ./scripts/network-extract.shell
  "model": "",
+ [[ true == true ]]
  "version": "16.9",
+ sed '1{/^[[:space:]]*$/d;}'
++ which awk
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ (( i++ ))
  "version": "16.9",
+ (( i < count ))
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ echo
 network-object host 192.168.1.11'
+ (( i++ ))
+ result=0
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
+ [[ -n {
  "vendor": "cisco",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ] ]]
  "model": "",
}
+ search_pattern=192.168.0.100
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-configs--ips.list ]'
++ IFS=,
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ local count=1
++ echo 10.0.0.1
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
  "domain": "",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute__netwowrk_extract
+ [[ logger =~ ^(export|r)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=2
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ debug=false
+ [[ -z '' ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ dry_run=false
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
++ which awk
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ cat -n
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ local 'indent=            '
+ script_filename=network-extract.shell
                  }
+ [[ true == true ]]
                  END {
+ script_filename=network-extract
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ search_pattern=172.18.1.20
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ newline
  "version": "16.9",
+ touch console/network-extract.console
+ local count=1

#hostname="fg-branch-vpn-01"
  "domain": "",
+ ((  count == 0  ))
+ (( i = 0 ))
#model="FortiGate-60F"
+ (( i < count ))
+ echo
+ (( i++ ))
  "hostname": "branch-isr-02"
}
+ (( i < count ))

+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ local SCRIPT_DIR=./scripts
++ cut -d/ -f2
+ local script_filename=cisco-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ newline
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ IFS=,
++ echo 198.51.100.75
+ [[ logger == \d\r\y\-\r\u\n ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ grep -F 10.0.2.3
+ declare -a execute__netwowrk_extract
+ [[ -z true ]]
+ IFS==
+ newline
+ local SCRIPT_DIR=./scripts
+ newline 2
+ local count=1
+ local script_filename=cisco-configs.awk
  "hostname": "branch-isr-02"
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
}
+ local script_filepath=./scripts/extract/cisco-configs.awk
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
+ result=0
 ip address 192.168.2.12 255.255.255.0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ return 0
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
+ (( i = 0 ))
                    blk = "";
+ echo
                  }
                  /^[[:space:]]*$/ { next }
+ [[ true == true ]]
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
+ (( i < count ))
+ read -r key value
                  /^}$/ {
+ [[ -z '' ]]
                    if (in_json_header == 1) {
++ which awk
                      in_json_header = 0;
                      next;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ local count=2
                    }
                  }
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
 description Workstation LAN
                  (in_json_header == 1) { next }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console ]]

+ case "${target_file}" in
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
                    blk = $0;
                    next;
+ echo
                  }
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
+ (( i < count ))
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ 7 -eq 0 ]]
++ printf '%*s' 12 ''
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.88qewmnopy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console --export --verbose
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

+ oIFS=' 	
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
'
+ local 'indent=            '
+ (( i++ ))
#hostname="fg-branch-vpn-01"
+ for xitem in "${@}"
+ (( i < count ))
#model="FortiGate-60F"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ newline
+ local SCRIPT_DIR=./scripts
+ [[ false == true ]]
+ local count=1
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ newline
+ (( i < count ))
version 16.9

+ search_pattern=10.0.1.2
+ export console_output=false
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ echo
+ [[ true == true ]]
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ echo
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
config firewall address
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ grep -F 192.168.0.100
++ which awk
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
hostname branch-isr-02
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'

+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
object-group network Hydra-Edge
 description Remote site uplink
object-group network Lantern-DMZ
 description Protected but public-facing zone
+ message '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 192.168.2.12
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ console_output=false
 network-object host 172.18.1.20
+ (( i++ ))
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ newline
++ which awk
+ message '                .cache/resources/misc/switch3.conf'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
 edit "Panther-Vault"
+ [[ -z fortinet ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ echo -e '                .cache/resources/misc/switch3.conf'
+ result=0
+ newline
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ local count=1
 network-object host 198.51.100.75 ]]
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 192.168.1.11 ]]
+ [[ 0 -ne 0 ]]
+ [[ -z true ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ newline
+ local count=1
++ echo -e --export
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ [[ true == true ]]
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
 description Public access layer
 network-object host 192.0.2.50
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console ]]
  set subnet 192.168.1.10 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
  set comment "Wakandan data store"
+ local count=1
 network-object host 203.0.113.25
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console ]]
 network-object 192.168.2.0 255.255.255.0'
+ case "${target_file}" in
+ [[ true == true ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--branch-isr-02.cfg.console
+ configs_objects
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
object-group network Avengers-DMZ
 description Public access layer
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
 network-object 192.168.2.0 255.255.255.0 ]]
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-200F",
+ echo
  "version": "",
+ (( i++ ))
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ newline 2
+ (( i < count ))
  "domain": "",
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ case "${target_file}" in
 next
+ cat reports/10.0.2.3/misc/.objects/fw1.list
end ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ printf '%*s' 12 ''
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i++ ))
+ print '{
+ (( i < count ))
  "vendor": "cisco",
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ [[ -z '' ]]
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
+ newline
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
+ local count=1
 ip address 192.168.2.12 255.255.255.0
+ (( i = 0 ))
+ cat -n
 description Workstation LAN
+ (( i < count ))

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
+ echo
 network-object host 198.51.100.75'
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "edge.dc.example.com",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "hostname": "perimeter-fw1"
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'

ASA Version 9.14(3)
  "hostname": "fg-campus-core"
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
hostname perimeter-fw1
+ (( i < count ))
domain-name edge.dc.example.com
+ newline
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'

+ local count=1
object-group network Avengers-DMZ
+ (( i = 0 ))
 description Public access layer
 network-object host 192.0.2.50
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
 network-object host 203.0.113.25
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ newline
 network-object 192.168.2.0 255.255.255.0'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ search =~ ^(console|o)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n {
  "vendor": "cisco",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
  "model": "ASA",
+ [[ search =~ ^(export|r)$ ]]
  "version": "9.14(3)",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ [[ search =~ ^(extract|x)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
  "domain": "edge.dc.example.com",
+ case "${target_file}" in
  "hostname": "perimeter-fw1"
}

+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ [[ search =~ ^(logger|l)$ ]]
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ echo -en '{
++ which awk
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(search|s)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search == \h\e\l\p ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ search == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=1
+ cat -n
+ for xitem in "${@}"
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ echo
+ local count=1
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
}
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ echo
+ result=0
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ exit 0
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6FZjhO8dkI ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6FZjhO8dkI
+ local count=2
+ (( i = 0 ))
+ local SCRIPT_DIR=./scripts
+ print '{
  "vendor": "cisco",
+ local script_filename=cisco-configs.awk
  "model": "",
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
  "version": "16.9",
++ IFS=,
+ (( i = 0 ))
  "domain": "",
+ print '{
  "hostname": "branch-isr-02"
}
++ echo 192.168.0.1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
  "vendor": "fortinet",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

  "domain": "",
version 16.9
  "hostname": "fg-branch-vpn-01"
hostname branch-isr-02

}
object-group network Lantern-DMZ

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local 'extracted_configuration={

 description Protected but public-facing zone
  "vendor": "cisco",
config firewall address
 network-object host 172.18.1.20
  "model": "",
++ IFS=,
 edit "Panther-Vault"
 network-object host 192.168.1.11'
+ newline
  set subnet 192.168.1.10 255.255.255.255
++ echo 172.16.1.6
  set comment "Wakandan data store"
 next
end'
+ local count=1
  "version": "",
+ (( i = 0 ))
+ [[ export =~ ^(export|r)$ ]]
+ [[ -n {

  "vendor": "cisco",
+ (( i < count ))
  "domain": "",
+ (( i < count ))
  "model": "",
+ [[ -n {
  "vendor": "fortinet",
#hostname="fg-campus-core"
  "hostname": ""
+ (( i++ ))
  "model": "FortiGate-60F",
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
  "version": "v7.2.5.F",
+ echo
+ configs_objects
  "version": "16.9",
#model="FortiGate-200F"
  "domain": "",
+ echo
+ (( i++ ))
  "domain": "",
+ (( i < count ))
+ (( i < count ))
}
  "hostname": "branch-isr-02"
  "hostname": "fg-branch-vpn-01"
+ return 0
}
}
+ search_terms=()

#hostname="fg-branch-vpn-01"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg


version 16.9
interface Vlan1
#model="FortiGate-60F"
+ [[ true == true ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
hostname branch-isr-02

 ip address 10.0.0.1 255.255.255.0


object-group network Spider-Net
config firewall address
object-group network Lantern-DMZ
 edit "Panther-Vault"
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
 description Web access switches
+ echo
 description Protected but public-facing zone
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
 network-object host 10.0.0.1
+ (( i < count ))
+ output_dir=reports/192.168.1.10/misc
 network-object 192.168.12.0 255.255.255.0'
 network-object host 172.18.1.20
+ local export_objects=true
 network-object host 192.168.1.11 ]]
  set subnet 192.168.1.10 255.255.255.255
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
  set comment "Wakandan data store"

+ (( i++ ))
+ result=0
+ echo -en '{
 next
  "vendor": "cisco",
  "model": "",
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console ]]
  "version": "16.9",
end ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ -n {
+ case "${target_platform}" in
+ declare -a execute__netwowrk_extract
  "vendor": "cisco",
+ echo -en '{
  "model": "",
  "vendor": "fortinet",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
+ declare -a search_terms
  "version": "",
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console ]]

  "model": "FortiGate-60F",
  "domain": "",
version 16.9
+ declare -a execute__netwowrk_extract
  "version": "v7.2.5.F",
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
config firewall address
  "hostname": ""
+ case "${target_file}" in
}
+ [[ export =~ ^(extract|x)$ ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
interface Vlan1
                  BEGIN {
+ [[ ! -d reports/192.168.1.10/misc ]]
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
hostname branch-isr-02
++ echo -e --config=.cache/resources/misc/fw3.cfg
 edit "Hawkeye-Nest"
 ip address 10.0.0.1 255.255.255.0
+ (( i++ ))
+ newline 2
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
  set subnet 172.16.1.6 255.255.255.255
                    in_json_header = 0;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
                    blk = "";

  "domain": "",
                  }
+ [[ export =~ ^(logger|l)$ ]]

                  /^[[:space:]]*$/ { next }
+ [[ export =~ ^(platform|p)$ ]]
object-group network Spider-Net
  "hostname": "fg-branch-vpn-01"
+ [[ export =~ ^(search|s)$ ]]
object-group network Lantern-DMZ
}
+ [[ export == \h\e\l\p ]]
                  /^{$/ { in_json_header = 1; next }
+ local count=2
                  /^}$/ {
+ newline
                    if (in_json_header == 1) {
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
 description Web access switches

 description Protected but public-facing zone
+ local count=1
 network-object host 10.0.0.1
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.12.0 255.255.255.0 ]]
#hostname="fg-branch-vpn-01"
++ which awk
+ (( i = 0 ))
+ [[ export == \d\e\b\u\g ]]
 network-object host 172.18.1.20
+ (( i < count ))
 network-object host 192.168.1.11'
                      in_json_header = 0;
#model="FortiGate-60F"
+ (( i = 0 ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ (( i < count ))
+ echo
+ case "${target_platform}" in
 edit "Panther-Vault"
                      next;
  set subnet 192.168.1.10 255.255.255.255
++ sed -e '1s|^\(-\)\{1,\}||'
  set comment "Wakandan data store"
                    }
 next
+ echo
+ (( i++ ))
end'
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                  }
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ (( i < count ))
                  {
+ echo
+ return 0
                      blk = "";
+ (( i++ ))
                    blk = blk divisor " " $0;
                      in_json_header = 0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    }
                  }

                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
                    # Skip blank lines
  set comment "Remote sniper node"
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
                    /^[[:space:]]*$/ { next }
 next
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list != *,* ]]

+ [[ true == true ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
                    # Skip JSON preamble
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
                    /^{$/            { in_json_header = 1; next }
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console ]]
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console ]]
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]

                    # Start of a new block
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
                    /^config / {
                      if (blk != "") print blk;
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ local count=1
                    /^ edit / {
+ (( i = 0 ))
                      blk = blk divisor " " $0;
+ (( i < count ))
                      next;
+ echo
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

+ (( i++ ))
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ (( i < count ))
end'
                      blk = blk divisor $0;
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ result=0
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
++ which awk
                    }
++ which awk

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ print '{
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
+ mapfile -t search_terms
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
  "hostname": ""
}
+ [[ true == true ]]

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ newline 2
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ IFS=,
++ echo 203.0.113.25
++ command -v -- ./scripts/network-extract.shell
+ grep -F 10.0.1.2
+ local parent_dir=reports/192.168.0.1/cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ [[ -n {
  "hostname": "branch-isr-02"
}

+ [[ true == true ]]
version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ config =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console ]]
+ [[ -n {
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console ]]
  "model": "",
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw1.cfg.console
  "version": "16.9",
  "domain": "",
+ [[ config =~ ^(console|o)$ ]]
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ config =~ ^(export|r)$ ]]
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
hostname branch-isr-02
+ [[ config =~ ^(extract|x)$ ]]

object network Hydra-Link
 host 198.51.100.75
+ [[ config =~ ^(logger|l)$ ]]
 description Branch NAT egress
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]

+ [[ config =~ ^(platform|p)$ ]]
object-group network Hydra-Edge
+ read -r key value
 description Remote site uplink
+ [[ config =~ ^(search|s)$ ]]
+ local count=2
 network-object host 192.168.2.12
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 198.51.100.75 ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ grep -F 172.18.1.20
  "vendor": "fortinet",
+ newline 2
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
+ newline 2
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
  "hostname": "fg-campus-core"
+ local parent_dir=reports/10.10.10.10/cisco
+ sed '/^[[:space:]]*$/d'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
}
+ local count=2
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--access-sw1-west.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
++ basename reports/192.168.0.1/cisco/access-sw1-west
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ local count=2
+ newline

+ echo
+ (( i = 0 ))
version 16.9
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
hostname branch-isr-02
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ local count=1
+ (( i++ ))

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'

+ (( i = 0 ))
object network Hydra-Link
+ (( i = 0 ))
++ dirname -- ./scripts/network-extract.shell
 host 198.51.100.75
+ (( i < count ))
 description Branch NAT egress
+ echo

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ (( i++ ))
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
+ (( i < count ))
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ sed '/^[[:space:]]*$/d'
+ sed '1{/^[[:space:]]*$/d;}'
++ basename reports/10.10.10.10/cisco/campus-sw-access01
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ [[ false == true ]]
++ tr -d '\r'
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ newline 2
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ (( i < count ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
#hostname="fg-campus-core"
+ echo
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ configs_objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ echo -e --verbose
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ newline
+ result=0
+ local count=1
+ exit 0
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kxvHPAqUwQ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kxvHPAqUwQ
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ newline 2
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RvFPSvcHCJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RvFPSvcHCJ
#model="FortiGate-200F"
+ (( i++ ))
++ printf '%*s' 12 ''

+ (( i < count ))
+ local count=1
+ result=0
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ result=0
+ newline
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ local awk_bin=/usr/bin/awk
+ local count=1
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline
+ local SCRIPT_DIR=./scripts
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ newline
+ local search_pattern
+ [[ cfg == \c\f\g ]]
+ local count=1
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
++ IFS=,
+ local count=1
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
config firewall address
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
 edit "Hawkeye-Nest"
++ echo 10.0.2.3
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ [[ 0 -ne 0 ]]
+ local script_filename=cisco-configs.awk
+ echo
+ (( i < count ))
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ local search_pattern
+ (( i < count ))
+ local 'indent=            '
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ conf == \c\o\n\f ]]
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
  set subnet 172.16.1.6 255.255.255.255
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ echo
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i++ ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local parent_dir=reports/172.16.1.6/cisco
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ verbose =~ ^(platform|p)$ ]]
+ output_dir=reports/203.0.113.25/cisco
+ [[ verbose =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ ! -d reports/203.0.113.25/cisco ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
+ source ./scripts/devops-helpers.shell
+ output_dir=reports/198.51.100.75/cisco
+ local count=1
+ [[ export =~ ^(extract|x)$ ]]
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ [[ 5 -lt 4 ]]
+ sed '/^[[:space:]]*$/d'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS__=1
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS__=1
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ export =~ ^(search|s)$ ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ export == \h\e\l\p ]]
+ newline
+ [[ export == \d\e\b\u\g ]]
+ local count=1
++ [[ 5 -lt 4 ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ IFS==
+ (( i < count ))
+ read -r key value
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ echo
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console ]]
+ script_helper=false
+ [[ -z '' ]]
++ alias parse-listings--helper=parse_listings__helper
+ script_helper=false
+ [[ false == true ]]
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]]
+ search_terms=()
+ local 'prompt_message=Enter configuration file to be parsed: '
+ declare -a search_terms
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ sed '/^[[:space:]]*$/d'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]]
+ [[ -z cisco ]]
+ case "${target_platform}" in
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
+ source ./scripts/configs-objects.shell
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
++ [[ -n '' ]]
                  BEGIN {
++ readonly __CONFIGS_OBJECTS__=1
                    in_json_header = 0;
++ alias network-extract--helper=network_extract__helper
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
++ __CONFIGS_OBJECTS__=1
                  /^{$/ { in_json_header = 1; next }
+ newline
                  /^}$/ {
+ source ./scripts/configs-objects.shell
                    if (in_json_header == 1) {
+ local count=1
                      in_json_header = 0;
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
                      next;
                    }
++ [[ -n '' ]]
+ (( i = 0 ))
                  }
                  (in_json_header == 1) { next }
+ (( i < count ))
                  /^[^[:space:]]/ {
+ echo
++ readonly __CONFIGS_OBJECTS__=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
++ alias parse-listings--helper=parse_listings__helper
                    blk = $0;
+ (( i < count ))
                    next;
++ __CONFIGS_OBJECTS__=1
++ command -v -- ./scripts/network-extract.shell
                  }
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ alias serialize-object=configs_objects
                  {
++ basename reports/172.16.1.6/cisco/branch-isr-02
                    blk = blk divisor " " $0;
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
                  }
++ command -v -- ./scripts/network-extract.shell
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias serialize-object=configs_objects
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 10.10.10.10
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ search_pattern=10.0.1.2
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
++ alias network-configs--helper=network_configs__helper
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local first_search_entry=192.168.2.12
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs
++ export console_location=console
++ console_location=console
++ mkdir -p console
++ echo -e --verbose
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ [[ 0 -ne 0 ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
++ tr -d '\r'
  "vendor": "cisco",
+ (( i++ ))
  "model": "",
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
  "version": "",
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local last_search_entry=192.168.2.12
++ dirname -- ./scripts/network-extract.shell
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ mkdir -p reports/10.0.1.2/misc/.objects
+ echo
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ (( i++ ))
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
  "domain": "",
  "hostname": ""
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ script_filename=network-extract.shell
}
+ search_terms=()
+ script_filename=network-extract
+ source ./scripts/configs-objects.shell
  "model": "ASA",
+ declare -a search_terms

+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ platform =~ ^(console|o)$ ]]
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
  "version": "9.12(4)",
object-group network Fortress-Wireless
+ configs_objects
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
++ [[ -n '' ]]
  set comment "Remote sniper node"
  "domain": "global.dmz.example.net",
+ touch console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
  "hostname": "dmz-fw2-backup"
 description Secure wireless access layer
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ platform =~ ^(export|r)$ ]]
+ mapfile -t search_terms
++ grep -v '^\s*$'
+ [[ platform =~ ^(extract|x)$ ]]
++ readonly __CONFIGS_OBJECTS__=1
interface GigabitEthernet0/1
+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
 network-object host 172.18.1.20
++ __CONFIGS_OBJECTS__=1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
+ local search_pattern
 description Inside LAN segment
+ [[ platform =~ ^(logger|l)$ ]]
 network-object host 192.168.1.10'
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ] ]]
+ result=0
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ grep -v '^#'
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list

++ alias serialize-object=configs_objects
object network Titan-WLAN-Host
+ [[ platform =~ ^(platform|p)$ ]]
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filename=cisco-configs.awk
+ result=0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ export actions_logfile=console/run.console
+ script_filename=network-extract.shell
+ local target_platform=fortinet
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ [[ -n {
+ [[ 0 -ne 0 ]]
+ script_filename=network-extract
++ actions_logfile=console/run.console
  "vendor": "cisco",
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ network_extract__console=console/network-extract.console
++ touch console/run.console
+ export network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ network_extract__console=console/network-extract.console
+ touch console/network-extract.console
+ cat -n
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n
+ [[ verbose =~ ^(search|s)$ ]]
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
 host 192.168.100.100
+ (( i = 0 ))
++ dirname reports/172.16.0.5/misc/fw3.cfg
 description Backup inside NAT IP
+ (( i < count ))
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ IFS=' 	
'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ debug=false
+ alias parse-cisco=main
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
  "model": "",
+ dry_run=false
+ [[ -z x ]]
+ export logs_location=logs
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ export console_output=false
+ ((  count == 0  ))
+ logs_location=logs
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ console_output=false
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ output_dir=reports/192.168.0.100/cisco
+ mkdir -p logs
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ cut -d/ -f2
++ which awk
++ which awk
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ local first_search_entry=192.168.1.11
+ [[ cfg == \c\f\g ]]
+ local last_search_entry=192.168.1.11
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-configs--ips.list ]'
+ [[ true == true ]]
+ echo
+ local count=1
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
  "version": "",
+ ((  count == 0  ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ platform == \d\e\b\u\g ]]
object-group network Sector-Wireless
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console ]]
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ case "${target_file}" in
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ [[ 7 -eq 0 ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.88qewmnopy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ output_dir=reports/192.168.1.10/misc
+ local parent_dir=reports/172.16.0.5/misc
+ echo
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
  "domain": "",
+ [[ 7 -eq 0 ]]
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hpvib95j6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ cat -n
+ (( i < count ))
+ search_pattern=172.16.1.6
+ oIFS=' 	
'
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ for xitem in "${@}"
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
+ [[ platform == \d\r\y\-\r\u\n ]]
+ oIFS=' 	
 description Staff WiFi clients
'
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ targets_location=targets
 network-object host 192.168.100.100
  "hostname": ""
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
++ export targets_logfile=.cache/targets.jobs
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ tr -d '\r'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.88qewmnopy/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z fortinet ]]
++ targets_logfile=.cache/targets.jobs
+ [[ true == true ]]
 network-object host 10.10.10.10'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console --export --verbose
}
+ echo
+ for xitem in "${@}"
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ read -r key value
+ result=0
+ newline
+ [[ -n {
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
+ oIFS=' 	
+ (( i < count ))
'
+ echo
+ case "${target_platform}" in
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))

  "model": "ASA",
+ IFS==
+ (( i < count ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
                    }
++ grep -v '^\s*$'
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "version": "9.12(4)",
                    blk = $0;
  "domain": "global.dmz.example.net",
                    next;
  "hostname": "dmz-fw2-backup"
                  }
}
                  {

                    blk = blk divisor " " $0;
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
ASA Version 9.12(4)
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ echo 198.51.100.75
++ IFS=,
++ basename reports/172.16.0.5/misc/fw3
++ echo 203.0.113.25
++ tr -d '\r'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ grep -v '^#'
+ declare -a execute__netwowrk_extract
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ read -r key value
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
++ grep -v '^#'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/10.10.10.10/cisco
+++ base64
+ [[ ! -d reports/10.10.10.10/cisco ]]
++++ basename ./scripts/devops-resources.shell
++ which awk
++ which awk
+ newline
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--perimeter-fw1.cfg.console
+++ tr -dc a-zA-Z0-9
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--perimeter-fw1.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console ]]
 network-object host 192.168.1.10 ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ case "${target_platform}" in
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i < count ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
+ local SCRIPT_PATH=./scripts/network-extract.shell
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+++ echo -n devops-resources.shell
+ [[ search =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ search =~ ^(export|r)$ ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ search =~ ^(search|s)$ ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=1
+ [[ search == \h\e\l\p ]]
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo
+ grep -F 172.16.1.6
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ search =~ ^(export|r)$ ]]
++ export divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ [[ cfg == \c\f\g ]]
++ divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA--
+ local 'prompt_message=Enter configuration file to be parsed: '
interface GigabitEthernet0/1
++ dirname -- ./scripts/network-extract.shell
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ search =~ ^(logger|l)$ ]]
+ local search_pattern
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS__=1
++ __DEVOPS_HELPERS__=1
++ [[ 5 -lt 4 ]]
+ sed '/^[[:space:]]*$/d'
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract.shell
++ alias network-configs--helper=network_configs__helper
++ printf '%*s' 12 ''
++ alias network-extract--helper=network_extract__helper
++ printf '%*s' 12 ''
+ result=0
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ exit 0
+ source ./scripts/configs-objects.shell
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xm2FKLXlSI ]]
+ local 'indent=            '
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xm2FKLXlSI
+ local 'indent=            '
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+ [[ true == true ]]
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __CONFIGS_OBJECTS__=1
+ newline
++ __CONFIGS_OBJECTS__=1
+ script_filename=network-extract
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
++ alias serialize-object=configs_objects
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console ]]
+ result=0
+ (( i < count ))
+ local first_search_entry=10.10.10.10
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local last_search_entry=10.10.10.10
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--access-sw1-west.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MPUXyqpRTd ]]
+ grep -F 10.0.1.2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MPUXyqpRTd
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
 nameif inside
+ alias parse-cisco=main
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local SCRIPT_DIR=./scripts
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local script_filename=cisco-configs.awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z x ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export logs_location=logs
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ export network_extract__console=console/network-extract.console
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z fortinet ]]
 ip address 192.168.100.100 255.255.255.0
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ network_extract__console=console/network-extract.console
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ mkdir -p logs
+ touch console/network-extract.console
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ newline
+ (( i++ ))
 description Inside LAN segment
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ print '{
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
  "vendor": "cisco",
  "model": "",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ (( i = 0 ))
  "version": "",
  "domain": "",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": ""
+ result=0
+ (( i < count ))
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'

object-group network Fortress-Wireless
 description Secure wireless access layer
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 172.18.1.20
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
 network-object host 192.168.1.10'
+ [[ 0 -ne 0 ]]
+ [[ -n {
+ echo
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
  "hostname": ""
+ (( i++ ))
}

object-group network Fortress-Wireless
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ newline
+ echo -en '{
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
++ which awk
++ echo reports/172.16.0.5/misc/fw3.cfg
+ (( i < count ))
+ (( i < count ))
+ output_dir=reports/192.168.1.11/fortinet
+ [[ ! -d reports/192.168.1.11/fortinet ]]
object network Titan-WLAN-Host
 host 192.168.100.100
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
++ cut -d/ -f2
+ local count=1
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ result=0
+ local target_config=.cache/resources/misc/fw1.cfg
+ exit 0
+ [[ config =~ ^(console|o)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iTtuCI3IDJ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iTtuCI3IDJ
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
 description Backup inside NAT IP
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg

+ [[ config =~ ^(logger|l)$ ]]
object-group network Sector-Wireless
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ ((  count == 0  ))
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ search =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ config =~ ^(search|s)$ ]]
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ [[ config == \h\e\l\p ]]
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 description Staff WiFi clients
 network-object host 192.168.100.100
+ IFS==
 network-object host 10.10.10.10 ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=console/network-extract.console
+ network_extract__console=console/network-extract.console
+ newline
+ touch console/network-extract.console
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ cat -n
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ search_pattern=172.16.0.5
++ IFS=,
++ echo 10.10.10.10
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute__netwowrk_extract
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local SCRIPT_DIR=./scripts
+ [[ 7 -eq 0 ]]
+ [[ -z fortinet ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.top2uy8e4m/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ true == true ]]
+ mkdir -p reports/172.16.0.5/misc/.objects
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ local script_filename=cisco-configs.awk
+ IFS==
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local SCRIPT_DIR=./scripts
++ which awk
+ local script_filename=fortinet-configs.awk
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ output_dir=reports/192.168.2.12/fortinet
}
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]

+ newline
+ [[ ! -d reports/192.168.2.12/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
ASA Version 9.14(3)
+ (( i = 0 ))
+ newline
+ for xitem in "${@}"
+ (( i < count ))
+ local 'extracted_configuration={
hostname perimeter-fw1
+ echo
domain-name edge.dc.example.com
  "vendor": "cisco",
+ read -r key value
+ (( i++ ))

  "model": "ASA",
interface GigabitEthernet0/0
  "version": "9.12(4)",
+ (( i < count ))
 nameif outside
+ newline 2
  "domain": "global.dmz.example.net",
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
  "hostname": "dmz-fw2-backup"
}

 security-level 0
ASA Version 9.12(4)
+ IFS==
+ return 0
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 203.0.113.25 255.255.255.0
 ip address 198.51.100.75 255.255.255.0
+ local count=1
 description External Internet-facing Interface
+ (( i = 0 ))
 description Outbound Internet NAT interface'
+ [[ true == true ]]
+ (( i < count ))

+ result=0
+ read -r key value
object network NAT-Edge
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ -n {
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
  "vendor": "cisco",
  "model": "ASA",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
 host 203.0.113.25
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ local count=2
 description Internet-bound IP NAT
+ (( i = 0 ))
+ newline
  "version": "9.12(4)",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console ]]
  "domain": "global.dmz.example.net",
+ print '{

  "vendor": "cisco",
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
+ echo
object-group network Avengers-DMZ
 description Public access layer
  "model": "ASA",
}
+ local count=1
  "version": "9.12(4)",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
 network-object host 192.0.2.50
  "domain": "global.dmz.example.net",
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
 network-object host 203.0.113.25

}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console ]]

 network-object 192.168.2.0 255.255.255.0
ASA Version 9.12(4)
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ case "${target_file}" in
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console

domain-name global.dmz.example.net
object-group network Panther-Edge
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ 7 -eq 0 ]]
 description Internet-facing proxy systems


object network Titan-WLAN-Host
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.hpvib95j6c/network-configs--ips.list =~ ^-*(h|help)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
 host 192.168.100.100
interface GigabitEthernet0/2
 description Backup inside NAT IP

+ result=0
 nameif outside
object-group network Sector-Wireless
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console --export --verbose
 description Staff WiFi clients
+ [[ -n {
  "vendor": "cisco",
++ which awk
+ (( i++ ))
 ip address 198.51.100.75 255.255.255.0
  "model": "ASA",
++ which awk
 network-object host 192.168.100.100
+ echo
+ (( i = 0 ))
 network-object host 10.10.10.10'
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
+ [[ extract =~ ^(config|c)$ ]]
  "version": "9.14(3)",
 description Backup inside NAT IP
 description Outbound Internet NAT interface ]]

object-group network Sector-Wireless
+ [[ extract =~ ^(console|o)$ ]]
+ oIFS=' 	
 description Staff WiFi clients
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": "edge.dc.example.com",
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ local SCRIPT_PATH=./scripts/network-extract.shell
'

+ [[ extract =~ ^(export|r)$ ]]
+ for xitem in "${@}"
  "hostname": "perimeter-fw1"
object network Titan-WLAN-Host
+ IFS==
+ [[ extract =~ ^(extract|x)$ ]]
}
 host 192.168.100.100
+ read -r key value

 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.100.100
+ [[ extract =~ ^(logger|l)$ ]]
 network-object host 10.10.10.10'
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ extract == \h\e\l\p ]]
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ [[ extract == \d\e\b\u\g ]]
 nameif outside
 security-level 0
+ [[ extract == \d\r\y\-\r\u\n ]]
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ local awk_bin=/usr/bin/awk

+ [[ extract == \v\e\r\b\o\s\e ]]
object network NAT-Edge
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
 host 203.0.113.25
+ for xitem in "${@}"
 description Internet-bound IP NAT
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ IFS==
+ (( i < count ))
+ read -r key value

++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ print '{
+ [[ extract =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ [[ extract =~ ^(extract|x)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
}
+ [[ extract =~ ^(logger|l)$ ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ echo
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i++ ))
domain-name global.dmz.example.net
+ [[ extract =~ ^(platform|p)$ ]]

interface GigabitEthernet0/2
+ (( i++ ))
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
++ dirname -- ./scripts/network-extract.shell
 description Outbound Internet NAT interface ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo -en '{
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "cisco",
  "model": "ASA",
+ [[ extract == \h\e\l\p ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ IFS=,

ASA Version 9.12(4)
++ echo -e --export
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ echo 192.168.0.100
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract == \v\e\r\b\o\s\e ]]
++ printf '%*s' 12 ''
+ for xitem in "${@}"
+ IFS==
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
+ read -r key value
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ [[ true == true ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
 nameif outside
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ declare -a execute__netwowrk_extract

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
+ newline

+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
object-group network Panther-Edge
+ [[ true == true ]]
 description Internet-facing proxy systems
+ local count=1
 network-object host 203.0.113.25
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
 network-object host 172.16.0.5'
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -n {
++ echo -e --platform=fortinet
  "vendor": "cisco",
+ [[ cfg == \c\f\g ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline 2
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "ASA",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console ]]
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
  "version": "9.14(3)",
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
}
+ case "${target_file}" in

+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ config =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--branch-isr-02.cfg.console
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
ASA Version 9.14(3)
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'

+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ local count=2
interface GigabitEthernet0/0
++ IFS=,
+ sed '1{/^[[:space:]]*$/d;}'
 nameif outside
 security-level 0
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
++ echo 192.168.1.11

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "version": "9.14(3)",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ config =~ ^(console|o)$ ]]

+ newline
ASA Version 9.14(3)
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ case "${target_platform}" in
++ sed -e '1s|^\(-\)\{1,\}||'
hostname perimeter-fw1
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
domain-name edge.dc.example.com
+ declare -a execute__netwowrk_extract

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface
+ local SCRIPT_DIR=./scripts

+ echo
object network NAT-Edge
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local script_filename=fortinet-configs.awk
 host 203.0.113.25
+ (( i < count ))
 description Internet-bound IP NAT
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))

                  BEGIN {
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                    in_json_header = 0;
object-group network Avengers-DMZ
                    blk = "";
 description Public access layer
+ newline
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
                  }
 network-object host 192.0.2.50
+ local count=1
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
 network-object host 203.0.113.25
                  /^}$/ {
 network-object 192.168.2.0 255.255.255.0
                    if (in_json_header == 1) {

                      in_json_header = 0;
++ which awk
                      next;
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
                  }
                  {
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
                    blk = blk divisor " " $0;
                  }
++ echo -e --platform=cisco
+ case "${target_file}" in
                  END {
+ cat reports/10.0.1.2/misc/.objects/switch1.list
++ echo -e --platform=cisco
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ echo
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ (( i < count ))
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ which awk
+ grep -F 172.16.0.5
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ [[ search =~ ^(logger|l)$ ]]
+ local count=1
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list
++ IFS=,
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo 192.168.1.10
++ which awk
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ newline 2
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ local target_platform=fortinet
+ echo
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ cat -n
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ export =~ ^(export|r)$ ]]
+ exit 0
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EC4h5YFu3B ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EC4h5YFu3B
+ cat -n reports/172.18.1.20/misc/fw1.cfg
+ [[ search =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo
+ for xitem in "${@}"
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ IFS==
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ declare -a execute__netwowrk_extract
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(search|s)$ ]]
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ read -r key value
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ export == \d\e\b\u\g ]]
+ output_dir=reports/192.168.2.12/fortinet
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local awk_bin=/usr/bin/awk
+ for xitem in "${@}"
+ IFS==
+ local target_platform=cisco
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ newline
+ read -r key value
+ local count=1
+ [[ platform =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ printf '%*s' 12 ''
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ echo 192.168.2.12
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ printf '%*s' 12 ''
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ configs_objects
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ declare -a execute__netwowrk_extract
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/switch1.conf
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
hostname dmz-fw2-backup
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
domain-name global.dmz.example.net
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline

+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ local count=1
object network Shield-WiFi-Alias
+ newline
+ result=0
+ (( i = 0 ))
 host 10.10.10.10
+ (( i < count ))
 description Guest NAT
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1

+ echo
+ [[ 0 -ne 0 ]]
+ local 'indent=            '
+ (( i = 0 ))
object-group network Sector-Wireless
+ (( i < count ))
 description Staff WiFi clients
+ echo
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ (( i++ ))
+ result=0
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n {
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
  "vendor": "cisco",
+ [[ platform =~ ^(config|c)$ ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
  "hostname": "dmz-fw2-backup"
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ return 0
}
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg

ASA Version 9.12(4)
+ newline
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ newline
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ newline
 next
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
++ echo -e --verbose
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/misc/fw1.cfg
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
+ echo
++ dirname -- ./scripts/network-extract.shell
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ platform =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ [[ config =~ ^(logger|l)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ config =~ ^(platform|p)$ ]]
+ configs_objects
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print '{
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
  "vendor": "cisco",
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
  "model": "ASA",
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
  "version": "9.12(4)",
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "domain": "global.dmz.example.net",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "dmz-fw2-backup"
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ false == true ]]
+ configs_objects
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

++ dirname reports/10.0.0.1/misc/switch1.conf
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
+ [[ logger =~ ^(console|o)$ ]]
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
++ cut -d/ -f2
  "version": "9.12(4)",
++ cut -d/ -f2
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ [[ logger =~ ^(export|r)$ ]]

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local parent_dir=reports/198.51.100.75/cisco
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ logger =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
++ printf '%*s' 12 ''
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/misc/.objects/fw3.list
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
++ printf '%*s' 12 ''
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ configs_objects
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ local 'indent=            '
+ output_dir=reports/10.10.10.10/fortinet
+ [[ true == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local script_filename=fortinet-configs.awk
+ local count=1
+ local count=1
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ local 'indent=            '
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ local verbose=true
+ (( i++ ))
+ IFS==
+ local 'extracted_configuration={
+ [[ config =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ verbose =~ ^(search|s)$ ]]
+ local parent_dir=reports/203.0.113.25/cisco
+ (( i < count ))
+ read -r key value
+ [[ config == \h\e\l\p ]]
+ cat -n
  "vendor": "fortinet",
++ echo -e --export
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ (( i < count ))
  "model": "FortiGate-200F",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console ]]
  "version": "",
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
  "domain": "",
+ [[ config == \d\e\b\u\g ]]
  "hostname": "fg-campus-core"
'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
}
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console

+ local count=1
+ [[ config == \v\e\r\b\o\s\e ]]
+ output_dir=reports/10.0.0.1/misc
#hostname="fg-campus-core"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
#model="FortiGate-200F"
+ debug=false
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--switch1.conf.console

++ echo -e --export
+ for xitem in "${@}"
+ [[ -z '' ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
config firewall address
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
 edit "Cap-HQ"
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ newline 2
  set subnet 192.168.1.11 255.255.255.255
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
  set comment "Captain America’s secure endpoint"
+ [[ ! -d reports/10.0.0.1/misc ]]
 next
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
end'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ result=0
+ IFS==
+ echo
+ dry_run=false
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ read -r key value
+ [[ -z true ]]
+ [[ -n {
+ local count=2
+ [[ -z '' ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
  "vendor": "fortinet",
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "FortiGate-200F",
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
  "version": "",
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
  "domain": "",
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "hostname": "fg-campus-core"
}
+ echo
+ export console_output=false
+ console_output=false
+ newline

+ [[ -z true ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console ]]
+ local count=1
+ (( i++ ))
+ [[ -z '' ]]
 edit "Cap-HQ"
+ (( i < count ))
  set subnet 192.168.1.11 255.255.255.255
+ (( i = 0 ))
  set comment "Captain America’s secure endpoint"
++ which awk
 next
+ script_helper=false
+ (( i < count ))
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ basename reports/203.0.113.25/cisco/perimeter-fw1
+ local search_pattern
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ false == true ]]
+ echo
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo
+ [[ extract =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.2.12
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=1
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local parent_dir=reports/172.18.1.20/misc
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print '{
  "vendor": "fortinet",
++ echo -e --platform=fortinet
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ local count=1
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i = 0 ))
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ dirname -- ./scripts/network-extract.shell
+ local parent_dir=reports/192.168.100.100/cisco
+ (( i < count ))
  "version": "",
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
++ sed -e '1s|^\(-\)\{1,\}||'
  set comment "Captain America’s secure endpoint"
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ echo
 next
end'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ (( i < count ))
+ newline
+ (( i++ ))
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ return 0
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ export == \d\e\b\u\g ]]
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console ]]
+ [[ export == \v\e\r\b\o\s\e ]]
end ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
+ IFS==
+ [[ export =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.0.1/fortinet
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console ]]
+ result=0
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ false == true ]]
+ exit 0
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ local last_search_entry=192.168.2.12
+ case "${target_file}" in
+ local search_pattern
++ basename reports/172.18.1.20/misc/fw1
+ local 'indent=            '
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ search_pattern=192.168.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
+ [[ export =~ ^(export|r)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRPi9j4lU2 ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uRPi9j4lU2
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
++ tr -d '\r'
++ cut -d/ -f2
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ IFS=,
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
++ echo 192.168.2.12
+ (( i < count ))
++ echo -e --platform=cisco
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^#'
++ echo -e --verbose
+ (( i < count ))
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ newline 2
+ [[ false == true ]]
+ [[ true == true ]]
+ declare -a execute__netwowrk_extract
+ local count=2
+ (( i = 0 ))
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ echo
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ configs_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(config|c)$ ]]
+ search_pattern=198.51.100.75
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
++ cut -d/ -f2
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ local 'extracted_configuration={
+ local 'extracted_configuration={
+ mkdir -p reports/198.51.100.75/cisco/.objects
  "vendor": "cisco",
  "model": "",
+ local search_pattern
+ local script_filename=fortinet-configs.awk
+ [[ extract =~ ^(export|r)$ ]]
  "version": "12.2",
+ [[ extract =~ ^(extract|x)$ ]]
  "vendor": "fortinet",
+ [[ platform =~ ^(console|o)$ ]]
  "domain": "",
  "hostname": "campus-sw-access01"
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
++ echo -e --verbose
  "model": "FortiGate-60F",
}
  "version": "v7.2.5.F",
+ newline
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local count=1

+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
  "hostname": "fg-branch-vpn-01"
+ [[ extract =~ ^(logger|l)$ ]]
version 12.2
+ echo
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local search_pattern
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
}
 network-object host 192.168.0.1
+ IFS==
+ [[ platform =~ ^(extract|x)$ ]]

+ (( i++ ))
 network-object host 192.168.0.100
+ (( i < count ))
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ [[ extract =~ ^(platform|p)$ ]]
#hostname="fg-branch-vpn-01"
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ which awk
+ [[ platform =~ ^(logger|l)$ ]]

+ [[ platform =~ ^(platform|p)$ ]]
config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
 network-object host 10.10.10.10'
  set alias "User LAN"
+ local target_platform=fortinet
+ [[ extract =~ ^(search|s)$ ]]
+ result=0
 next
+ [[ extract == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n {
end
+ [[ platform =~ ^(search|s)$ ]]
  "vendor": "cisco",

  "model": "",
+ [[ extract == \d\r\y\-\r\u\n ]]
config firewall address
  "version": "12.2",
  "domain": "",
+ [[ platform == \h\e\l\p ]]
  "hostname": "campus-sw-access01"
+ [[ extract == \v\e\r\b\o\s\e ]]
}
+ [[ platform == \d\e\b\u\g ]]
 edit "Branch-Gateway"
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]

+ [[ verbose == \d\e\b\u\g ]]
  set subnet 192.168.2.12 255.255.255.255
version 12.2
+ configs_objects
+ IFS==
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
hostname campus-sw-access01
  set comment "Primary LAN gateway"
+ search_pattern=10.10.10.10
 next
+ [[ platform =~ ^(config|c)$ ]]
+ [[ true == true ]]
end'

+ local count=1
+ IFS==
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ result=0
+ read -r key value
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ true == true ]]
+ [[ -n {
  "vendor": "fortinet",
+ local awk_bin=/usr/bin/awk
object-group network Floor-Networks
  "model": "FortiGate-60F",
+ [[ platform =~ ^(console|o)$ ]]
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ platform =~ ^(export|r)$ ]]

config system interface
+ [[ platform =~ ^(extract|x)$ ]]
 edit "internal"
+ [[ platform =~ ^(logger|l)$ ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ [[ platform =~ ^(platform|p)$ ]]
 description End-user and service devices
 network-object host 192.168.0.1
 next
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
 network-object host 192.168.0.100
+ local target_platform=cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ [[ platform == \h\e\l\p ]]
  set comment "Primary LAN gateway"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z2Hqrzdnpe/network-extract--fw3.cfg.console
 network-object host 10.10.10.10 ]]
+ [[ platform == \d\e\b\u\g ]]
 next
end ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local first_search_entry=10.10.10.10
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ which awk
+ IFS==
+ read -r key value
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ local 'extracted_configuration={
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
  "vendor": "cisco",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
++ echo reports/172.18.1.20/misc/fw1.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
  "model": "",
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
  "version": "",
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
  "domain": "",
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
  "hostname": ""
+ search_pattern=203.0.113.25
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ newline
+ local count=1
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ (( i = 0 ))
}
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'

+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
 network-object host 10.0.2.3
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
 network-object 10.0.0.0 255.255.255.0'
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo
+ result=0
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ [[ -n {
+ [[ -z fortinet ]]
++ cut -d/ -f2
+ [[ verbose =~ ^(search|s)$ ]]
+ print '{
+ [[ verbose == \h\e\l\p ]]
+ local awk_bin=/usr/bin/awk
  "vendor": "fortinet",
  "vendor": "cisco",
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
  "model": "FortiGate-60F",
  "model": "",
  "version": "v7.2.5.F",
  "version": "",
  "domain": "",
+ newline
  "domain": "",
+ local count=1
+ local parent_dir=reports/10.10.10.10/cisco
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ (( i = 0 ))
  "hostname": "fg-branch-vpn-01"
  "hostname": ""
+ [[ verbose =~ ^(config|c)$ ]]
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ verbose =~ ^(console|o)$ ]]
++ cut -d/ -f2
+ [[ verbose == \v\e\r\b\o\s\e ]]

+ local verbose=true
config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ IFS=' 	
+ print '{
+ [[ verbose =~ ^(export|r)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  set alias "User LAN"
  "domain": "",
'
}
+ [[ verbose =~ ^(extract|x)$ ]]

+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ -z '' ]]
 next
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
object-group network Wakanda-Core
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
 description National Core Routing Zone
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
++ echo -e --platform=cisco
end
  "hostname": "campus-sw-access01"

+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ newline
 network-object host 192.168.1.10
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
}
config firewall address
+ debug=false
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]

++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
 network-object host 10.0.2.3
version 12.2
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
hostname campus-sw-access01
+ [[ -z '' ]]
 edit "Branch-Gateway"
+ sed '1{/^[[:space:]]*$/d;}'

+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ dry_run=false
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Floor-Networks
  set subnet 192.168.2.12 255.255.255.255
+ case "${target_file}" in
  set comment "Primary LAN gateway"
 next
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
 description End-user and service devices
+ [[ -z true ]]
end'
+ print '{
++ IFS=,
+ [[ verbose =~ ^(search|s)$ ]]
 network-object host 192.168.0.1
  "vendor": "fortinet",
  "model": "FortiGate-200F",
 network-object host 192.168.0.100
  "version": "",
  "domain": "",
 network-object host 10.10.10.10'
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
++ echo 192.168.1.10
+ [[ -n {
  "vendor": "fortinet",
+ [[ -z '' ]]
#model="FortiGate-200F"
  "model": "FortiGate-60F",

+ [[ -n {
  "version": "v7.2.5.F",
config firewall address
  "vendor": "cisco",
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  "domain": "",
  set comment "Remote sniper node"
  "model": "",
 next
  "version": "12.2",
  "hostname": "fg-branch-vpn-01"
end'
}
 network-object 10.0.0.0 255.255.255.0 ]]
  "domain": "",
+ [[ verbose == \h\e\l\p ]]

+ export console_output=false
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "campus-sw-access01"
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ console_output=false
+ [[ -n {
}
  "vendor": "fortinet",

+ [[ verbose == \d\e\b\u\g ]]
#model="FortiGate-60F"
+ (( i < count ))
+ newline
+ [[ -z true ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
  "model": "FortiGate-200F",
+ case "${target_platform}" in
  "version": "",
  "domain": "",
version 12.2
+ configs_objects
+ local count=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "hostname": "fg-campus-core"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console ]]

+ [[ -z '' ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ script_helper=false
config system interface
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
}
 edit "internal"
                  BEGIN {

+ [[ false == true ]]
#hostname="fg-campus-core"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
                    in_json_header = 0;
hostname campus-sw-access01
+ echo
                    blk = "";

  set ip 192.168.2.12 255.255.255.0
object-group network Floor-Networks
  set alias "User LAN"
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 next
#model="FortiGate-200F"
end


 description End-user and service devices
+ (( i < count ))
 network-object host 192.168.0.1
config firewall address
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
 edit "Hawkeye-Nest"
config firewall address
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
                  }
+ local verbose=true
 network-object host 192.168.0.100
  set subnet 172.16.1.6 255.255.255.255
 edit "Branch-Gateway"
++ sed -e '1s|^\(-\)\{1,\}||'
                  /^[[:space:]]*$/ { next }
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
 network-object host 10.10.10.10 ]]
                  }
  set comment "Remote sniper node"
  set subnet 192.168.2.12 255.255.255.255
 next
  set comment "Primary LAN gateway"
++ printf '%*s' 12 ''
+ echo -en '{
end ]]
                  (in_json_header == 1) { next }
 next
  "vendor": "cisco",
end ]]
  "model": "",
+ echo -en '{
                  /^[^[:space:]]/ {
  "version": "12.2",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "vendor": "fortinet",
+ echo
                    blk = $0;
+ echo -en '{
+ (( i++ ))
  "domain": "",
  "model": "FortiGate-200F",
  "hostname": "campus-sw-access01"
  "vendor": "fortinet",
+ IFS=' 	
+ search_terms=()
}
'
  "model": "FortiGate-60F",
+ declare -a search_terms
  "version": "v7.2.5.F",
+ (( i < count ))
+ (( i < count ))
  "version": "",
+ [[ -z '' ]]
                    next;
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]

  "domain": "",
version 12.2
  "hostname": "fg-campus-core"
  "domain": "",
hostname campus-sw-access01
+ debug=false
}
+ grep -F 198.51.100.75


object-group network Floor-Networks
                  }
+ [[ -z '' ]]
  "hostname": "fg-branch-vpn-01"
 description End-user and service devices
}
+ [[ false == true ]]
                  {

                    blk = blk divisor " " $0;
                  }
#hostname="fg-branch-vpn-01"
#hostname="fg-campus-core"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list != *,* ]]
#model="FortiGate-60F"
+ local 'indent=            '
#config-version=FGT_60F-v7.2.5.F-build1517-230421
#model="FortiGate-200F"
+ mapfile -t search_terms
+ dry_run=false
+ [[ true == true ]]
 network-object host 192.168.0.1

 network-object host 192.168.0.100
config system interface
+ print '{
+ [[ true == true ]]
 network-object host 10.10.10.10'
 edit "internal"
+ [[ -z true ]]
  "vendor": "cisco",
+ [[ -z '' ]]
                  END {

  set ip 192.168.2.12 255.255.255.0
  "model": "",
config firewall address
  "version": "",
+ export console_output=false
  "domain": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
 edit "Hawkeye-Nest"
  set alias "User LAN"
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
  set subnet 172.16.1.6 255.255.255.255
+ console_output=false
  "hostname": ""
  set comment "Remote sniper node"
 next
+ [[ -z true ]]
 next
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
end'
end
}


config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
object-group network Wakanda-Core
 description National Core Routing Zone
  set comment "Primary LAN gateway"
 network-object host 192.168.1.10
++ IFS=,
 next
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
end'
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console ]]
++ echo 10.10.10.10
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
  "version": "",
  "domain": "",
+ [[ -z '' ]]
+ sed '/^[[:space:]]*$/d'
+ configs_objects
  "hostname": ""
}

+ script_helper=false
object-group network Wakanda-Core
+ [[ false == true ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -en '{
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ search_terms=()
+ case "${target_platform}" in
+ declare -a search_terms
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]

object-group network Wakanda-Core
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
 description National Core Routing Zone
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list != *,* ]]
+ search_pattern=172.18.1.20
 network-object host 192.168.1.10
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ newline 2
                  BEGIN {
+ search_pattern=192.168.100.100
                    in_json_header = 0;
+ newline 2
                    blk = "";
+ mapfile -t search_terms
+ mkdir -p reports/172.18.1.20/misc/.objects
+ declare -a execute__netwowrk_extract
 network-object host 10.0.2.3
+ [[ platform =~ ^(config|c)$ ]]
+ local count=2
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ [[ platform =~ ^(console|o)$ ]]
                  }
+ newline
                  /^[[:space:]]*$/ { next }
+ local count=2
+ [[ platform =~ ^(export|r)$ ]]
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ (( i = 0 ))
                  /^{$/ { in_json_header = 1; next }
+ mkdir -p reports/192.168.100.100/cisco/.objects
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
                  /^}$/ {
+ local verbose=true
 network-object 10.0.0.0 255.255.255.0'
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
                    if (in_json_header == 1) {
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ (( i = 0 ))
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ [[ platform =~ ^(extract|x)$ ]]
                      in_json_header = 0;
+ (( i < count ))
+ result=0
                      next;
+ echo
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ exit 0
+ (( i++ ))
+ echo
                    }
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.faw0qdCMxk ]]
                  }
+ (( i < count ))
                  (in_json_header == 1) { next }
+ (( i++ ))
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
                  /^[^[:space:]]/ {
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i < count ))
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local search_pattern
+ echo
                    blk = $0;
+ [[ platform =~ ^(platform|p)$ ]]
                    next;
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
                  }
++ dirname reports/172.31.255.254/misc/switch1.conf
+ (( i++ ))
                  {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.faw0qdCMxk
                    blk = blk divisor " " $0;
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
                  }
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(config|c)$ ]]
+ grep -F 203.0.113.25
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
                  END {
+ echo
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local target_platform=cisco
                  }
+ [[ logger =~ ^(extract|x)$ ]]
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
++ tr -d '\r'
+ [[ logger =~ ^(export|r)$ ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ platform == \h\e\l\p ]]
+ echo
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ sed '/^[[:space:]]*$/d'
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ (( i++ ))
+ read -r key value
+ (( i < count ))
++ which awk
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ for xitem in "${@}"
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ IFS==
+ newline
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ echo
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i++ ))
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ grep -v '^\s*$'
++ cut -d/ -f2
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
++ grep -v '^#'
+ local parent_dir=reports/192.168.1.11/fortinet
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ newline 2
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
++ echo -e --export
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ declare -a execute__netwowrk_extract
+ (( i < count ))
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ] ]]
+ script_helper=false
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-configs--ips.list ]'
+ (( i < count ))
+ cat -n
+ local parent_dir=reports/172.31.255.254/misc
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ ((  count == 0  ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ configs_objects
+ local 'indent=            '
+ newline
+ [[ false == true ]]
+ newline
+ (( i++ ))
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local count=1
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ true == true ]]
+ local count=1
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]]
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ logger == \h\e\l\p ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ search_terms=()
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i = 0 ))
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ echo
+ declare -a search_terms
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ newline
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ case "${target_platform}" in
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'indent=            '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ logger == \v\e\r\b\o\s\e ]]
                  BEGIN {
                    in_json_header = 0;
+ message '                .cache/resources/misc/switch3.conf'
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list != *,* ]]
+ [[ false == true ]]
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ local count=1
                  /^}$/ {
+ (( i = 0 ))
                    if (in_json_header == 1) {
++ basename reports/172.31.255.254/misc/switch1
+ (( i < count ))
+ for xitem in "${@}"
                      in_json_header = 0;
+ IFS==
+ echo
                      next;
+ read -r key value
+ [[ true == true ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ mapfile -t search_terms
                    }
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
                  }
+ (( i++ ))
                  (in_json_header == 1) { next }
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
                  /^[^[:space:]]/ {
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -z cisco ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ true == true ]]
                    blk = $0;
+ echo -e '                .cache/resources/misc/switch3.conf'
                    next;
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i < count ))
                  }
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
                  {
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ newline
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ case "${target_file}" in
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ local count=1
                    blk = blk divisor " " $0;
+ (( i = 0 ))
                  }
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
                  END {
+ echo
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
                  }
+ newline
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo
+ (( i++ ))
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ (( i++ ))
+ grep -F 10.10.10.10
+ (( i < count ))
+ cat -n
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ configs_objects
+ newline
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ (( i < count ))
+ newline
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ newline
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i++ ))
+ local count=1
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --export
+ (( i++ ))
+ newline
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ (( i < count ))
+ local count=2
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ (( i = 0 ))
+ local search_pattern
                  BEGIN {
+ (( i < count ))
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ echo
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
                  /^}$/ {
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ local awk_bin=/usr/bin/awk
                    if (in_json_header == 1) {
+ echo -e '                .cache/resources/misc/fw3.cfg'
                      in_json_header = 0;
                      next;
+ sed '/^[[:space:]]*$/d'
+ local count=1
                    }
+ (( i < count ))
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ return 0
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ local parent_dir=reports/10.0.0.1/fortinet
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
++ tr -d '\r'
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local parent_dir=reports/192.0.2.50/cisco
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo
+ (( i < count ))
+ [[ true == true ]]
+ (( i++ ))
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ [[ false == true ]]
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local awk_bin=/usr/bin/awk
+ [[ false == true ]]
+ local SCRIPT_DIR=./scripts
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ grep -F 192.168.0.1
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local script_filename=fortinet-configs.awk
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
++ grep -v '^\s*$'
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ local count=1
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ echo
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ return 0
+ (( i++ ))
+ configs_objects
+ (( i < count ))
++ which awk
++ printf '%*s' 12 ''
+ [[ true == true ]]
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ sed '/^[[:space:]]*$/d'
++ grep -v '^#'
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ configs_objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
++ echo reports/172.31.255.254/misc/switch1.conf
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ [[ extract == \h\e\l\p ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
++ which awk
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.2.12/cisco
++ cut -d/ -f2
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ [[ export =~ ^(config|c)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ IFS==
+ local first_search_entry=192.168.100.100
+ read -r key value
+ local search_pattern
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ result=0
+ local 'extracted_configuration={
  "vendor": "cisco",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
  "model": "",
+ local 'extracted_configuration={
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
  "vendor": "cisco",
  "version": "",
  "domain": "",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
  "hostname": ""
+ [[ true == true ]]
+ local search_pattern
  "model": "",
  "version": "12.2",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ] ]]
  "domain": "",
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-configs--ips.list ]'
}
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
  "hostname": "campus-sw-access01"
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'

+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console ]]
interface Vlan2
+ local count=1
}
 ip address 172.16.1.6 255.255.255.0'

+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
version 12.2
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ search_pattern=172.31.255.254
hostname campus-sw-access01
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ ((  count == 0  ))
+ local 'message=                .cache/resources/misc/fw1.cfg'

interface Vlan1
+ [[ cfg == \c\f\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ result=0
 ip address 192.168.0.1 255.255.255.0
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ local count=1
+ mkdir -p reports/172.31.255.254/misc/.objects
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ [[ true == true ]]
 description Switch Mgmt
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ [[ -n {
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console ]]
+ newline

  "vendor": "cisco",
+ echo
+ newline
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
  "model": "",
+ local count=1
object-group network Floor-Networks
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ case "${target_file}" in
+ local 'extracted_configuration={
 description End-user and service devices
+ newline
  "vendor": "cisco",
+ (( i < count ))
  "version": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console ]]
++ IFS=,
 network-object host 192.168.0.1
+ newline
+ local count=1
  "domain": "",
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--branch-isr-02.cfg.console
+ local count=1
+ local 'extracted_configuration={
 network-object host 192.168.0.100
  "model": "ASA",
+ (( i = 0 ))
  "vendor": "cisco",
 network-object host 10.10.10.10'
  "hostname": ""
+ case "${target_file}" in
  "version": "9.12(4)",
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
}
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ result=0
+ [[ true == true ]]
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console ]]

++ echo 10.0.0.1
+ case "${target_file}" in
+ (( i++ ))
interface Vlan2
  "domain": "global.dmz.example.net",
+ (( i < count ))
+ (( i < count ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
++ IFS=,
+ [[ -n {
+ cat -n
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MnYcBx3UMi/network-extract--fg-branch-vpn-01.cfg.console
 ip address 172.16.1.6 255.255.255.0 ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
  "model": "",
+ local parent_dir=reports/192.168.1.11/cisco
+ echo
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ echo
+ (( i++ ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
+ case "${target_platform}" in
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
  "version": "12.2",
++ echo 192.168.0.1
}
  "model": "",
  "version": "",
  "domain": "",
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ declare -a execute__netwowrk_extract
                    in_json_header = 0;
+ (( i++ ))
  "domain": "",
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'

+ (( i < count ))
                    blk = "";
ASA Version 9.12(4)
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
hostname dmz-fw2-backup
  "hostname": ""
  "hostname": "campus-sw-access01"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
}
}

++ dirname reports/192.168.2.12/misc/fw1.cfg
                  }
object-group network Wakanda-Core
domain-name global.dmz.example.net
 description National Core Routing Zone

+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ configs_objects
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
                  /^[[:space:]]*$/ { next }
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;

object network Sentinel-NAT
                  }
 host 203.0.113.25
                  {
                    blk = blk divisor " " $0;
++ echo -e --verbose
                  }
 network-object host 192.168.1.10
+ declare -a execute__netwowrk_extract
+ [[ -z fortinet ]]
version 12.2
+ local parent_dir=reports/192.168.1.10/fortinet
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
 description Corporate NAT edge'
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
  "domain": "global.dmz.example.net",

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ true == true ]]
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
++ cut -d/ -f2
 network-object host 192.168.0.100
  "hostname": "dmz-fw2-backup"
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ newline
 network-object host 10.10.10.10 ]]

++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ echo
}
+ print '{
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
  "vendor": "cisco",
  "model": "",

object-group network Wakanda-Core
+ (( i++ ))
  "version": "",
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ (( i < count ))
+ local parent_dir=reports/192.0.2.50/cisco
+ local count=1
  "domain": "",
 description National Core Routing Zone
  "hostname": ""
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
ASA Version 9.12(4)
+ local search_pattern
++ cut -d/ -f2
 network-object host 192.168.1.10
++ which awk
+ case "${target_file}" in
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
 network-object host 10.0.2.3
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
interface Vlan2
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
hostname dmz-fw2-backup
 ip address 172.16.1.6 255.255.255.0 ]]
domain-name global.dmz.example.net
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ grep -F 192.168.100.100
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ cat -n
++ which awk
+ sed '1{/^[[:space:]]*$/d;}'

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
+ output_dir=reports/192.168.2.12/misc
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.H5pjMhZlhA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.H5pjMhZlhA
+ search_pattern=10.0.0.1
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ search_pattern=192.0.2.50
+ (( i++ ))
+ [[ ! -d reports/192.168.2.12/misc ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ local parent_dir=reports/172.16.1.6/fortinet
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(export|r)$ ]]
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ (( i < count ))
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ local search_pattern
+ local search_pattern
+ return 0
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ result=0
+ print '{
+ exit 0
  "vendor": "cisco",
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnFWgdBNCI ]]
  "model": "",
  "version": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GnFWgdBNCI
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
 description National Core Routing Zone
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ -n {
+ print '{
  "vendor": "cisco",
  "model": "ASA",
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ verbose == \h\e\l\p ]]
  "vendor": "cisco",
  "version": "9.12(4)",
  "model": "",
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console ]]
  "domain": "global.dmz.example.net",
  "version": "",
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
  "hostname": "dmz-fw2-backup"
  "domain": "",
+ case "${target_file}" in
+ case "${target_platform}" in
+ local awk_bin=/usr/bin/awk
  "hostname": ""
}
+ [[ verbose == \d\r\y\-\r\u\n ]]

ASA Version 9.12(4)
}
hostname dmz-fw2-backup
+ local 'extracted_configuration={
domain-name global.dmz.example.net

+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
object-group network Wakanda-Core
+ case "${target_platform}" in
                  BEGIN {
 description National Core Routing Zone
                    in_json_header = 0;

                    blk = "";
+ (( i = 0 ))
object network Sentinel-NAT
                  }
 host 203.0.113.25
                  /^[[:space:]]*$/ { next }
 description Corporate NAT edge'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
                    if (in_json_header == 1) {
  "vendor": "cisco",
                      in_json_header = 0;
 network-object host 192.168.1.10
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
  "model": "",
                      next;
  "vendor": "cisco",
 network-object host 10.0.2.3
  "model": "ASA",
++ basename reports/172.16.1.6/fortinet/fg-campus-core
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ verbose == \v\e\r\b\o\s\e ]]
 network-object 10.0.0.0 255.255.255.0
++ cut -d/ -f2
  "version": "9.12(4)",
                    }
  "domain": "global.dmz.example.net",
                  BEGIN {

                    in_json_header = 0;
  "hostname": "dmz-fw2-backup"
                    blk = "";
                  }
object network Panther-Gateway
                  }
}
                  (in_json_header == 1) { next }
 host 10.0.2.3

+ sed '1{/^[[:space:]]*$/d;}'
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ newline 2
domain-name global.dmz.example.net
                  /^[^[:space:]]/ {
+ (( i < count ))

 description Secure outbound concentrator ]]
object network Sentinel-NAT
                  /^[[:space:]]*$/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
 host 203.0.113.25
                  /^{$/ { in_json_header = 1; next }
 description Corporate NAT edge ]]
+ local verbose=true
  "version": "",
                    blk = $0;
++ command -v -- ./scripts/network-extract.shell
                  /^}$/ {
+ IFS=' 	
+ echo -en '{
  "domain": "",
  "vendor": "cisco",
  "model": "ASA",
                    next;
'
                    if (in_json_header == 1) {
+ echo
  "hostname": ""
+ [[ -z '' ]]
                      in_json_header = 0;
+ echo -en '{
+ (( i++ ))
                  }
+ (( i = 0 ))
+ debug=false
++ printf '%*s' 12 ''
+ (( i < count ))
                      next;
  "version": "9.12(4)",
                  {
+ return 0
                    }
+ IFS==
                  }
+ newline
+ [[ -z '' ]]
  "vendor": "cisco",
  "domain": "global.dmz.example.net",
                    blk = blk divisor " " $0;
+ dry_run=false
}
                  (in_json_header == 1) { next }
+ [[ true == true ]]
                  /^[^[:space:]]/ {
  "model": "",
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local count=2
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
                    blk = $0;
                    next;
                  END {
  "hostname": "dmz-fw2-backup"
                    if (blk != "" && !seen[blk]++) print blk "\n";
 description National Core Routing Zone
                  }
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
}
 network-object host 192.168.1.10
                ' reports/172.31.255.254/misc/switch1.conf
                ' reports/172.18.1.20/misc/fw1.cfg
 network-object host 10.0.2.3

 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ grep -F 172.31.255.254
++ printf '%*s' 12 ''
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
 description Corporate NAT edge'
+ [[ -z true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg

object-group network Fortress-Wireless
+ [[ -z '' ]]
 description Secure wireless access layer
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console ]]
+ (( i = 0 ))
+ local 'indent=            '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console ]]
+ (( i < count ))
+ echo
 network-object host 172.18.1.20
+ export console_output=false
+ (( i++ ))
+ console_output=false
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ case "${target_file}" in
++ cut -d/ -f2
+ newline
+ search_pattern=192.168.2.12
 network-object host 192.168.1.10'
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ result=0
+ [[ -n {
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
  "vendor": "cisco",
+ echo
+ (( i++ ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
+ script_helper=false
+ local search_pattern
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ dirname -- ./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]]
+ local count=1
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ (( i < count ))
++ printf '%*s' 12 ''
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ newline 2
+ newline 2
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ cfg == \c\f\g ]]
+ newline
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local count=1
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ newline 2
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=2
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=2
+ echo
+ case "${target_platform}" in
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
+ (( i < count ))
                    blk = $0;
+ echo
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ (( i++ ))
                    }

                    # Skip blank lines
+ (( i < count ))
+ (( i < count ))
                    /^[[:space:]]*$/ { next }
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]

+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ [[ true == true ]]
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ (( i++ ))
                      blk = blk divisor $0;
+ (( i < count ))
                      if (blk != "" && !seen[blk]++) print blk;
+ echo
                      blk = "";
                      next;
+ search_pattern=192.168.1.11
                    }
+ local 'message=                .cache/resources/misc/switch1.conf'

                    # Accumulate middle lines
+ (( i++ ))
                    {
+ (( i < count ))
                      blk = blk divisor " " $0;
                    }
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'

+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
                    END {
+ [[ true == true ]]
+ (( i++ ))
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ mkdir -p reports/192.168.1.11/cisco/.objects
                      # No need for final print — all blocks end with end
+ echo -e '                .cache/resources/misc/switch1.conf'
+ (( i < count ))
                    }
+ grep -F 192.0.2.50
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ newline
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ newline
+ search_pattern=192.168.1.10
+ local count=1
+ local count=1
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ print '{
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ local SCRIPT_DIR=./scripts
+ grep -F 10.0.0.1
+ (( i = 0 ))
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
  "vendor": "cisco",
++ tr -d '\r'
+ (( i = 0 ))
  "model": "",
+ result=0
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local script_filename=cisco-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console ]]
  "version": "",
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
  "domain": "",
+ [[ 0 -ne 0 ]]
  "hostname": ""
}
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'

+ echo
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
 network-object host 192.168.1.10'
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
  "vendor": "cisco",
  "model": "",
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "version": "",
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
  "domain": "",
  "hostname": ""
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
}
+ [[ true == true ]]
+ newline
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console ]]

object-group network Fortress-Wireless
 description Secure wireless access layer
+ (( i++ ))
++ grep -v '^\s*$'
++ cut -d/ -f2
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
  "model": "",
+ local count=1
+ newline
+ (( i = 0 ))
+ case "${target_file}" in
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ local count=1
  "version": "",
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
 network-object host 172.18.1.20
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
 network-object host 192.168.1.10'
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ newline
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
++ grep -v '^#'
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i < count ))
+ local count=1
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--access-sw1-west.cfg.console
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]
+ case "${target_file}" in
++ command -v -- ./scripts/network-extract.shell
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ configs_objects
+ result=0
+ [[ 0 -ne 0 ]]
+ search_pattern=172.16.1.6
+ [[ true == true ]]
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 192.168.2.12
+ result=0
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ 0 -ne 0 ]]
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ echo
+ (( i++ ))
+ cat -n
+ (( i++ ))
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
++ basename reports/192.0.2.50/cisco/perimeter-fw1
+ [[ true == true ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ newline 2
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ case "${target_platform}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
                    blk = $0;
                    next;
+ (( i < count ))
                  }
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
                  {
                    blk = blk divisor " " $0;
                  }
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
                  END {
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ case "${target_file}" in
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local count=2
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ newline
+ newline
+ echo
+ (( i++ ))
+ local 'extracted_configuration={
+ (( i < count ))
+ newline
  "vendor": "cisco",
+ newline
+ result=0
+ [[ false == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ (( i < count ))
+ local count=1
  "model": "",
  "version": "",
+ local count=1
+ cat -n
+ [[ true == true ]]
  "domain": "",
+ local parent_dir=reports/172.16.1.6/misc
+ exit 0
+ local count=1
+ (( i = 0 ))
  "hostname": ""
+ case "${target_platform}" in
+ exit 0
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pZQw2CIUNs ]]
+ (( i < count ))
+ (( i < count ))
+ (( i = 0 ))
++ IFS=,
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
++ echo 192.168.2.12
                      blk = "";
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IpPVTdpMXK ]]
}
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pZQw2CIUNs
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IpPVTdpMXK
+ (( i++ ))
                      in_json_header = 0;

+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ (( i++ ))
                    }
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ echo

+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ [[ false == true ]]
object-group network Avengers-Office
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
 description VLAN access layer
                    # Skip blank lines
+ [[ true == true ]]
                    /^[[:space:]]*$/ { next }
+ (( i++ ))

+ cat -n
+ local script_filename=fortinet-configs.awk
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
                    # Skip JSON preamble
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
 network-object host 10.0.0.1
+ result=0
                    /^{$/            { in_json_header = 1; next }
+ grep -F 192.168.1.11
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
                    (in_json_header == 1) { next }
 network-object 192.168.12.0 255.255.255.0'

+ [[ false == true ]]
                    # Skip platform metadata
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                    /^#(hostname|model|config-version)=/ { next }
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ return 0
+ [[ 0 -ne 0 ]]
+ declare -a execute__netwowrk_extract
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ result=0

+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ grep -F 192.168.1.10
+ local count=1
                    # Start of a new block
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ configs_objects
                    /^config / {
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ (( i = 0 ))
                      if (blk != "") print blk;
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
                      blk = $0;
                      next;
+ [[ true == true ]]
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ case "${target_platform}" in

+ [[ -n {
                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ local 'extracted_configuration={
                    /^[[:space:]]*end$/ {
  "vendor": "fortinet",
                      blk = blk divisor $0;
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                      if (blk != "" && !seen[blk]++) print blk;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
                      blk = "";
                    BEGIN {
+ (( i < count ))
  "vendor": "cisco",
                      next;
                      blk = "";
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
                      in_json_header = 0;
+ configs_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console ]]
                    }
  "model": "FortiGate-60F",
                    }


                    # Accumulate middle lines
                    # Skip blank lines
                    {
                    /^[[:space:]]*$/ { next }
                      blk = blk divisor " " $0;
                    }

+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]

+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
                    # Skip JSON preamble
+ echo
                    /^{$/            { in_json_header = 1; next }
                    END {
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
  "model": "",
                      # No need for final print — all blocks end with end
                    (in_json_header == 1) { next }
                    }

                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
                    # Skip platform metadata
++ basename reports/172.16.1.6/misc/switch3
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
                      next;
                    }

                    # Add edit line to current block
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }
+ sed '/^[[:space:]]*$/d'

+ newline
                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
  "version": "v7.2.5.F",
                      next;
  "domain": "",
                    }
  "hostname": "fg-branch-vpn-01"

+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
}
                    # Finalize block at end
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console ]]
  "version": "",
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ configs_objects
                      if (blk != "" && !seen[blk]++) print blk;
+ (( i++ ))
                      blk = "";
+ (( i < count ))
                      next;
                    }
+ cat -n reports/192.168.1.10/misc/fw1.cfg

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
+ (( i = 0 ))
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office

 description VLAN access layer
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ return 0
+ grep -F 172.16.1.6
+ [[ true == true ]]
+ (( i < count ))
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ echo
#hostname="fg-branch-vpn-01"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
#model="FortiGate-60F"
+ (( i++ ))
 network-object host 10.0.0.1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421
 network-object 192.168.12.0 255.255.255.0 ]]
+ (( i < count ))

config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ -n {
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ case "${target_file}" in
++ which awk
  "version": "v7.2.5.F",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
  "domain": "",
+ local count=1
  "hostname": "fg-branch-vpn-01"
+ (( i = 0 ))
}
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ local count=1
+ (( i = 0 ))
 edit "Guardians-Relay"
+ (( i < count ))
+ [[ true == true ]]
+ echo
  set subnet 192.168.0.1 255.255.255.255
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
  set comment "Backup uplink for Milano crew"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console ]]
 next
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
+ sed '/^[[:space:]]*$/d'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
end ]]
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
+ result=0
+ [[ 0 -ne 0 ]]
+ local parent_dir=reports/10.0.2.3/misc
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ local parent_dir=reports/192.168.0.1/cisco
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ local awk_bin=/usr/bin/awk
+ echo
+ local count=1
+ (( i++ ))
+ result=0
+ [[ true == true ]]
+ (( i < count ))
+ [[ 0 -ne 0 ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ print '{
  "vendor": "fortinet",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ (( i < count ))
  "model": "FortiGate-60F",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
  "version": "v7.2.5.F",
+ echo
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local parent_dir=reports/203.0.113.25/cisco
+ (( i++ ))
+ (( i++ ))
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
  "hostname": "fg-branch-vpn-01"
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console
+ (( i < count ))
}
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ (( i = 0 ))
+ [[ false == true ]]

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console ]]
#hostname="fg-branch-vpn-01"
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
#model="FortiGate-60F"
+ [[ false == true ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local search_pattern
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YulzV4ESKd/network-extract--switch1.conf.console

+ newline
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
config firewall address
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
 edit "Guardians-Relay"
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
  set subnet 192.168.0.1 255.255.255.255
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
  set comment "Backup uplink for Milano crew"
 next
end'
+ local count=1
+ configs_objects
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
+ result=0
  "vendor": "fortinet",
+ [[ true == true ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
++ basename reports/10.0.2.3/misc/fw3
+ [[ 0 -ne 0 ]]

++ IFS=,
+ grep -F 172.18.1.20
#hostname="fg-branch-vpn-01"
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ [[ true == true ]]
++ echo 192.168.100.100
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ cat -n
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -en '{
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ newline
#model="FortiGate-60F"
+ local count=1
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ (( i = 0 ))
++ basename reports/192.168.0.1/cisco/campus-sw-access01
+ (( i < count ))
  set comment "Backup uplink for Milano crew"
+ echo
 next
end'
+ (( i++ ))
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ (( i < count ))
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ cfg == \c\f\g ]]
++ printf '%*s' 12 ''
++ echo reports/172.16.1.6/misc/switch3.conf
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ declare -a execute__netwowrk_extract
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ cut -d/ -f2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ cat -n
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
++ which awk
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ cat -n
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ newline 2
+ message '                .cache/resources/misc/fw1.cfg'
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ [[ true == true ]]
+ local count=1
+ local count=2
+ (( i = 0 ))
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ cat -n
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ echo
+ local search_pattern
+ (( i < count ))
+ (( i++ ))
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console ]]
+ sed '/^[[:space:]]*$/d'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
++ cut -d/ -f2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ local parent_dir=reports/192.168.1.10/misc
+ newline 2
+ result=0
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ local count=2
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ exit 0
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GzVkpiCNB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GzVkpiCNB
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i < count ))
+ echo
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ (( i++ ))
+ (( i < count ))
+ newline
+ echo
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ search_pattern=172.16.1.6
+ (( i < count ))
+ newline
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ mkdir -p reports/172.16.1.6/misc/.objects
+ (( i < count ))
+ [[ false == true ]]
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ return 0
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ output_dir=reports/10.10.10.10/misc
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ [[ ! -d reports/10.10.10.10/misc ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console ]]
++ basename reports/192.168.1.10/misc/fw1
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
++ echo reports/10.0.2.3/misc/fw3.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ newline
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ local count=1
+ (( i = 0 ))
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ (( i < count ))
+ configs_objects
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ result=0
+ local count=1
+ newline
+ (( i = 0 ))
+ exit 0
+ return 0
+ local count=1
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nsik7S4Xhv ]]
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Nsik7S4Xhv
+ echo
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
++ cut -d/ -f2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
++ printf '%*s' 12 ''
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
++ cut -d/ -f2
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
++ cut -d/ -f2
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ configs_objects
++ command -v -- ./scripts/network-extract.shell
+ local 'indent=            '
+ search_pattern=192.0.2.50
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ result=0
+ result=0
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ exit 0
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ 0 -ne 0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wxpwi2lCwx ]]
+ newline
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wxpwi2lCwx
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
++ echo -e --platform=cisco
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--branch-isr-02.cfg.console
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --export
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
+ local count=1
+ newline
++ dirname reports/10.0.0.1/misc/switch3.conf
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ echo
+ (( i++ ))
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ newline
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ search_pattern=192.168.0.1
+ search_pattern=203.0.113.25
+ local count=1
+ local 'extracted_configuration={
+ search_pattern=10.0.2.3
  "vendor": "cisco",
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ [[ true == true ]]
+ [[ false == true ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
  "model": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--branch-isr-02.cfg.console
+ mkdir -p reports/10.0.2.3/misc/.objects
  "version": "",
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
  "domain": "",
+ echo
  "hostname": ""
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ case "${target_platform}" in
}
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))

+ echo
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
object-group network Metropolis-Internal
+ (( i < count ))
 description Core internal LAN for application clusters
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ [[ true == true ]]
                  BEGIN {
 network-object host 10.0.2.3
+ [[ false == true ]]
                    in_json_header = 0;
                    blk = "";
                  }
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
+ configs_objects
 network-object 192.168.2.0 255.255.255.0
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console ]]
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
 network-object host 192.168.2.12'
                      in_json_header = 0;
                      next;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
                    }
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console ]]
                  }
                  (in_json_header == 1) { next }
+ [[ -n {
+ case "${target_file}" in
                  /^[^[:space:]]/ {
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fg-branch-vpn-01.cfg.console
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
  "model": "",
                ' reports/172.16.1.6/misc/switch3.conf
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
  "version": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--fg-campus-core.cfg.console
  "domain": "",
+ configs_objects
+ grep -F 172.16.1.6
++ echo reports/192.168.1.10/misc/fw1.cfg
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ cut -d/ -f2
++ dirname reports/10.0.0.1/misc/switch1.conf
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opdw2Cu2lK ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.opdw2Cu2lK
++ which awk
+ local parent_dir=reports/10.0.0.1/misc
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ result=0
+ exit 0
+ local 'extracted_configuration={
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uoTUZfohsl ]]
+ local parent_dir=reports/198.51.100.75/cisco
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uoTUZfohsl
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ platform =~ ^(config|c)$ ]]
  "domain": "",
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
+ result=0
 edit "wifi"
+ exit 0
+ [[ platform =~ ^(console|o)$ ]]
  set ip 192.168.100.100 255.255.255.0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8ugQbdh2rN ]]
+ search_pattern=192.168.1.10
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8ugQbdh2rN
  set alias "Wireless VLAN"
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
 next
+ mkdir -p reports/192.168.1.10/misc/.objects
end
+ [[ platform =~ ^(extract|x)$ ]]

+ local parent_dir=reports/10.0.0.1/misc
+ [[ platform =~ ^(logger|l)$ ]]
config firewall address
+ cat -n
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ newline
 next
end
+ local count=1
+ [[ platform =~ ^(platform|p)$ ]]

+ case "${target_platform}" in
+ (( i = 0 ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ksMJXbHZvc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ksMJXbHZvc
+ case "${target_platform}" in
config firewall address
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
 edit "Wanda-Field"
                    in_json_header = 0;
                    blk = "";
                  }
+ local parent_dir=reports/192.168.0.1/fortinet
  set subnet 192.168.100.100 255.255.255.255
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                  /^[[:space:]]*$/ { next }
+ result=0
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
  set comment "Wanda’s chaos relay"
                    blk = "";
 next
+ [[ 0 -ne 0 ]]
                  }
end'
+ local target_platform=cisco
+ [[ true == true ]]
                    if (in_json_header == 1) {
                  /^[[:space:]]*$/ { next }
                      in_json_header = 0;
+ case "${target_platform}" in
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
                  /^}$/ {
                      next;
                    }
+ result=0
                    if (in_json_header == 1) {
+ case "${target_platform}" in
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
                  }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
                  (in_json_header == 1) { next }
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
                  BEGIN {
                  /^[^[:space:]]/ {
                    in_json_header = 0;
+ [[ -n {
                      in_json_header = 0;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = "";
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    blk = $0;
                  }
                    next;
                  /^[[:space:]]*$/ { next }
                    in_json_header = 0;
                      next;
                  /^{$/ { in_json_header = 1; next }
                  }
                    blk = "";
                  /^}$/ {
                  {
                    }
                    if (in_json_header == 1) {
                  }
                  }
                  /^[[:space:]]*$/ { next }
                      in_json_header = 0;
                  (in_json_header == 1) { next }
                    blk = blk divisor " " $0;
++ basename reports/10.0.0.1/misc/switch3
                  /^{$/ { in_json_header = 1; next }
                      next;
                  /^[^[:space:]]/ {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "vendor": "fortinet",
                    blk = $0;
+ grep -F 192.168.0.1
                    next;
                  }
                  }
                  /^}$/ {
                  {
                    blk = blk divisor " " $0;
                  }
                  }
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
                    if (in_json_header == 1) {
                  END {
                  (in_json_header == 1) { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ basename reports/198.51.100.75/cisco/branch-isr-02
                      in_json_header = 0;
                  END {
                  /^[^[:space:]]/ {
                      next;
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    }
                  }
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                  (in_json_header == 1) { next }
                    next;
                  /^[^[:space:]]/ {
                  }
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  {
                    blk = $0;
                    blk = blk divisor " " $0;
                    next;
                  }
                  }
                  END {
                  {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = blk divisor " " $0;
                  }
                  }
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
                  END {
+ grep -F 203.0.113.25
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ basename reports/10.0.0.1/misc/switch1
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
+ newline
+ local count=1
+ grep -F 10.0.2.3
}
+ (( i = 0 ))

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
+ echo
+ newline 2
+ sed '/^[[:space:]]*$/d'
++ IFS=,
++ echo 10.10.10.10
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i = 0 ))
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ sed '/^[[:space:]]*$/d'
  "version": "",
+ declare -a execute__netwowrk_extract
  "domain": "",
  "hostname": "fg-campus-core"
}
+ sed '/^[[:space:]]*$/d'

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
+ (( i < count ))
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
  set subnet 192.168.100.100 255.255.255.255
+ echo
+ local search_pattern
  set comment "Guest WiFi node"
+ [[ platform =~ ^(search|s)$ ]]
+ (( i++ ))
 next
+ (( i < count ))
end
+ [[ platform == \h\e\l\p ]]

+ [[ platform == \d\e\b\u\g ]]
config firewall address
+ echo
+ [[ platform == \d\r\y\-\r\u\n ]]
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ (( i++ ))
  set comment "Wanda’s chaos relay"
+ (( i < count ))
 next
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
end'
+ [[ true == true ]]
+ echo
+ local search_pattern
+ [[ -n {
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-200F",
  "version": "",
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
  "domain": "",
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
  "hostname": "fg-campus-core"
}
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local search_pattern

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'

config firewall address
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ newline
end

+ local count=1
config firewall address
 edit "Wanda-Field"
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ (( i = 0 ))
 next
+ (( i < count ))
end ]]
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
+ case "${target_platform}" in
+ echo
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo -en '{
+ for xitem in "${@}"
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ newline
+ (( i < count ))
  "version": "",
+ (( i++ ))
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
+ (( i < count ))
+ local count=1
                  BEGIN {
  "domain": "",
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ IFS==
  "hostname": "fg-campus-core"
}
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
+ cat -n reports/192.168.2.12/misc/fw1.cfg

+ case "${target_file}" in
                    in_json_header = 0;
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ cat reports/172.18.1.20/misc/.objects/fw1.list
                    blk = "";

                  }
config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
++ which awk
  set alias "Wireless VLAN"
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
 next
+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }
end
+ read -r key value

+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
                  /^{$/ { in_json_header = 1; next }
config firewall address
                  /^}$/ {
 edit "Titan-WLAN-Host"
                    if (in_json_header == 1) {
  set subnet 192.168.100.100 255.255.255.255
                      in_json_header = 0;
                      next;
                    }
  set comment "Guest WiFi node"
+ grep -F 192.0.2.50
                  }
 next
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
                  (in_json_header == 1) { next }
end
+ case "${target_file}" in
                  /^[^[:space:]]/ {

+ cat reports/172.16.1.6/misc/.objects/switch3.list
config firewall address
                    if (blk != "" && !seen[blk]++) print blk "\n";
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
                    blk = $0;
end'
+ result=0
                    next;
+ (( i < count ))
+ cat -n
+ [[ 0 -ne 0 ]]
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ true == true ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw1.cfg
+ grep -F 192.168.1.10
+ echo
+ cat -n
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ return 0
+ local 'extracted_configuration={
+ newline
  "vendor": "fortinet",
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ echo
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ sed '/^[[:space:]]*$/d'
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ echo reports/10.0.0.1/misc/switch1.conf
+ (( i++ ))
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i < count ))
+ result=0
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
++ cut -d/ -f2
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
++ cut -d/ -f2
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
+ (( i < count ))
+ echo
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ (( i++ ))
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ (( i < count ))
+ local count=2
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console ]]
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ newline
+ cat -n
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local count=1
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ echo
+ (( i++ ))
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ (( i < count ))
+ case "${target_file}" in
++ echo reports/10.0.0.1/misc/switch3.conf
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
+ [[ false == true ]]
+ local count=1
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
  "model": "FortiGate-200F",
+ local count=1
+ result=0
+ (( i < count ))
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ (( i = 0 ))
  "version": "",
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ echo
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ (( i < count ))
+ case "${target_file}" in
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ 0 -ne 0 ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ local 'indent=            '
+ echo
+ [[ export =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i++ ))
+ configs_objects
+ (( i < count ))
+ return 0
+ newline
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ search_pattern=10.0.0.1
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ mkdir -p reports/10.0.0.1/misc/.objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console ]]
+ (( i = 0 ))
++ cut -d/ -f2
+ (( i < count ))
+ result=0
+ case "${target_file}" in
+ [[ 0 -ne 0 ]]
+ echo
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ (( i < count ))
+ (( i++ ))
+ search_pattern=192.168.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
+ return 0
+ mkdir -p reports/192.168.0.1/fortinet/.objects
+ (( i++ ))
+ [[ logger =~ ^(export|r)$ ]]
  "domain": "",
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
  "hostname": "fg-campus-core"
+ search_pattern=198.51.100.75
}
+ [[ false == true ]]
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'

+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
#hostname="fg-campus-core"
+ cat -n
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ [[ true == true ]]
#model="FortiGate-200F"
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ newline
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ local count=1
+ [[ export =~ ^(export|r)$ ]]

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ local export_objects=true
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ export =~ ^(extract|x)$ ]]
+ result=0
+ local 'extracted_configuration={
config firewall address
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
  "vendor": "fortinet",
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
  "model": "FortiGate-200F",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "",
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ 0 -ne 0 ]]
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ export =~ ^(logger|l)$ ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ case "${target_file}" in
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ (( i < count ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ case "${target_file}" in
+ echo -e '                .cache/resources/misc/fw3.cfg'
  "domain": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ newline
  "hostname": "fg-campus-core"
+ local count=1
+ (( i = 0 ))
+ newline
}
+ (( i < count ))
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-campus-core"
+ echo
+ (( i++ ))
#model="FortiGate-200F"
+ (( i < count ))
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255

+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ logger =~ ^(platform|p)$ ]]
 next
  set comment "Vision’s quantum channel"
end'
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n {
+ (( i++ ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ (( i < count ))
  "domain": "",
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ [[ logger == \h\e\l\p ]]
  "hostname": "fg-campus-core"
+ newline
+ local count=1
}
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ echo
+ (( i++ ))
+ (( i < count ))

config system interface
 edit "core"
+ [[ export =~ ^(search|s)$ ]]
+ return 0
  set ip 10.10.10.10 255.255.255.0
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ true == true ]]
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ case "${target_file}" in
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console ]]
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ case "${target_file}" in
+ (( i = 0 ))
+ search_pattern=10.0.0.1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ mkdir -p reports/10.0.0.1/misc/.objects
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ newline
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local count=1
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ (( i = 0 ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
  set alias "Campus Core Transit"
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
 next
+ (( i++ ))
end

+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ case "${target_file}" in
+ configs_objects
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
+ [[ export == \h\e\l\p ]]
config firewall address
+ [[ true == true ]]
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
 next
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ output_dir=reports/10.10.10.10/fortinet
+ newline
 edit "Shield-WiFi"
end'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
  set subnet 10.10.10.10 255.255.255.255
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console ]]
+ configs_objects
+ search_pattern=10.10.10.10
+ local first_search_entry=203.0.113.25
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ case "${target_file}" in
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ [[ logger =~ ^(config|c)$ ]]
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--dmz-fw2-backup.cfg.console
  set comment "Wireless AP Gateway"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ result=0
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ local parent_dir=reports/192.168.2.12/misc
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ return 0
+ [[ logger =~ ^(logger|l)$ ]]
 next
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
end ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ IFS==
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n {
+ case "${target_file}" in
+ local last_search_entry=203.0.113.25
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
  "vendor": "fortinet",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rM1eGTynQn/network-extract--switch3.conf.console
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console ]]
+ IFS==
  "model": "FortiGate-200F",
+ local first_search_entry=203.0.113.25
  "version": "",
+ [[ export =~ ^(extract|x)$ ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ local count=1
+ [[ true == true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ case "${target_platform}" in
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ basename reports/192.168.1.11/fortinet/fg-campus-core
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
++ basename reports/192.168.2.12/misc/fw1
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
+ grep -F 10.0.0.1
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ case "${target_platform}" in
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
  "domain": "",
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ (( i = 0 ))
#model="FortiGate-200F"
+ (( i < count ))
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ [[ export =~ ^(logger|l)$ ]]

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ true == true ]]
  set comment "Vision’s quantum channel"
 next
end ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ (( i++ ))
+ [[ export =~ ^(search|s)$ ]]
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ export == \h\e\l\p ]]
+ local parent_dir=reports/192.168.0.100/cisco
+ [[ export == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console ]]
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ypCte2OlKH/network-extract--fw1.cfg.console
+ grep -F 198.51.100.75
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ (( i < count ))
+ local search_pattern
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ] ]]
+ echo
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ newline
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ local count=1
+ result=0
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
++ echo -e --export
+ local count=1
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ exit 0
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
+ cat -n
+ (( i = 0 ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ] ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z4GgC4NgYA ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ print '{
config system interface
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ case "${target_platform}" in
  "version": "",
 edit "core"
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ sed '/^[[:space:]]*$/d'
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
 next
                    in_json_header = 0;
end'
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
++ dirname -- ./scripts/network-extract.shell
                  /^}$/ {
  set ip 10.10.10.10 255.255.255.0
                    if (in_json_header == 1) {
                      in_json_header = 0;
++ echo -e --export
                      next;
  set alias "Campus Core Transit"
                    }
                  }
 next
+ [[ -n {
                  (in_json_header == 1) { next }
  "vendor": "fortinet",
                  /^[^[:space:]]/ {
  "model": "FortiGate-200F",
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
                    if (blk != "" && !seen[blk]++) print blk "\n";
end
  "domain": "",
                    blk = $0;

++ echo -e --verbose
                    next;
  "hostname": "fg-campus-core"
config firewall address
                  }
 edit "Shield-WiFi"
}
  set subnet 10.10.10.10 255.255.255.255

#hostname="fg-campus-core"
+ echo
                  {
#model="FortiGate-200F"
+ (( i++ ))
  set comment "Wireless AP Gateway"

+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Z4GgC4NgYA
+ (( i < count ))
                    blk = blk divisor " " $0;
config firewall address
 next
 edit "Vision-Link"
end'
                  }
  set subnet 192.168.2.12 255.255.255.255
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
  set comment "Vision’s quantum channel"
                  }
 next
                ' reports/10.0.0.1/misc/switch3.conf
+ [[ -n {
  "vendor": "fortinet",
end ]]
+ newline
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
++ basename reports/192.168.0.100/cisco/campus-sw-access01
  "hostname": "fg-campus-core"
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface

 edit "core"
#hostname="fg-campus-core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
#model="FortiGate-200F"

 next
config firewall address
+ sed '1{/^[[:space:]]*$/d;}'
 edit "Vision-Link"
end
  set subnet 192.168.2.12 255.255.255.255
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'

config firewall address
+ grep -F 10.0.0.1
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
  set comment "Vision’s quantum channel"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": "",
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
config firewall address
 edit "Shield-WiFi"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ return 0
  set subnet 10.10.10.10 255.255.255.255
++ echo -e --verbose
  set comment "Wireless AP Gateway"
 next
end'
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ (( i++ ))
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ sed '/^[[:space:]]*$/d'
+ (( i < count ))
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ local count=1
+ [[ -z cisco ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ configs_objects
+ local SCRIPT_DIR=./scripts
+ case "${target_platform}" in
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ result=0
                  END {
+ newline
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ result=0
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ exit 0
+ local count=1
+ cat -n
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VFOXw1Xa18 ]]
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VFOXw1Xa18
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local search_pattern
+ [[ false == true ]]
+ local export_objects=true
+ [[ true == true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
+ [[ export =~ ^(logger|l)$ ]]
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ export =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ newline
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ (( i = 0 ))
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ grep -F 10.10.10.10
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline 2
+ (( i < count ))
+ (( i++ ))
+ local export_objects=true
+ for xitem in "${@}"
+ echo
+ configs_objects
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ IFS==
+ [[ export =~ ^(logger|l)$ ]]
+ read -r key value
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ which awk
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ local count=2
+ [[ export == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
++ cut -d/ -f2
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ -z '' ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ export console_output=false
+ newline
+ local count=1
+ (( i = 0 ))
+ console_output=false
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ result=0
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ case "${target_file}" in
+ [[ verbose =~ ^(export|r)$ ]]
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -z '' ]]
+ script_helper=false
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ [[ verbose =~ ^(search|s)$ ]]
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ local count=1
+ newline
+ return 0
+ local count=1
++ cut -d/ -f2
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo
+ (( i = 0 ))
+ IFS=' 	
+ (( i++ ))
+ (( i < count ))
'
+ [[ -z '' ]]
+ newline 2
+ (( i < count ))
++ echo -e --verbose
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ cat -n
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console ]]
+ (( i++ ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ local count=2
+ case "${target_file}" in
+ [[ true == true ]]
+ (( i = 0 ))
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ search_terms=()
+ search_pattern=192.168.1.11
+ declare -a search_terms
++ echo -e --verbose
+ local count=1
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]]
+ echo
+ [[ -z fortinet ]]
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list != *,* ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ mapfile -t search_terms
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ result=0
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ echo
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ (( i++ ))
+ [[ 0 -ne 0 ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ newline
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
++ IFS=,
+ (( i < count ))
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
++ echo 10.10.10.10
+ (( i < count ))
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ (( i < count ))
+ echo
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ (( i++ ))
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ (( i < count ))
+ return 0
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ declare -a execute__netwowrk_extract
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
++ tr -d '\r'
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ local parent_dir=reports/192.168.1.10/misc
+ echo
+ cat -n
+ search_pattern=192.168.0.100
+ mkdir -p reports/192.168.0.100/cisco/.objects
++ grep -v '^\s*$'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
++ which awk
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ return 0
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
++ grep -v '^#'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ basename reports/192.168.1.10/misc/fw3
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ false == true ]]
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ grep -v '^#'
+ [[ -z true ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ [[ -z '' ]]
+ script_helper=false
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ cat -n
+ search_terms=()
+ declare -a search_terms
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ configs_objects
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ (( i < count ))
+ IFS=' 	
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
'
+ return 0
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ local awk_bin=/usr/bin/awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ local first_search_entry=198.51.100.75
+ search_terms=()
+ declare -a search_terms
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ local last_search_entry=198.51.100.75
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ case "${target_file}" in
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--dmz-fw2-backup.cfg.console
+ local search_pattern
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.n5SZb6Xkbt/network-extract--perimeter-fw1.cfg.console
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ case "${target_platform}" in
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ local count=1
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

+ newline
                    # Skip JSON preamble
+ ((  count == 0  ))
                    /^{$/            { in_json_header = 1; next }
++ tr -d '\r'
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ local first_search_entry=198.51.100.75

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
+ local last_search_entry=198.51.100.75
                      next;
                    }
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ true == true ]]
+ [[ true == true ]]

+ local count=1
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
                    # Add edit line to current block
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
++ printf '%*s' 12 ''
                    /^ edit / {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
                      blk = blk divisor " " $0;
+ newline
                      next;
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console ]]
                    }

+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
+ local count=1
                    # Add next to block
+ (( i = 0 ))
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console ]]
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ (( i < count ))
                      blk = "";
+ echo
                      next;
                    }

+ case "${target_file}" in
+ (( i < count ))
+ case "${target_platform}" in
+ (( i++ ))
                    # Accumulate middle lines
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
++ grep -v '^\s*$'
                    {
                      blk = blk divisor " " $0;
                    }
+ local 'indent=            '
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ return 0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'

+ (( i++ ))
                    END {
+ (( i < count ))
+ [[ true == true ]]
                      # No need for final print — all blocks end with end
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-configs--ips.list ]'
                    }
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
                  BEGIN {
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
                    in_json_header = 0;
+ local search_pattern
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ [[ -z fortinet ]]
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ ((  count == 0  ))
                    blk = "";
+ local count=1
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console ]]
                  }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
                  /^[[:space:]]*$/ { next }
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local count=1
+ [[ cfg == \c\f\g ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ newline
+ case "${target_file}" in
                  /^{$/ { in_json_header = 1; next }
+ (( i++ ))
+ (( i < count ))
                  /^}$/ {
+ local count=1
+ echo
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ (( i < count ))
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
                    blk = $0;
+ (( i++ ))
                    next;
+ (( i < count ))
                  }
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
++ grep -v '^#'
+ (( i = 0 ))
++ tr -d '\r'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ grep -F 192.168.0.100
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i < count ))
++ echo reports/192.168.1.10/misc/fw3.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ case "${target_file}" in
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local parent_dir=reports/192.168.2.12/fortinet
++ grep -v '^\s*$'
+ grep -F 192.168.1.11
++ cut -d/ -f2
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ (( i < count ))
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--perimeter-fw1.cfg.console
+ newline
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'extracted_configuration={
+ (( i++ ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "vendor": "cisco",
+ newline
+ (( i < count ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ grep -v '^#'
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console ]]
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch3.conf.console
++ cut -d/ -f2
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.syvYAoM5Ot ]]
+ local count=1
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.syvYAoM5Ot
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ echo
+ exit 0
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4WE36c0o4d ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ false == true ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.1.10
+ mkdir -p reports/192.168.1.10/misc/.objects
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4WE36c0o4d
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YLbaKvenhx ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YLbaKvenhx
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console ]]
+ result=0
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ local first_search_entry=203.0.113.25
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--dmz-fw2-backup.cfg.console
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ true == true ]]
+ newline
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ configs_objects
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ] ]]
+ local parent_dir=reports/192.168.100.100/fortinet
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ sed '/^[[:space:]]*$/d'
+ newline
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-configs--ips.list ]'
+ local search_pattern
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ ((  count == 0  ))
+ (( i++ ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ search_pattern=192.168.2.12
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ sed '/^[[:space:]]*$/d'
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ result=0
+ exit 0
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rbPvxRYIBD ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rbPvxRYIBD
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ output_dir=reports/203.0.113.25/fortinet
+ [[ ! -d reports/203.0.113.25/fortinet ]]
+ cat -n
+ local 'extracted_configuration={
+ output_dir=reports/203.0.113.25/misc
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
  "vendor": "fortinet",
+ [[ ! -d reports/203.0.113.25/misc ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
  "hostname": "fg-branch-vpn-01"
+ result=0
}

#hostname="fg-branch-vpn-01"
+ result=0
#model="FortiGate-60F"
+ exit 0
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ [[ 0 -ne 0 ]]
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y4SI6uwZ9A ]]
  "model": "",
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y4SI6uwZ9A
++ cut -d/ -f2
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
+ local count=1
end'
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ result=0
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ result=0
+ [[ -n {
+ newline
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ exit 0
  "version": "v7.2.5.F",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3MtpBMFwU7 ]]
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3MtpBMFwU7
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
+ local count=1
+ case "${target_platform}" in
  set srcaddr "10.10.10.10"
+ (( i = 0 ))
  set dstaddr "203.0.113.10"
  set action accept
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
  set logtraffic all
                    blk = "";
 next
                  }
++ dirname reports/198.51.100.75/misc/fw1.cfg
end ]]
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ grep -F 192.168.1.10
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
 edit 13
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console ]]
  set name "Remote NAT"
+ output_dir=reports/198.51.100.75/fortinet
+ local parent_dir=reports/10.10.10.10/fortinet
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
+ [[ ! -d reports/198.51.100.75/fortinet ]]
  set dstaddr "203.0.113.10"
  "version": "",
  "domain": "",
+ case "${target_file}" in
  "hostname": ""
  set action accept
}
  set logtraffic all
+ sed '/^[[:space:]]*$/d'
 next
+ newline

+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
end'
+ local count=1
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ [[ -n {
  "vendor": "fortinet",
+ (( i = 0 ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ search_pattern=192.168.2.12
+ (( i < count ))
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
  "domain": "",
+ echo
  "hostname": "fg-branch-vpn-01"
}

+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ (( i++ ))
+ case "${target_file}" in
#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Yrjs1xNyO9/network-extract--fw3.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ local search_pattern
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ grep -F 192.168.0.1
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ return 0
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
++ dirname -- ./scripts/network-extract.shell
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/192.168.1.10/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
++ basename reports/192.168.100.100/fortinet/fg-campus-core
+ [[ true == true ]]
+ output_dir=reports/198.51.100.75/misc
+ cat -n
+ [[ ! -d reports/198.51.100.75/misc ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ case "${target_platform}" in
++ basename reports/10.10.10.10/fortinet/fg-campus-core
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }
object-group network Shield-WiFi
 description Shield-controlled wireless network
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
+ result=0
 network-object host 10.10.10.10

 network-object 192.168.100.0 255.255.255.0
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
+ (( i < count ))

+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console ]]

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ command -v -- ./scripts/network-extract.shell
+ result=0
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ grep -F 192.168.2.12
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ output_dir=reports/192.168.1.10/misc
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local script_filename=cisco-configs.awk
+ case "${target_file}" in
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console ]]
object-group network Shield-WiFi
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ local script_filename=fortinet-configs.awk
+ (( i = 0 ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo
+ [[ true == true ]]
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--campus-sw-access01.cfg.console
 description Shield-controlled wireless network
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ (( i++ ))
+ local search_pattern
+ case "${target_file}" in
+ (( i < count ))
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
 network-object host 10.10.10.10
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console ]]
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ newline 2
+ result=0
 network-object 192.168.100.0 255.255.255.0

+ newline
+ exit 0
object network Shield-WiFi-Alias
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
 host 10.10.10.10
+ local count=1
 description Guest NAT'
+ local count=2
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUo1ZmnVbF ]]
+ (( i = 0 ))
+ (( i < count ))
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUo1ZmnVbF
+ sed '/^[[:space:]]*$/d'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ echo
+ (( i < count ))
+ result=0
+ newline
+ (( i++ ))
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
+ local count=1
+ echo
+ local search_pattern
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ return 0
+ echo
+ [[ -n {
+ (( i++ ))
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
++ dirname -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
  "vendor": "cisco",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
+ newline
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console ]]
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
++ which awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ case "${target_platform}" in
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console ]]
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console ]]
                    }
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ case "${target_file}" in

+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.83MmYWMgbr/network-extract--campus-sw-access01.cfg.console
+ case "${target_file}" in
++ echo reports/192.168.2.12/misc/fw1.cfg
                    # Skip blank lines
+ cat reports/192.168.1.10/misc/.objects/fw3.list
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
  "model": "",
  "version": "",
                      next;
                    }
+ local SCRIPT_DIR=./scripts
  "domain": "",

                    # Add edit line to current block
++ which awk
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

+ local script_filename=fortinet-configs.awk
                    # Add next to block
                    /^[[:space:]]*next$/ {
+ local script_filepath=./scripts/extract/fortinet-configs.awk
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ cut -d/ -f2
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ cat -n
++ dirname -- ./scripts/network-extract.shell
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ grep -F 192.168.2.12
++ cut -d/ -f2
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
  "hostname": ""
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ result=0
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ 0 -ne 0 ]]
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ newline
+ (( i = 0 ))
+ search_pattern=192.168.2.12
}
+ echo
+ result=0
+ (( i < count ))
+ echo
+ (( i++ ))
+ local SCRIPT_DIR=./scripts
+ (( i < count ))
+ local count=1
+ local script_filename=cisco-configs.awk
+ exit 0
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
+ sed '/^[[:space:]]*$/d'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xvT074jvnr ]]
+ (( i < count ))
+ [[ false == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xvT074jvnr
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ return 0
+ (( i++ ))
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ [[ true == true ]]
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
++ IFS=,
+ configs_objects
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
++ IFS=,
++ dirname -- ./scripts/network-extract.shell
+ mkdir -p reports/192.168.2.12/misc/.objects
+ case "${target_file}" in
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
++ echo 203.0.113.25
+ result=0
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console ]]

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
++ which awk
+ cat reports/10.0.0.1/misc/.objects/switch1.list
++ echo 203.0.113.25
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ exit 0
+ result=0
object-group network Shield-WiFi
 description Shield-controlled wireless network
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
 network-object host 10.10.10.10
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console ]]
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w6kNmqbr1c ]]
+ exit 0
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.w6kNmqbr1c
 network-object 192.168.100.0 255.255.255.0
+ local count=1
+ declare -a execute__netwowrk_extract
+ case "${target_file}" in

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KQ6Rj4wQiU ]]
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
object-group network Shield-WiFi
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw1.cfg.console
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ (( i++ ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KQ6Rj4wQiU
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ search_pattern=10.10.10.10
++ which awk
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
++ cut -d/ -f2
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hkoewwcT3P/network-extract--fg-campus-core.cfg.console
+ cat -n
+ cat -n
++ which awk
++ which awk
+ result=0
+ [[ 0 -ne 0 ]]
++ IFS=,
+ [[ true == true ]]
++ echo 198.51.100.75
+ local SCRIPT_DIR=./scripts
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ local script_filename=cisco-configs.awk
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "hostname": ""
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
 description Shield-controlled wireless network
+ newline
+ declare -a execute__netwowrk_extract
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local parent_dir=reports/10.10.10.10/fortinet
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
++ IFS=,
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console ]]
++ echo 198.51.100.75
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ declare -a execute__netwowrk_extract
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ search_pattern=192.168.100.100
++ which awk
+ mkdir -p reports/192.168.100.100/fortinet/.objects
++ IFS=,
++ which awk
+ [[ true == true ]]
++ echo 192.168.1.10
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p82neLUyNF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p82neLUyNF
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ echo
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ return 0
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
++ basename reports/10.10.10.10/fortinet/fg-testing-config
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ true == true ]]
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ case "${target_platform}" in
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ case "${target_platform}" in
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
++ which awk
                    /^#(hostname|model|config-version)=/ { next }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ cat -n
                  }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    # Add edit line to current block
                    if (in_json_header == 1) {
                    /^ edit / {
                      blk = blk divisor " " $0;
                      in_json_header = 0;
                      next;
                      next;
                    }

                    }
                    # Add next to block
                    /^[[:space:]]*next$/ {
                  }
                      blk = blk divisor " " $0;
                      next;
                    }

                  (in_json_header == 1) { next }
                    # Finalize block at end
                  /^[^[:space:]]/ {
                    /^[[:space:]]*end$/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = blk divisor $0;
+ local 'indent=            '
+ local 'indent=            '
                    blk = $0;
                      if (blk != "" && !seen[blk]++) print blk;
                    next;
+ [[ true == true ]]
                      blk = "";
                  }
                      next;
                    }
                  {
+ [[ true == true ]]
                    blk = blk divisor " " $0;
                  }

                  END {
                    # Accumulate middle lines
                    {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = blk divisor " " $0;
                  }
                    }

+ newline
                ' reports/192.168.2.12/misc/fw1.cfg
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
                    END {
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console ]]
                      # No need for final print — all blocks end with end
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
+ (( i = 0 ))
++ which awk
                    }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console ]]
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ grep -F 10.10.10.10
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ result=0
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ exit 0
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local awk_bin=/usr/bin/awk
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y25JJhYBNg ]]
+ cat -n
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y25JJhYBNg
+ local search_pattern
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ newline
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E6qgpsorD1 ]]
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E6qgpsorD1
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.2.12
++ IFS=,
++ echo 203.0.113.25
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ execute__netwowrk_extract=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i < count ))
+ declare -a execute__netwowrk_extract
+ local 'indent=            '
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ return 0
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ newline
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local count=1
+ exit 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9QL1sjE7Q ]]
+ (( i < count ))
+ newline 2
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.b9QL1sjE7Q
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
+ local count=2
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i = 0 ))
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-branch-vpn-01.cfg.console
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo
+ newline
+ (( i++ ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i < count ))
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ return 0
++ printf '%*s' 12 ''
++ which awk
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'indent=            '
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ result=0
+ newline
++ printf '%*s' 12 ''
+ [[ 0 -ne 0 ]]
+ newline
++ cut -d/ -f2
+ case "${target_platform}" in
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
                      in_json_header = 0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local 'indent=            '
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
                    }
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'

+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
                    # Skip blank lines
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    /^[[:space:]]*$/ { next }
+ newline

+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local count=1
                    # Skip JSON preamble
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
                    /^{$/            { in_json_header = 1; next }
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ (( i = 0 ))
+ newline
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console ]]
                    (in_json_header == 1) { next }
+ local count=1

+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i = 0 ))
                    # Skip platform metadata
+ (( i < count ))
                    /^#(hostname|model|config-version)=/ { next }
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))

                    # Start of a new block
                    /^config / {
+ echo
                      if (blk != "") print blk;
+ echo
                      blk = $0;
+ (( i++ ))
                      next;
                    }
+ (( i < count ))
+ (( i++ ))
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '             -f ./scripts/extract/cisco-configs.awk \'

+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                    # Add edit line to current block
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
                    /^ edit / {
                      blk = blk divisor " " $0;
+ case "${target_file}" in
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
                      next;
                    }

                    # Add next to block
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
+ message '                .cache/resources/misc/fw1.cfg'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
                      next;
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
                    }

+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
                      if (blk != "" && !seen[blk]++) print blk;
+ newline
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local count=1
                    END {
                      # No need for final print — all blocks end with end
                    }
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ grep -F 192.168.100.100
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local awk_bin=/usr/bin/awk
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ case "${target_file}" in
+ sed '/^[[:space:]]*$/d'
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ true == true ]]
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console ]]
+ cat -n
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fg-campus-core.cfg.console
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local 'extracted_configuration={
+ result=0
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ result=0
  "domain": "",
+ exit 0
  "hostname": "fg-branch-vpn-01"
}

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rzJ2p6NFWS ]]
+ [[ 0 -ne 0 ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rzJ2p6NFWS
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ result=0
++ printf '%*s' 12 ''
+ local 'indent=            '
+ local 'extracted_configuration={
+ [[ true == true ]]
  "vendor": "cisco",
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "model": "",
  "version": "v7.2.5.F",
  "version": "",
  "domain": "",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ [[ true == true ]]
  "hostname": ""
}
}

+ newline
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
object-group network Krypton-Cloud
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=1
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
 description Cloud-facing external nodes

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console ]]
 network-object host 198.51.100.75
+ (( i = 0 ))
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
config firewall address
 network-object host 203.0.113.25
 edit "Public-Test"

  set subnet 203.0.113.25 255.255.255.255
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
  set comment "Public NAT exposure for Red Skull trap"
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
+ (( i = 0 ))
object network Krypton-Gateway
 next
 host 203.0.113.25
+ (( i++ ))
 description Secure NAT boundary for cloud access'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ (( i < count ))
+ case "${target_file}" in
end ]]
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xON8OfruKX/network-extract--switch1.conf.console
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ result=0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n {
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
+ (( i++ ))
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console ]]
  "model": "",
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
  "version": "",
+ (( i < count ))
  "domain": "",
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console ]]
  "hostname": ""
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ case "${target_file}" in
}
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ false == true ]]

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PYksfmEiMa/network-extract--fg-branch-vpn-01.cfg.console
object-group network Krypton-Cloud
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ true == true ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'extracted_configuration={
 network-object host 203.0.113.25
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",

+ message '                .cache/resources/misc/fw3.cfg'
  "domain": "",
object network Krypton-Gateway
 host 203.0.113.25
  "hostname": "fg-branch-vpn-01"
 description Secure NAT boundary for cloud access ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
}

+ local 'message=                .cache/resources/misc/fw3.cfg'
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ newline
+ result=0
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local count=1

+ [[ 0 -ne 0 ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
config system interface
 edit "wan1"
+ (( i = 0 ))
  set ip 198.51.100.75 255.255.255.0
+ (( i < count ))
+ [[ true == true ]]
  set alias "Branch ISP"
 next
+ echo
end
+ (( i++ ))
+ (( i < count ))

config firewall address
 edit "Branch-Public"
+ newline
  set subnet 198.51.100.75 255.255.255.255
+ local count=1
  set comment "Branch NAT"
+ (( i = 0 ))
 next
end'
+ (( i < count ))
+ echo
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ (( i++ ))
}

#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
config system interface
  "version": "v7.2.5.F",
 edit "wan1"
  "domain": "",
  set ip 198.51.100.75 255.255.255.0
  "hostname": "fg-branch-vpn-01"
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
}
+ return 0
  set alias "Branch ISP"

+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
#hostname="fg-branch-vpn-01"
 next
+ configs_objects
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
end
#model="FortiGate-60F"

#config-version=FGT_60F-v7.2.5.F-build1517-230421
config firewall address
 edit "Branch-Public"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console

  set subnet 198.51.100.75 255.255.255.255
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console ]]
config firewall address
 edit "Public-Test"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
  set comment "Branch NAT"
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console ]]
  set subnet 203.0.113.25 255.255.255.255
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ case "${target_file}" in
  set comment "Public NAT exposure for Red Skull trap"
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
 next
end ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
end'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ newline
  "domain": "",
+ [[ -n {
  "vendor": "fortinet",
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
  "hostname": ""
+ local count=1
}
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
  "model": "FortiGate-60F",
+ (( i = 0 ))

+ case "${target_file}" in
object-group network Krypton-Cloud
 description Cloud-facing external nodes
  "version": "v7.2.5.F",
+ (( i < count ))
 network-object host 198.51.100.75
+ echo
 network-object host 203.0.113.25

+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
object network Krypton-Gateway
  "domain": "",
  "hostname": "fg-branch-vpn-01"
}
+ (( i < count ))
 host 203.0.113.25

#hostname="fg-branch-vpn-01"
+ result=0
#model="FortiGate-60F"
+ exit 0
 description Secure NAT boundary for cloud access'
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OdVvm8YlTG ]]
config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OdVvm8YlTG
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ -n {
  "model": "",
 next
  "vendor": "cisco",
  "version": "",
  "domain": "",
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
  "model": "",
+ local 'extracted_configuration={
  "hostname": ""
end ]]
  "vendor": "cisco",
}
  "version": "",
  "model": "",
  "domain": "",
  "hostname": ""

+ echo -en '{
}
interface Vlan20
  "vendor": "fortinet",
 ip address 192.168.1.10 255.255.255.0'
  "model": "FortiGate-60F",
  "version": "",
  "version": "v7.2.5.F",
+ case "${target_platform}" in
  "domain": "",
  "domain": "",
  "hostname": "fg-branch-vpn-01"

}
object-group network Krypton-Cloud
+ result=0
  "hostname": ""
+ cat -n

 description Cloud-facing external nodes
}
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
object-group network Krypton-Cloud
                    BEGIN {
+ [[ -n {
 description Cloud-facing external nodes

 network-object host 198.51.100.75
config firewall address
                      blk = "";
 network-object host 203.0.113.25
                      in_json_header = 0;
  "vendor": "cisco",
+ sed '1{/^[[:space:]]*$/d;}'
                    }
 edit "Public-Test"
 network-object host 198.51.100.75
++ dirname reports/10.10.10.10/misc/fw3.cfg

 network-object host 203.0.113.25
object network External-Failover


  set subnet 203.0.113.25 255.255.255.255
  "model": "",
+ print '{
 host 198.51.100.75
  "vendor": "fortinet",
object network Krypton-Gateway
 description Secondary outbound route for edge'
  "model": "FortiGate-60F",
                    # Skip blank lines
  set comment "Public NAT exposure for Red Skull trap"
+ result=0
 host 203.0.113.25
 next
                    /^[[:space:]]*$/ { next }
 description Secure NAT boundary for cloud access ]]
  "version": "v7.2.5.F",
+ [[ -n {

  "version": "",
                    # Skip JSON preamble
end'
+ echo -en '{
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "domain": "",
  "domain": "",
  "version": "",
  "model": "",
  "hostname": ""
                    /^{$/            { in_json_header = 1; next }
}
  "version": "",
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
  "hostname": "fg-branch-vpn-01"
                    (in_json_header == 1) { next }
  "domain": "",


  "domain": "",
}
  "hostname": ""

interface Vlan20
  "hostname": ""
+ grep -F 10.10.10.10
}
                    # Skip platform metadata
 ip address 192.168.1.10 255.255.255.0 ]]
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]

#hostname="fg-branch-vpn-01"
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                    /^#(hostname|model|config-version)=/ { next }
object-group network Krypton-Cloud

}

                    # Start of a new block
config system interface
                    /^config / {
                      if (blk != "") print blk;
 description Cloud-facing external nodes
 edit "wan1"

  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
                      blk = $0;
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
object-group network Krypton-Cloud
 network-object host 198.51.100.75
 description Cloud-facing external nodes
 network-object host 203.0.113.25
 network-object host 198.51.100.75

 network-object host 203.0.113.25
 next
+ case "${target_file}" in

                      next;
object network External-Failover
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ sed '1{/^[[:space:]]*$/d;}'
                    }
object network Krypton-Gateway
end

config firewall address

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
 edit "Branch-Public"
 host 198.51.100.75
  set subnet 198.51.100.75 255.255.255.255
 description Secondary outbound route for edge ]]
                      next;
  set comment "Branch NAT"
 host 203.0.113.25
                    }
 next

end'
                    # Add next to block
 description Secure NAT boundary for cloud access'
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
+ [[ -n {
  "vendor": "fortinet",
                      if (blk != "" && !seen[blk]++) print blk;
  "model": "FortiGate-60F",
                      blk = "";
  "version": "v7.2.5.F",
  "domain": "",
  "hostname": "fg-branch-vpn-01"
+ sed '/^[[:space:]]*$/d'
}
                      next;
+ cat -n

#hostname="fg-branch-vpn-01"
                    }

                    # Accumulate middle lines
#model="FortiGate-60F"
                    {
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                      blk = blk divisor " " $0;
+ result=0

                    }
config system interface

                    END {
 edit "wan1"
                      # No need for final print — all blocks end with end
  set ip 198.51.100.75 255.255.255.0
                    }
+ exit 0
  set alias "Branch ISP"
 next
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u9rfChuga0 ]]
end

+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
config firewall address
  "domain": "",
 edit "Branch-Public"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.u9rfChuga0
  set subnet 198.51.100.75 255.255.255.255
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
  set comment "Branch NAT"
+ result=0
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
+ [[ -n {
+ exit 0
  "vendor": "cisco",
  "model": "FortiGate-60F",
  "model": "",
  "version": "",
+ newline 2
  "version": "v7.2.5.F",
  "domain": "",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iXFFp0I405 ]]
  "domain": "",
  "hostname": ""
  "hostname": "fg-branch-vpn-01"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iXFFp0I405
}
}


interface Vlan20
#hostname="fg-branch-vpn-01"
 ip address 192.168.1.10 255.255.255.0 ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ echo -en '{
  "vendor": "cisco",
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  "model": "",
+ local count=2
  "version": "",
  set alias "Branch ISP"
+ (( i = 0 ))
  "domain": "",
 next
  "hostname": ""
end
}

interface Vlan20

 ip address 192.168.1.10 255.255.255.0'
+ (( i < count ))
+ print '{
config firewall address
+ [[ true == true ]]
  "vendor": "cisco",
+ echo
  "model": "",
 edit "Branch-Public"
  "version": "",
  set subnet 198.51.100.75 255.255.255.255
  "domain": "",
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
  set comment "Branch NAT"
  "hostname": ""
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console ]]
+ local parent_dir=reports/10.10.10.10/misc
}
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console ]]
 next
+ newline 2
end'
+ local count=1
+ (( i++ ))
+ case "${target_file}" in

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-campus-core.cfg.console
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
+ [[ true == true ]]
 host 198.51.100.75
 description Secondary outbound route for edge'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
 description Secondary outbound route for edge ]]
+ (( i = 0 ))
+ echo
+ echo -en '{
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i++ ))
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
  "domain": "",
+ (( i < count ))
  "hostname": ""
}
+ local 'extracted_configuration={

  "vendor": "cisco",
+ (( i < count ))
object-group network Krypton-Cloud
+ echo
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
  "version": "",
 description Cloud-facing external nodes
+ [[ true == true ]]
+ local count=1
  "domain": "",
 network-object host 198.51.100.75
+ (( i = 0 ))
  "hostname": ""
 network-object host 203.0.113.25
}

+ (( i < count ))
object network External-Failover
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ (( i++ ))
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]

+ echo
+ (( i < count ))
object-group network Panther-Edge
 host 198.51.100.75
 description Internet-facing proxy systems
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
 description Secondary outbound route for edge'
+ return 0
+ (( i++ ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ result=0
+ local count=1
+ (( i = 0 ))
+ [[ -n {
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
  "vendor": "cisco",
+ newline 2
  "model": "",
+ echo
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ basename reports/10.10.10.10/misc/fw3
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console ]]
+ return 0
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console ]]
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local count=2
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ echo

object-group network Panther-Edge
 description Internet-facing proxy systems
+ (( i++ ))
 network-object host 203.0.113.25
+ (( i < count ))
 network-object host 172.16.0.5 ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ echo -en '{
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "cisco",
+ case "${target_file}" in
  "model": "",
+ [[ true == true ]]
  "version": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
  "domain": "",
+ result=0
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ (( i < count ))
+ newline 2
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ result=0
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ exit 0
+ (( i < count ))
+ local search_pattern
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UeRd9M7ey0 ]]
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UeRd9M7ey0
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ false == true ]]
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console ]]
+ cat -n
+ case "${target_file}" in
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2Is3P0h4IF/network-extract--fw1.cfg.console
+ newline
+ configs_objects
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ local count=1
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ false == true ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ configs_objects
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
++ echo reports/10.10.10.10/misc/fw3.cfg
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ newline 2
+ configs_objects
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.KJxNsVY9Vj/network-extract--fg-campus-core.cfg.console
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ configs_objects
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ configs_objects
++ dirname reports/192.168.1.10/misc/switch1.conf
+ newline
+ local count=1
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ (( i = 0 ))
+ result=0
+ local parent_dir=reports/203.0.113.25/fortinet
+ exit 0
+ local parent_dir=reports/203.0.113.25/misc
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/misc/.objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JG3ymkNPlA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JG3ymkNPlA
+ (( i < count ))
+ echo
+ (( i++ ))
+ local parent_dir=reports/198.51.100.75/fortinet
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PpDhzwnNJg ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PpDhzwnNJg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ basename reports/203.0.113.25/misc/fw1
+ [[ false == true ]]
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ local parent_dir=reports/192.168.1.10/misc
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ configs_objects
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
+ local parent_dir=reports/198.51.100.75/misc
++ basename reports/192.168.1.10/misc/switch1
++ dirname reports/203.0.113.25/misc/fw3.cfg
++ basename reports/198.51.100.75/misc/fw1
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fg-testing-config.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/misc/fw3.cfg
+ grep -F 10.10.10.10
+ local parent_dir=reports/203.0.113.25/misc
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ local search_pattern
++ echo reports/203.0.113.25/misc/fw1.cfg
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list
+ local search_pattern
++ cut -d/ -f2
++ cut -d/ -f2
+ sed '/^[[:space:]]*$/d'
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ basename reports/203.0.113.25/misc/fw3
++ cut -d/ -f2
++ echo reports/192.168.1.10/misc/switch1.conf
++ echo reports/198.51.100.75/misc/fw1.cfg
++ cut -d/ -f2
++ cut -d/ -f2
+ search_pattern=203.0.113.25
+ result=0
+ search_pattern=203.0.113.25
+ exit 0
+ mkdir -p reports/203.0.113.25/fortinet/.objects
+ mkdir -p reports/203.0.113.25/misc/.objects
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NoRPzDNUaF ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NoRPzDNUaF
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ result=0
+ [[ 0 -ne 0 ]]
+ search_pattern=198.51.100.75
+ [[ true == true ]]
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/203.0.113.25/misc/fw3.cfg
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
++ cut -d/ -f2
+ search_pattern=198.51.100.75
+ search_pattern=192.168.1.10
+ cat -n
+ mkdir -p reports/198.51.100.75/misc/.objects
+ mkdir -p reports/192.168.1.10/misc/.objects
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ case "${target_platform}" in
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }
                  }

+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ grep -F 203.0.113.25
                    # Skip JSON preamble
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    /^{$/            { in_json_header = 1; next }
                    }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }


+ grep -F 203.0.113.25
                    # Skip platform metadata
                  (in_json_header == 1) { next }
                    # Skip blank lines
                    /^#(hostname|model|config-version)=/ { next }
                  /^[^[:space:]]/ {
                    /^[[:space:]]*$/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";


                    blk = $0;
                    # Skip JSON preamble
                    next;
+ grep -F 198.51.100.75
                  }
                    /^{$/            { in_json_header = 1; next }
                    # Start of a new block
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                  {
                    (in_json_header == 1) { next }
                    /^config / {
                    blk = blk divisor " " $0;
                      if (blk != "") print blk;
                      blk = $0;

                  }
                      next;
                    # Skip platform metadata
+ sed '/^[[:space:]]*$/d'
                    }
                  END {
                    /^#(hostname|model|config-version)=/ { next }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                  }
                    # Start of a new block

                    /^config / {
                ' reports/203.0.113.25/misc/fw1.cfg
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                      if (blk != "") print blk;
                    }
+ sed '/^[[:space:]]*$/d'
+ search_pattern=203.0.113.25
+ sed '/^[[:space:]]*$/d'
                      blk = $0;

                      next;
                    # Add next to block
                    }

                    /^[[:space:]]*next$/ {
+ mkdir -p reports/203.0.113.25/misc/.objects
                      blk = blk divisor " " $0;
                      next;
                    # Add edit line to current block
                    }
+ newline
                    /^ edit / {

                      blk = blk divisor " " $0;
+ local count=1
                    # Finalize block at end
                      next;
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                    }
                      if (blk != "" && !seen[blk]++) print blk;

                      blk = "";
+ (( i = 0 ))
                      next;
                    }
                    # Add next to block

                    # Accumulate middle lines
                    {
                    /^[[:space:]]*next$/ {
                      blk = blk divisor " " $0;
+ (( i < count ))
                    }
                      blk = blk divisor " " $0;

+ echo
                    END {
                      next;
+ (( i++ ))
                      # No need for final print — all blocks end with end
                    }
+ (( i < count ))
                    }

                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
                    # Finalize block at end
                    /^[[:space:]]*end$/ {
                      blk = blk divisor $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ return 0
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
                    in_json_header = 0;
                  BEGIN {
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                    in_json_header = 0;
                    blk = "";
                      next;
                    }
                  }
                  }
                  (in_json_header == 1) { next }
                  /^[[:space:]]*$/ { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    blk = $0;
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    next;
                  }
                    }
                  }
                  {
                  (in_json_header == 1) { next }
                    blk = blk divisor " " $0;
                  }
                  /^[^[:space:]]/ {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ grep -F 192.168.1.10
+ grep -F 198.51.100.75
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xRk4iExMBV/network-extract--fw3.cfg.console
+ case "${target_platform}" in
+ awk -v divisor=--ZGV2b3BzLXJlc291cmNlcy5zaGVsbA-- '
                  BEGIN {
+ result=0
                    in_json_header = 0;
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ [[ 0 -ne 0 ]]
                    blk = "";
                  }
+ result=0
+ result=0
                  /^[[:space:]]*$/ { next }
+ [[ true == true ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ [[ 0 -ne 0 ]]
+ [[ 0 -ne 0 ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ grep -F 203.0.113.25
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
                    if (in_json_header == 1) {
+ [[ true == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ result=0
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
                      in_json_header = 0;
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ [[ 0 -ne 0 ]]
                      next;
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
                    }
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
                  }
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
                  (in_json_header == 1) { next }
+ cat -n
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
                  /^[^[:space:]]/ {
+ newline
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ local count=1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ newline
                    blk = $0;
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ echo
                    next;
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i++ ))
                  }
+ (( i < count ))
                  {
+ (( i++ ))
                    blk = blk divisor " " $0;
+ newline
+ (( i < count ))
                  }
+ (( i++ ))
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i < count ))
+ local count=1
                  }
+ (( i = 0 ))
                ' reports/203.0.113.25/misc/fw3.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ case "${target_file}" in
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ cat -n
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ cat -n
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ cat -n
+ cat -n
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IKpDHyiQMi ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.IKpDHyiQMi
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ newline
+ (( i = 0 ))
+ return 0
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ echo
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ return 0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ return 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console ]]
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ [[ true == true ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ return 0
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ cat -n
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ return 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hPvib95J6c/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgi2fyosXb ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.TOP2UY8e4M/network-extract--switch1.conf.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgi2fyosXb
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxIyfL1wy3 ]]
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WxIyfL1wy3
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1I9AIyR60s ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.1I9AIyR60s
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBifAGDZ6A ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fBifAGDZ6A
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.88QeWmnOpy/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8OKiTDaoCP ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8OKiTDaoCP
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qSSCemnfou ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qSSCemnfou
