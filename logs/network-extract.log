+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dAzkbP68Ns
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dAzkbP68Ns
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=--MTc0ODkxMjY4ODgxNTQxMzAwMAo--
++ divisor=--MTc0ODkxMjY4ODgxNTQxMzAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPwSeNx08X
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPwSeNx08X
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias system-metrics=system_metrics
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ IFS==
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODkxMjY4ODgzMzI1MTAwMAo--
++ divisor=--MTc0ODkxMjY4ODgzMzI1MTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ mktemp -d
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y5OrC9rEHm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y5OrC9rEHm
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ platform =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias pause=pause
+ [[ platform =~ ^(platform|p)$ ]]
++ alias print-line=print
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ alias print-file=print_file
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ 6 -eq 0 ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console --verbose
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ export console_output=false
+ console_output=false
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local export_objects=false
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \h\e\l\p ]]
+ [[ -z .cache/ips.list ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ [[ config == \v\e\r\b\o\s\e ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ -f .cache/ips.list ]]
+ IFS==
+ [[ .cache/ips.list != *,* ]]
+ read -r key value
+ mapfile -t search_terms
++ export divisor=--MTc0ODkxMjY4ODg1MTQzMzAwMAo--
++ divisor=--MTc0ODkxMjY4ODg1MTQzMzAwMAo--
+ source ./scripts/devops-helpers.shell
++ tr -d '\r'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ grep -v '^#'
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ script_filename=network-extract.shell
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ script_filename=network-extract
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2nRYfHwgt6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2nRYfHwgt6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias list-file=list_file
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console --verbose
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
+ [[ platform =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-message=message
+ oIFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
'
++ alias print-newline=newline
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
++ alias pause=pause
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias print-line=print
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ logger =~ ^(export|r)$ ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ dirname -- ./scripts/network-extract.shell
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ export divisor=--MTc0ODkxMjY4ODg3MDk3NDAwMAo--
++ divisor=--MTc0ODkxMjY4ODg3MDk3NDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ grep -v '^\s*$'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ IFS=,
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ read -r key value
+ [[ -z x ]]
+ set -euo pipefail
+ declare -a execute
+ export logs_location=logs
+ logs_location=logs
+ export LC_ALL=C
+ LC_ALL=C
+ mkdir -p logs/console
++ mktemp -d
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ printf '%*s' 12 ''
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fe1d6Fmoff
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fe1d6Fmoff
+ local 'indent=            '
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ true == true ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ newline
++ [[ -n '' ]]
+ local count=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
++ alias detect-vendor=detect_vendor
+ (( i++ ))
++ alias exit-error=exit_error
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias list-file=list_file
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias log-error=log_error
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias log-info=log_info
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias log-warn=log_warn
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-message=message
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias print-newline=newline
+ message '                configs/cisco/access-sw1-west.cfg'
++ alias pause=pause
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
++ alias print-line=print
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
++ alias print-file=print_file
+ newline
+ local count=1
+ (( i = 0 ))
++ alias relative-configpath=relative_configpath
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias system-metrics=system_metrics
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias validate-address=validate_address
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ oIFS=' 	
++ export cache_location=.cache
'
++ cache_location=.cache
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --verbose
+ output_dir=.cache/resources/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d .cache/resources/cisco ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'extracted_configuration={
+ [[ search =~ ^(platform|p)$ ]]
  "vendor": "cisco",
+ [[ search =~ ^(search|s)$ ]]
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ local search_pattern=.cache/ips.list
}

version 12.4
+ [[ search == \h\e\l\p ]]
hostname access-sw1-west

+ [[ search == \d\e\b\u\g ]]
interface Vlan1
+ [[ search == \d\r\y\-\r\u\n ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ search == \v\e\r\b\o\s\e ]]
 description Management Interface
+ for xitem in "${@}"

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ IFS==
 description Guest VLAN Gateway
+ read -r key value

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
++ export targets_location=targets
 description Management objects
++ targets_location=targets
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
++ export targets_logfile=logs/jobs/targets.jobs
 description Controlled guest devices
++ targets_logfile=logs/jobs/targets.jobs
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ newline 2
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
++ tr -d '\r'
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ local script_filename=cisco-configs.awk
+ [[ config =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(export|r)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local count=2
+ [[ config =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ echo
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
++ grep -v '^#'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ which awk
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
++ export divisor=--MTc0ODkxMjY4ODg5MTIwMTAwMAo--
++ divisor=--MTc0ODkxMjY4ODg5MTIwMTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+ export LC_ALL=C
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
+ alias serialize-object=serialize_objects
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ alias parse-cisco=main
+ local count=17
+ ((  count == 0  ))
+ newline
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -z x ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ export logs_location=logs
+ local count=1
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i = 0 ))
+ logs_location=logs
++ IFS=,
+ newline
+ (( i < count ))
+ mkdir -p logs/console
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ declare -a execute
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
+ newline
+ case "${target_file}" in
+ local count=1
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ extract =~ ^(extract|x)$ ]]
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ echo -e --platform=cisco
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fjMnTn2xCY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fjMnTn2xCY
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ true == true ]]
++ alias list-file=list_file
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
++ alias log-error=log_error
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
++ alias log-info=log_info
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console ]]
++ alias log-warn=log_warn
+ local awk_bin=/usr/bin/awk
+ case "${target_file}" in
++ alias print-message=message
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--access-sw1-west.cfg.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias print-newline=newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(config|c)$ ]]
+ message '                configs/cisco/branch-isr-02.cfg'
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ newline
+ local count=1
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ (( i++ ))
+ local target_platform=cisco
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console --verbose
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ oIFS=' 	
+ [[ platform == \d\r\y\-\r\u\n ]]
'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dAzkbP68Ns ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dAzkbP68Ns
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ command -v -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
+++ date +%s%N
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+++ base64
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
++ echo -e --verbose
 network-object host 192.168.1.11 ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local SCRIPT_DIR=./scripts
+ echo -en '{
+ local script_filename=cisco-configs.awk
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "hostname": "branch-isr-02"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
++ which awk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export divisor=--MTc0ODkxMjY4ODkxMjY3NTAwMAo--
++ divisor=--MTc0ODkxMjY4ODkxMjY3NTAwMAo--
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(export|r)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ local verbose=true
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ for xitem in "${@}"
'
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
++ mktemp -d
+ script_helper=false
+ [[ false == true ]]
++ alias network-configs--helper=network_configs__helper
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ alias parse-cisco=main
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ grep -v '^\s*$'
++ IFS=,
++ grep -v '^#'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uDS5DLE1r9
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uDS5DLE1r9
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ which awk
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ alias pause=pause
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias print-file=print_file
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ IFS==
+ read -r key value
+ newline
+ script_filename=network-extract.shell
++ alias system-metrics=system_metrics
+ script_filename=network-extract
+ local count=1
+ export network_extract__console=logs/console/network-extract.console
+ (( i = 0 ))
+ network_extract__console=logs/console/network-extract.console
+ (( i < count ))
+ echo
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
+ [[ false == true ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ false == true ]]
+ [[ true == true ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ local first_search_entry=10.0.0.1
++ export logs_location=logs
++ logs_location=logs
+ local last_search_entry=203.0.113.25
++ mkdir -p logs/console logs/jobs
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ 6 -eq 0 ]]
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
++ export actions_logfile=./logs/console/run.console
+ newline
++ actions_logfile=./logs/console/run.console
+ local count=1
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ (( i = 0 ))
++ touch ./logs/console/run.console
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--branch-isr-02.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPwSeNx08X ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BPwSeNx08X
+++ date +%s%N
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'extracted_configuration={
  "vendor": "cisco",
+ IFS==
  "model": "",
+ read -r key value
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
+ output_dir=.cache/resources/cisco
 ip address 192.168.0.1 255.255.255.0
+ [[ ! -d .cache/resources/cisco ]]
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
 network-object host 10.10.10.10 ]]
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ export divisor=--MTc0ODkxMjY4ODkzMTgxNDAwMAo--
++ divisor=--MTc0ODkxMjY4ODkzMTgxNDAwMAo--
+ source ./scripts/devops-helpers.shell
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ mktemp -d
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ newline 2
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ alias parse-cisco=main
+ (( i < count ))
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e8ikW3EtSN
+ mapfile -t search_terms
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e8ikW3EtSN
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_DIR=./scripts
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
++ alias log-error=log_error
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ tr -d '\r'
++ grep -v '^\s*$'
++ which awk
++ alias system-metrics=system_metrics
++ grep -v '^#'
++ alias validate-address=validate_address
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ alias warning-message=warning
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ newline
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ local count=1
++ logs_location=logs
+ (( i = 0 ))
+ (( i < count ))
++ mkdir -p logs/console logs/jobs
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ IFS=,
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ 6 -eq 0 ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ export actions_logfile=./logs/console/run.console
+ echo
++ actions_logfile=./logs/console/run.console
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console --verbose
++ touch ./logs/console/run.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
++ echo -e --platform=fortinet
+ [[ -z cisco ]]
+ oIFS=' 	
+ [[ true == true ]]
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ declare -a execute
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--campus-sw-access01.cfg.console
++ which awk
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y5OrC9rEHm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.y5OrC9rEHm
+++ date +%s%N
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ cfg == \c\f\g ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
++ export divisor=--MTc0ODkxMjY4ODk1MjgwMTAwMAo--
++ divisor=--MTc0ODkxMjY4ODk1MjgwMTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
+ alias parse-cisco=main
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ mkdir -p logs/console
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
++ dirname -- ./scripts/network-extract.shell
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ script_filename=network-extract.shell
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ script_filename=network-extract
  "hostname": "dmz-fw2-backup"
+ export network_extract__console=logs/console/network-extract.console
}
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

+ [[ verbose =~ ^(config|c)$ ]]
object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local script_filename=cisco-configs.awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local verbose=true
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ [[ extract =~ ^(config|c)$ ]]

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
+ [[ extract =~ ^(console|o)$ ]]
 description Guest access interface

+ [[ extract =~ ^(export|r)$ ]]
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
+ [[ extract =~ ^(extract|x)$ ]]
 description Inside LAN segment

interface GigabitEthernet0/2
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ [[ extract =~ ^(logger|l)$ ]]
 description Outbound Internet NAT interface

+ [[ extract =~ ^(platform|p)$ ]]
object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

+ [[ extract =~ ^(search|s)$ ]]
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

+ [[ extract == \h\e\l\p ]]
object network Sentinel-NAT
++ which awk
+ [[ extract == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ extract == \d\r\y\-\r\u\n ]]
 host 203.0.113.25
+ [[ extract == \v\e\r\b\o\s\e ]]
 description Corporate NAT edge
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nUCzV2boC3
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nUCzV2boC3

object-group network Sector-Wireless
+ IFS==
 description Staff WiFi clients
+ read -r key value
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface
++ [[ -n '' ]]

++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
++ [[ 5 -lt 4 ]]
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
++ alias detect-vendor=detect_vendor
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

++ alias exit-error=exit_error
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
++ alias list-file=list_file
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ alias log-error=log_error

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ alias log-info=log_info

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
++ alias log-warn=log_warn
++ tr -d '\r'
 description Inside LAN segment
++ alias print-message=message
++ grep -v '^\s*$'

interface GigabitEthernet0/2
 nameif outside
++ alias print-newline=newline
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
++ alias pause=pause
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
++ alias print-line=print
+ [[ 6 -eq 0 ]]
 network-object host 192.168.100.100
 network-object host 10.10.10.10
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]

object-group network Watchtower-DMZ
++ grep -v '^#'
 description Global secure relay
++ alias print-file=print_file
 network-object host 192.0.2.50'
+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console --verbose
++ echo -e --platform=fortinet
++ alias relative-configpath=relative_configpath
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
++ alias system-metrics=system_metrics
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
+ newline
+ local count=1
+ (( i = 0 ))
+ declare -a execute
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ echo
+ local target_platform=fortinet
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
++ which awk
+ [[ platform == \h\e\l\p ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z fortinet ]]
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ export actions_logfile=./logs/console/run.console
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ export targets_location=targets
++ printf '%*s' 12 ''
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --verbose
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--dmz-fw2-backup.cfg.console
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODkxMjY4ODk4MDIzMTAwMAo--
++ divisor=--MTc0ODkxMjY4ODk4MDIzMTAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ [[ verbose =~ ^(config|c)$ ]]
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ result=0
+ local verbose=true
+ exit 0
+ IFS=' 	
'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2nRYfHwgt6 ]]
+ [[ -z '' ]]
+ debug=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2nRYfHwgt6
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ alias serialize-object=serialize_objects
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
++ command -v -- ./scripts/network-extract.shell
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ alias parse-cisco=main
+ local SCRIPT_PATH=./scripts/network-extract.shell
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ -z x ]]

+ export logs_location=logs
object network Magneto-Core
+ logs_location=logs
 host 172.16.0.5
 description WAN firewall entry point ]]
+ mkdir -p logs/console
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ extract =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
  "model": "ASA",
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ extract =~ ^(logger|l)$ ]]
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
+ [[ extract =~ ^(platform|p)$ ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
++ grep -v '^\s*$'

+ [[ extract =~ ^(search|s)$ ]]
interface GigabitEthernet0/0
 nameif outside
 security-level 0
+ [[ extract == \h\e\l\p ]]
 ip address 203.0.113.25 255.255.255.0
+ [[ extract == \d\e\b\u\g ]]
 description External Internet-facing Interface
+ [[ extract == \d\r\y\-\r\u\n ]]

+ [[ extract == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/1
+ for xitem in "${@}"
 nameif inside
 security-level 100
+ IFS==
 ip address 10.0.0.1 255.255.255.0
+ read -r key value
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

++ grep -v '^#'
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

+ set -euo pipefail
object-group network Panther-Edge
 description Internet-facing proxy systems
+ export LC_ALL=C
 network-object host 203.0.113.25
+ LC_ALL=C
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
+ sed '1{/^[[:space:]]*$/d;}'
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

++ mktemp -d
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ which awk
+ local count=17
+ newline 2
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ local count=1
+ (( i = 0 ))
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
+ (( i < count ))
+ echo
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ (( i++ ))
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ newline
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local count=1
+ (( i = 0 ))
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo
+ (( i++ ))
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i < count ))
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djS6RF9glq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djS6RF9glq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ 6 -eq 0 ]]
+ source ./scripts/devops-resources.shell
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console --verbose
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ read -r key value
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo -e --search=.cache/ips.list
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
++ which awk
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ export actions_logfile=./logs/console/run.console
+ [[ logger == \d\e\b\u\g ]]
++ actions_logfile=./logs/console/run.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ IFS==
+ [[ search =~ ^(config|c)$ ]]
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--perimeter-fw1.cfg.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/misc/fw1.cfg
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ export targets_location=targets
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ targets_location=targets
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+++ date +%s%N
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+++ base64
+ [[ verbose == \h\e\l\p ]]
+ local target_config=configs/misc/fw1.cfg
+ result=0
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ exit 0
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fe1d6Fmoff ]]
+ local verbose=true
+ [[ config =~ ^(extract|x)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Fe1d6Fmoff
+ IFS=' 	
+ [[ config =~ ^(logger|l)$ ]]
'
+ [[ -z '' ]]
+ [[ config =~ ^(platform|p)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ dry_run=false
+++ tr -dc a-zA-Z0-9
+ [[ config == \h\e\l\p ]]
+ [[ -z true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ console_output=false
+ for xitem in "${@}"
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ IFS==
+ local export_objects=false
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ tr -d '\r'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODkxMjY4OTAwOTY3NjAwMAo--
++ divisor=--MTc0ODkxMjY4OTAwOTY3NjAwMAo--
++ grep -v '^#'
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ which awk
+ alias serialize-object=serialize_objects
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
+ mkdir -p logs/console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ local 'extracted_configuration={
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ extract =~ ^(platform|p)$ ]]
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ extract =~ ^(search|s)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ extract == \h\e\l\p ]]
config system interface
 edit "wan1"
+ [[ extract == \d\e\b\u\g ]]
  set ip 198.51.100.75 255.255.255.0
+ [[ extract == \d\r\y\-\r\u\n ]]
  set alias "Branch ISP"
+ [[ extract == \v\e\r\b\o\s\e ]]
 next
+ for xitem in "${@}"
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end
+ IFS==

config firewall address
+ read -r key value
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
+ local first_search_entry=10.0.0.1
++ mktemp -d
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ local last_search_entry=203.0.113.25
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 next
 edit "Panther-Vault"
+ [[ true == true ]]
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ result=0
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n {
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ local 'message=Search Pattern: [ .cache/ips.list ]'
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ local count=17
config system interface
 edit "wan1"
+ ((  count == 0  ))
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 next
 edit "internal"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
 next
end
+ newline

config firewall address
+ local count=1
 edit "Branch-Gateway"
+ (( i = 0 ))
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
+ (( i < count ))
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
+ echo
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ (( i++ ))
  set comment "Public NAT exposure for Red Skull trap"
+ (( i < count ))
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
++ IFS=,
++ echo -e --platform=cisco
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
+ declare -a execute
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
+ script_filename=network-extract.shell
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
+ script_filename=network-extract
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ export network_extract__console=logs/console/network-extract.console
++ which awk
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Lejr0oHpDf
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Lejr0oHpDf
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ platform =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ platform =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ platform =~ ^(export|r)$ ]]
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ platform =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ alias pause=pause
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias print-file=print_file
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias relative-configpath=relative_configpath
+ read -r key value
++ alias system-metrics=system_metrics
+ newline 2
+ local awk_bin=/usr/bin/awk
++ alias validate-address=validate_address
+ local count=2
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ (( i = 0 ))
++ alias warning-message=warning
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ (( i < count ))
++ export LC_ALL=C
++ LC_ALL=C
+ echo
+ [[ 6 -eq 0 ]]
++ export 'nl=\n'
+ (( i++ ))
++ nl='\n'
+ (( i < count ))
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ echo
++ export cache_location=.cache
++ cache_location=.cache
+ (( i++ ))
++ export logs_location=logs
+ (( i < count ))
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console --verbose
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ IFS==
+ read -r key value
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=.cache/ips.list
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ output_dir=.cache/resources/fortinet
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ ! -d .cache/resources/fortinet ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ newline
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ search =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=configs/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+++ tr -dc a-zA-Z0-9
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ local script_filename=fortinet-configs.awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ case "${target_file}" in
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ verbose == \d\e\b\u\g ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "version": "",
+ [[ verbose == \v\e\r\b\o\s\e ]]
  "domain": ""
+ local verbose=true
  "hostname": "fg-campus-core"
}

+ IFS=' 	
#hostname="fg-campus-core"
'
#model="FortiGate-200F"

+ [[ -z '' ]]
config system interface
+ debug=false
 edit "core"
  set ip 10.10.10.10 255.255.255.0
+ [[ -z '' ]]
  set alias "Campus Core Transit"
+ dry_run=false
 next
+ [[ -z true ]]
 edit "wifi"
+ [[ -z '' ]]
  set ip 192.168.100.100 255.255.255.0
+ export console_output=false
  set alias "Wireless VLAN"
 next
++ which awk
+ console_output=false
end

config firewall address
+ [[ -z '' ]]
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
+ local export_objects=false
  set comment "Wireless AP Gateway"
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
 next
+ [[ -z '' ]]
 edit "Titan-WLAN-Host"
+ local target_config=configs/misc/fw3.cfg
  set subnet 192.168.100.100 255.255.255.255
+ script_helper=false
+ [[ config =~ ^(console|o)$ ]]
  set comment "Guest WiFi node"
 next
end

+ [[ config =~ ^(export|r)$ ]]
+ [[ false == true ]]
config firewall address
+ [[ config =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
 edit "Cap-HQ"
+ [[ -z .cache/ips.list ]]
+ [[ config =~ ^(logger|l)$ ]]
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
+ search_terms=()
 next
+ declare -a search_terms
+ [[ config =~ ^(platform|p)$ ]]
 edit "Vision-Link"
+ [[ -f .cache/ips.list ]]
  set subnet 192.168.2.12 255.255.255.255
+ [[ config =~ ^(search|s)$ ]]
+ [[ .cache/ips.list != *,* ]]
  set comment "Vision’s quantum channel"
+ mapfile -t search_terms
+ [[ config == \h\e\l\p ]]
 next
 edit "Hawkeye-Nest"
+ [[ config == \d\e\b\u\g ]]
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
+ [[ config == \d\r\y\-\r\u\n ]]
 next
 edit "Wanda-Field"
+ [[ config == \v\e\r\b\o\s\e ]]
  set subnet 192.168.100.100 255.255.255.255
+ for xitem in "${@}"
  set comment "Wanda’s chaos relay"
 next
end'
+ IFS==
+ read -r key value
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
++ export divisor=--MTc0ODkxMjY4OTAzMzExNjAwMAo--
++ divisor=--MTc0ODkxMjY4OTAzMzExNjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ print '{
++ echo -e --extract=.cache/resources/misc/fw3.cfg
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ sed '1{/^[[:space:]]*$/d;}'
 edit "Hawkeye-Nest"
++ sed -e '1s|^\(-\)\{1,\}||'
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ alias network-configs--helper=network_configs__helper
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ result=0
++ grep -v '^\s*$'
+ exit 0
 next
end'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fjMnTn2xCY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fjMnTn2xCY
++ alias network-extract--helper=network_extract__helper
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
++ grep -v '^#'
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
+ alias serialize-object=serialize_objects
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
+ declare -a execute
++ mktemp -d
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=10.0.0.1
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local last_search_entry=203.0.113.25
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ IFS==
+ [[ true == true ]]
+ newline 2
+ read -r key value
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ local count=2
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ local count=17
+ echo
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ (( i++ ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ [[ -z configs/misc/fw1.cfg ]]
+ newline
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/misc/fw1.cfg
+ script_filename=network-extract.shell
++ echo -e --platform=cisco
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FDhdB15gtm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FDhdB15gtm
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ printf '%*s' 12 ''
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ local 'indent=            '
++ alias exit-error=exit_error
+ [[ true == true ]]
++ alias list-file=list_file
+ newline
++ alias log-error=log_error
+ local count=1
+ (( i = 0 ))
++ alias log-info=log_info
+ (( i < count ))
++ alias log-warn=log_warn
+ echo
++ alias print-message=message
+ (( i++ ))
+ (( i < count ))
++ alias print-newline=newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias pause=pause
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias print-line=print
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ alias print-file=print_file
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ alias relative-configpath=relative_configpath
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ newline
++ alias system-metrics=system_metrics
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ newline
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console --verbose
+ [[ platform =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ [[ platform =~ ^(platform|p)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
+ for xitem in "${@}"
'
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw1.cfg
+ extract_location=.cache/resources/misc/fw1.cfg
++ echo -e --search=.cache/ips.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/misc/fw1.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-campus-core.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ search =~ ^(config|c)$ ]]
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
+ [[ search =~ ^(console|o)$ ]]
 next
end'
+ output_dir=.cache/resources/misc
+ [[ search =~ ^(export|r)$ ]]
+ result=0
+ [[ ! -d .cache/resources/misc ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
  "version": "v7.2.5.F",
+ [[ logger =~ ^(console|o)$ ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ local search_pattern=.cache/ips.list
}

#hostname="fg-branch-vpn-01"
+ [[ search == \h\e\l\p ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ logger =~ ^(export|r)$ ]]

+ [[ search == \d\e\b\u\g ]]
config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ search == \d\r\y\-\r\u\n ]]
  set srcintf "dmz"
  set dstintf "wan1"
+ [[ search == \v\e\r\b\o\s\e ]]
  set srcaddr "10.10.10.10"
+ for xitem in "${@}"
  set dstaddr "203.0.113.10"
  set action accept
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
  set logtraffic all
+ read -r key value
 next
+ [[ logger =~ ^(logger|l)$ ]]
end ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export targets_location=targets
+ for xitem in "${@}"
++ targets_location=targets
+ IFS==
+ read -r key value
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uDS5DLE1r9 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uDS5DLE1r9
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=configs/misc/switch1.conf
+++ date +%s%N
++ echo -e --verbose
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ newline 2
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODkxMjY4OTA1Mzg3NDAwMAo--
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
++ divisor=--MTc0ODkxMjY4OTA1Mzg3NDAwMAo--
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ local verbose=true
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
++ [[ -n '' ]]
+ IFS=' 	
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
'
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ debug=false
+ newline
+ [[ -z '' ]]
++ [[ 5 -lt 4 ]]
+ local count=1
+ dry_run=false
+ (( i = 0 ))
+ [[ -z true ]]
+ (( i < count ))
+ [[ -z '' ]]
+ echo
+ export console_output=false
+ console_output=false
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
++ alias parse-listings--helper=parse_listings__helper
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --extract=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ newline
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ local count=1
+ declare -a execute
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ [[ extract == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ which awk
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto configs/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console --verbose
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fg-testing-config.cfg.console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ [[ platform =~ ^(export|r)$ ]]
+ echo -e '                configs/misc/fw1.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ local target_platform=cisco
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ result=0
++ sed -e '1s|^\(-\)\{1,\}||'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e8ikW3EtSN ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e8ikW3EtSN
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ output_dir=.cache/resources/misc
+ result=0
+ [[ ! -d .cache/resources/misc ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ echo -e --extract=.cache/resources/misc/switch3.conf
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
++ sed -e '1s|^\(-\)\{1,\}||'
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline 2
+ local SCRIPT_DIR=./scripts
+ local count=2
+ (( i = 0 ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
++ which awk
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --platform=cisco
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ local first_search_entry=10.0.0.1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
+ local last_search_entry=203.0.113.25
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Search Pattern: [ .cache/ips.list ]'
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ which awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw1.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nUCzV2boC3 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nUCzV2boC3
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

++ dirname -- ./scripts/network-extract.shell
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z '' ]]
+ local export_objects=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ sed '1{/^[[:space:]]*$/d;}'
object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ true == true ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ message '                configs/misc/switch1.conf'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ [[ -n                 configs/misc/switch1.conf ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ local 'message=                configs/misc/switch1.conf'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console ]]
+ echo -e '                configs/misc/switch1.conf'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--fw3.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname .cache/resources/misc/switch3.conf
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djS6RF9glq ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.djS6RF9glq
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ sed '1{/^[[:space:]]*$/d;}'
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch1.conf.console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Lejr0oHpDf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Lejr0oHpDf
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jENOPrTZaW/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FDhdB15gtm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.FDhdB15gtm
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kbZ2aSFH3U
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kbZ2aSFH3U
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ set -euo pipefail
+ source ./scripts/devops-resources.shell
+ export LC_ALL=C
+ LC_ALL=C
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ mktemp -d
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DdaujXHc6R
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DdaujXHc6R
++ touch ./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ mktemp -d
++ mktemp -d
+++ date +%s%N
++ mktemp -d
+++ base64
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UW9Q7K4MbO
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QrAZzm2mOq
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7z5Ml8a6dc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7z5Ml8a6dc
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QrAZzm2mOq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UW9Q7K4MbO
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
++ export divisor=--MTc0ODkxMjY5MDAwNTQ4NzAwMAo--
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ divisor=--MTc0ODkxMjY5MDAwNTQ4NzAwMAo--
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-resources.shell
++ alias list-file=list_file
++ alias exit-error=exit_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
++ alias print-message=message
++ alias list-file=list_file
+++ date +%s%N
++ alias print-newline=newline
++ alias pause=pause
++ alias log-error=log_error
++ alias print-line=print
++ alias log-info=log_info
++ alias network-configs--helper=network_configs__helper
++ alias log-warn=log_warn
++ alias print-file=print_file
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ [[ -n '' ]]
++ alias network-extract--helper=network_extract__helper
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ alias serialize-object=serialize_objects
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+++ base64
++ alias print-message=message
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ alias system-metrics=system_metrics
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias print-newline=newline
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias pause=pause
++ export LC_ALL=C
++ LC_ALL=C
++ alias print-line=print
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias print-file=print_file
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
++ export divisor=--MTc0ODkxMjY5MDAxNDYxNDAwMAo--
++ divisor=--MTc0ODkxMjY5MDAxNDYxNDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ alias parse-cisco=main
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -z x ]]
++ export actions_logfile=./logs/console/run.console
+ export logs_location=logs
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ logs_location=logs
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GsgKwcteb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GsgKwcteb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ 7 -eq 0 ]]
++ [[ 5 -lt 4 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.juiqblt8k4/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ oIFS=' 	
'
++ alias print-line=print
+ for xitem in "${@}"
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_location=targets
+ IFS==
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ read -r key value
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DBWIXJrFsp
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DBWIXJrFsp
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+++ date +%s%N
++ alias log-error=log_error
+++ date +%s%N
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+++ date +%s%N
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list
++ alias system-metrics=system_metrics
++ mktemp -d
+++ base64
+++ base64
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ [[ 7 -eq 0 ]]
+ export LC_ALL=C
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.28ub9mwcci/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ LC_ALL=C
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console --export --verbose
+ oIFS=' 	
'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8BVnBmZn7Q
+ for xitem in "${@}"
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8BVnBmZn7Q
+ IFS==
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVubbUQSB6
++ mktemp -d
++ export divisor=--MTc0ODkxMjY5MDAzODI0MTAwMAo--
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVubbUQSB6
++ alias system-metrics=system_metrics
++ divisor=--MTc0ODkxMjY5MDAzODI0MTAwMAo--
++ export divisor=--MTc0ODkxMjY5MDAzODU3MTAwMAo--
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
++ divisor=--MTc0ODkxMjY5MDAzODU3MTAwMAo--
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ [[ search =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
++ export divisor=--MTc0ODkxMjY5MDAzODgyMjAwMAo--
+ [[ search =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ divisor=--MTc0ODkxMjY5MDAzODgyMjAwMAo--
+ [[ search =~ ^(logger|l)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ alias warning-message=warning
+ source ./scripts/devops-helpers.shell
++ export LC_ALL=C
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ LC_ALL=C
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ nl='\n'
++ [[ 5 -lt 4 ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ export cache_location=.cache
++ __DEVOPS_HELPERS_SOURCED=1
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ mkdir -p logs/console logs/jobs
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias list-file=list_file
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias parse-listings--helper=parse_listings__helper
++ alias log-info=log_info
++ alias network-configs--helper=network_configs__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
++ alias log-warn=log_warn
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ alias print-message=message
++ alias network-extract--helper=network_extract__helper
+ [[ search == \h\e\l\p ]]
++ alias print-newline=newline
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ alias pause=pause
+ alias serialize-object=serialize_objects
++ alias print-line=print
+ alias serialize-object=serialize_objects
++ alias print-file=print_file
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias relative-configpath=relative_configpath
++ touch ./logs/console/run.console
++ alias system-metrics=system_metrics
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
++ alias validate-address=validate_address
+ alias parse-cisco=main
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ alias parse-cisco=main
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ -z x ]]
++ logs_location=logs
+ export logs_location=logs
+ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ -z x ]]
+ mkdir -p logs/console
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1xIYBfhwF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1xIYBfhwF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias pause=pause
++ alias print-line=print
++ export actions_logfile=./logs/console/run.console
++ alias print-file=print_file
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ mktemp -d
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
++ export actions_logfile=./logs/console/run.console
+ network_extract__console=logs/console/network-extract.console
++ actions_logfile=./logs/console/run.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWORY5JTnL
++ touch ./logs/console/run.console
+ touch logs/console/network-extract.console
+ [[ search =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWORY5JTnL
+ [[ search =~ ^(export|r)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ script_filename=network-extract.shell
+ [[ search =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ alias exit-error=exit_error
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias system-metrics=system_metrics
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ export actions_logfile=./logs/console/run.console
+ [[ config =~ ^(platform|p)$ ]]
++ LC_ALL=C
++ actions_logfile=./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gbmaVf7veG
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gbmaVf7veG
++ touch ./logs/console/run.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
++ nl='\n'
+ set -euo pipefail
+ source ./scripts/devops-resources.shell
++ export cache_location=.cache
+ export LC_ALL=C
++ cache_location=.cache
+ LC_ALL=C
+ [[ config =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ date +%s%N
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ export logs_location=logs
++ alias exit-error=exit_error
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias print-newline=newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
+++ base64
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export divisor=--MTc0ODkxMjY5MDA1NTYzNDAwMAo--
++ divisor=--MTc0ODkxMjY5MDA1NTYzNDAwMAo--
++ alias system-metrics=system_metrics
+ source ./scripts/devops-helpers.shell
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+++ tr -dc a-zA-Z0-9
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tkqcympoi0/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias validate-address=validate_address
++ export targets_location=targets
++ targets_location=targets
++ [[ 5 -lt 4 ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 7 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jrha76ka8b/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ date +%s%N
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console --export --verbose
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs/console logs/jobs
+ oIFS=' 	
+ oIFS=' 	
'
'
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
+++ base64
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+++ date +%s%N
++ touch ./logs/console/run.console
++ export divisor=--MTc0ODkxMjY5MDA2MTUxMjAwMAo--
++ divisor=--MTc0ODkxMjY5MDA2MTUxMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QgST1UHEsb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QgST1UHEsb
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+++ date +%s%N
+ [[ config =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(search|s)$ ]]
++ alias log-warn=log_warn
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias print-message=message
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-newline=newline
++ alias pause=pause
+ alias serialize-object=serialize_objects
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ alias print-line=print
++ alias print-file=print_file
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias relative-configpath=relative_configpath
++ export divisor=--MTc0ODkxMjY5MDA2NDc4NzAwMAo--
++ divisor=--MTc0ODkxMjY5MDA2NDc4NzAwMAo--
++ touch ./logs/console/run.console
+ source ./scripts/devops-helpers.shell
+++ base64
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z x ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ export logs_location=logs
+ logs_location=logs
++ [[ 5 -lt 4 ]]
+ mkdir -p logs/console
+++ tr -dc a-zA-Z0-9
++ alias parse-listings--helper=parse_listings__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias serialize-object=serialize_objects
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ export divisor=--MTc0ODkxMjY5MDA2ODg3MzAwMAo--
++ divisor=--MTc0ODkxMjY5MDA2ODg3MzAwMAo--
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -z x ]]
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(search|s)$ ]]
+ export logs_location=logs
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
+ logs_location=logs
+ [[ search == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ for xitem in "${@}"
+ [[ search == \h\e\l\p ]]
+ IFS==
+ [[ search == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ set -euo pipefail
+ [[ extract == \d\r\y\-\r\u\n ]]
+ export LC_ALL=C
+ [[ extract == \v\e\r\b\o\s\e ]]
+ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias serialize-object=serialize_objects
++ export divisor=--MTc0ODkxMjY5MDA3MTEzMjAwMAo--
++ divisor=--MTc0ODkxMjY5MDA3MTEzMjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ alias serialize-object=serialize_objects
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+++ date +%s%N
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias parse-cisco=main
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ -z x ]]
+++ base64
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ alias parse-cisco=main
++ export targets_location=targets
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z x ]]
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ export logs_location=logs
+ logs_location=logs
+ [[ 7 -eq 0 ]]
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2zlhngvl6l/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ actions_logfile=./logs/console/run.console
++ echo -e --platform=fortinet
++ touch ./logs/console/run.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console --export --verbose
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ oIFS=' 	
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
'
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+++ date +%s%N
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.wkwj5zffhp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console --export --verbose
++ export divisor=--MTc0ODkxMjY5MDA4MDk2MzAwMAo--
+ [[ config =~ ^(config|c)$ ]]
++ divisor=--MTc0ODkxMjY5MDA4MDk2MzAwMAo--
+ oIFS=' 	
'
+ script_filename=network-extract.shell
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ source ./scripts/devops-helpers.shell
+ for xitem in "${@}"
+ script_filename=network-extract
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ export network_extract__console=logs/console/network-extract.console
+ read -r key value
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+++ base64
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ [[ config == \h\e\l\p ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ set -euo pipefail
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yvZ9wRRUGt
++ echo -e --platform=cisco
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yvZ9wRRUGt
++ mktemp -d
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ config == \h\e\l\p ]]
+ script_filename=network-extract.shell
+ source ./scripts/devops-resources.shell
+ script_filename=network-extract
+ [[ config == \d\e\b\u\g ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+++ tr -dc a-zA-Z0-9
+ IFS==
++ export targets_location=targets
+ [[ 7 -eq 0 ]]
++ targets_location=targets
+ [[ config =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.juiqblt8k4/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ platform =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
++ targets_logfile=logs/jobs/targets.jobs
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console --export --verbose
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ [[ config =~ ^(platform|p)$ ]]
'
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ local target_platform=fortinet
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
++ mktemp -d
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ read -r key value
+ [[ platform == \h\e\l\p ]]
++ alias log-info=log_info
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-warn=log_warn
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+ alias parse-cisco=main
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.volfskw2ew/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ export divisor=--MTc0ODkxMjY5MDA4ODI4MjAwMAo--
++ divisor=--MTc0ODkxMjY5MDA4ODI4MjAwMAo--
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+++ base64
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.28ub9mwcci/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfu7AuDIwb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfu7AuDIwb
+ [[ search =~ ^(search|s)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ search == \d\e\b\u\g ]]
+ nl='\n'
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.33PYjN7VRG
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ oIFS=' 	
+ read -r key value
'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.33PYjN7VRG
++ [[ -n '' ]]
+ [[ platform =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(export|r)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ platform == \h\e\l\p ]]
++ alias detect-vendor=detect_vendor
+++ tr -dc a-zA-Z0-9
++ alias network-extract--helper=network_extract__helper
+ [[ platform == \d\e\b\u\g ]]
++ alias exit-error=exit_error
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias list-file=list_file
+ [[ platform == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-error=log_error
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
++ alias relative-configpath=relative_configpath
++ alias log-info=log_info
+ [[ search =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias log-warn=log_warn
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias print-message=message
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list
++ alias print-newline=newline
+ [[ search == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias warning-message=warning
+ IFS==
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ set -euo pipefail
+ alias serialize-object=serialize_objects
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ export actions_logfile=./logs/console/run.console
+ script_filename=network-extract.shell
++ actions_logfile=./logs/console/run.console
++ alias warning-message=warning
+ script_filename=network-extract
++ touch ./logs/console/run.console
++ export LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ network_extract__console=logs/console/network-extract.console
++ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
+ touch logs/console/network-extract.console
++ export 'nl=\n'
+ [[ extract =~ ^(export|r)$ ]]
+ alias parse-cisco=main
++ nl='\n'
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
++ export cache_location=.cache
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
++ cache_location=.cache
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ [[ extract =~ ^(search|s)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ mkdir -p logs/console
++ logs_location=logs
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ mktemp -d
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODkxMjY5MDA5NjkwMDAwMAo--
++ divisor=--MTc0ODkxMjY5MDA5NjkwMDAwMAo--
+ source ./scripts/devops-helpers.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ echo -e --platform=cisco
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias serialize-object=serialize_objects
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zksp2qrnqo/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ oIFS=' 	
+ touch logs/console/network-extract.console
'
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
++ export actions_logfile=./logs/console/run.console
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SVD8LUFSNt
+ [[ config =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SVD8LUFSNt
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ touch ./logs/console/run.console
+ export 'nl=\n'
+ [[ config =~ ^(search|s)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ alias parse-cisco=main
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z x ]]
++ alias detect-vendor=detect_vendor
+ export logs_location=logs
+ for xitem in "${@}"
+ logs_location=logs
++ alias exit-error=exit_error
+ mkdir -p logs/console
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ alias print-message=message
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ for xitem in "${@}"
++ alias pause=pause
++ alias print-line=print
++ echo -e --config=.cache/resources/misc/switch1.conf
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
++ alias system-metrics=system_metrics
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(export|r)$ ]]
++ alias validate-address=validate_address
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias warning-message=warning
+ IFS==
+ [[ config =~ ^(platform|p)$ ]]
+ read -r key value
++ export LC_ALL=C
+ [[ config =~ ^(search|s)$ ]]
++ LC_ALL=C
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ config == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ for xitem in "${@}"
++ export cache_location=.cache
++ cache_location=.cache
+ IFS==
+ read -r key value
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export targets_location=targets
+ [[ logger =~ ^(export|r)$ ]]
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
++ echo -e --platform=cisco
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ local target_platform=cisco
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ platform =~ ^(logger|l)$ ]]
+ read -r key value
++ echo -e --export
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+ [[ 7 -eq 0 ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4jgasruoej/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+++ date +%s%N
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
+ oIFS=' 	
'
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
++ targets_logfile=logs/jobs/targets.jobs
+++ tr -dc a-zA-Z0-9
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --export
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ export divisor=--MTc0ODkxMjY5MDExNTk4NjAwMAo--
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=--MTc0ODkxMjY5MDExNTk4NjAwMAo--
+ [[ extract =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ [[ -n '' ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(export|r)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
+ [[ config =~ ^(extract|x)$ ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export divisor=--MTc0ODkxMjY5MDExODQ0NjAwMAo--
+ local export_objects=true
++ divisor=--MTc0ODkxMjY5MDExODQ0NjAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
++ [[ -n '' ]]
+ [[ export =~ ^(extract|x)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+++ tr -dc a-zA-Z0-9
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+ set -euo pipefail
+ [[ logger =~ ^(platform|p)$ ]]
+ export LC_ALL=C
+ [[ logger =~ ^(search|s)$ ]]
+ LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ alias serialize-object=serialize_objects
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z x ]]
++ echo -e --platform=cisco
+ export logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
+++ date +%s%N
++ mktemp -d
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6pnqtgs54w/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ IFS==
++ echo -e --platform=cisco
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ oIFS=' 	
+ [[ logger =~ ^(extract|x)$ ]]
'
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ local export_objects=true
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ read -r key value
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list
+ [[ logger =~ ^(platform|p)$ ]]
+ logs_location=logs
+ [[ search == \h\e\l\p ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
+++ base64
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODkxMjY5MDEyNDY4MjAwMAo--
++ divisor=--MTc0ODkxMjY5MDEyNDY4MjAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --platform=cisco
++ echo -e --export
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3SciSdkEOg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3SciSdkEOg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local target_platform=cisco
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(search|s)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias list-file=list_file
+ [[ extract =~ ^(search|s)$ ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ export divisor=--MTc0ODkxMjY5MDEzMDU1NTAwMAo--
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(config|c)$ ]]
++ divisor=--MTc0ODkxMjY5MDEzMDU1NTAwMAo--
++ alias print-newline=newline
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
++ alias pause=pause
++ [[ -n '' ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ IFS==
+ [[ logger =~ ^(console|o)$ ]]
++ alias print-line=print
+ read -r key value
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local target_platform=cisco
+ [[ extract =~ ^(console|o)$ ]]
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ alias relative-configpath=relative_configpath
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
++ alias system-metrics=system_metrics
++ alias parse-listings--helper=parse_listings__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
+ export network_extract__console=logs/console/network-extract.console
++ export LC_ALL=C
+ network_extract__console=logs/console/network-extract.console
++ alias network-configs--helper=network_configs__helper
+ [[ platform =~ ^(search|s)$ ]]
++ LC_ALL=C
+ touch logs/console/network-extract.console
+ [[ platform == \h\e\l\p ]]
++ export 'nl=\n'
+ [[ platform == \d\e\b\u\g ]]
++ nl='\n'
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ export cache_location=.cache
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ cache_location=.cache
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ export logs_location=logs
+ for xitem in "${@}"
++ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ IFS==
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ alias serialize-object=serialize_objects
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ alias serialize-object=serialize_objects
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ [[ platform =~ ^(config|c)$ ]]
+ logs_location=logs
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --verbose
+ mkdir -p logs/console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ -z x ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export == \h\e\l\p ]]
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tkqcympoi0/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console --export --verbose
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ oIFS=' 	
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local verbose=true
+ [[ export == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS=' 	
+ [[ export == \d\e\b\u\g ]]
'
+ IFS==
+ [[ -z '' ]]
+ read -r key value
+ debug=false
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]]
++ echo -e --platform=cisco
+ search_terms=()
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jrha76ka8b/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+++ date +%s%N
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2zlhngvl6l/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console --export --verbose
+++ base64
+ oIFS=' 	
'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ss80tmnbdv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console --export --verbose
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
+ local export_objects=true
+ [[ search == \h\e\l\p ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ oIFS=' 	
+ for xitem in "${@}"
'
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ export divisor=--MTc0ODkxMjY5MDE1OTM2MDAwMAo--
++ divisor=--MTc0ODkxMjY5MDE1OTM2MDAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ read -r key value
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ set -euo pipefail
+ [[ logger =~ ^(platform|p)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger =~ ^(search|s)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ grep -v '^\s*$'
++ mktemp -d
++ mktemp -d
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^#'
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ set -euo pipefail
+ [[ config =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.a3zvbk476a/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ mktemp -d
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QEhSgW7FJt
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QEhSgW7FJt
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtQTAZXlti
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtQTAZXlti
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias list-file=list_file
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias list-file=list_file
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
+ [[ config =~ ^(config|c)$ ]]
++ alias log-warn=log_warn
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
++ alias print-message=message
+ IFS==
+ [[ config =~ ^(console|o)$ ]]
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ config =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias validate-address=validate_address
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias warning-message=warning
++ export LC_ALL=C
++ alias validate-address=validate_address
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ export cache_location=.cache
++ cache_location=.cache
++ export LC_ALL=C
++ export logs_location=logs
++ LC_ALL=C
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ IFS==
++ export logs_location=logs
+ read -r key value
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ set -euo pipefail
+ [[ config == \d\e\b\u\g ]]
+ export LC_ALL=C
+ LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZ3f5KovWi
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZ3f5KovWi
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ktouL58v28
++ alias log-error=log_error
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ktouL58v28
++ alias log-info=log_info
++ alias log-warn=log_warn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ set -euo pipefail
++ alias print-message=message
+ export 'nl=\n'
+ export LC_ALL=C
+ nl='\n'
+ LC_ALL=C
++ alias print-newline=newline
+ source ./scripts/devops-resources.shell
++ alias pause=pause
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-line=print
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
++ alias detect-vendor=detect_vendor
++ mktemp -d
+ [[ export == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ [[ export == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias system-metrics=system_metrics
++ alias list-file=list_file
+ for xitem in "${@}"
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ IFS==
++ alias print-message=message
++ alias validate-address=validate_address
++ alias print-newline=newline
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias pause=pause
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-line=print
++ mkdir -p logs/console logs/jobs
+ local verbose=true
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS=' 	
'
++ alias print-file=print_file
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mktemp -d
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ScSMVaRCS5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ScSMVaRCS5
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ export targets_location=targets
++ targets_location=targets
++ alias system-metrics=system_metrics
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ [[ search =~ ^(config|c)$ ]]
++ cache_location=.cache
++ export logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkLX5jz7co
+ [[ search =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OruiKDQXU9
++ logs_location=logs
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkLX5jz7co
++ export targets_location=targets
++ mkdir -p logs/console logs/jobs
++ targets_location=targets
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OruiKDQXU9
+ [[ search =~ ^(export|r)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(extract|x)$ ]]
+ export 'nl=\n'
+ [[ search =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ search =~ ^(platform|p)$ ]]
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ export 'nl=\n'
+ [[ search == \d\r\y\-\r\u\n ]]
+ nl='\n'
+ [[ search == \v\e\r\b\o\s\e ]]
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
+ for xitem in "${@}"
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ alias detect-vendor=detect_vendor
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias exit-error=exit_error
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export actions_logfile=./logs/console/run.console
++ alias list-file=list_file
++ actions_logfile=./logs/console/run.console
++ alias log-error=log_error
++ touch ./logs/console/run.console
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ extract =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ [[ extract =~ ^(console|o)$ ]]
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias validate-address=validate_address
+++ date +%s%N
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
++ alias pause=pause
+ LC_ALL=C
++ alias print-line=print
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ base64
++ alias print-file=print_file
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias relative-configpath=relative_configpath
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
+++ tr -dc a-zA-Z0-9
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
+ [[ config =~ ^(config|c)$ ]]
++ export divisor=--MTc0ODkxMjY5MDIwNzI5NTAwMAo--
++ divisor=--MTc0ODkxMjY5MDIwNzI5NTAwMAo--
+ source ./scripts/devops-helpers.shell
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
++ export divisor=--MTc0ODkxMjY5MDIwNzU3MjAwMAo--
++ divisor=--MTc0ODkxMjY5MDIwNzU3MjAwMAo--
+ [[ config =~ ^(console|o)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ alias warning-message=warning
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ export LC_ALL=C
++ [[ 5 -lt 4 ]]
++ LC_ALL=C
++ export 'nl=\n'
++ alias parse-listings--helper=parse_listings__helper
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ alias parse-listings--helper=parse_listings__helper
++ export logs_location=logs
++ logs_location=logs
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wmJAoMXCkb
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wmJAoMXCkb
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ alias serialize-object=serialize_objects
++ export targets_location=targets
+ export 'nl=\n'
++ targets_location=targets
+ nl='\n'
+ alias serialize-object=serialize_objects
+ source ./scripts/devops-resources.shell
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ mktemp -d
++ alias log-error=log_error
+ alias parse-cisco=main
++ alias log-info=log_info
++ mkdir -p logs/console logs/jobs
+ alias parse-cisco=main
++ alias log-warn=log_warn
+ [[ -z x ]]
++ alias print-message=message
+ export logs_location=logs
+ [[ -z x ]]
+ logs_location=logs
++ alias print-newline=newline
+ export logs_location=logs
+ mkdir -p logs/console
+ logs_location=logs
+ mkdir -p logs/console
++ alias pause=pause
++ export divisor=--MTc0ODkxMjY5MDIxMjQzNzAwMAo--
++ alias print-line=print
++ divisor=--MTc0ODkxMjY5MDIxMjQzNzAwMAo--
+ source ./scripts/devops-helpers.shell
++ alias print-file=print_file
++ [[ -n '' ]]
++ alias relative-configpath=relative_configpath
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias system-metrics=system_metrics
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ [[ config =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(search|s)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias network-configs--helper=network_configs__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias network-extract--helper=network_extract__helper
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ read -r key value
++ touch ./logs/console/run.console
+++ date +%s%N
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
+++ tr -dc a-zA-Z0-9
+++ date +%s%N
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xJvyLITjSl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xJvyLITjSl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ export actions_logfile=./logs/console/run.console
++ alias log-error=log_error
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+++ tr -dc a-zA-Z0-9
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ mktemp -d
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ export divisor=--MTc0ODkxMjY5MDIyMjg2ODAwMAo--
++ divisor=--MTc0ODkxMjY5MDIyMjg2ODAwMAo--
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export divisor=--MTc0ODkxMjY5MDIyODc0NzAwMAo--
++ divisor=--MTc0ODkxMjY5MDIyODc0NzAwMAo--
++ alias parse-listings--helper=parse_listings__helper
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias network-configs--helper=network_configs__helper
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ 7 -eq 0 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.grdpmkmunm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.zksp2qrnqo/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console --export --verbose
++ targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console --export --verbose
+ [[ extract =~ ^(platform|p)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(search|s)$ ]]
+ oIFS=' 	
+ oIFS=' 	
+ [[ extract == \h\e\l\p ]]
'
'
+ alias serialize-object=serialize_objects
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ read -r key value
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -z x ]]
+ IFS==
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
+ alias parse-cisco=main
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 7 -eq 0 ]]
+ [[ -z x ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export logs_location=logs
+ [[ extract == \d\e\b\u\g ]]
+ logs_location=logs
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console --export --verbose
+ mkdir -p logs/console
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MFxPaSnnst
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MFxPaSnnst
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ nl='\n'
+ [[ extract =~ ^(logger|l)$ ]]
+++ date +%s%N
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-resources.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list
++ alias list-file=list_file
++ alias log-error=log_error
+ set -euo pipefail
++ alias log-info=log_info
+ export LC_ALL=C
+ LC_ALL=C
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
+++ base64
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ echo -e --platform=cisco
+++ date +%s%N
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+++ tr -dc a-zA-Z0-9
++ export 'nl=\n'
+++ date +%s%N
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ nl='\n'
+ script_filename=network-extract.shell
+++ base64
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=cisco
+++ base64
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ logs_location=logs
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mkdir -p logs/console logs/jobs
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
++ export divisor=--MTc0ODkxMjY5MDI0MDYyOTAwMAo--
++ divisor=--MTc0ODkxMjY5MDI0MDYyOTAwMAo--
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+++ date +%s%N
++ alias network-extract--helper=network_extract__helper
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias serialize-object=serialize_objects
+++ base64
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vNousH6zU9
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ platform == \d\e\b\u\g ]]
+ [[ 7 -eq 0 ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export divisor=--MTc0ODkxMjY5MDI0NDM3MDAwMAo--
+ [[ platform == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vNousH6zU9
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eyoxliogzr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
++ divisor=--MTc0ODkxMjY5MDI0NDM3MDAwMAo--
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ IFS==
+ export logs_location=logs
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console --export --verbose
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ logs_location=logs
+ export 'nl=\n'
+ mkdir -p logs/console
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
'
+ [[ search =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
++ export divisor=--MTc0ODkxMjY5MDI0NTAyNDAwMAo--
++ divisor=--MTc0ODkxMjY5MDI0NTAyNDAwMAo--
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias exit-error=exit_error
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias network-extract--helper=network_extract__helper
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-message=message
++ echo -e --platform=fortinet
+ [[ platform =~ ^(extract|x)$ ]]
++ alias network-extract--helper=network_extract__helper
++ alias print-newline=newline
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ alias pause=pause
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-line=print
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ for xitem in "${@}"
+ alias serialize-object=serialize_objects
+ IFS==
+ read -r key value
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4jgasruoej/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ alias parse-cisco=main
+ alias parse-cisco=main
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ [[ -z x ]]
++ export divisor=--MTc0ODkxMjY5MDI1MDY1MzAwMAo--
+ logs_location=logs
++ divisor=--MTc0ODkxMjY5MDI1MDY1MzAwMAo--
+ export logs_location=logs
+ source ./scripts/devops-helpers.shell
+ logs_location=logs
+ mkdir -p logs/console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ oIFS=' 	
'
++ [[ 5 -lt 4 ]]
+ mkdir -p logs/console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-extract--helper=network_extract__helper
++ alias relative-configpath=relative_configpath
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ alias serialize-object=serialize_objects
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ [[ platform =~ ^(config|c)$ ]]
+ logs_location=logs
+ mkdir -p logs/console
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ IFS==
++ export targets_location=targets
+ read -r key value
+ read -r key value
++ targets_location=targets
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ script_filename=network-extract.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
++ alias warning-message=warning
+ script_filename=network-extract
+ [[ logger =~ ^(platform|p)$ ]]
++ export LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
+ network_extract__console=logs/console/network-extract.console
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ touch logs/console/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export 'nl=\n'
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ export network_extract__console=logs/console/network-extract.console
+ IFS==
+ network_extract__console=logs/console/network-extract.console
+ read -r key value
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.a3zvbk476a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console --export --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ touch logs/console/network-extract.console
+ IFS==
+ set -euo pipefail
+ read -r key value
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+++ date +%s%N
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ base64
++ mktemp -d
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ 7 -eq 0 ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.j3ck9wik3g/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ read -r key value
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=10.0.1.2
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local last_search_entry=10.0.1.2
+ for xitem in "${@}"
+ IFS==
+ [[ verbose =~ ^(platform|p)$ ]]
+ read -r key value
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ debug=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
++ mktemp -d
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local verbose=true
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ newline
+ debug=false
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ declare -a search_terms
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ (( i < count ))
+ dry_run=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list != *,* ]]
+ [[ -z true ]]
+ mapfile -t search_terms
+ [[ -z '' ]]
+ set -euo pipefail
+ export console_output=false
+ export LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list
+ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ (( i++ ))
+ console_output=false
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vCUvcsAit
+ [[ -z true ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vCUvcsAit
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z fortinet ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ script_helper=false
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ export 'nl=\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ nl='\n'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ search_terms=()
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ logger =~ ^(export|r)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ newline
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias exit-error=exit_error
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --export
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ tr -d '\r'
++ alias pause=pause
++ alias print-line=print
++ mktemp -d
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --verbose
+ [[ logger =~ ^(logger|l)$ ]]
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ tr -d '\r'
++ export 'nl=\n'
+ [[ config =~ ^(config|c)$ ]]
++ nl='\n'
++ tr -d '\r'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8FMDdGoQm
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8FMDdGoQm
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ grep -v '^\s*$'
+ [[ search =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
++ grep -v '^\s*$'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ search =~ ^(search|s)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ grep -v '^#'
++ grep -v '^#'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ config =~ ^(export|r)$ ]]
++ alias print-message=message
+ [[ config =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ alias pause=pause
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wjCeUfylVB
+ [[ config == \d\r\y\-\r\u\n ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wjCeUfylVB
++ alias print-line=print
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ source ./scripts/devops-resources.shell
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias print-file=print_file
+ [[ export =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(search|s)$ ]]
++ alias relative-configpath=relative_configpath
++ alias exit-error=exit_error
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.2.3
++ alias system-metrics=system_metrics
++ alias list-file=list_file
+ local last_search_entry=10.0.2.3
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
++ alias log-error=log_error
+ for xitem in "${@}"
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ IFS==
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ read -r key value
++ alias validate-address=validate_address
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ] ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias pause=pause
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
++ alias warning-message=warning
++ alias print-line=print
++ export LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
++ LC_ALL=C
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ export 'nl=\n'
++ alias print-file=print_file
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ nl='\n'
+ [[ extract =~ ^(config|c)$ ]]
++ alias relative-configpath=relative_configpath
++ export cache_location=.cache
+ local count=1
++ cache_location=.cache
+ ((  count == 0  ))
++ export logs_location=logs
+ [[ logger =~ ^(config|c)$ ]]
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ logs_location=logs
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ mkdir -p logs/console logs/jobs
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ newline
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias validate-address=validate_address
+ for xitem in "${@}"
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ verbose =~ ^(search|s)$ ]]
++ nl='\n'
+ [[ verbose == \h\e\l\p ]]
++ export cache_location=.cache
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ cache_location=.cache
+ local verbose=true
++ export logs_location=logs
+ (( i++ ))
++ logs_location=logs
+ (( i < count ))
+ IFS=' 	
'
+ [[ -z '' ]]
++ mkdir -p logs/console logs/jobs
+ local 'prompt_message=Enter configuration file to be parsed: '
++ export actions_logfile=./logs/console/run.console
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ debug=false
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ LC_ALL=C
+ dry_run=false
+ newline
+ [[ extract == \h\e\l\p ]]
+ [[ -z true ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ export console_output=false
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODkxMjY5MDI2OTcwNDAwMAo--
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ console_output=false
+ IFS==
+ echo
+ read -r key value
+ [[ -z true ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ for xitem in "${@}"
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ IFS==
++ export actions_logfile=./logs/console/run.console
+ read -r key value
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ search_terms=()
+ declare -a search_terms
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local first_search_entry=10.10.10.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
++ divisor=--MTc0ODkxMjY5MDI2OTcwNDAwMAo--
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ local first_search_entry=10.0.0.1
+ [[ logger =~ ^(search|s)$ ]]
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
++ [[ -n '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ] ]]
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ ((  count == 0  ))
+ [[ logger =~ ^(extract|x)$ ]]
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ [[ logger == \h\e\l\p ]]
+ local count=1
+ local count=1
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ IFS==
+ read -r key value
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
++ mktemp -d
+ [[ -z cisco ]]
+ (( i++ ))
+ [[ true == true ]]
++ echo -e --verbose
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local count=1
+ [[ -z cisco ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --export
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ newline
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local count=1
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ echo -e --platform=fortinet
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ export actions_logfile=./logs/console/run.console
++ echo -e --export
++ echo -e --platform=cisco
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(config|c)$ ]]
++ export targets_location=targets
++ targets_location=targets
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ export targets_logfile=logs/jobs/targets.jobs
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(console|o)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(export|r)$ ]]
++ touch ./logs/console/run.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=reports/10.0.1.2/fortinet
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WV2PL8khlg
+ [[ verbose =~ ^(platform|p)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WV2PL8khlg
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias exit-error=exit_error
+ IFS=' 	
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ -z '' ]]
+ [[ cfg == \c\f\g ]]
+ dry_run=false
+ [[ platform =~ ^(export|r)$ ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
++ alias list-file=list_file
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ platform == \h\e\l\p ]]
+ export console_output=false
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ console_output=false
++ alias log-error=log_error
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias log-info=log_info
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ IFS==
+ script_helper=false
++ alias log-warn=log_warn
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias print-message=message
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
++ alias print-newline=newline
+ search_terms=()
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ command -v -- ./scripts/network-extract.shell
++ alias print-line=print
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ date +%s%N
++ alias print-file=print_file
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export targets_location=targets
++ targets_location=targets
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local first_search_entry=172.16.0.5
++ alias network-configs--helper=network_configs__helper
+ local last_search_entry=172.16.0.5
+ for xitem in "${@}"
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ IFS==
+ [[ true == true ]]
+ read -r key value
++ alias validate-address=validate_address
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
++ export 'nl=\n'
++ nl='\n'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ] ]]
++ export cache_location=.cache
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
++ cache_location=.cache
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ export logs_location=logs
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
++ logs_location=logs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ base64
++ mkdir -p logs/console logs/jobs
++ alias network-extract--helper=network_extract__helper
++ echo -e --platform=cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
++ export targets_location=targets
++ targets_location=targets
+++ tr -dc a-zA-Z0-9
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ export targets_location=targets
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ targets_location=targets
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
++ tr -d '\r'
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+++ date +%s%N
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ alias serialize-object=serialize_objects
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
+++ base64
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
+++ tr -dc a-zA-Z0-9
++ grep -v '^#'
+++ date +%s%N
+ local SCRIPT_DIR=./scripts
++ export divisor=--MTc0ODkxMjY5MDMwNDQwNTAwMAo--
++ divisor=--MTc0ODkxMjY5MDMwNDQwNTAwMAo--
+ [[ extract =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ extract =~ ^(search|s)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ extract == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ touch ./logs/console/run.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+++ base64
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ command -v -- ./scripts/network-extract.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ IFS==
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
+ alias serialize-object=serialize_objects
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ alias parse-cisco=main
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local export_objects=true
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ [[ export =~ ^(search|s)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ export == \h\e\l\p ]]
+ IFS==
+ for xitem in "${@}"
+ mkdir -p logs/console
+ read -r key value
+ [[ export == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ set -euo pipefail
+ mkdir -p logs/console
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ output_dir=reports/10.0.0.1/cisco
+ [[ ! -d reports/10.0.0.1/cisco ]]
++ export divisor=--MTc0ODkxMjY5MDMwODk5NDAwMAo--
++ divisor=--MTc0ODkxMjY5MDMwODk5NDAwMAo--
++ which awk
++ dirname -- ./scripts/network-extract.shell
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ export =~ ^(config|c)$ ]]
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias network-configs--helper=network_configs__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
++ alias network-extract--helper=network_extract__helper
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
++ echo -e --platform=cisco
++ mktemp -d
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ export =~ ^(search|s)$ ]]
+ newline
+ [[ platform == \h\e\l\p ]]
+ alias serialize-object=serialize_objects
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ export =~ ^(logger|l)$ ]]
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ output_dir=reports/10.10.10.10/cisco
+ [[ true == true ]]
++ mktemp -d
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
++ export targets_location=targets
+ echo
+ alias parse-cisco=main
+ for xitem in "${@}"
++ targets_location=targets
+ (( i++ ))
++ export divisor=--MTc0ODkxMjY5MDMxMjA2NjAwMAo--
+ (( i < count ))
++ divisor=--MTc0ODkxMjY5MDMxMjA2NjAwMAo--
++ export targets_logfile=logs/jobs/targets.jobs
+ IFS==
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ targets_logfile=logs/jobs/targets.jobs
+ source ./scripts/devops-helpers.shell
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ echo -e --export
+ mkdir -p logs/console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ for xitem in "${@}"
++ echo -e --export
+ IFS==
+ read -r key value
++ echo -e --export
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ local SCRIPT_DIR=./scripts
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ alias serialize-object=serialize_objects
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
++ IFS=,
++ echo 10.0.1.2
+++ base64
+++ date +%s%N
+ alias parse-cisco=main
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ platform == \h\e\l\p ]]
+ export logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
+ logs_location=logs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ read -r key value
+++ base64
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXyDMWXe6B
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXyDMWXe6B
+ script_filename=network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6NbYl1Pysn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6NbYl1Pysn
+ script_filename=network-extract
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ export network_extract__console=logs/console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ network_extract__console=logs/console/network-extract.console
++ which awk
+ output_dir=reports/172.16.0.5/cisco
+ touch logs/console/network-extract.console
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ export =~ ^(export|r)$ ]]
++ dirname -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(export|r)$ ]]
++ [[ -n '' ]]
+ nl='\n'
+ [[ export == \d\e\b\u\g ]]
+ local export_objects=true
+ [[ export == \d\r\y\-\r\u\n ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ export == \d\e\b\u\g ]]
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
+ local SCRIPT_DIR=./scripts
++ alias log-info=log_info
+ local script_filename=cisco-configs.awk
++ alias log-warn=log_warn
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias print-message=message
++ [[ -n '' ]]
++ alias print-newline=newline
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.grdpmkmunm/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ alias pause=pause
++ alias list-file=list_file
++ alias print-line=print
+ oIFS=' 	
'
++ alias log-error=log_error
++ which awk
++ alias log-info=log_info
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias log-warn=log_warn
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
++ alias print-message=message
++ command -v -- ./scripts/network-extract.shell
++ alias print-newline=newline
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias pause=pause
++ alias print-line=print
++ alias system-metrics=system_metrics
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias warning-message=warning
++ export LC_ALL=C
++ alias system-metrics=system_metrics
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ script_filename=network-extract.shell
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ script_filename=network-extract
++ mkdir -p logs/console logs/jobs
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias validate-address=validate_address
++ which awk
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ local SCRIPT_DIR=./scripts
++ export logs_location=logs
++ logs_location=logs
+ local script_filename=cisco-configs.awk
++ mkdir -p logs/console logs/jobs
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=--MTc0ODkxMjY5MDMyNDQxODAwMAo--
++ divisor=--MTc0ODkxMjY5MDMyNDQxODAwMAo--
++ echo -e --verbose
+ source ./scripts/devops-helpers.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ network_extract__console=logs/console/network-extract.console
++ __DEVOPS_HELPERS_SOURCED=1
++ echo -e --export
++ export divisor=--MTc0ODkxMjY5MDMyMjQ2NzAwMAo--
+ touch logs/console/network-extract.console
++ divisor=--MTc0ODkxMjY5MDMyMjQ2NzAwMAo--
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console --export --verbose
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ IFS=,
++ echo 10.0.2.3
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
++ echo -e --verbose
++ alias network-configs--helper=network_configs__helper
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
++ alias network-extract--helper=network_extract__helper
++ which awk
+ [[ export =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ alias parse-cisco=main
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.volfskw2ew/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ output_dir=reports/172.16.1.6/cisco
++ printf '%*s' 12 ''
++ IFS=,
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console --export --verbose
++ echo 10.0.0.1
+ oIFS=' 	
'
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ local SCRIPT_DIR=./scripts
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
+ local script_filename=cisco-configs.awk
++ actions_logfile=./logs/console/run.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ touch ./logs/console/run.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ touch ./logs/console/run.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
+ [[ verbose =~ ^(logger|l)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ export =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local export_objects=true
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ newline
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local export_objects=true
+ declare -a execute
+ [[ export =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
++ [[ -n '' ]]
+ [[ export =~ ^(search|s)$ ]]
+ local verbose=true
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS=' 	
'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ (( i = 0 ))
+ [[ -z '' ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ (( i < count ))
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ debug=false
+ echo
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ export console_output=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ for xitem in "${@}"
+ console_output=false
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ read -r key value
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -z true ]]
+ local verbose=true
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS=' 	
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
'
+ [[ verbose =~ ^(config|c)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ export == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ debug=false
+ [[ logger =~ ^(search|s)$ ]]
+ script_helper=false
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ logger == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ [[ 5 -lt 4 ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ 7 -eq 0 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ss80tmnbdv/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ dry_run=false
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console --export --verbose
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ search_terms=()
+ [[ -z true ]]
++ which awk
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list != *,* ]]
+ console_output=false
+ mapfile -t search_terms
+ oIFS=' 	
+ [[ -z true ]]
'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ script_helper=false
+ newline
+ [[ false == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --export
+ for xitem in "${@}"
+ [[ verbose =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
++ IFS=,
++ echo 10.10.10.10
++ which awk
+ [[ verbose =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
+ [[ verbose =~ ^(platform|p)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(export|r)$ ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ export targets_location=targets
+ script_filename=network-extract.shell
++ printf '%*s' 12 ''
+ script_filename=network-extract
++ targets_location=targets
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ tr -d '\r'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ which awk
+ local 'indent=            '
++ export targets_location=targets
+ [[ true == true ]]
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS==
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias network-configs--helper=network_configs__helper
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias network-extract--helper=network_extract__helper
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local awk_bin=/usr/bin/awk
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ verbose =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
++ tr -d '\r'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ IFS=,
++ echo 172.16.0.5
++ grep -v '^#'
++ grep -v '^\s*$'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ date +%s%N
+ [[ export =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local SCRIPT_DIR=./scripts
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ read -r key value
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
+ declare -a execute
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ search == \h\e\l\p ]]
+++ base64
+ [[ search == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ printf '%*s' 12 ''
+++ base64
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.j3ck9wik3g/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ verbose =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console --export --verbose
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'extracted_configuration={
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ IFS=' 	
+ [[ true == true ]]
+ oIFS=' 	
'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ set -euo pipefail
  "version": "v7.2.5.F",
+ export LC_ALL=C
+ LC_ALL=C
+++ tr -dc a-zA-Z0-9
+ [[ -z '' ]]
'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
  "domain": ""
+ [[ -z '' ]]
+ for xitem in "${@}"
+ newline
+ export console_output=false
+ IFS==
+ read -r key value
  "hostname": "fg-branch-vpn-01"
}
+ local count=1

#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))

config firewall address
+ echo
 edit "Spidey-Sandbox"
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set subnet 10.0.1.2 255.255.255.255
+ console_output=false
++ which awk
+ [[ -z true ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ which awk
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
+ local first_search_entry=192.168.1.10
  set comment "QA node in Peter'\''s Lab"
 next
+ search_terms=()
end'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local last_search_entry=192.168.1.10
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ declare -a search_terms
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list != *,* ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ result=0
++ printf '%*s' 12 ''
+ [[ -n {
+ mapfile -t search_terms
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
  "version": "v7.2.5.F",
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ newline
+ local count=1
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
++ echo -e --verbose
+ [[ config =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ [[ config =~ ^(console|o)$ ]]
+ local count=1
+ [[ config =~ ^(export|r)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ config =~ ^(logger|l)$ ]]
+ newline
+ [[ config =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ [[ config =~ ^(search|s)$ ]]
  "domain": ""
+ (( i < count ))
+ [[ true == true ]]
  "hostname": "fg-branch-vpn-01"
+ local first_search_entry=172.18.1.20
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ local last_search_entry=172.18.1.20
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ true == true ]]
+ echo
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
}
+ read -r key value

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ] ]]
config firewall address
+ local count=1
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
 edit "Spidey-Sandbox"
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
+ (( i++ ))
+ [[ -z fortinet ]]
+ (( i < count ))
+ [[ true == true ]]
 next
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
end ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ ((  count == 0  ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ echo
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ (( i < count ))
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ newline
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
++ export divisor=--MTc0ODkxMjY5MDM1MTk4MzAwMAo--
++ divisor=--MTc0ODkxMjY5MDM1MTk4MzAwMAo--
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ export divisor=--MTc0ODkxMjY5MDM1MjExMTAwMAo--
+ echo
++ divisor=--MTc0ODkxMjY5MDM1MjExMTAwMAo--
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ source ./scripts/devops-helpers.shell
+ [[ -z cisco ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local awk_bin=/usr/bin/awk
++ [[ 5 -lt 4 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ newline
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ local verbose=true
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

++ alias network-extract--helper=network_extract__helper
config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
++ alias network-extract--helper=network_extract__helper
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ alias serialize-object=serialize_objects
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
+ alias serialize-object=serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
+ [[ verbose =~ ^(config|c)$ ]]
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
+ [[ verbose =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
 description Secure outbound concentrator'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ IFS=,
+ [[ verbose =~ ^(logger|l)$ ]]
++ echo 172.16.1.6
+ [[ verbose =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ local 'indent=            '
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
  "model": "",
+ [[ verbose == \d\e\b\u\g ]]
  "version": "16.9",
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
}
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ declare -a execute
+ [[ false == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]]
+ search_terms=()
+ [[ extract =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(export|r)$ ]]

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xG3X2knPYa
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xG3X2knPYa
version 16.9
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list != *,* ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline
+ [[ config =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
hostname branch-isr-02
+ [[ config =~ ^(export|r)$ ]]
+ export 'nl=\n'
+ IFS=' 	
++ grep -v '^#'
+ [[ verbose == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]

+ IFS==
+ alias parse-cisco=main
+ local count=1
+ alias serialize-object=serialize_objects
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ nl='\n'
interface GigabitEthernet0/0/2
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ source ./scripts/devops-resources.shell
 ip address 10.0.2.3 255.255.255.0
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ [[ -z x ]]
 description Dev VLAN
+ [[ extract == \v\e\r\b\o\s\e ]]

+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ export logs_location=logs
object network Panther-Gateway
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ read -r key value
+ echo
+ export logs_location=logs
+ logs_location=logs
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ config == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
+ logs_location=logs
++ alias detect-vendor=detect_vendor
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mkdir -p logs/console
++ alias exit-error=exit_error
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias list-file=list_file
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias log-error=log_error
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
++ alias log-info=log_info
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias log-warn=log_warn
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
++ alias print-message=message
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
++ alias print-newline=newline
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
++ which awk
++ echo -e --verbose
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
++ alias pause=pause
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-line=print
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ search == \d\e\b\u\g ]]
  "vendor": "cisco",
+ [[ search == \d\r\y\-\r\u\n ]]
  "model": "ASA",
  "version": "9.14(3)",
+ [[ search == \v\e\r\b\o\s\e ]]
  "domain": "edge.dc.example.com",
++ alias relative-configpath=relative_configpath
  "hostname": "perimeter-fw1"
+ for xitem in "${@}"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ newline 2
domain-name edge.dc.example.com
+ IFS==
+ read -r key value

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
+ [[ extract =~ ^(config|c)$ ]]
 description Core services gateway'
+ local count=2
++ alias system-metrics=system_metrics
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ [[ -n {
+ IFS=' 	
  "vendor": "cisco",
'
+ [[ extract =~ ^(export|r)$ ]]
  "model": "ASA",
+ [[ -z '' ]]
+ (( i++ ))
  "version": "9.14(3)",
+ print '{
+ (( i < count ))
  "domain": "edge.dc.example.com",
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
  "hostname": "perimeter-fw1"
++ sed -e '1s|^\(-\)\{1,\}||'
}

  "vendor": "cisco",
  "model": "",
ASA Version 9.14(3)
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ tr -d '\r'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
hostname perimeter-fw1
  "domain": "",
+ [[ extract =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
domain-name edge.dc.example.com
  "hostname": "branch-isr-02"
+ [[ extract =~ ^(platform|p)$ ]]
}

version 16.9
+ [[ extract =~ ^(search|s)$ ]]
++ alias warning-message=warning
hostname branch-isr-02
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]

++ echo -e --platform=fortinet
+ [[ extract == \d\r\y\-\r\u\n ]]
interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

+ [[ extract == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
interface GigabitEthernet0/1
+ (( i++ ))
+ IFS==
object network Panther-Gateway
 nameif inside
+ (( i < count ))
 security-level 100
+ read -r key value
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ [[ true == true ]]
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ grep -v '^\s*$'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
++ export LC_ALL=C
+ [[ cfg == \c\f\g ]]
++ LC_ALL=C
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
+ local first_search_entry=10.0.2.3
 host 10.0.0.1
 description Core services gateway ]]
+ local last_search_entry=10.0.2.3
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ] ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
++ grep -v '^#'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ local count=1
  "version": "12.4",
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ script_filename=network-extract.shell
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ (( i = 0 ))

+ (( i < count ))
+ script_filename=network-extract
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
+ echo
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.100
+ (( i++ ))
 network-object host 10.10.10.10
+ (( i < count ))

object-group network Mutant-WiFi
 description Controlled guest devices
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract.shell
 network-object host 10.10.10.10'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ result=0
+ network_extract__console=logs/console/network-extract.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

+ newline
object-group network Mutant-WiFi
+ print '{
+ local count=1
+ touch logs/console/network-extract.console
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
  "version": "9.14(3)",
+ echo
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ (( i++ ))

+ (( i < count ))
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
interface GigabitEthernet0/1
 nameif inside
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
 security-level 100
 ip address 10.0.0.1 255.255.255.0
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
 description Controlled guest devices
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
++ echo -e --platform=cisco
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
++ sed -e '1s|^\(-\)\{1,\}||'
 description Core services gateway ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
 network-object host 10.10.10.10 ]]
++ printf '%*s' 12 ''

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline 2
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ local target_platform=fortinet
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
+ IFS==
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=2
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
+ newline
++ export actions_logfile=./logs/console/run.console
+ output_dir=reports/192.168.1.10/fortinet
  "vendor": "cisco",
+ output_dir=reports/172.18.1.20/cisco
  "model": "ASA",
+ [[ ! -d reports/192.168.1.10/fortinet ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ [[ config =~ ^(config|c)$ ]]
  "hostname": "perimeter-fw1"
+ local count=1
+ (( i = 0 ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i++ ))
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
}
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ config =~ ^(extract|x)$ ]]
++ actions_logfile=./logs/console/run.console

+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ config =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
domain-name edge.dc.example.com
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ false == true ]]

+ [[ config =~ ^(search|s)$ ]]
object-group network Panther-Edge
+ [[ search =~ ^(config|c)$ ]]
+ [[ true == true ]]
 description Internet-facing proxy systems
++ touch ./logs/console/run.console
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ search =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
+ [[ search =~ ^(export|r)$ ]]
  "version": "12.4",
+ [[ 7 -eq 0 ]]
+ [[ search =~ ^(extract|x)$ ]]
  "domain": "",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.tkqcympoi0/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "hostname": "access-sw1-west"
 network-object host 203.0.113.25
+ [[ config == \h\e\l\p ]]
}

+ message '             -f ./scripts/extract/cisco-configs.awk \'
version 12.4
 network-object host 172.16.0.5
+ newline

hostname access-sw1-west
object network Magneto-Core
+ local count=1
+ message 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(config|c)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console --export --verbose
 host 172.16.0.5
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ platform =~ ^(console|o)$ ]]

+ [[ config == \d\e\b\u\g ]]
object-group network MGMT-ACCESS
 description Management objects
+ (( i = 0 ))
 network-object host 192.168.0.1
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ -n Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
+ local 'message=Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
 description WAN firewall entry point'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 description Controlled guest devices
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 10.10.10.10'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ oIFS=' 	
'
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ for xitem in "${@}"
+ echo
+ local target_platform=cisco
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
  "version": "12.4",
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
  "domain": "",
++ echo -e --platform=cisco
  "hostname": "access-sw1-west"
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
}
+ [[ platform == \h\e\l\p ]]

version 12.4
+ IFS==
hostname access-sw1-west
+ [[ platform == \d\e\b\u\g ]]

+ [[ platform == \d\r\y\-\r\u\n ]]
object-group network MGMT-ACCESS
 description Management objects
+ [[ platform == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
+ for xitem in "${@}"
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "hostname": "access-sw1-west"
}

+ IFS==
version 12.4
+ read -r key value
hostname access-sw1-west
+ echo -e 'Exported objects from: reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg'

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10
+ result=0

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
  "model": "ASA",
+ (( i < count ))
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local count=2
ASA Version 9.14(3)
+ (( i = 0 ))
hostname perimeter-fw1
+ (( i < count ))
domain-name edge.dc.example.com

+ echo
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ (( i++ ))
object network Magneto-Core
+ (( i < count ))
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo
+ [[ search =~ ^(logger|l)$ ]]
'
+ (( i++ ))
+ [[ -z '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ debug=false
+ (( i < count ))
+ [[ -z '' ]]
+ dry_run=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list
+ [[ true == true ]]
+ [[ search == \h\e\l\p ]]
+ debug=false
+ [[ search == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ read -r key value
+ dry_run=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS=' 	
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.2zlhngvl6l/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console --export --verbose
+ for xitem in "${@}"
+ oIFS=' 	
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline 2
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ export targets_location=targets
+ [[ platform == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
++ targets_location=targets
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(export|r)$ ]]
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ logger =~ ^(extract|x)$ ]]
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ read -r key value
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z x ]]
+ [[ logger == \h\e\l\p ]]
+ local parent_dir=reports/10.0.1.2/fortinet
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ export logs_location=logs
+ newline
+ logs_location=logs
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ mkdir -p logs/console
+ local count=1
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ export console_output=false
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ (( i < count ))
+ [[ -z true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo
+ [[ -z '' ]]
+ debug=false
+ (( i++ ))
+ newline
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ [[ -z '' ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ [[ true == true ]]
+ export console_output=false
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ console_output=false
+ message 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ -z true ]]
+ [[ -n Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console ]]
+ local 'message=Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ [[ -z '' ]]
+ local script_filename=fortinet-configs.awk
+ echo -e 'Exported objects from: reports/10.0.2.3/cisco/branch-isr-02.cfg'
+ script_helper=false
+ read -r key value
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local script_filename=cisco-configs.awk
+ [[ verbose == \h\e\l\p ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose == \d\e\b\u\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ console_output=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console ]]
+ export console_output=false
+ [[ -z '' ]]
+ script_helper=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ false == true ]]
+ newline
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ (( i < count ))
++ basename reports/10.0.1.2/fortinet/fg-branch-vpn-01
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ output_dir=reports/10.0.2.3/misc
+ [[ false == true ]]
+ [[ ! -d reports/10.0.2.3/misc ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+++ date +%s%N
++ which awk
+ [[ logger =~ ^(export|r)$ ]]
+ message 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'message=Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/10.0.0.1/cisco/perimeter-fw1.cfg'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ serialize_objects
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(search|s)$ ]]
+ mapfile -t search_terms
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local 'extracted_configuration={
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(export|r)$ ]]
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ echo -e --export
+ [[ extract =~ ^(logger|l)$ ]]
+ IFS==
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ read -r key value
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ which awk
+ for xitem in "${@}"
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ IFS==
+ read -r key value
}
+++ base64
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6pnqtgs54w/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console --export --verbose
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ oIFS=' 	
+ [[ logger =~ ^(config|c)$ ]]
'
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ [[ -z '' ]]
+ export console_output=false
+ search_terms=()
+ console_output=false
+ [[ -z true ]]
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ config =~ ^(config|c)$ ]]
+ [[ 7 -eq 0 ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.28ub9mwcci/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ config =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console --export --verbose
+ [[ export =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local export_objects=true
+ declare -a search_terms
+ [[ extract =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ [[ search =~ ^(export|r)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ oIFS=' 	
'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ mktemp -d
++ echo -e --export
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --export
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ tr -d '\r'
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --verbose
+ [[ extract =~ ^(search|s)$ ]]
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ grep -v '^\s*$'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKDm42ynVD
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKDm42ynVD
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
++ [[ -n '' ]]
+ local export_objects=true
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local export_objects=true
++ [[ 5 -lt 4 ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ export == \h\e\l\p ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ touch logs/console/network-extract.console
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias exit-error=exit_error
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ export == \h\e\l\p ]]
++ alias list-file=list_file
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias log-info=log_info
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ extract == \d\e\b\u\g ]]
++ alias log-warn=log_warn
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ read -r key value
++ alias system-metrics=system_metrics
++ echo -e --export
+ IFS==
++ alias validate-address=validate_address
+ read -r key value
++ alias warning-message=warning
+ [[ export == \v\e\r\b\o\s\e ]]
++ export LC_ALL=C
+ for xitem in "${@}"
++ LC_ALL=C
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local first_search_entry=192.168.0.1
+ [[ platform =~ ^(platform|p)$ ]]
+ local last_search_entry=192.168.0.1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ platform =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ echo -e --verbose
++ echo -e --platform=cisco
++ tr -d '\r'
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.1.2
+ local last_search_entry=10.0.1.2
+ for xitem in "${@}"
+ for xitem in "${@}"
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ IFS==
+ read -r key value
++ tr -d '\r'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ grep -v '^\s*$'
++ touch ./logs/console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
++ tr -d '\r'
++ grep -v '^#'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ [[ export == \d\e\b\u\g ]]
+ read -r key value
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
++ grep -v '^\s*$'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ IFS==
+ IFS=' 	
+ [[ verbose =~ ^(platform|p)$ ]]
'
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
+ dry_run=false
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ] ]]
+ [[ -z true ]]
++ grep -v '^#'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ set -euo pipefail
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-configs--ips.list ]'
+ local verbose=true
+ export LC_ALL=C
+ export console_output=false
+ LC_ALL=C
+ console_output=false
+ IFS=' 	
+ [[ -z true ]]
'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ debug=false
+ script_helper=false
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ false == true ]]
+ [[ -z true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ] ]]
+ [[ -z '' ]]
+ [[ extract == \h\e\l\p ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ export console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]]
+ console_output=false
+ search_terms=()
+ [[ -z true ]]
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]]
+ [[ -z '' ]]
+ script_helper=false
+ local first_search_entry=172.31.255.254
+ [[ false == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list != *,* ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ mapfile -t search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list != *,* ]]
+ local last_search_entry=172.31.255.254
+ mapfile -t search_terms
+ local count=1
+ ((  count == 0  ))
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
++ echo -e --verbose
++ mktemp -d
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ echo -e --verbose
++ echo -e --platform=cisco
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local first_search_entry=192.0.2.50
+ local count=1
+ ((  count == 0  ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local last_search_entry=192.0.2.50
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ [[ -z cisco ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ local first_search_entry=10.0.0.1
+ [[ config =~ ^(console|o)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
+ local last_search_entry=10.0.0.1
+ [[ config =~ ^(export|r)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ] ]]
+ [[ 7 -eq 0 ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ ((  count == 0  ))
+ [[ config =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ echo
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5jdwvji2cd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ ((  count == 0  ))
+ newline
+ newline
+ [[ platform =~ ^(extract|x)$ ]]
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ] ]]
+ [[ config =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ for xitem in "${@}"
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ local count=1
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ tr -d '\r'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
++ tr -d '\r'
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -z cisco ]]
+ local count=1
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4yUOfGWoQu
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4yUOfGWoQu
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ date +%s%N
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ [[ -n '' ]]
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ oIFS=' 	
+ [[ search =~ ^(search|s)$ ]]
'
++ alias detect-vendor=detect_vendor
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
+ for xitem in "${@}"
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search == \h\e\l\p ]]
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ grep -v '^#'
+ [[ verbose =~ ^(config|c)$ ]]
++ alias pause=pause
++ grep -v '^#'
+ [[ verbose =~ ^(console|o)$ ]]
++ alias print-line=print
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias print-file=print_file
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+++ base64
++ alias relative-configpath=relative_configpath
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ local count=1
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ ((  count == 0  ))
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias system-metrics=system_metrics
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local verbose=true
+ local target_platform=cisco
+ [[ extract =~ ^(export|r)$ ]]
+ IFS=' 	
'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ newline
+ debug=false
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ local count=1
+ dry_run=false
+ (( i = 0 ))
+ [[ -z true ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ console_output=false
+ [[ extract =~ ^(logger|l)$ ]]
++ alias validate-address=validate_address
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z '' ]]
++ alias warning-message=warning
+ [[ extract =~ ^(search|s)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ extract == \h\e\l\p ]]
++ LC_ALL=C
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ script_helper=false
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ [[ extract == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ [[ false == true ]]
+ for xitem in "${@}"
++ export cache_location=.cache
++ cache_location=.cache
+ IFS==
+ read -r key value
++ export logs_location=logs
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
++ logs_location=logs
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
++ mkdir -p logs/console logs/jobs
+ search_terms=()
+ declare -a search_terms
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ platform =~ ^(export|r)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ local target_platform=cisco
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ IFS==
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ IFS==
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ for xitem in "${@}"
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ IFS==
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local first_search_entry=172.16.0.5
+ [[ -z '' ]]
+ export console_output=false
+ local first_search_entry=192.168.0.100
+ set -euo pipefail
+ console_output=false
+ [[ logger =~ ^(logger|l)$ ]]
+ local last_search_entry=172.16.0.5
+ [[ extract == \d\e\b\u\g ]]
+ local last_search_entry=192.168.0.100
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ] ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ export LC_ALL=C
+ LC_ALL=C
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ newline
+ set -euo pipefail
+ local count=1
+ export LC_ALL=C
+ ((  count == 0  ))
+ LC_ALL=C
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ echo -e --platform=cisco
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
++ export divisor=--MTc0ODkxMjY5MDQzNTI1NDAwMAo--
+ local count=1
++ divisor=--MTc0ODkxMjY5MDQzNTI1NDAwMAo--
+ local count=1
+ (( i = 0 ))
+ [[ -z true ]]
+ source ./scripts/devops-helpers.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console ]]
+ (( i = 0 ))
++ tr -d '\r'
+ (( i < count ))
+ [[ -z '' ]]
+ (( i < count ))
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ (( i++ ))
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
++ echo -e --platform=cisco
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
++ export actions_logfile=./logs/console/run.console
+ echo
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ touch ./logs/console/run.console
++ alias network-configs--helper=network_configs__helper
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ grep -v '^\s*$'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ echo -e --config=.cache/resources/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ alias serialize-object=serialize_objects
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ script_helper=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --export
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ false == true ]]
+ read -r key value
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]]
+ local first_search_entry=172.16.1.6
+ search_terms=()
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list != *,* ]]
+ set -euo pipefail
+ mapfile -t search_terms
+ export LC_ALL=C
+ LC_ALL=C
+ local 'prompt_message=Enter configuration file to be parsed: '
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ conf == \c\o\n\f ]]
++ mktemp -d
+ [[ platform =~ ^(config|c)$ ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local count=1
+ [[ search =~ ^(export|r)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(extract|x)$ ]]
+ echo
+ [[ search =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ config =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ IFS==
++ mktemp -d
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+++ date +%s%N
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ output_dir=reports/192.0.2.50/cisco
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \h\e\l\p ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+++ base64
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ local target_platform=cisco
+ [[ logger =~ ^(export|r)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ command -v -- ./scripts/network-extract.shell
+++ tr -dc a-zA-Z0-9
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.16.0.5/misc/fw3.cfg
++ tr -d '\r'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vpVrygYHTt
+ IFS==
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vpVrygYHTt
+ read -r key value
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ 7 -eq 0 ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6pnqtgs54w/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console --export --verbose
+ (( i++ ))
+ oIFS=' 	
'
++ alias list-file=list_file
+ for xitem in "${@}"
++ grep -v '^\s*$'
++ alias log-error=log_error
+ IFS==
++ alias log-info=log_info
++ alias log-warn=log_warn
+ read -r key value
++ alias print-message=message
++ alias print-newline=newline
++ dirname -- ./scripts/network-extract.shell
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
++ alias relative-configpath=relative_configpath
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ set -euo pipefail
+ IFS==
+ export LC_ALL=C
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ LC_ALL=C
++ export divisor=--MTc0ODkxMjY5MDQ1NDgxOTAwMAo--
++ divisor=--MTc0ODkxMjY5MDQ1NDgxOTAwMAo--
+ [[ logger =~ ^(logger|l)$ ]]
+ source ./scripts/devops-helpers.shell
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
+ [[ platform == \d\e\b\u\g ]]
++ alias validate-address=validate_address
+ [[ platform == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias warning-message=warning
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
++ export LC_ALL=C
++ grep -v '^#'
++ __DEVOPS_HELPERS_SOURCED=1
++ LC_ALL=C
+ [[ logger == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export 'nl=\n'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GrEXYh0fpg
+ [[ logger == \v\e\r\b\o\s\e ]]
++ nl='\n'
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
++ export cache_location=.cache
+ for xitem in "${@}"
++ cache_location=.cache
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ export logs_location=logs
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
+ read -r key value
+ output_dir=reports/192.168.0.100/cisco
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ output_dir=reports/172.16.0.5/misc
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ alias network-configs--helper=network_configs__helper
+ [[ ! -d reports/172.16.0.5/misc ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWIhTIiH3T
+ [[ export =~ ^(config|c)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWIhTIiH3T
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ export =~ ^(console|o)$ ]]
+ [[ search == \d\e\b\u\g ]]
+ export 'nl=\n'
+ [[ search == \d\r\y\-\r\u\n ]]
+ nl='\n'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ IFS==
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GrEXYh0fpg
+ [[ conf == \c\o\n\f ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ [[ platform =~ ^(config|c)$ ]]
+ export 'nl=\n'
+ source ./scripts/devops-resources.shell
+ [[ export =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ read -r key value
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ platform =~ ^(extract|x)$ ]]
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ nl='\n'
+ [[ platform == \h\e\l\p ]]
+ source ./scripts/devops-resources.shell
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local export_objects=true
+ for xitem in "${@}"
+ [[ export =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ [[ export =~ ^(platform|p)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ dirname reports/10.0.1.2/misc/switch1.conf
++ command -v -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ command -v -- ./scripts/network-extract.shell
++ alias exit-error=exit_error
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ echo -e --export
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ 5 -lt 4 ]]
++ alias pause=pause
++ echo -e --export
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --export
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ dirname -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ dirname reports/172.31.255.254/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/172.16.1.6/fortinet
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ search =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local export_objects=true
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ [[ export =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
++ alias detect-vendor=detect_vendor
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ local first_search_entry=192.168.1.11
++ alias exit-error=exit_error
+ [[ export == \h\e\l\p ]]
+ local last_search_entry=192.168.1.11
++ alias print-line=print
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ local script_filename=cisco-configs.awk
+ for xitem in "${@}"
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ IFS==
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias relative-configpath=relative_configpath
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
+ read -r key value
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
++ alias list-file=list_file
++ alias log-error=log_error
+ local count=1
+ ((  count == 0  ))
++ alias log-info=log_info
+ output_dir=reports/10.0.1.2/misc
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
++ alias log-warn=log_warn
++ export targets_location=targets
++ targets_location=targets
+ [[ export =~ ^(config|c)$ ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ export =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ output_dir=reports/172.31.255.254/misc
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export =~ ^(export|r)$ ]]
++ IFS=,
+ [[ ! -d reports/172.31.255.254/misc ]]
+ [[ extract == \h\e\l\p ]]
+ local export_objects=true
+ [[ extract == \d\e\b\u\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo 192.0.2.50
+ for xitem in "${@}"
+ [[ export =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
++ which awk
+ [[ config =~ ^(config|c)$ ]]
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ alias system-metrics=system_metrics
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ declare -a execute
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
+ [[ ! -d reports/10.0.1.2/misc ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local count=1
++ alias print-message=message
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ [[ export =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eyoxliogzr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --verbose
++ echo -e --verbose
+++ date +%s%N
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ alias pause=pause
++ alias print-line=print
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
++ IFS=,
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
++ echo 192.168.0.100
+ [[ logger =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ cfg == \c\f\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ IFS==
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias warning-message=warning
+ [[ export =~ ^(export|r)$ ]]
+ IFS=' 	
++ export LC_ALL=C
'
+ local export_objects=true
+ [[ -z '' ]]
+ debug=false
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
++ LC_ALL=C
+ dry_run=false
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ IFS=,
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -z true ]]
+ declare -a execute
+ [[ -z '' ]]
++ alias relative-configpath=relative_configpath
+ export console_output=false
++ echo 172.16.0.5
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
+ console_output=false
+ [[ -z true ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console ]]
+ set -euo pipefail
+ [[ -z '' ]]
+ [[ logger =~ ^(export|r)$ ]]
++ alias system-metrics=system_metrics
+ export LC_ALL=C
+ [[ logger =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ script_helper=false
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
++ export divisor=--MTc0ODkxMjY5MDQ4MDAzNzAwMAo--
++ divisor=--MTc0ODkxMjY5MDQ4MDAzNzAwMAo--
+ search_terms=()
+ source ./scripts/devops-helpers.shell
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list != *,* ]]
++ [[ -n '' ]]
+ mapfile -t search_terms
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
++ alias validate-address=validate_address
+ declare -a execute
++ which awk
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ logger =~ ^(search|s)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ logger == \h\e\l\p ]]
++ export logs_location=logs
+ [[ logger == \d\e\b\u\g ]]
++ logs_location=logs
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs/console logs/jobs
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ printf '%*s' 12 ''
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SCHDuQlIeB
+ [[ verbose == \h\e\l\p ]]
++ echo -e --platform=fortinet
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias network-extract--helper=network_extract__helper
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local 'indent=            '
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ IFS=' 	
'
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ mktemp -d
++ which awk
+ alias serialize-object=serialize_objects
++ echo -e --platform=cisco
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ which awk
+ [[ search =~ ^(logger|l)$ ]]
+ newline
+ [[ search =~ ^(platform|p)$ ]]
+ local count=1
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ (( i < count ))
+ [[ search == \h\e\l\p ]]
+ echo
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ alias parse-cisco=main
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \h\e\l\p ]]
+ [[ -z x ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ logger == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
+ [[ logger == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ export 'nl=\n'
++ nl='\n'
++ command -v -- ./scripts/network-extract.shell
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
+ [[ export =~ ^(search|s)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ export == \h\e\l\p ]]
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ export == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export cache_location=.cache
+ newline
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SCHDuQlIeB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ debug=false
+ [[ -z '' ]]
++ alias detect-vendor=detect_vendor
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias exit-error=exit_error
++ command -v -- ./scripts/network-extract.shell
+ export console_output=false
++ grep -v '^\s*$'
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias list-file=list_file
++ alias log-error=log_error
+ local awk_bin=/usr/bin/awk
++ alias log-info=log_info
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ IFS==
++ cache_location=.cache
++ alias print-message=message
++ export logs_location=logs
++ logs_location=logs
++ alias print-newline=newline
++ mkdir -p logs/console logs/jobs
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ grep -v '^#'
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local awk_bin=/usr/bin/awk
++ IFS=,
++ echo 172.16.1.6
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
++ echo -e --export
+ declare -a execute
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J7fx6l6jbJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J7fx6l6jbJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
++ alias pause=pause
+ read -r key value
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ printf '%*s' 12 ''
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
++ alias list-file=list_file
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias log-error=log_error
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
++ alias log-info=log_info
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ newline
++ alias log-warn=log_warn
+ for xitem in "${@}"
++ alias print-message=message
++ alias print-newline=newline
+ IFS==
+ read -r key value
++ alias pause=pause
+ local count=1
++ alias print-line=print
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]]
+ set -euo pipefail
++ alias print-file=print_file
+ search_terms=()
+ (( i++ ))
+ declare -a search_terms
+ export LC_ALL=C
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]]
++ export actions_logfile=./logs/console/run.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ printf '%*s' 12 ''
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list != *,* ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias system-metrics=system_metrics
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ LC_ALL=C
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias print-line=print
++ alias warning-message=warning
+ [[ platform =~ ^(export|r)$ ]]
++ export LC_ALL=C
++ LC_ALL=C
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ [[ platform =~ ^(logger|l)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ which awk
++ mkdir -p logs/console logs/jobs
++ dirname -- ./scripts/network-extract.shell
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ newline
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local target_platform=fortinet
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local first_search_entry=192.168.1.10
+ [[ platform == \h\e\l\p ]]
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local last_search_entry=192.168.1.10
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
++ actions_logfile=./logs/console/run.console
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ mapfile -t search_terms
++ touch ./logs/console/run.console
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ] ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ [[ config =~ ^(export|r)$ ]]
+ local count=1
+ [[ config =~ ^(extract|x)$ ]]
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias print-file=print_file
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias relative-configpath=relative_configpath
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
++ echo -e --platform=cisco
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local 'extracted_configuration={
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname -- ./scripts/network-extract.shell
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ 7 -eq 0 ]]
}
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.grdpmkmunm/network-configs--ips.list =~ ^-*(h|help)$ ]]

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ newline
domain-name global.dmz.example.net
+ local count=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console --export --verbose
+ (( i = 0 ))

+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Watchtower-DMZ
+ (( i++ ))
 description Global secure relay
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
 network-object host 192.0.2.50'
+ local awk_bin=/usr/bin/awk
+ oIFS=' 	
'
+ result=0
++ alias system-metrics=system_metrics
+ for xitem in "${@}"
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ [[ -n {
  "vendor": "cisco",
+ IFS==
  "model": "ASA",
+ read -r key value
  "version": "9.12(4)",
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
}
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]

ASA Version 9.12(4)
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ alias validate-address=validate_address
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ alias warning-message=warning
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
++ export LC_ALL=C
+ [[ platform =~ ^(platform|p)$ ]]
++ LC_ALL=C
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local target_platform=cisco
+ [[ export =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ export 'nl=\n'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ export =~ ^(console|o)$ ]]
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ actions_logfile=./logs/console/run.console
++ echo -e --export
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ printf '%*s' 12 ''
ASA Version 9.12(4)
++ sed -e '1s|^\(-\)\{1,\}||'
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ echo -e --verbose
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ local 'indent=            '
+ [[ true == true ]]
++ tr -d '\r'
+ newline
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
++ nl='\n'
+ (( i = 0 ))
++ export cache_location=.cache
+ [[ export =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
++ cache_location=.cache
+ local export_objects=true
+ echo
+ [[ export =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ output_dir=reports/10.0.0.1/fortinet
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ for xitem in "${@}"
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ [[ platform =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ read -r key value
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ read -r key value
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ local SCRIPT_DIR=./scripts
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

+ local script_filename=cisco-configs.awk
version 12.4
hostname access-sw1-west
+ local script_filepath=./scripts/extract/cisco-configs.awk

interface Vlan100
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
++ grep -v '^#'

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
+ [[ extract =~ ^(config|c)$ ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
  "model": "",
  "version": "",
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
  "domain": "",
+ [[ extract =~ ^(logger|l)$ ]]
  "hostname": ""
}

+ [[ extract =~ ^(platform|p)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ [[ extract =~ ^(search|s)$ ]]

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ result=0
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
+ IFS==
  "model": "",
+ read -r key value
  "version": "",
  "domain": "",
  "hostname": ""
}

++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ export logs_location=logs
+ debug=false
++ logs_location=logs
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

+ [[ extract =~ ^(logger|l)$ ]]
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
object-group network MGMT-ACCESS
 description Management objects
+ [[ search =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ echo -en '{
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ search =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ search =~ ^(platform|p)$ ]]
  "hostname": "access-sw1-west"
+ newline 2
+ [[ search =~ ^(search|s)$ ]]
}
+ extract_location=reports/192.168.1.10/misc/fw1.cfg

+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
version 12.4
hostname access-sw1-west
+ [[ search == \h\e\l\p ]]

+ [[ search == \d\e\b\u\g ]]
interface Vlan100
+ [[ search == \d\r\y\-\r\u\n ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
+ [[ search == \v\e\r\b\o\s\e ]]
 description Management objects
 network-object host 192.168.0.1
+ for xitem in "${@}"
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ IFS==
+ read -r key value
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ (( i++ ))
  "domain": "",
+ (( i < count ))
  "hostname": ""
}
+ echo

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
++ sed -e '1s|^\(-\)\{1,\}||'

+ (( i++ ))
object network Edge-Terminal
+ (( i < count ))
 host 172.16.0.5
 description Internet firewall handoff'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lhf9VPzkxc
++ mktemp -d
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lhf9VPzkxc
+++ date +%s%N
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ -n {
+ sed '1{/^[[:space:]]*$/d;}'
+ export 'nl=\n'
  "vendor": "cisco",
+ nl='\n'
  "model": "",
  "version": "",
+ source ./scripts/devops-resources.shell
  "domain": "",
  "hostname": ""
}

+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ export =~ ^(config|c)$ ]]
object-group network Panther-Edge
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ [[ export =~ ^(console|o)$ ]]
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ newline
  "version": "",
  "domain": "",
  "hostname": ""
+ local count=1
}
+ (( i = 0 ))

+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
object-group network Panther-Edge
+ echo
+ local export_objects=true
 description Internet-facing proxy systems
+ [[ export =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
++ command -v -- ./scripts/network-extract.shell
++ which awk
 host 172.16.0.5
 description Internet firewall handoff'
++ which awk
++ echo -e --platform=cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
++ echo -e --verbose
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
  "model": "FortiGate-200F",
  "version": "",
+ [[ logger =~ ^(platform|p)$ ]]
  "domain": ""
  "hostname": "fg-campus-core"
+ newline 2
+ [[ logger =~ ^(search|s)$ ]]
}
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
++ dirname reports/192.168.1.10/misc/fw1.cfg

+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
#hostname="fg-campus-core"
+ [[ extract =~ ^(platform|p)$ ]]
#model="FortiGate-200F"
+ [[ logger == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ for xitem in "${@}"
++ export divisor=--MTc0ODkxMjY5MDM5NTYzNDAwMAo--
++ divisor=--MTc0ODkxMjY5MDM5NTYzNDAwMAo--
++ mkdir -p logs/console logs/jobs
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OYarztcZlI
+ [[ verbose =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OYarztcZlI
+ local first_search_entry=192.0.2.50
+ [[ verbose =~ ^(export|r)$ ]]
+ local last_search_entry=192.0.2.50
+ [[ verbose =~ ^(extract|x)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ export 'nl=\n'
+ [[ verbose =~ ^(platform|p)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
+ local verbose=true
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ [[ export =~ ^(search|s)$ ]]
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias list-file=list_file
+ dry_run=false
++ alias network-extract--helper=network_extract__helper
+ [[ -z true ]]
++ alias log-error=log_error
+ [[ -z '' ]]
+ export console_output=false
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ search =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ search =~ ^(platform|p)$ ]]
+ console_output=false
++ alias print-newline=newline
+ [[ -z true ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list
+ alias serialize-object=serialize_objects
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
+ [[ -z '' ]]
+ script_helper=false
++ alias print-file=print_file
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

++ alias relative-configpath=relative_configpath
version 16.9
hostname branch-isr-02

+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ search_terms=()

object network BlackWidow-Core
+ declare -a search_terms
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list != *,* ]]
+ result=0
++ alias system-metrics=system_metrics
+ newline 2
+ [[ -n {
  "vendor": "cisco",
+ mapfile -t search_terms
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ search =~ ^(config|c)$ ]]

++ command -v -- ./scripts/network-extract.shell
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
++ alias warning-message=warning
+ logs_location=logs
++ export LC_ALL=C
+ mkdir -p logs/console
++ LC_ALL=C
+ [[ logger =~ ^(config|c)$ ]]
++ mktemp -d
++ export 'nl=\n'
+ [[ logger =~ ^(console|o)$ ]]
++ nl='\n'
+ [[ logger =~ ^(export|r)$ ]]
++ export cache_location=.cache
+ [[ logger =~ ^(extract|x)$ ]]
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local object_path=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local search_pattern
+ local parent_dir=reports/10.0.2.3/cisco
+ local count=1
+ (( i = 0 ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ [[ export =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias detect-vendor=detect_vendor
+ [[ export =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ export =~ ^(export|r)$ ]]
+ [[ true == true ]]
++ alias exit-error=exit_error
+ local export_objects=true
+ [[ false == true ]]
+ [[ export == \h\e\l\p ]]
+ [[ cfg == \c\f\g ]]
+ [[ export =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ export == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
version 16.9
+ console_output=false
hostname branch-isr-02

+ [[ -z true ]]
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ local count=2
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
++ which awk
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
 description ISP uplink
+ [[ logger =~ ^(console|o)$ ]]

+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ IFS=,
++ echo 10.0.1.2
++ echo -e --export
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ declare -a execute
+ for xitem in "${@}"
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
+ [[ export == \d\r\y\-\r\u\n ]]
++ alias list-file=list_file
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ IFS=,
++ echo 172.18.1.20
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
++ alias print-newline=newline
+ [[ -z '' ]]
+ [[ config =~ ^(extract|x)$ ]]
+ script_helper=false
+ (( i = 0 ))
+ [[ config =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ (( i < count ))
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
object network BlackWidow-Core
++ dirname -- ./scripts/network-extract.shell
+ [[ config == \h\e\l\p ]]
++ alias pause=pause
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \d\e\b\u\g ]]
 host 172.16.1.6
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ IFS=,
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==
++ echo 192.168.0.1
+ read -r key value
+ script_filename=network-extract
+ [[ verbose =~ ^(platform|p)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(search|s)$ ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ verbose == \h\e\l\p ]]
+ touch logs/console/network-extract.console
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ export actions_logfile=./logs/console/run.console
+ IFS=' 	
++ actions_logfile=./logs/console/run.console
'
+ [[ -z '' ]]
++ touch ./logs/console/run.console
+ debug=false
+ [[ -z '' ]]
+ IFS==
+ dry_run=false
+ read -r key value
+ [[ -z true ]]
+ [[ -z '' ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ export console_output=false
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QXgvGxvZSk
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QXgvGxvZSk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-configs--ips.list ]'
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ read -r key value
+ [[ export =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
+ export 'nl=\n'
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ (( i < count ))
 description Branch router uplink NAT ]]
+ nl='\n'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ [[ export == \d\e\b\u\g ]]
+ source ./scripts/devops-resources.shell
+ declare -a execute
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias print-line=print
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias print-file=print_file
++ IFS=,
++ [[ 5 -lt 4 ]]
++ alias relative-configpath=relative_configpath
++ echo 192.168.1.10
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ dirname -- ./scripts/network-extract.shell
++ alias print-newline=newline
++ alias system-metrics=system_metrics
+ console_output=false
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/access-sw1-west.cfg'
++ alias pause=pause
+ [[ -z true ]]
++ echo reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console ]]
++ alias print-line=print
+ [[ -z '' ]]
+ serialize_objects
+ script_helper=false
+ [[ false == true ]]
+ local count=1
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ alias print-file=print_file
+ ((  count == 0  ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]]
++ touch ./logs/console/run.console
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]]
++ alias relative-configpath=relative_configpath
++ alias validate-address=validate_address
+ echo
+ (( i++ ))
+ search_terms=()
+ (( i < count ))
+ declare -a search_terms
++ alias system-metrics=system_metrics
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
+ read -r key value
+ declare -a execute
+ [[ true == true ]]
++ which awk
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ mapfile -t search_terms
++ cut -d/ -f2
++ tr -d '\r'
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local parent_dir=reports/10.0.0.1/cisco
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ [[ export =~ ^(config|c)$ ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list != *,* ]]
+ local count=1
+ [[ export =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ set -euo pipefail
+ (( i = 0 ))
+ export LC_ALL=C
+ LC_ALL=C
+ [[ export =~ ^(export|r)$ ]]
++ alias warning-message=warning
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local export_objects=true
++ export LC_ALL=C
++ echo -e --export
+ [[ export =~ ^(extract|x)$ ]]
++ LC_ALL=C
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
++ echo -e --config=.cache/resources/misc/switch3.conf
++ basename reports/10.0.2.3/cisco/branch-isr-02
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --export
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ declare -a execute
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT'
+ [[ -n {
  "vendor": "cisco",
+ [[ 7 -eq 0 ]]
  "model": "",
  "version": "16.9",
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.6pnqtgs54w/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "domain": "",
++ export targets_location=targets
  "hostname": "branch-isr-02"
+ local script_filename=fortinet-configs.awk
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console --export --verbose
}
++ targets_location=targets

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
++ grep -v '^#'
++ which awk
+ (( i < count ))
++ export targets_logfile=logs/jobs/targets.jobs
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
++ mktemp -d
'
 description ISP uplink
++ targets_logfile=logs/jobs/targets.jobs

+ for xitem in "${@}"
object network BlackWidow-Core
 host 172.16.1.6
+ IFS==
+ read -r key value
 description Branch router uplink NAT'
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 172.31.255.254
+ echo
+ (( i++ ))
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
+ local 'prompt_message=Enter configuration file to be parsed: '
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --verbose
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
++ export cache_location=.cache
++ export actions_logfile=./logs/console/run.console
++ cache_location=.cache
++ actions_logfile=./logs/console/run.console
+ [[ -z cisco ]]
++ touch ./logs/console/run.console
+ [[ extract =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local SCRIPT_DIR=./scripts
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ extract == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local script_filename=cisco-configs.awk
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ for xitem in "${@}"
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+++ date +%s%N
+ sed '1{/^[[:space:]]*$/d;}'
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ search_pattern=10.0.1.2
+ mkdir -p reports/10.0.1.2/fortinet/.objects
+ local object_path=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ local search_pattern
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ tr -d '\r'
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ [[ export =~ ^(config|c)$ ]]
++ which awk
+++ base64
++ echo -e --export
++ echo -e --verbose
++ tr -d '\r'
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VpzBVtmmXX
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VpzBVtmmXX
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ grep -v '^\s*$'
+ source ./scripts/devops-resources.shell
+ local count=1
+ output_dir=reports/192.168.1.11/cisco
+ [[ export =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.1.11/cisco ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ export =~ ^(logger|l)$ ]]
++ export targets_location=targets
+ [[ export =~ ^(platform|p)$ ]]
+ local first_search_entry=192.168.2.12
++ targets_location=targets
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/10.0.0.1/cisco/perimeter-fw1
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ alias detect-vendor=detect_vendor
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ local target_config=.cache/resources/misc/switch3.conf
++ alias list-file=list_file
++ which awk
++ export targets_location=targets
++ echo -e --platform=cisco
++ grep -v '^#'
++ alias log-error=log_error
++ targets_location=targets
+ [[ config =~ ^(console|o)$ ]]
++ alias log-info=log_info
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ] ]]
++ alias pause=pause
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
++ alias print-line=print
+ local count=1
++ alias print-file=print_file
+ ((  count == 0  ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
++ alias warning-message=warning
+ [[ config == \h\e\l\p ]]
++ export LC_ALL=C
+ (( i < count ))
++ LC_ALL=C
+ [[ export =~ ^(config|c)$ ]]
++ export 'nl=\n'
++ nl='\n'
+ [[ export =~ ^(console|o)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(config|c)$ ]]
++ export logs_location=logs
+ local export_objects=true
+ [[ search =~ ^(console|o)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
++ logs_location=logs
+ [[ search =~ ^(export|r)$ ]]
+ declare -a execute
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ export divisor=--MTc0ODkxMjY5MDU0NDIxMTAwMAo--
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
++ divisor=--MTc0ODkxMjY5MDU0NDIxMTAwMAo--
+ [[ search =~ ^(platform|p)$ ]]
++ logs_location=logs
+ source ./scripts/devops-helpers.shell
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ search == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
++ alias parse-listings--helper=parse_listings__helper
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(search|s)$ ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local object_path=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ export == \h\e\l\p ]]
+ local search_pattern
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ newline 2
++ which awk
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local awk_bin=/usr/bin/awk
+ [[ export =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
++ mkdir -p logs/console logs/jobs
++ alias network-extract--helper=network_extract__helper
+ local first_search_entry=10.10.10.10
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local last_search_entry=10.10.10.10
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ true == true ]]
+ [[ -z cisco ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ alias serialize-object=serialize_objects
+ local count=2
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ local awk_bin=/usr/bin/awk
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+++ date +%s%N
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ [[ config =~ ^(search|s)$ ]]
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
++ printf '%*s' 12 ''
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ which awk
+ local target_platform=cisco
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ alias parse-cisco=main
+ [[ verbose == \h\e\l\p ]]
+ echo
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local count=1
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ ((  count == 0  ))
+ [[ -z x ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ logs_location=logs
+++ base64
+ read -r key value
+ mkdir -p logs/console
+ [[ platform =~ ^(config|c)$ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local first_search_entry=172.18.1.20
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local last_search_entry=172.18.1.20
+ [[ export =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ local 'indent=            '
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local verbose=true
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local verbose=true
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ IFS=' 	
+ local SCRIPT_PATH=./scripts/network-extract.shell
'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -z '' ]]
+ debug=false
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ printf '%*s' 12 ''
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
+ for xitem in "${@}"
+ [[ -z '' ]]
+ IFS==
+ read -r key value
++ echo reports/10.0.2.3/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ basename reports/10.10.10.10/cisco/access-sw1-west
++ echo reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-configs--ips.list ]'
++ cut -d/ -f2
+ local count=1
+ ((  count == 0  ))
+ IFS=' 	
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ newline
+ [[ export == \d\e\b\u\g ]]
+ dry_run=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ platform == \d\e\b\u\g ]]
+ local count=1
+ [[ -z '' ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
++ echo -e --verbose
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ export console_output=false
+ newline
+ echo
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ console_output=false
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ local verbose=true
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform == \v\e\r\b\o\s\e ]]
++ export divisor=--MTc0ODkxMjY5MDU1MzcxMzAwMAo--
+ IFS=' 	
+ export console_output=false
++ divisor=--MTc0ODkxMjY5MDU1MzcxMzAwMAo--
+ local awk_bin=/usr/bin/awk
+++ date +%s%N
++ export actions_logfile=./logs/console/run.console
+ for xitem in "${@}"
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
+ [[ -z true ]]
+ script_filename=network-extract.shell
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
+ source ./scripts/devops-helpers.shell
+ IFS==
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ [[ -n '' ]]
+ touch logs/console/network-extract.console
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ newline
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+++ base64
+ local object_path=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ newline
+ local search_pattern
+ [[ config =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
'
+ [[ config =~ ^(platform|p)$ ]]
++ alias network-extract--helper=network_extract__helper
+ local count=1
+ read -r key value
+ console_output=false
+ [[ config =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ actions_logfile=./logs/console/run.console
+ script_helper=false
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ false == true ]]
+ for xitem in "${@}"
++ touch ./logs/console/run.console
+ debug=false
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_helper=false
+ [[ true == true ]]
+ IFS==
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ tr -dc a-zA-Z0-9
+ (( i++ ))
++ export targets_location=targets
+ local 'indent=            '
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ search_pattern=10.0.2.3
+ (( i < count ))
+ mkdir -p reports/10.0.2.3/cisco/.objects
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ search_pattern=10.0.0.1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ mkdir -p reports/10.0.0.1/cisco/.objects
++ echo -e --verbose
+ alias parse-cisco=main
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -z x ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ export logs_location=logs
++ IFS=,
+ case "${target_platform}" in
+ logs_location=logs
++ echo 10.0.2.3
+ awk -v divisor=--MTc0ODkxMjY5MDAwNTQ4NzAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ mkdir -p logs/console
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
++ echo -e --verbose
                      blk = blk divisor " " $0;
                      next;
                    }

+ [[ cfg == \c\f\g ]]
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ logger =~ ^(console|o)$ ]]
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ 7 -eq 0 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.grdpmkmunm/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+++ date +%s%N
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console --export --verbose
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ search_terms=()
+ (( i < count ))
+ [[ -z '' ]]
+ declare -a search_terms
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo
+ echo
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
+ [[ logger == \h\e\l\p ]]
+ local 'indent=            '
+ oIFS=' 	
+ message '                .cache/resources/misc/switch1.conf'
'
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ IFS==
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
++ IFS=,
+ [[ verbose =~ ^(console|o)$ ]]
++ echo 10.0.0.1
+ [[ verbose =~ ^(export|r)$ ]]
+ local SCRIPT_DIR=./scripts
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i = 0 ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ dry_run=false
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ (( i < count ))
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
++ export divisor=--MTc0ODkxMjY5MDU2MTE2MDAwMAo--
+ search_terms=()
+ declare -a execute
+++ base64
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ [[ true == true ]]
+ (( i < count ))
+ (( i++ ))
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ extract =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local count=1
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ declare -a execute
+ [[ extract =~ ^(export|r)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ declare -a search_terms
++ divisor=--MTc0ODkxMjY5MDU2MTE2MDAwMAo--
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ -z true ]]
+ [[ cfg == \c\f\g ]]
+ [[ false == true ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
++ printf '%*s' 12 ''
+ [[ true == true ]]
++ echo reports/10.10.10.10/cisco/access-sw1-west.cfg
+++ tr -dc a-zA-Z0-9
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ mapfile -t search_terms
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ source ./scripts/devops-helpers.shell
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ script_filename=network-extract
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ newline
+ touch logs/console/network-extract.console
+ [[ -z cisco ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ [[ true == true ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ cut -d/ -f2
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -z '' ]]
+ export console_output=false
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ console_output=false
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
+ local count=1
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list != *,* ]]
+ (( i = 0 ))
+ mapfile -t search_terms
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'indent=            '
+ message 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
++ echo -e --export
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Exported objects from: reports/172.16.0.5/cisco/perimeter-fw1.cfg'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ [[ 5 -lt 4 ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
++ which awk
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ -z true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(export|r)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ newline
++ alias network-configs--helper=network_configs__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ (( i = 0 ))
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ local count=1
+ local verbose=true
+ newline
+ [[ extract == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias network-extract--helper=network_extract__helper
+ (( i++ ))
+ [[ extract == \d\e\b\u\g ]]
+ IFS=' 	
+ (( i = 0 ))
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
+ (( i < count ))
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ script_helper=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ grep -F 10.0.1.2
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose == \h\e\l\p ]]
+ for xitem in "${@}"
+ alias serialize-object=serialize_objects
+ (( i < count ))
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ (( i < count ))
+ echo
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ which awk
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local verbose=true
+ [[ false == true ]]
++ export divisor=--MTc0ODkxMjY5MDU2OTYzNzAwMAo--
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
++ divisor=--MTc0ODkxMjY5MDU2OTYzNzAwMAo--
+ IFS=' 	
+ search_terms=()
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ alias parse-cisco=main
+ [[ -z '' ]]
+ debug=false
++ tr -d '\r'
+ [[ -z '' ]]
++ alias parse-listings--helper=parse_listings__helper
++ tr -d '\r'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ IFS=' 	
'
+ [[ -z '' ]]
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ export targets_location=targets
+ [[ -z true ]]
++ targets_location=targets
+ [[ -z '' ]]
+ export console_output=false
++ export targets_logfile=logs/jobs/targets.jobs
+ console_output=false
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z true ]]
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ [[ -z '' ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ script_helper=false
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eyoxliogzr/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ alias network-extract--helper=network_extract__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ grep -v '^\s*$'
+ oIFS=' 	
'
++ grep -v '^\s*$'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ read -r key value
+ [[ search =~ ^(export|r)$ ]]
+ message '                .cache/resources/misc/switch1.conf'
+ [[ export =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ search =~ ^(extract|x)$ ]]
+ alias serialize-object=serialize_objects
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ search_pattern=10.10.10.10
+ [[ search =~ ^(search|s)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export =~ ^(search|s)$ ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ export == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ debug=false
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ case "${target_platform}" in
++ grep -v '^#'
++ grep -v '^#'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ declare -a search_terms
+ [[ -z '' ]]
+ awk -v divisor=--MTc0ODkxMjY5MDAzODU3MTAwMAo-- '
+ export console_output=false
                  BEGIN {
                    in_json_header = 0;
+ console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
+ alias parse-cisco=main
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ dry_run=false
+ export logs_location=logs
+ output_dir=reports/192.0.2.50/cisco
                    if (in_json_header == 1) {
+ [[ false == true ]]
+ logs_location=logs
+ [[ -z true ]]
+ [[ -z x ]]
                      in_json_header = 0;
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ local awk_bin=/usr/bin/awk
+ local awk_bin=/usr/bin/awk
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
                      next;
+ logs_location=logs
                    }
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
                  }
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ mkdir -p logs/console
                  (in_json_header == 1) { next }
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
                  /^[^[:space:]]/ {
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ [[ logger =~ ^(config|c)$ ]]
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ [[ logger =~ ^(export|r)$ ]]
+ echo -e '                .cache/resources/misc/switch1.conf'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -z true ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list != *,* ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ mkdir -p logs/console
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ newline
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDAxNDYxNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ cfg == \c\f\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console ]]
+ newline
+ [[ -z '' ]]
+ script_helper=false
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]]
+ (( i++ ))
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ mapfile -t search_terms
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ logger =~ ^(search|s)$ ]]
+ export console_output=false
+ console_output=false
+ search_terms=()
++ echo -e --verbose
+ [[ -z true ]]
+ [[ logger == \h\e\l\p ]]
+ declare -a search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ local parent_dir=reports/172.16.0.5/cisco
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ grep -F 10.0.2.3
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.2.12/cisco
+ IFS==
+ read -r key value
+ local first_search_entry=10.10.10.10
+ [[ platform =~ ^(console|o)$ ]]
+ [[ ! -d reports/192.168.2.12/cisco ]]
+ local first_search_entry=192.168.2.12
+ [[ platform =~ ^(export|r)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
++ command -v -- ./scripts/network-extract.shell
+ touch logs/console/network-extract.console
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
++ printf '%*s' 12 ''
+++ date +%s%N
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+++ base64
+ [[ search =~ ^(config|c)$ ]]
++ IFS=,
+ [[ search =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 192.168.1.11
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ search =~ ^(export|r)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ verbose =~ ^(config|c)$ ]]
}
+ local target_config=.cache/resources/misc/fw1.cfg
+ local last_search_entry=10.10.10.10
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.2.12
+ [[ verbose =~ ^(export|r)$ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'extracted_configuration={
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ -z '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ export console_output=false
+ console_output=false
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
++ basename reports/172.16.0.5/cisco/perimeter-fw1
+ sed '/^[[:space:]]*$/d'
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ grep -F 10.0.0.1
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ local count=1
+ search_terms=()
+ ((  count == 0  ))
+ declare -a search_terms
++ tr -d '\r'
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]]
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ tr -d '\r'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local 'extracted_configuration={
+ local count=1
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ (( i = 0 ))
  "version": "v7.2.5.F",
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
  "domain": ""
+ (( i < count ))
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5jdwvji2cd/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ grep -v '^#'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ tr -d '\r'
++ grep -v '^#'
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console --export --verbose
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ oIFS=' 	
'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ IFS==

+ script_filename=network-extract
+ read -r key value
version 12.4
+ [[ logger =~ ^(console|o)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(export|r)$ ]]
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ result=0
+ touch logs/console/network-extract.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
  "vendor": "cisco",
  "model": "",
++ tr -d '\r'
+ [[ 0 -ne 0 ]]
  "version": "",
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ local 'indent=            '
+ [[ logger =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ ((  count == 0  ))
+ read -r key value
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i < count ))
++ grep -v '^#'
+ output_dir=reports/10.10.10.10/cisco
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
++ grep -v '^\s*$'
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ tr -d '\r'
++ grep -v '^#'
+ newline
  "hostname": "fg-branch-vpn-01"
}
+ local count=1

#hostname="fg-branch-vpn-01"
+ (( i = 0 ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i < count ))

+ echo
+ echo
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
config firewall address
 edit "Panther-Vault"
+ (( i++ ))
  set subnet 192.168.1.10 255.255.255.255
+ (( i < count ))
  set comment "Wakandan data store"
 next
end'
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ export divisor=--MTc0ODkxMjY5MDU4OTcwNzAwMAo--
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
++ divisor=--MTc0ODkxMjY5MDU4OTcwNzAwMAo--
+ result=0
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ source ./scripts/devops-helpers.shell
+ [[ platform =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ [[ -n {
+ [[ platform =~ ^(export|r)$ ]]
++ [[ -n '' ]]
  "domain": "",
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
hostname access-sw1-west
  "hostname": ""
+ local object_path=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ newline
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=1
  "domain": "",
  "hostname": ""
+ (( i = 0 ))
}

+ (( i < count ))
interface Vlan1
+ echo
+ result=0
+ (( i++ ))
 ip address 172.31.255.254 255.255.255.0'
+ (( i < count ))
++ grep -v '^\s*$'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ config =~ ^(console|o)$ ]]
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(export|r)$ ]]
+ [[ 0 -ne 0 ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ extract =~ ^(export|r)$ ]]
++ echo -e --export
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local first_search_entry=192.168.1.11
+ local first_search_entry=198.51.100.75
+ [[ extract == \h\e\l\p ]]
+ local last_search_entry=192.168.1.11
+ [[ extract == \d\e\b\u\g ]]
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ true == true ]]
+ for xitem in "${@}"
  "vendor": "fortinet",
++ which awk
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
+ IFS==
+ read -r key value
+ [[ platform =~ ^(extract|x)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ final_output=reports/172.18.1.20/misc/fw1.cfg

+ [[ platform =~ ^(logger|l)$ ]]
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
interface Vlan1
}
++ [[ 5 -lt 4 ]]
+ message 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local search_pattern
+ [[ -n Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ result=0
+ local 'message=Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e 'Serialized objects to: reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list'
+ echo -e '                .cache/resources/misc/fw1.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(platform|p)$ ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ newline
+ local first_search_entry=10.0.0.1
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local count=1
+ local last_search_entry=10.0.0.1
  "domain": ""
+ (( i = 0 ))
+ [[ true == true ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
object-group network MGMT-ACCESS
+ [[ false == true ]]

+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ] ]]
+ [[ true == true ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
+ local target_platform=cisco
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ export =~ ^(config|c)$ ]]
  "model": "",
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo
  "version": "",
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ local count=1
+ [[ -n Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
  "hostname": "fg-branch-vpn-01"
+ sed '/^[[:space:]]*$/d'
}
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))

++ alias parse-listings--helper=parse_listings__helper
 description Management objects
 network-object host 192.168.0.1
+ [[ true == true ]]
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ] ]]
interface Vlan10
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
 ip address 10.0.1.2 255.255.255.0'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
++ alias network-configs--helper=network_configs__helper
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
+ result=0
++ command -v -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ message 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ -n Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ local 'message=Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ local first_search_entry=192.168.0.100
  "domain": "",
+ echo -e 'Exported objects from: reports/172.16.1.6/cisco/branch-isr-02.cfg'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ] ]]
+ local last_search_entry=192.168.0.100
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ alias network-extract--helper=network_extract__helper
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ (( i < count ))
+ serialize_objects
  "hostname": ""
#hostname="fg-branch-vpn-01"
+ [[ true == true ]]
#model="FortiGate-60F"
+ [[ platform == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
+ local 'message=Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ [[ -n {
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ echo
  "vendor": "cisco",
+ echo
config firewall address
 edit "Panther-Vault"
+ (( i++ ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
  set subnet 192.168.1.10 255.255.255.255
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ] ]]
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ alias serialize-object=serialize_objects
+ local count=1
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ((  count == 0  ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-configs--ips.list ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ local count=1
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ newline
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ local count=1
+ local count=1
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ ((  count == 0  ))
+ newline
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ local count=1
+ case "${target_platform}" in
++ dirname -- ./scripts/network-extract.shell
+ ((  count == 0  ))
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ awk -v divisor=--MTc0ODkxMjY5MDAzODI0MTAwMAo-- '
                  BEGIN {
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                    in_json_header = 0;
+ echo
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
                    blk = "";
+ (( i++ ))
                  }
                  /^[[:space:]]*$/ { next }
+ newline
+ local SCRIPT_PATH=./scripts/network-extract.shell
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
+ local count=1
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/access-sw1-west.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
}

+ [[ platform == \d\e\b\u\g ]]
+ alias parse-cisco=main
+ [[ platform == \d\r\y\-\r\u\n ]]
interface Vlan1
+ local export_objects=true
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
 ip address 172.31.255.254 255.255.255.0 ]]
+ echo -e 'Serialized objects to: reports/10.0.2.3/cisco/.objects/branch-isr-02.list'
+ newline
+ [[ export =~ ^(logger|l)$ ]]
+ print_file reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ local count=1
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -z x ]]
+ (( i = 0 ))
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -n reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ -f reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list ]]
  "model": "",
+ [[ search =~ ^(console|o)$ ]]
+ case "${target_file}" in
+ echo
+ [[ search =~ ^(export|r)$ ]]
  "version": "12.4",
  set comment "Wakandan data store"
+ (( i++ ))
+ (( i++ ))
+ [[ search =~ ^(extract|x)$ ]]
+ cat reports/10.0.1.2/fortinet/.objects/fg-branch-vpn-01.list
+ (( i = 0 ))
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ export =~ ^(export|r)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ search == \h\e\l\p ]]
+ local export_objects=true
+ [[ search == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ export =~ ^(extract|x)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ export =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ [[ export =~ ^(platform|p)$ ]]
+ IFS==
+ [[ export =~ ^(search|s)$ ]]
+ read -r key value
+ [[ export == \h\e\l\p ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ read -r key value
+ (( i = 0 ))
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ local first_search_entry=192.168.0.1
+ [[ logger =~ ^(export|r)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
  "domain": "",
 next
+ local count=1
end ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export == \h\e\l\p ]]
  "hostname": "access-sw1-west"
+ (( i < count ))
}
+ local script_filename=cisco-configs.awk

version 12.4
hostname access-sw1-west
+ (( i < count ))

+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ echo
  "version": "16.9",
  "domain": "",
+ (( i++ ))
  "hostname": "branch-isr-02"
+ (( i < count ))
}
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'

+ newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local count=1
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ [[ -z fortinet ]]
+ (( i < count ))
+ [[ true == true ]]
+ result=0
+ [[ 0 -ne 0 ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ 7 -eq 0 ]]
+ (( i < count ))
+ cat -n
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5jdwvji2cd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console --export --verbose
++ echo reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ oIFS=' 	
'
+ [[ -z cisco ]]
+ local last_search_entry=192.168.0.1
+ for xitem in "${@}"
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ (( i = 0 ))
+ [[ true == true ]]
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ export == \d\e\b\u\g ]]
interface Vlan1
+ [[ export == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
version 16.9
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Serialized objects to: reports/10.0.0.1/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ newline
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ grep -F 10.10.10.10
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ printf '%*s' 12 ''
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
++ echo -e --verbose
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
+ [[ extract =~ ^(config|c)$ ]]
+ newline
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ IFS==
+ local count=1

+ [[ extract =~ ^(console|o)$ ]]
config firewall address
+ read -r key value
 edit "Panther-Vault"
+ [[ platform =~ ^(config|c)$ ]]
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
+ local 'indent=            '
 next
end'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ platform =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=1
 ip address 192.168.0.1 255.255.255.0
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
 description Management Interface
+ newline
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ local target_platform=cisco
+ for xitem in "${@}"
+ [[ platform =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ] ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
hostname branch-isr-02
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ print '{
+ IFS==
  "vendor": "cisco",
+ read -r key value
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ output_dir=reports/172.18.1.20/misc
+ print '{
++ dirname -- ./scripts/network-extract.shell
+ [[ ! -d reports/172.18.1.20/misc ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ which awk
+ echo -en '{
  "vendor": "cisco",
+ newline
  "model": "",
  "version": "",
  "domain": "",
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "hostname": ""
}

+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ sed '/^[[:space:]]*$/d'
+ print_file reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ [[ -n reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ local target_file=reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ local count=1
+ [[ -f reports/10.0.0.1/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/10.0.0.1/cisco/.objects/perimeter-fw1.list
+ sed '1{/^[[:space:]]*$/d;}'

object-group network MGMT-ACCESS
+ (( i = 0 ))
 description Management objects
+ echo
+ IFS==
+ (( i = 0 ))
 network-object host 192.168.0.1
+ (( i++ ))

 network-object host 192.168.0.100
+ local script_filename=cisco-configs.awk
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
object-group network Lantern-DMZ
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ script_filename=network-extract.shell
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ script_filename=network-extract
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ search_pattern=172.16.0.5
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ mkdir -p reports/172.16.0.5/cisco/.objects
+ local parent_dir=reports/172.16.1.6/cisco
 network-object host 10.10.10.10 ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ (( i < count ))
+ echo
+ result=0
 description Protected but public-facing zone
+ (( i++ ))
+ [[ -n {
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i < count ))
 network-object host 172.18.1.20
  "vendor": "cisco",
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 192.168.1.11'
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ result=0
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ((  count == 0  ))
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ network_extract__console=logs/console/network-extract.console
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ print_file reports/10.0.2.3/cisco/.objects/branch-isr-02.list
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(search|s)$ ]]
+ return 0
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ local target_file=reports/10.0.2.3/cisco/.objects/branch-isr-02.list
  "model": "",
+ local verbose=true
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f reports/10.0.2.3/cisco/.objects/branch-isr-02.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ [[ -n {
+ case "${target_file}" in
  "vendor": "cisco",
+ IFS=' 	
  "model": "",
'
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ cat reports/10.0.2.3/cisco/.objects/branch-isr-02.list
  "version": "16.9",
+ [[ -z '' ]]
+ [[ cfg == \c\f\g ]]
+ debug=false
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ -z '' ]]
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ search_terms=()
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a search_terms
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list != *,* ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ mapfile -t search_terms
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local SCRIPT_DIR=./scripts
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
++ command -v -- ./scripts/network-extract.shell
+ cat -n
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local script_filename=cisco-configs.awk
+ touch logs/console/network-extract.console
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "model": "",
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
  "version": "12.4",
  "domain": "",
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
  "hostname": "access-sw1-west"
}
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local count=1

version 12.4
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
  "domain": "",
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console

object network Kent-Server
+ echo -en '{
 host 10.0.2.3
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console ]]
  "hostname": "access-sw1-west"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
}
  "domain": "",

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+ result=0
object-group network MGMT-ACCESS
 description Management objects
+ [[ 0 -ne 0 ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
++ basename reports/172.16.1.6/cisco/branch-isr-02
++ echo -e --export
++ tr -d '\r'
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(console|o)$ ]]
+ output_dir=reports/192.168.0.100/cisco
+ [[ platform =~ ^(export|r)$ ]]
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ newline 2
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
++ grep -v '^\s*$'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ cat -n
 description Internal mail & identity services ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ grep -v '^#'
++ echo -e --verbose
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local count=1
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ local 'extracted_configuration={
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ extract == \d\r\y\-\r\u\n ]]
  "hostname": "branch-isr-02"
+ newline
  "version": "v7.2.5.F",
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ IFS==
+ read -r key value
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/access-sw1-west.list'
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ local count=2
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ echo
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
}
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ cfg == \c\f\g ]]
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]

+ local object_path=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
  "domain": ""
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ conf == \c\o\n\f ]]
+ return 0
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ local count=1
+ extract_location=reports/10.0.0.1/misc/switch1.conf
+ output_dir=reports/10.10.10.10/cisco
+ (( i = 0 ))
+ (( i < count ))
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ [[ true == true ]]
+ echo
+ local first_search_entry=192.168.1.10
+ local count=2
+ local count=2
+ local last_search_entry=192.168.1.10
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ echo
++ echo -e --export
+ (( i++ ))
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ echo
+ [[ logger =~ ^(console|o)$ ]]
++ IFS=,
+ [[ search =~ ^(extract|x)$ ]]
++ echo 192.0.2.50
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ search =~ ^(logger|l)$ ]]
version 16.9
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ] ]]
+ [[ search =~ ^(platform|p)$ ]]
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ search =~ ^(search|s)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
++ which awk
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
  "hostname": "fg-branch-vpn-01"
+ local count=1
}
+ local search_pattern
+ [[ search == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ export =~ ^(export|r)$ ]]

+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ for xitem in "${@}"
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ IFS==
+ (( i++ ))
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ read -r key value
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ (( i < count ))
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console ]]
+ echo
+ case "${target_file}" in
+ echo
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ print '{
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
  "vendor": "cisco",
+ case "${target_platform}" in
  "model": "",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ declare -a execute
hostname branch-isr-02
  "version": "",
+ newline
  "domain": "",
  "hostname": ""
}
+ local export_objects=true

+ [[ verbose =~ ^(config|c)$ ]]
+ awk -v divisor=--MTc0ODkxMjY5MDAzODgyMjAwMAo-- '
                  BEGIN {
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
object-group network Metropolis-Internal
                    in_json_header = 0;
+ [[ verbose =~ ^(console|o)$ ]]
#hostname="fg-branch-vpn-01"
                    blk = "";
                  }
+ (( i = 0 ))
                  /^[[:space:]]*$/ { next }
 description Core internal LAN for application clusters
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
 network-object host 10.0.2.3
                  /^}$/ {
 network-object 192.168.2.0 255.255.255.0
                    if (in_json_header == 1) {
 network-object host 192.168.2.12
                      in_json_header = 0;

                      next;
object network Kent-Server
                    }
 host 10.0.2.3
                  }
 description Internal mail & identity services'
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ IFS=,
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
++ echo 192.168.2.12
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
++ echo -e --platform=cisco
 host 10.0.2.3
++ dirname reports/10.0.0.1/misc/switch1.conf
 description Internal mail & identity services ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo -en '{
  "vendor": "cisco",
  "model": "",
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
  "version": "",
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
  "domain": "",
  "hostname": ""
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
}

+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ return 0
+ [[ true == true ]]
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ logger =~ ^(console|o)$ ]]

+ declare -a execute
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ export =~ ^(platform|p)$ ]]

config firewall address
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
 edit "IronMan-HQ"
+ [[ verbose =~ ^(export|r)$ ]]
  set subnet 10.0.0.1 255.255.255.255
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
  set comment "Main node at Stark Tower"
 next
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ local script_filename=cisco-configs.awk
+ [[ export == \d\r\y\-\r\u\n ]]
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
+ print_file reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -n reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ -f reports/10.10.10.10/cisco/.objects/access-sw1-west.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/access-sw1-west.list
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5jdwvji2cd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console ]]
+ [[ export =~ ^(config|c)$ ]]
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
object-group network Lantern-DMZ
+ [[ export =~ ^(export|r)$ ]]
+ newline
+ [[ logger =~ ^(search|s)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
+ grep -F 172.16.0.5
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
end'
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ which awk
++ echo reports/172.16.1.6/cisco/branch-isr-02.cfg
+ output_dir=reports/192.168.100.100/cisco
++ targets_location=targets
++ echo -e --export
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ ! -d reports/192.168.100.100/cisco ]]
++ export targets_location=targets
++ targets_location=targets
+ result=0
++ export divisor=--MTc0ODkxMjY5MDUxNTk0ODAwMAo--
++ export targets_logfile=logs/jobs/targets.jobs
++ divisor=--MTc0ODkxMjY5MDUxNTk0ODAwMAo--
+ [[ -n {
  "vendor": "fortinet",
++ targets_logfile=logs/jobs/targets.jobs
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ source ./scripts/devops-helpers.shell
++ cut -d/ -f2
 description Protected but public-facing zone
++ [[ -n '' ]]
+ case "${target_file}" in
 network-object host 172.18.1.20
++ readonly __DEVOPS_HELPERS_SOURCED=1
 network-object host 192.168.1.11 ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ newline 2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger == \h\e\l\p ]]

+ local count=2
+ [[ logger == \d\e\b\u\g ]]
+ cat -n
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ newline 2
+ output_dir=reports/192.168.1.10/misc
++ echo -e --platform=fortinet
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ config =~ ^(config|c)$ ]]
+ IFS==
++ command -v -- ./scripts/network-extract.shell
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ alias serialize-object=serialize_objects
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local count=2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ config == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
config firewall address
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ newline 2
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--fg-branch-vpn-01.cfg.console
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_platform=cisco
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
 edit "Hawkeye-Nest"
+ echo
+ alias parse-cisco=main
+ [[ platform == \h\e\l\p ]]
+ echo
+ (( i++ ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ [[ true == true ]]
+ echo
+ IFS==
+ read -r key value
+ local count=2
+ [[ -z x ]]
+ (( i = 0 ))
+++ date +%s%N
  set subnet 172.16.1.6 255.255.255.255
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
  set comment "Remote sniper node"
+ export logs_location=logs
 next
+ (( i++ ))
+ (( i++ ))
end'
+ (( i < count ))
+ logs_location=logs
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ [[ true == true ]]
+ read -r key value
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+++ date +%s%N
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ newline
+ print '{
+ echo
+ local count=1
+ result=0
  "vendor": "fortinet",
+ echo
+ (( i++ ))
  "model": "FortiGate-60F",
+ (( i++ ))
  "version": "v7.2.5.F",
+ (( i < count ))
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ true == true ]]
  set comment "Main node at Stark Tower"
 next
+ sed '/^[[:space:]]*$/d'
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ print '{
  "vendor": "cisco",

config firewall address
  "model": "",
 edit "IronMan-HQ"
  "version": "16.9",
  set subnet 10.0.0.1 255.255.255.255
  "domain": "",
  set comment "Main node at Stark Tower"
  "hostname": "branch-isr-02"
 next
}
end ]]

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+++ base64
 network-object host 172.18.1.20
+ echo -en '{
 network-object host 192.168.1.11'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
++ command -v -- ./scripts/network-extract.shell
  "hostname": "fg-branch-vpn-01"
}

++ dirname -- ./scripts/network-extract.shell
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n {
  "vendor": "cisco",

  "model": "",
config firewall address
  "version": "16.9",
 edit "IronMan-HQ"
  "domain": "",
  set subnet 10.0.0.1 255.255.255.255
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
  "hostname": "branch-isr-02"
  set comment "Main node at Stark Tower"
+++ base64
 next
}
end'

version 16.9
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ (( i = 0 ))
 network-object host 172.18.1.20
+ (( i < count ))
 network-object host 192.168.1.11 ]]
+ echo
+ (( i < count ))
+ (( i++ ))
+ [[ -n {
+ echo
  "vendor": "fortinet",
+ (( i < count ))
+ (( i++ ))
+ echo -en '{
  "model": "FortiGate-200F",
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ search_pattern=172.16.1.6
+++ tr -dc a-zA-Z0-9
+ mkdir -p reports/172.16.1.6/cisco/.objects
+ sed '1{/^[[:space:]]*$/d;}'
+++ tr -dc a-zA-Z0-9
++ echo -e --export
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
++ echo -e --export
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
  "version": "",
+ script_filename=network-extract.shell
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ cat -n reports/172.16.0.5/misc/fw3.cfg
  "domain": ""
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ script_filename=network-extract
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ echo
+ export network_extract__console=logs/console/network-extract.console
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ newline
+ (( i++ ))
+ network_extract__console=logs/console/network-extract.console
+ (( i < count ))
+ newline
+ local count=1
+ touch logs/console/network-extract.console
+ (( i = 0 ))
+ local count=1
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ return 0
  "hostname": "fg-campus-core"
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ 0 -ne 0 ]]
+ (( i < count ))
+ newline
+ [[ true == true ]]
}
+ echo

+ [[ true == true ]]
+ (( i++ ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console ]]
#hostname="fg-campus-core"
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
++ export divisor=--MTc0ODkxMjY5MDY1MTU3MjAwMAo--
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console ]]
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ false == true ]]
+ case "${target_file}" in
+ echo
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
++ divisor=--MTc0ODkxMjY5MDY1MTU3MjAwMAo--
+ newline
++ export divisor=--MTc0ODkxMjY5MDY1MTc5MDAwMAo--
+ [[ true == true ]]
#model="FortiGate-200F"
++ divisor=--MTc0ODkxMjY5MDY1MTc5MDAwMAo--

+ source ./scripts/devops-helpers.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--branch-isr-02.cfg.console
config firewall address
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ local count=1
+ [[ -n Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
 edit "Hawkeye-Nest"
+ (( i = 0 ))
  set subnet 172.16.1.6 255.255.255.255
+ local 'message=Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
  set comment "Remote sniper node"
++ [[ -n '' ]]
+ newline 2
++ [[ -n '' ]]
 next
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/172.16.0.5/cisco/.objects/perimeter-fw1.list'
+ message 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ cfg == \c\f\g ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
end ]]
++ which awk
++ dirname -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ which awk
++ alias parse-listings--helper=parse_listings__helper
+ echo
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/dmz-fw2-backup.cfg'
+ echo
+ cat -n reports/10.0.2.3/misc/fw1.cfg
+ local count=2
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ serialize_objects
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z x ]]
+ echo
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ alias parse-cisco=main
+ [[ extract =~ ^(console|o)$ ]]
+ [[ 7 -eq 0 ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ export logs_location=logs
+ [[ export =~ ^(export|r)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console --export --verbose
+ logs_location=logs
+ [[ extract =~ ^(logger|l)$ ]]
+ mkdir -p logs/console
+ (( i++ ))
+ [[ export =~ ^(config|c)$ ]]
+ newline 2
+ oIFS=' 	
'
+ [[ export =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ result=0
+ local export_objects=true
+ IFS==
+ [[ export =~ ^(extract|x)$ ]]
+ read -r key value
+ print_file reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ local SCRIPT_DIR=./scripts
+ local export_objects=true
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export == \h\e\l\p ]]
+ local target_file=reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ export == \d\e\b\u\g ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \h\e\l\p ]]
+ [[ -f reports/172.16.0.5/cisco/.objects/perimeter-fw1.list ]]
+ case "${target_file}" in
+ cat reports/172.16.0.5/cisco/.objects/perimeter-fw1.list
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ newline
+ [[ extract =~ ^(search|s)$ ]]
+ local count=2
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ exit 0
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ logger =~ ^(export|r)$ ]]
+ for xitem in "${@}"
+ print '{
+ (( i < count ))
+ (( i < count ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kbZ2aSFH3U ]]
+ [[ export == \d\e\b\u\g ]]
+ echo
+ echo
+ [[ true == true ]]
+ (( i++ ))
  "vendor": "fortinet",
+ [[ extract == \v\e\r\b\o\s\e ]]
  "model": "FortiGate-200F",
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
  "version": "",
+ [[ export == \d\r\y\-\r\u\n ]]
  "domain": ""
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kbZ2aSFH3U
+ [[ export == \v\e\r\b\o\s\e ]]
  "hostname": "fg-campus-core"
+ for xitem in "${@}"
}

#hostname="fg-campus-core"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ IFS==
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ IFS==
+ [[ -n {
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
  "vendor": "fortinet",
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
  "model": "FortiGate-200F",
+ (( i++ ))
  "version": "",
+ read -r key value
+ (( i < count ))
  "domain": ""
+ echo
  "hostname": "fg-campus-core"
}

+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'
++ IFS=,
++ echo 192.168.100.100
+ (( i++ ))
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ case "${target_platform}" in
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ awk -v divisor=--MTc0ODkxMjY5MDA1NTYzNDAwMAo-- '
                  BEGIN {
+ IFS==
                    in_json_header = 0;
                    blk = "";
                  }
+ read -r key value
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.1.6/cisco/branch-isr-02.cfg
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console ]]
+ cat -n
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--access-sw1-west.cfg.console
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ false == true ]]
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ newline
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
++ which awk
+ script_filename=network-extract
+ newline
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ local count=1
+ [[ false == true ]]
++ which awk
+ touch logs/console/network-extract.console
+ [[ true == true ]]
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ false == true ]]
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ local count=1
+ script_filename=network-extract
+ (( i = 0 ))
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ newline
+ network_extract__console=logs/console/network-extract.console
+ echo
+ touch logs/console/network-extract.console
+ message 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ local count=1
+ [[ -n Exported objects from: reports/172.16.0.5/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/172.16.0.5/misc/fw3.cfg'
+ local parent_dir=reports/192.0.2.50/cisco
+ result=0
+ serialize_objects
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7z5Ml8a6dc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.7z5Ml8a6dc
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ [[ false == true ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ (( i++ ))
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/access-sw1-west.cfg'
+ message 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ grep -F 172.16.1.6
+ (( i < count ))
+ serialize_objects
++ echo -e --export
++ echo -e --export
++ echo -e --platform=fortinet
+ [[ -n Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/access-sw1-west.cfg'
+ local awk_bin=/usr/bin/awk
+ newline
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ search =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw1.cfg ]]
+ [[ search =~ ^(export|r)$ ]]
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw1.cfg'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ basename reports/192.0.2.50/cisco/dmz-fw2-backup
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.28ub9mwcci/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console --export --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ printf '%*s' 12 ''
+ newline 2
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.volfskw2ew/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console --export --verbose
+ serialize_objects
+ local 'indent=            '
+ [[ true == true ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ sed '/^[[:space:]]*$/d'
+ newline
+ [[ export =~ ^(config|c)$ ]]
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ echo
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ local count=1
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ serialize_objects
+ echo
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console ]]
+ [[ export =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ [[ platform =~ ^(config|c)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
+ [[ export == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export == \v\e\r\b\o\s\e ]]
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
+ message 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ platform == \h\e\l\p ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ platform == \d\e\b\u\g ]]
+ IFS==
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ result=0
+ local count=1
+ exit 0
+ [[ -n Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ for xitem in "${@}"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QrAZzm2mOq ]]
+ local 'message=Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QrAZzm2mOq
+ echo -e 'Exported objects from: reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
++ IFS=,
++ echo 192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --verbose
+ local parent_dir=reports/172.16.0.5/misc
+ local object_path=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ local search_pattern
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ verbose =~ ^(extract|x)$ ]]
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ basename reports/172.16.0.5/misc/fw3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Serialized objects to: reports/172.16.1.6/cisco/.objects/branch-isr-02.list'
+ [[ false == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ (( i++ ))
+ debug=false
+ local parent_dir=reports/192.168.0.100/cisco
+ [[ -z '' ]]
+ message 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ (( i < count ))
+ [[ -n Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/172.18.1.20/cisco/branch-isr-02.cfg'
+ set -euo pipefail
+ serialize_objects
+ export LC_ALL=C
+ LC_ALL=C
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ script_helper=false
++ which awk
++ echo -e --verbose
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ echo reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(config|c)$ ]]
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
++ cut -d/ -f2
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]]
+ local parent_dir=reports/10.0.2.3/misc
+ local 'extracted_configuration={
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list != *,* ]]
+ [[ verbose =~ ^(config|c)$ ]]
  "vendor": "cisco",
+ local object_path=reports/172.16.0.5/misc/.objects/fw3.list
+ local parent_dir=reports/10.0.0.1/fortinet
++ basename reports/192.168.0.1/cisco/access-sw1-west
  "model": "ASA",
  "version": "9.12(4)",
+ [[ verbose =~ ^(console|o)$ ]]
+ local search_pattern
+ [[ verbose =~ ^(config|c)$ ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ verbose =~ ^(export|r)$ ]]
}
+ [[ verbose =~ ^(console|o)$ ]]
++ mktemp -d
+ [[ verbose =~ ^(export|r)$ ]]

+ [[ verbose =~ ^(extract|x)$ ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ verbose =~ ^(logger|l)$ ]]
interface GigabitEthernet0/1
 nameif inside
+ [[ verbose =~ ^(platform|p)$ ]]
 ip address 192.168.100.100 255.255.255.0
+ mapfile -t search_terms
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
 description Inside LAN segment
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console

object network Titan-WLAN-Host
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ verbose == \h\e\l\p ]]
 host 192.168.100.100
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
 description Backup inside NAT IP
+ [[ verbose =~ ^(logger|l)$ ]]

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ [[ verbose =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ result=0
+ local verbose=true
+ [[ -n {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console ]]
+ IFS=' 	
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "ASA",
'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
  "version": "9.12(4)",
+ [[ verbose == \h\e\l\p ]]
+ [[ -z '' ]]
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console ]]
+ output_dir=reports/192.168.1.11/fortinet
+ debug=false
}
+ (( i < count ))

+ oIFS=' 	
ASA Version 9.12(4)
+ echo
'
hostname dmz-fw2-backup
+ (( i++ ))
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
++ basename reports/192.168.0.100/cisco/access-sw1-west
+ case "${target_file}" in
domain-name global.dmz.example.net
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ dry_run=false
+ (( i < count ))

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ print_file reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ [[ -z true ]]
+ [[ -z '' ]]
+ newline
interface GigabitEthernet0/1
 nameif inside
+ export console_output=false
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ -n reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
+ local count=1

+ local target_file=reports/172.16.1.6/cisco/.objects/branch-isr-02.list
+ console_output=false
object network Titan-WLAN-Host
+ [[ verbose == \d\r\y\-\r\u\n ]]
 host 192.168.100.100
+ [[ -f reports/172.16.1.6/cisco/.objects/branch-isr-02.list ]]
 description Backup inside NAT IP
+ [[ -z true ]]
+ case "${target_file}" in

+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ basename reports/10.0.2.3/misc/fw1
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat reports/172.16.1.6/cisco/.objects/branch-isr-02.list
object-group network Sector-Wireless
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console ]]
+ local verbose=true
+ [[ false == true ]]
 description Staff WiFi clients
+ local 'extracted_configuration={
+ [[ -z '' ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
 network-object host 192.168.100.100
+ dry_run=false
 network-object host 10.10.10.10 ]]
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]]
++ basename reports/10.0.0.1/fortinet/fg-branch-vpn-01
++ which awk
++ echo -e --config=.cache/resources/misc/switch3.conf
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ message 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console ]]
+ [[ -n Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ search_pattern=192.0.2.50
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ [[ -z '' ]]
+ local 'message=Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ script_helper=false
+ local object_path=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ echo -e 'Exported objects from: reports/172.16.1.6/fortinet/fg-campus-core.cfg'
+ [[ logger =~ ^(config|c)$ ]]
  "vendor": "cisco",
+ [[ false == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ serialize_objects
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local search_pattern
+ cat -n
++ tr -d '\r'
++ printf '%*s' 12 ''
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ echo reports/172.16.0.5/misc/fw3.cfg

+ local 'indent=            '
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ [[ true == true ]]

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
+ [[ logger =~ ^(export|r)$ ]]
hostname dmz-fw2-backup
+ set -euo pipefail
domain-name global.dmz.example.net
+ search_terms=()
+ [[ logger =~ ^(extract|x)$ ]]
+ declare -a search_terms

interface GigabitEthernet0/1
+ export LC_ALL=C
++ grep -v '^\s*$'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]]
 nameif inside
+ LC_ALL=C
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment
+ local parent_dir=reports/172.18.1.20/cisco

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
+ [[ verbose =~ ^(platform|p)$ ]]
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ cut -d/ -f2
+ sed '1{/^[[:space:]]*$/d;}'
++ grep -v '^#'
++ tr -d '\r'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/switch3.conf
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ read -r key value
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract =~ ^(search|s)$ ]]
+ IFS=' 	
'
+ [[ extract == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ extract == \d\e\b\u\g ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
+ debug=false
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local object_path=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ IFS==
+ read -r key value
+ local search_pattern
+ local object_path=reports/10.0.2.3/misc/.objects/fw1.list
+ local search_pattern
+ local search_pattern
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list != *,* ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fRkpzP9IIB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fRkpzP9IIB
+ local count=1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ grep -v '^#'
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ export 'nl=\n'
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ nl='\n'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ basename reports/172.18.1.20/cisco/branch-isr-02
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z '' ]]
+ dry_run=false
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ source ./scripts/devops-resources.shell
+ (( i++ ))
+ echo
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ newline 2
+ [[ logger =~ ^(platform|p)$ ]]
+ search_pattern=172.16.0.5
+ (( i++ ))
+ result=0
+ [[ logger =~ ^(search|s)$ ]]
+ mkdir -p reports/172.16.0.5/misc/.objects
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UW9Q7K4MbO ]]
+ local count=2
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.UW9Q7K4MbO
+ (( i < count ))
++ [[ -n '' ]]
+ echo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -z true ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ echo
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.0.1/cisco/access-sw1-west.cfg
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ echo -e --platform=fortinet
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
++ cut -d/ -f2
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ logger == \h\e\l\p ]]
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ -z '' ]]
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ export console_output=false
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ (( i = 0 ))
+ case "${target_platform}" in
+ (( i < count ))
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gTAnQuIb3S
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gTAnQuIb3S
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ export 'nl=\n'
+ awk -v divisor=--MTc0ODkxMjY5MDA4MDk2MzAwMAo-- '
+ nl='\n'
                  BEGIN {
                    in_json_header = 0;
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
                    blk = "";
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
+ [[ true == true ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ [[ -n '' ]]
                  }
++ sed -e '1s|^\(-\)\{1,\}||'
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ return 0
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ echo reports/10.0.2.3/misc/fw1.cfg
++ alias exit-error=exit_error
+ local first_search_entry=192.168.100.100
+ local last_search_entry=192.168.100.100
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
+ [[ true == true ]]
+ console_output=false
+ [[ -z true ]]
++ alias list-file=list_file
++ alias exit-error=exit_error
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console ]]
++ alias log-error=log_error
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
++ alias log-info=log_info
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ] ]]
++ alias log-warn=log_warn
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-configs--ips.list ]'
++ alias print-message=message
++ alias list-file=list_file
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
++ alias print-newline=newline
+ local count=1
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ] ]]
++ alias log-error=log_error
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-configs--ips.list ]'
++ alias log-info=log_info
+ ((  count == 0  ))
++ alias pause=pause
++ alias print-line=print
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
++ alias print-file=print_file
+ newline
+ local count=1
++ alias relative-configpath=relative_configpath
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias log-warn=log_warn
++ alias system-metrics=system_metrics
+ echo
+ (( i++ ))
++ alias print-message=message
+ (( i < count ))
++ cut -d/ -f2
++ alias print-newline=newline
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
++ alias validate-address=validate_address
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ alias warning-message=warning
++ alias pause=pause
++ export LC_ALL=C
++ LC_ALL=C
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console ]]
++ export 'nl=\n'
+ newline
++ alias print-line=print
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
++ nl='\n'
+ local count=1
++ export cache_location=.cache
+ (( i = 0 ))
++ cache_location=.cache
+ (( i < count ))
++ export logs_location=logs
+ echo
++ logs_location=logs
+ (( i++ ))
++ mkdir -p logs/console logs/jobs
++ echo reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ tr -d '\r'
++ cut -d/ -f2
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ echo reports/192.168.0.100/cisco/access-sw1-west.cfg
++ grep -v '^\s*$'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
++ grep -v '^#'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(export|r)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ extract =~ ^(export|r)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local count=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_platform=fortinet
+ (( i = 0 ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(search|s)$ ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias print-file=print_file
+ (( i < count ))
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ IFS==
+ [[ false == true ]]
+ [[ extract == \h\e\l\p ]]
+ read -r key value
+ [[ true == true ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ for xitem in "${@}"
+ [[ -n Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
+ IFS==
+ local 'message=Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ read -r key value
+ local object_path=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ search_terms=()
+ ((  count == 0  ))
+ echo -e 'Exported objects from: reports/192.168.100.100/cisco/dmz-fw2-backup.cfg'
+ local search_pattern
+ serialize_objects
+ local parent_dir=reports/172.16.1.6/fortinet
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ search_pattern=192.168.0.1
+ search_pattern=10.0.0.1
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ search_pattern=10.0.2.3
+ local 'extracted_configuration={
+ mkdir -p reports/10.0.0.1/fortinet/.objects
+ mkdir -p reports/10.0.2.3/misc/.objects
+ local first_search_entry=192.168.1.10
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ grep -F 192.0.2.50
++ echo -e --export
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=cisco
++ export targets_location=targets
++ targets_location=targets
++ echo -e --platform=fortinet
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
++ alias relative-configpath=relative_configpath
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-configs--ips.list ]'
+ declare -a search_terms
+ search_pattern=192.168.0.100
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
+ local parent_dir=reports/192.168.100.100/cisco
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ local count=1
+++ date +%s%N
+ ((  count == 0  ))
++ alias system-metrics=system_metrics
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
++ alias validate-address=validate_address
+ (( i < count ))
++ echo reports/172.18.1.20/cisco/branch-isr-02.cfg
+++ base64
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ cut -d/ -f2
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ basename reports/192.168.100.100/cisco/dmz-fw2-backup
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias warning-message=warning
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export LC_ALL=C
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ tr -d '\r'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_platform=fortinet
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ logger == \h\e\l\p ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 192.168.1.10'
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local target_platform=cisco
+ case "${target_platform}" in
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ awk -v divisor=--MTc0ODkxMjY5MDExNTk4NjAwMAo-- '
+ for xitem in "${@}"
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
++ basename reports/172.16.1.6/fortinet/fg-campus-core
                      in_json_header = 0;
                      next;
++ grep -v '^\s*$'
                    }
+ IFS==
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.16.0.5/misc/fw3.cfg
+ read -r key value
+ sed '/^[[:space:]]*$/d'
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
++ grep -v '^#'
++ export divisor=--MTc0ODkxMjY5MDczMTgwNDAwMAo--
++ divisor=--MTc0ODkxMjY5MDczMTgwNDAwMAo--
+ source ./scripts/devops-helpers.shell
+ local object_path=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --export
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ local search_pattern
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/192.168.100.100/fortinet
+ [[ ! -d reports/192.168.100.100/fortinet ]]
++ LC_ALL=C
+ alias parse-cisco=main
+ [[ export =~ ^(config|c)$ ]]
+ result=0
++ export 'nl=\n'
+ [[ -n {
+ newline
+ [[ -z x ]]
+ local count=1
+ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ logs_location=logs
+ (( i = 0 ))
+ [[ -z cisco ]]
+ mkdir -p logs/console
+ [[ true == true ]]
+ [[ true == true ]]
+ local object_path=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ local search_pattern
+ search_pattern=172.18.1.20
+ result=0
+ mkdir -p reports/172.18.1.20/cisco/.objects
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ export =~ ^(console|o)$ ]]
+ local first_search_entry=198.51.100.75
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
+ [[ export =~ ^(extract|x)$ ]]
+ local last_search_entry=198.51.100.75
+ case "${target_platform}" in
+ [[ export =~ ^(logger|l)$ ]]
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ export =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ awk -v divisor=--MTc0ODkxMjY5MDExODQ0NjAwMAo-- '
++ nl='\n'
                  BEGIN {
  "vendor": "cisco",
  "model": "",
                    in_json_header = 0;
  "version": "",
+ (( i < count ))
+ [[ export == \d\r\y\-\r\u\n ]]
                    blk = "";
  "domain": "",
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
+ newline
+ set -euo pipefail
                      in_json_header = 0;
+ local count=1
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw1.cfg
+ export LC_ALL=C
+ LC_ALL=C
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console ]]
++ command -v -- ./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--branch-isr-02.cfg.console
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(config|c)$ ]]
++ export cache_location=.cache
+ [[ logger =~ ^(console|o)$ ]]
++ cache_location=.cache
+ [[ logger =~ ^(export|r)$ ]]
  "hostname": ""
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
}
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ] ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ [[ export =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ cut -d/ -f2
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ export == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ case "${target_platform}" in
+ [[ logger =~ ^(config|c)$ ]]
+ [[ export == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ export == \d\r\y\-\r\u\n ]]
+ IFS==
+ read -r key value
+ (( i++ ))
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ awk -v divisor=--MTc0ODkxMjY5MDA3MTEzMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
+ [[ logger =~ ^(export|r)$ ]]
                    blk = "";
                  }
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ logger =~ ^(extract|x)$ ]]
                  /^[[:space:]]*$/ { next }
+ [[ logger =~ ^(logger|l)$ ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
                      next;
                    }
+ [[ logger =~ ^(platform|p)$ ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ logger =~ ^(search|s)$ ]]
                    blk = $0;
                    next;
                  }
                  {
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
                    blk = blk divisor " " $0;
+ [[ logger == \d\r\y\-\r\u\n ]]
                  }
+ [[ logger == \v\e\r\b\o\s\e ]]
                  END {
+ for xitem in "${@}"
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ IFS==
                ' reports/192.168.0.1/cisco/access-sw1-west.cfg
+ read -r key value
+ script_filename=network-extract.shell

object-group network Fortress-Wireless
+ script_filename=network-extract
 description Secure wireless access layer
++ export logs_location=logs
+ export network_extract__console=logs/console/network-extract.console
 network-object host 172.18.1.20
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ dirname -- ./scripts/network-extract.shell
+ read -r key value
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ grep -F 10.0.2.3
+ grep -F 172.16.0.5
+ (( i < count ))
++ mktemp -d
+ local 'prompt_message=Enter configuration file to be parsed: '
++ echo reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ print_file reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ true == true ]]
+ [[ -n reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local target_file=reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/192.0.2.50/cisco/.objects/dmz-fw2-backup.list
+ case "${target_platform}" in
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ awk -v divisor=--MTc0ODkxMjY5MDA2ODg3MzAwMAo-- '
                    BEGIN {
                      blk = "";
++ cut -d/ -f2
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --export
++ echo -e --verbose
++ echo -e --export
+ search_pattern=192.168.100.100
+ mkdir -p reports/192.168.100.100/cisco/.objects
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_DIR=./scripts
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
 network-object host 192.168.1.10 ]]
+ result=0
+ exit 0
+ grep -F 192.168.0.1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GsgKwcteb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9GsgKwcteb
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ [[ 7 -eq 0 ]]
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.eyoxliogzr/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console --export --verbose
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ oIFS=' 	
'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ for xitem in "${@}"
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ IFS==
+ read -r key value
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ grep -F 10.0.0.1
+ echo
+ (( i++ ))
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vN5p6m2rmo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vN5p6m2rmo
+ sed '/^[[:space:]]*$/d'
++ which awk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ case "${target_platform}" in
+ print '{
  "vendor": "cisco",
  "model": "",
+ awk -v divisor=--MTc0ODkxMjY5MDEzMDU1NTAwMAo-- '
                  BEGIN {
  "version": "",
                    in_json_header = 0;
  "domain": "",
  "hostname": ""
}

                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
object-group network Fortress-Wireless
                  /^{$/ { in_json_header = 1; next }
 description Secure wireless access layer
                  /^}$/ {
 network-object host 172.18.1.20
                    if (in_json_header == 1) {
 network-object host 192.168.1.10'
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -n {
  "vendor": "cisco",
                  }
  "model": "",
                ' reports/192.168.0.100/cisco/access-sw1-west.cfg
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ search_pattern=172.16.1.6
++ alias list-file=list_file
+ [[ export =~ ^(export|r)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ mkdir -p reports/172.16.1.6/fortinet/.objects
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ alias log-error=log_error
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local export_objects=true
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ export == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ local verbose=true
+ read -r key value
+ IFS==
+ IFS=' 	
+ read -r key value
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ cat -n
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ case "${target_platform}" in
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ alias log-info=log_info
+ awk -v divisor=--MTc0ODkxMjY5MDA4ODI4MjAwMAo-- '
                  BEGIN {
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ result=0
                    in_json_header = 0;
+ [[ 0 -ne 0 ]]
                    blk = "";
                  }
++ alias log-warn=log_warn
+ result=0
+ [[ true == true ]]
                  /^[[:space:]]*$/ { next }
++ alias print-message=message
                  /^{$/ { in_json_header = 1; next }
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
                  /^}$/ {
++ alias print-newline=newline
+ [[ 0 -ne 0 ]]
                    if (in_json_header == 1) {
+ output_dir=reports/192.168.2.12/fortinet
                      in_json_header = 0;
+ result=0
                      next;
                    }
+ [[ 0 -ne 0 ]]
++ alias pause=pause
                  }
+ [[ true == true ]]
                  (in_json_header == 1) { next }
++ alias print-line=print
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.18.1.20/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
++ alias print-file=print_file
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ message 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
++ echo -e --verbose
+ [[ -n Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list ]]
+ awk -v divisor=--MTc0ODkxMjY5MDI0NTAyNDAwMAo-- '
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
+ local 'message=Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ touch ./logs/console/run.console
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ alias validate-address=validate_address
+ grep -F 192.168.0.100
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/access-sw1-west.list'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
+ echo -e 'Serialized objects to: reports/172.16.0.5/misc/.objects/fw3.list'
++ cache_location=.cache
++ IFS=,
+ newline
++ export logs_location=logs
++ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 192.168.100.100
++ mkdir -p logs/console logs/jobs
+ grep -F 172.18.1.20
+ grep -F 192.168.100.100
++ echo -e --verbose
++ echo -e --verbose
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list ]]
+ declare -a execute
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw1.list'
++ tr -d '\r'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ [[ search =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
++ grep -v '^#'
+ local count=1
+ sed '/^[[:space:]]*$/d'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ newline
+ local count=1
+ final_output=reports/192.168.1.10/misc/switch1.conf
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ newline 2
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ extract_location=reports/192.168.1.10/misc/switch1.conf
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ return 0
+ local count=2
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ local 'message=Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i < count ))
+ echo
+ echo -e 'Serialized objects to: reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ result=0
+ [[ verbose =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ 0 -ne 0 ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ print_file reports/172.16.0.5/misc/.objects/fw3.list
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ message 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n reports/172.16.0.5/misc/.objects/fw3.list ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo -e 'Serialized objects to: reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list'
+ local verbose=true
+ local target_file=reports/172.16.0.5/misc/.objects/fw3.list
+ IFS=' 	
+ newline
'
+ [[ -f reports/172.16.0.5/misc/.objects/fw3.list ]]
+ local count=1
+ [[ -z '' ]]
+ (( i = 0 ))
+ debug=false
+ case "${target_file}" in
+ print_file reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ (( i < count ))
+ cat reports/172.16.0.5/misc/.objects/fw3.list
+ local verbose=true
+ [[ -z '' ]]
+ dry_run=false
+ IFS=' 	
+ [[ -n reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
+ [[ -z true ]]
'
+ echo
+ local target_file=reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ [[ -z '' ]]
+ [[ -f reports/192.168.0.1/cisco/.objects/access-sw1-west.list ]]
  "model": "",
  "version": "16.9",
+ case "${target_file}" in
  "domain": "",
+ local awk_bin=/usr/bin/awk
+ cat reports/192.168.0.1/cisco/.objects/access-sw1-west.list
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ print_file reports/10.0.2.3/misc/.objects/fw1.list
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ -n reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw1.list
+ [[ -f reports/10.0.2.3/misc/.objects/fw1.list ]]
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ cat reports/10.0.2.3/misc/.objects/fw1.list
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ for xitem in "${@}"
+ [[ -z true ]]
+ output_dir=reports/198.51.100.75/cisco
+ local awk_bin=/usr/bin/awk
+ IFS==
+ (( i = 0 ))
  "hostname": "branch-isr-02"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ (( i < count ))
}
+ read -r key value

+ [[ -z '' ]]
version 16.9
hostname branch-isr-02
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ script_helper=false
+ (( i++ ))
+ [[ false == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ result=0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console ]]
+ output_dir=reports/10.0.0.1/misc
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console ]]
+ search_terms=()
+ declare -a search_terms
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--perimeter-fw1.cfg.console
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list != *,* ]]
version 16.9
+ mapfile -t search_terms
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ local awk_bin=/usr/bin/awk
++ IFS=,
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ echo 10.10.10.10
++ which awk
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ declare -a execute
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ newline
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ local count=1
+ (( i = 0 ))
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "16.9",
+ echo
  "domain": "",
  "hostname": "branch-isr-02"
}

+ (( i++ ))
version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ (( i < count ))
++ echo -e --verbose
+ echo -en '{
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "vendor": "cisco",
  "model": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "version": "16.9",
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": "branch-isr-02"
}
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'

+ newline
version 16.9
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
hostname branch-isr-02
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]

+ local count=1
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
object-group network Lantern-DMZ
+ (( i = 0 ))
 description Protected but public-facing zone
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
 network-object host 172.18.1.20
+ echo
 network-object host 192.168.1.11'
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
++ dirname -- ./scripts/network-extract.shell
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ message 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/172.31.255.254/misc/switch1.conf ]]
+ newline
+ local 'message=Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ local count=1
+ echo -e 'Exported objects from: reports/172.31.255.254/misc/switch1.conf'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ serialize_objects
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ grep -v '^\s*$'
+ newline
+ (( i < count ))
+ output_dir=reports/192.168.0.1/cisco
+ local count=1
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ [[ false == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg'
++ printf '%*s' 12 ''
+ message 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ serialize_objects
+ [[ -n Exported objects from: reports/10.0.1.2/misc/switch1.conf ]]
+ local 'message=Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/10.0.1.2/misc/switch1.conf'
+ serialize_objects
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
++ which awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DdaujXHc6R ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DdaujXHc6R
++ grep -v '^#'
++ dirname reports/172.31.255.254/misc/switch1.conf
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ newline
++ IFS=,
+ local count=1
+ (( i = 0 ))
++ echo 172.18.1.20
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
++ IFS=,
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo 192.168.0.100
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ echo
+ local SCRIPT_DIR=./scripts
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ local script_filename=cisco-configs.awk
+ declare -a execute
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline 2
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=2
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i < count ))
++ dirname reports/10.0.1.2/misc/switch1.conf
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
+ local verbose=true
+ IFS=' 	
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
'
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ [[ -z '' ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ debug=false
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -z '' ]]
+ dry_run=false
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ export console_output=false
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ console_output=false
+ declare -a execute
++ dirname -- ./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]]
++ which awk
+ [[ config =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list != *,* ]]
+ local parent_dir=reports/172.31.255.254/misc
+ [[ config =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
+ [[ config =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(search|s)$ ]]
++ which awk
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=203.0.113.25
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local script_filename=cisco-configs.awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ platform =~ ^(config|c)$ ]]
+ newline
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ platform =~ ^(export|r)$ ]]
+ [[ export =~ ^(config|c)$ ]]
+ result=0
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ platform =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ echo
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local parent_dir=reports/192.168.1.10/fortinet
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
++ which awk
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
++ basename reports/172.31.255.254/misc/switch1
++ dirname -- ./scripts/network-extract.shell
+ local parent_dir=reports/10.0.1.2/misc
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 0 -ne 0 ]]
++ touch ./logs/console/run.console
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
++ which awk
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ result=0
++ basename reports/192.168.1.10/fortinet/fg-branch-vpn-01
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
++ tr -d '\r'
+ local awk_bin=/usr/bin/awk
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ search =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(console|o)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ search =~ ^(export|r)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ search =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ basename reports/10.0.1.2/misc/switch1
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local script_filename=cisco-configs.awk
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
+ newline
++ grep -v '^\s*$'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ true == true ]]
+ local object_path=reports/172.31.255.254/misc/.objects/switch1.list
+ message 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local search_pattern
+ [[ -n Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ print '{
+ local 'message=Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
  "vendor": "cisco",
  "model": "ASA",
+ echo -e 'Exported objects from: reports/192.168.1.11/cisco/branch-isr-02.cfg'
+ local SCRIPT_DIR=./scripts
  "version": "9.14(3)",
+ local 'indent=            '
+ local awk_bin=/usr/bin/awk
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ local script_filename=fortinet-configs.awk

+ local SCRIPT_DIR=./scripts
ASA Version 9.14(3)
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ serialize_objects
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
hostname perimeter-fw1
+ local script_filename=cisco-configs.awk
domain-name edge.dc.example.com
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local script_filepath=./scripts/extract/cisco-configs.awk
 network-object 192.168.2.0 255.255.255.0'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ printf '%*s' 12 ''
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ IFS=,
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ [[ true == true ]]
++ grep -v '^#'
++ echo 198.51.100.75
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ local 'indent=            '
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
++ which awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ local object_path=reports/10.0.1.2/misc/.objects/switch1.list
+ newline
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local search_pattern
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
++ which awk
++ which awk
++ echo reports/172.31.255.254/misc/switch1.conf
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ printf '%*s' 12 ''
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'indent=            '
+ [[ true == true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
++ IFS=,
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ echo 10.10.10.10
+ [[ extract =~ ^(export|r)$ ]]
+ newline
+ newline
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
+ local count=1
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ cut -d/ -f2
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(search|s)$ ]]
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ declare -a execute
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=10.0.2.3
+ local last_search_entry=10.0.2.3
+ (( i < count ))
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ] ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-configs--ips.list ]'
+ newline 2
+ IFS==
++ echo reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ read -r key value
+ local count=1
+ ((  count == 0  ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ echo reports/10.0.1.2/misc/switch1.conf
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ local parent_dir=reports/192.168.1.11/cisco
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i < count ))
+ [[ export =~ ^(console|o)$ ]]
+ newline
+ (( i < count ))
+ [[ export =~ ^(export|r)$ ]]
+ local count=1
+ (( i = 0 ))
+ local export_objects=true
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ echo
+ (( i++ ))
+ [[ export =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ [[ export =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ export == \d\e\b\u\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ local 'extracted_configuration={
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ newline
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ local count=1
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
++ cut -d/ -f2
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ (( i < count ))
+ echo
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
  "vendor": "cisco",
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
  "model": "",
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ cut -d/ -f2
+ (( i++ ))
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
  "version": "16.9",
  "domain": "",
++ IFS=,
  "hostname": "branch-isr-02"
}

++ which awk
++ echo 192.168.2.12
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ [[ export == \d\r\y\-\r\u\n ]]
 description Workstation LAN
+ [[ export == \v\e\r\b\o\s\e ]]
++ IFS=,
+ [[ true == true ]]
+ for xitem in "${@}"

object-group network Hydra-Edge
++ echo 10.0.0.1
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ IFS==
+ read -r key value
+ result=0
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ -n {
+ declare -a execute
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
 description Workstation LAN
++ basename reports/192.168.1.11/cisco/branch-isr-02
+ declare -a execute

object-group network Hydra-Edge
++ echo -e --verbose
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ search_pattern=172.31.255.254
+ mkdir -p reports/172.31.255.254/misc/.objects
++ printf '%*s' 12 ''
++ IFS=,
++ echo 192.168.0.1
++ IFS=,
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 192.168.1.11
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
++ which awk
+ local 'indent=            '
++ which awk
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ output_dir=reports/203.0.113.25/cisco
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ search_pattern=192.168.1.10
  "model": "",
+ local count=1
+ mkdir -p reports/192.168.1.10/fortinet/.objects
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
  "version": "",
  "domain": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ search_pattern=10.0.1.2
 network-object host 172.18.1.20
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 192.168.1.10'
+ mkdir -p reports/10.0.1.2/misc/.objects
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n {
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
  "vendor": "cisco",
+ declare -a execute
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'

+ declare -a execute
object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ local object_path=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ local search_pattern
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
+ newline
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ [[ config =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ [[ config =~ ^(export|r)$ ]]
+ (( i < count ))
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ false == true ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config =~ ^(extract|x)$ ]]
+ message 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ [[ -n Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/192.0.2.50/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ [[ config =~ ^(logger|l)$ ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
++ which awk
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n {
  "vendor": "cisco",
+ [[ config == \h\e\l\p ]]
  "model": "",
  "version": "",
+ [[ config == \d\e\b\u\g ]]
  "domain": "",
+ [[ config == \d\r\y\-\r\u\n ]]
  "hostname": ""
+ [[ config == \v\e\r\b\o\s\e ]]
}
+ for xitem in "${@}"

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ IFS==
+ echo -en '{
  "vendor": "cisco",
+ read -r key value
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local awk_bin=/usr/bin/awk
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
  "vendor": "cisco",
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "model": "",
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
  "version": "12.2",
  "hostname": "campus-sw-access01"
  "domain": "",
+ print '{
  "hostname": "campus-sw-access01"
  "vendor": "cisco",
}
  "model": "",

  "version": "16.9",
version 12.2
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ platform =~ ^(config|c)$ ]]
}
}
hostname campus-sw-access01


+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ platform =~ ^(console|o)$ ]]
version 12.2
version 16.9
hostname branch-isr-02

+ [[ platform =~ ^(export|r)$ ]]
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

+ [[ platform =~ ^(extract|x)$ ]]
object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'

object-group network Floor-Networks
+ sed '1{/^[[:space:]]*$/d;}'
hostname campus-sw-access01
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
 description End-user and service devices
++ dirname -- ./scripts/network-extract.shell
+ [[ -n {
+ [[ cfg == \c\f\g ]]
  "vendor": "cisco",

  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ which awk
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
++ echo reports/192.168.1.11/cisco/branch-isr-02.cfg
  "version": "16.9",
  "domain": "",
+ final_output=reports/10.0.2.3/misc/fw3.cfg
  "hostname": "branch-isr-02"
}

+ extract_location=reports/10.0.2.3/misc/fw3.cfg
version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
 network-object host 192.168.0.1
+ result=0
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ [[ platform =~ ^(logger|l)$ ]]
+ result=0
  "domain": "",
+ [[ platform =~ ^(platform|p)$ ]]
  "hostname": "campus-sw-access01"
+ local target_platform=cisco
}

+ [[ platform =~ ^(search|s)$ ]]
version 12.2
+ [[ -n {
  "vendor": "cisco",
hostname campus-sw-access01
+ case "${target_platform}" in
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ [[ platform == \h\e\l\p ]]
}
+ [[ platform == \d\e\b\u\g ]]

+ [[ platform == \d\r\y\-\r\u\n ]]
object-group network Floor-Networks
 description End-user and service devices
+ [[ platform == \v\e\r\b\o\s\e ]]
 network-object host 192.168.0.1
+ for xitem in "${@}"
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ IFS==
+ read -r key value
+ awk -v divisor=--MTc0ODkxMjY5MDA2MTUxMjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
++ cut -d/ -f2
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/172.31.255.254/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ local 'indent=            '
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ grep -F 172.31.255.254
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDA5NjkwMDAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
+ local awk_bin=/usr/bin/awk
                    /^#(hostname|model|config-version)=/ { next }

+ newline
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
                    # Start of a new block
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
                    /^config / {
                      if (blk != "") print blk;
+ newline
+ newline
                      blk = $0;
+ local count=1
                      next;
                    }
+ local count=1

                    # Add edit line to current block
+ (( i = 0 ))
                    /^ edit / {
                      blk = blk divisor " " $0;
+ (( i < count ))
                      next;
+ local count=1
                    }
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo

+ echo
+ case "${target_platform}" in
                    # Add next to block
+ echo
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
+ (( i++ ))
                      # No need for final print — all blocks end with end
+ awk -v divisor=--MTc0ODkxMjY5MDA2NDc4NzAwMAo-- '
                    }
+ (( i++ ))
                  ' reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ (( i++ ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.1.2/misc/switch1.conf
+ sed '/^[[:space:]]*$/d'
+ grep -F 192.168.1.10
+ local parent_dir=reports/192.0.2.50/cisco
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ local SCRIPT_DIR=./scripts
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ local script_filename=cisco-configs.awk
object-group network Floor-Networks
++ sed -e '1s|^\(-\)\{1,\}||'
+ local script_filepath=./scripts/extract/cisco-configs.awk
 description End-user and service devices
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ newline 2
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ grep -F 10.0.1.2
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
+ local count=2
}

+ (( i = 0 ))
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ (( i++ ))
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ search_pattern=192.168.1.11
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
+ mkdir -p reports/192.168.1.11/cisco/.objects
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
 description Branch NAT egress
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ sed '/^[[:space:]]*$/d'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",

  "hostname": "campus-sw-access01"
++ basename reports/192.0.2.50/cisco/perimeter-fw1
}
object-group network Hydra-Edge

 description Remote site uplink
version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
 network-object host 192.168.2.12
hostname campus-sw-access01
 network-object host 198.51.100.75'

object-group network Floor-Networks
 description End-user and service devices
+ newline
 network-object host 192.168.0.1
+ result=0
+ local count=1
 network-object host 192.168.0.100
+ [[ -n {
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
++ which awk
+ (( i < count ))
 network-object host 10.10.10.10'
+ echo
  "version": "16.9",
+ output_dir=reports/10.0.2.3/misc
+ sed '/^[[:space:]]*$/d'
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

+ (( i++ ))
object-group network Hydra-Edge
 description Remote site uplink
+ (( i < count ))
+ [[ ! -d reports/10.0.2.3/misc ]]
 network-object host 192.168.2.12
+ cat -n reports/172.18.1.20/misc/fw1.cfg
 network-object host 198.51.100.75 ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local awk_bin=/usr/bin/awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ result=0
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ 0 -ne 0 ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ newline 2
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list ]]
+ local 'message=Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ echo -e 'Serialized objects to: reports/172.31.255.254/misc/.objects/switch1.list'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ local count=1
+ local count=2
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ printf '%*s' 12 ''
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ echo
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ (( i++ ))
+ output_dir=reports/192.168.1.10/misc
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message '                .cache/resources/misc/switch1.conf'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(export|r)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i < count ))
+ local 'indent=            '
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ print '{
  "vendor": "cisco",
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "model": "",
  "version": "16.9",
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "domain": "",
  "hostname": "branch-isr-02"
}

+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ newline
+ echo -e '                .cache/resources/misc/switch1.conf'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ local count=1
version 16.9
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ extract == \h\e\l\p ]]
+ newline
+ newline
hostname branch-isr-02

+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
object network Hydra-Link
+ local SCRIPT_PATH=./scripts/network-extract.shell
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ sed '1{/^[[:space:]]*$/d;}'
version 16.9
hostname branch-isr-02

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ local object_path=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
+ print_file reports/172.31.255.254/misc/.objects/switch1.list
+ local search_pattern
  "vendor": "cisco",
+ result=0
  "model": "",
  "version": "16.9",
+ [[ 0 -ne 0 ]]
  "domain": "",
  "hostname": "branch-isr-02"
}
+ [[ true == true ]]

+ [[ -n reports/172.31.255.254/misc/.objects/switch1.list ]]
version 16.9
hostname branch-isr-02
+ [[ extract == \d\e\b\u\g ]]
+ local target_file=reports/172.31.255.254/misc/.objects/switch1.list

+ local count=1
object network Hydra-Link
 host 198.51.100.75
+ (( i = 0 ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i < count ))
 description Branch NAT egress
+ echo
+ [[ -f reports/172.31.255.254/misc/.objects/switch1.list ]]

+ (( i++ ))
+ local count=1
object-group network Hydra-Edge
+ (( i < count ))
+ message 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ newline
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list ]]
 description Remote site uplink
+ local 'message=Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ for xitem in "${@}"
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
 network-object host 192.168.2.12
+ (( i < count ))
+ cat reports/172.31.255.254/misc/.objects/switch1.list
+ echo
+ local count=1
 network-object host 198.51.100.75'
+ IFS==
+ echo -e 'Serialized objects to: reports/10.0.1.2/misc/.objects/switch1.list'
+ (( i++ ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ 0 -ne 0 ]]
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ (( i = 0 ))
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ verbose =~ ^(extract|x)$ ]]
+ newline
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ cat -n
+ (( i < count ))
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ true == true ]]
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/access-sw1-west.list'
+ [[ ! -d reports/192.168.1.10/misc ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
++ export targets_location=targets
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
++ targets_location=targets
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local count=1
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ newline
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
++ export targets_logfile=logs/jobs/targets.jobs
+ (( i = 0 ))
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ logger =~ ^(console|o)$ ]]
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local verbose=true
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ case "${target_platform}" in
++ IFS=,
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ awk -v divisor=--MTc0ODkxMjY5MDE1OTM2MDAwMAo-- '
++ echo 203.0.113.25
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
                      next;
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
                    }
+ local count=1
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
                  }
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
++ echo -e --verbose
+ print_file reports/10.0.1.2/misc/.objects/switch1.list
                  (in_json_header == 1) { next }
+ (( i < count ))
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ echo
                    blk = $0;
                    next;
+ (( i++ ))
                  }
+ (( i < count ))
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -n reports/10.0.1.2/misc/.objects/switch1.list ]]
                ' reports/192.168.1.11/cisco/branch-isr-02.cfg
+ local target_file=reports/10.0.1.2/misc/.objects/switch1.list
+ [[ false == true ]]
+ [[ -f reports/10.0.1.2/misc/.objects/switch1.list ]]
+ [[ true == true ]]
+ case "${target_file}" in
+ cat reports/10.0.1.2/misc/.objects/switch1.list
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ declare -a execute
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ message 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ print_file reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n Exported objects from: reports/172.18.1.20/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
++ echo reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -e 'Exported objects from: reports/172.18.1.20/misc/fw1.cfg'
+ [[ -n reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ serialize_objects
+ local target_file=reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/fortinet/.objects/fg-branch-vpn-01.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 192.168.1.11
+ cat -n
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ cut -d/ -f2
++ echo -e --platform=fortinet
++ mktemp -d
+ newline 2
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ local SCRIPT_DIR=./scripts
+ cat -n
+ (( i = 0 ))
+ (( i++ ))
++ which awk
+ (( i < count ))
+ local script_filename=cisco-configs.awk
+ echo
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ echo
+ newline
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ newline
+ [[ logger =~ ^(export|r)$ ]]
+ search_pattern=192.0.2.50
+ (( i < count ))
+ local count=1
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ mkdir -p reports/192.0.2.50/cisco/.objects
+ (( i < count ))
+ echo
+ return 0
+ echo
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ newline
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ local count=1
+ (( i++ ))
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i < count ))
+ [[ true == true ]]
+ return 0
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ true == true ]]
+ newline 2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local parent_dir=reports/172.18.1.20/misc
+ newline 2
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ case "${target_file}" in
+ [[ logger =~ ^(logger|l)$ ]]
  "version": "9.12(4)",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ local count=2
+ local 'extracted_configuration={
+ (( i = 0 ))
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ logger =~ ^(platform|p)$ ]]
  "domain": "global.dmz.example.net",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console ]]
  "vendor": "fortinet",
  "hostname": "dmz-fw2-backup"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
  "model": "FortiGate-60F",
+ result=0
+ echo
+ IFS=' 	
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console ]]
'
+ echo
+ local count=2
  "version": "v7.2.5.F",
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ (( i++ ))
}
+ [[ platform =~ ^(console|o)$ ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console

  "domain": ""
+ (( i < count ))
+ [[ true == true ]]
+ [[ logger == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9mwnaGWvxw
ASA Version 9.12(4)
+ [[ logger == \d\e\b\u\g ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9mwnaGWvxw
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ platform =~ ^(export|r)$ ]]
+ (( i < count ))
hostname dmz-fw2-backup
+ echo
  "hostname": "fg-branch-vpn-01"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ [[ platform =~ ^(extract|x)$ ]]
  "model": "",
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
}
+ (( i++ ))
+ (( i < count ))
domain-name global.dmz.example.net
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ (( i < count ))

+ for xitem in "${@}"
+ export 'nl=\n'

++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ message 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ nl='\n'
  "version": "",
+ [[ -n Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
+ print_file reports/192.168.0.100/cisco/.objects/access-sw1-west.list
interface GigabitEthernet0/0
+ [[ logger =~ ^(export|r)$ ]]
+ local 'message=Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ source ./scripts/devops-resources.shell
#hostname="fg-branch-vpn-01"
  "domain": "",
+ IFS==
+ echo -e 'Serialized objects to: reports/192.168.1.11/cisco/.objects/branch-isr-02.list'
  "hostname": ""
#model="FortiGate-60F"
+ echo
+ [[ true == true ]]
+ echo -e 'Exported objects from: reports/192.168.2.12/cisco/branch-isr-02.cfg'
+ [[ -n reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
 nameif guest
++ command -v -- ./scripts/network-extract.shell
+ read -r key value
+ local target_file=reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ [[ -n '' ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -f reports/192.168.0.100/cisco/.objects/access-sw1-west.list ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
+ case "${target_file}" in
+ [[ verbose =~ ^(console|o)$ ]]
+ cat reports/192.168.0.100/cisco/.objects/access-sw1-west.list
++ [[ 5 -lt 4 ]]
+ local count=1
}
+ (( i = 0 ))

+ local target_platform=fortinet
+ (( i < count ))
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo
++ alias detect-vendor=detect_vendor
++ printf '%*s' 12 ''
object-group network Avengers-Office
+ (( i++ ))

+ serialize_objects
+ (( i < count ))
+ (( i++ ))
+ [[ platform =~ ^(search|s)$ ]]
 description VLAN access layer
 ip address 10.10.10.10 255.255.255.0
++ alias exit-error=exit_error
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ platform == \h\e\l\p ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ platform == \d\e\b\u\g ]]
+ result=0
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
config system interface
+ [[ -n {
+ [[ platform == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
 description Guest access interface
+ echo
++ alias list-file=list_file
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  "vendor": "cisco",
+ for xitem in "${@}"
+ local 'indent=            '
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
  "model": "",
+ [[ true == true ]]

  "version": "",
  set alias "User LAN"
+ (( i++ ))
  "domain": "",
+ IFS==
++ alias log-error=log_error
+ [[ logger =~ ^(extract|x)$ ]]
+ debug=false
++ basename reports/172.18.1.20/misc/fw1
+ newline
object network Shield-WiFi-Alias
+ newline
++ alias log-info=log_info
 host 10.10.10.10
 next
+ local count=1
end
+ (( i = 0 ))

config firewall address
++ alias log-warn=log_warn
 edit "Branch-Gateway"
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ (( i < count ))
++ alias print-message=message
  "hostname": ""
++ alias print-newline=newline
}
  set subnet 192.168.2.12 255.255.255.255
 description Guest NAT
  set comment "Primary LAN gateway"
+ read -r key value
+ local count=1
+ [[ true == true ]]
 next


end'
++ alias pause=pause
object-group network Avengers-Office
object-group network Sector-Wireless
+ (( i = 0 ))
+ echo
 description VLAN access layer
++ alias print-line=print
+ (( i < count ))
 network-object host 10.0.0.1
+ (( i++ ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
++ alias print-file=print_file
 description Staff WiFi clients
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ result=0
 network-object host 192.168.100.100
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 network-object host 10.10.10.10'
+ [[ verbose =~ ^(export|r)$ ]]
++ dirname reports/172.16.1.6/misc/switch3.conf
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias relative-configpath=relative_configpath
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -z '' ]]
+ result=0
++ dirname reports/192.168.1.10/misc/switch1.conf
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
  "version": "v7.2.5.F",
  "domain": ""
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
  "hostname": "fg-branch-vpn-01"
}
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'

#hostname="fg-branch-vpn-01"
++ alias system-metrics=system_metrics
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ message '             -f ./scripts/extract/cisco-configs.awk \'
config system interface
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ local count=1
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ [[ -n {
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
  "version": "9.12(4)",
++ alias validate-address=validate_address
++ alias warning-message=warning
+ print_file reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -n reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/192.168.1.11/cisco/.objects/branch-isr-02.list
+ [[ -f reports/192.168.1.11/cisco/.objects/branch-isr-02.list ]]
++ export 'nl=\n'
+ case "${target_file}" in
++ nl='\n'
++ export cache_location=.cache
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ cat reports/192.168.1.11/cisco/.objects/branch-isr-02.list
++ mkdir -p logs/console logs/jobs
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "domain": "global.dmz.example.net",
+ newline
  "hostname": "dmz-fw2-backup"
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
}
+ (( i++ ))

+ (( i < count ))
  set alias "User LAN"
ASA Version 9.12(4)
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ [[ true == true ]]
+ cat -n
+ message 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/branch-isr-02.cfg'
+ serialize_objects
+ [[ true == true ]]
++ echo -e --export
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
 next
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wkwj5zfFHp/network-extract--switch1.conf.console
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console ]]
+ print '{
  "vendor": "cisco",
++ IFS=,
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
  "model": "",
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console ]]
  "domain": "",
  "hostname": ""
+ case "${target_file}" in
}

object-group network Avengers-Office
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fg-branch-vpn-01.cfg.console
 description VLAN access layer
 network-object host 10.0.0.1
++ echo 10.0.2.3
 network-object 192.168.12.0 255.255.255.0'
+ [[ true == true ]]
+ local object_path=reports/172.18.1.20/misc/.objects/fw1.list
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
++ sed -e '1s|^\(-\)\{1,\}||'

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
object-group network Avengers-Office
 description VLAN access layer
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console ]]
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ case "${target_file}" in
+ local search_pattern

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JUIqBlt8k4/network-extract--switch1.conf.console
object-group network Avengers-Office
 description VLAN access layer
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
hostname dmz-fw2-backup
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ case "${target_platform}" in
+ declare -a execute
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ awk -v divisor=--MTc0ODkxMjY5MDIwNzI5NTAwMAo-- '
+ (( i < count ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
domain-name global.dmz.example.net

                  (in_json_header == 1) { next }
interface GigabitEthernet0/0
                  /^[^[:space:]]/ {
 nameif guest
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ [[ -n {
+ local 'extracted_configuration={
  "vendor": "fortinet",
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end
+ grep -F 192.0.2.50

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ sed '1{/^[[:space:]]*$/d;}'
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end
++ which awk
+ local parent_dir=reports/192.168.2.12/cisco

config firewall address
+ local 'extracted_configuration={
  "vendor": "cisco",
 edit "Branch-Gateway"
  "model": "",
  set subnet 192.168.2.12 255.255.255.255
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
  set comment "Primary LAN gateway"

 next
object network Shield-WiFi-Alias
 host 10.10.10.10
version 12.2
end'
++ export actions_logfile=./logs/console/run.console
 description Guest NAT
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ newline
+ local count=1
+ (( i = 0 ))
hostname campus-sw-access01
+ (( i < count ))

interface Vlan1
+ echo
 ip address 192.168.0.1 255.255.255.0
+ result=0

+ newline
object-group network Sector-Wireless
 description Switch Mgmt
+ (( i++ ))
 description Staff WiFi clients
+ local count=1

object-group network Floor-Networks
+ (( i < count ))
 description End-user and service devices
+ return 0
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
 network-object host 192.168.0.1
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo
+ [[ true == true ]]
+ [[ -n {
 network-object host 192.168.0.100
+ (( i++ ))
 network-object host 10.10.10.10'
  "vendor": "fortinet",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
+ sed '/^[[:space:]]*$/d'
++ echo reports/172.18.1.20/misc/fw1.cfg
+ cat -n
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
+ (( i < count ))
hostname campus-sw-access01

+ [[ export =~ ^(config|c)$ ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ result=0
+ local export_objects=true
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DBWIXJrFsp ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DBWIXJrFsp
++ cut -d/ -f2
++ basename reports/192.168.2.12/cisco/branch-isr-02
+ result=0
+ local parent_dir=reports/198.51.100.75/cisco
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QgST1UHEsb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QgST1UHEsb
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
  set subnet 192.168.1.11 255.255.255.255
  "domain": "global.dmz.example.net",
  set comment "Captain America’s secure endpoint"
  "hostname": "dmz-fw2-backup"
 next
+ [[ export =~ ^(extract|x)$ ]]
}
+ [[ false == true ]]

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
+ [[ true == true ]]
 description Switch Mgmt
ASA Version 9.12(4)
+ result=0
hostname dmz-fw2-backup
+ newline 2
+ exit 0
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8BVnBmZn7Q ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.8BVnBmZn7Q
+ result=0
+ [[ -n {
+ newline
  "vendor": "cisco",
  "model": "ASA",
end ]]
  "version": "9.12(4)",
+ local count=1
  "domain": "global.dmz.example.net",
+ [[ export =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ result=0
+ (( i < count ))
  "hostname": "dmz-fw2-backup"
+ [[ export =~ ^(platform|p)$ ]]
+ echo
+ [[ export =~ ^(search|s)$ ]]
}

+ [[ export == \h\e\l\p ]]
+ [[ logger =~ ^(config|c)$ ]]
ASA Version 9.12(4)
+ [[ export == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ 0 -ne 0 ]]
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ print '{
+ [[ logger =~ ^(logger|l)$ ]]
  "vendor": "cisco",
  "model": "ASA",
hostname dmz-fw2-backup
domain-name global.dmz.example.net
  "version": "9.12(4)",
++ export targets_location=targets

  "domain": "global.dmz.example.net",
object network Sentinel-NAT
  "hostname": "dmz-fw2-backup"
 host 203.0.113.25
}
 description Corporate NAT edge ]]


+ local count=2
ASA Version 9.12(4)
++ targets_location=targets
+ message 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
+ (( i = 0 ))
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ (( i < count ))

interface GigabitEthernet0/0
+ [[ -n Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
 nameif guest
++ export targets_logfile=logs/jobs/targets.jobs
 ip address 10.10.10.10 255.255.255.0
+ (( i++ ))
++ targets_logfile=logs/jobs/targets.jobs
 description Guest access interface

+ local 'message=Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ echo -e 'Serialized objects to: reports/192.0.2.50/cisco/.objects/perimeter-fw1.list'
++ basename reports/198.51.100.75/cisco/branch-isr-02
+ newline
+ local count=1
+ [[ export == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ export == \v\e\r\b\o\s\e ]]
+ (( i = 0 ))
+ for xitem in "${@}"
+ [[ -n {
  "vendor": "cisco",
+ (( i < count ))
  "model": "ASA",
+ echo
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ (( i++ ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
}

object-group network Floor-Networks
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
ASA Version 9.12(4)
 description End-user and service devices
+ message 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
+ echo
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ -n Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ IFS==
+ local count=2
interface GigabitEthernet0/0
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ (( i++ ))
 nameif guest
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ read -r key value
 network-object host 192.168.0.1
+ [[ logger == \h\e\l\p ]]
 ip address 10.10.10.10 255.255.255.0
++ printf '%*s' 12 ''
+ (( i < count ))
+ local 'message=Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
 network-object host 192.168.0.100
 description Guest access interface
+ [[ logger == \d\e\b\u\g ]]

object network Shield-WiFi-Alias
+ [[ logger == \d\r\y\-\r\u\n ]]
 host 10.10.10.10
+ [[ false == true ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ true == true ]]
 description Guest NAT

+ echo
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ search_pattern=172.18.1.20
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ mkdir -p reports/172.18.1.20/misc/.objects
interface GigabitEthernet0/0
+ local 'indent=            '
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
+ sed '1{/^[[:space:]]*$/d;}'
 host 10.10.10.10
+ [[ true == true ]]
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ newline
+ local count=1
+ print '{
+ echo
+ (( i = 0 ))
  "vendor": "fortinet",
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
  "model": "FortiGate-200F",
+ echo -e 'Exported objects from: reports/192.168.0.100/cisco/campus-sw-access01.cfg'
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ echo
#model="FortiGate-200F"
+ (( i++ ))

+ (( i < count ))
 network-object host 10.10.10.10 ]]
+ print '{
  "vendor": "cisco",
+ for xitem in "${@}"
config firewall address
  "model": "ASA",
+ IFS==
  "version": "9.12(4)",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "global.dmz.example.net",
+ serialize_objects
  "hostname": "dmz-fw2-backup"
+ read -r key value
}
+ message 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ (( i++ ))
+ local object_path=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
 edit "Cap-HQ"
+ (( i < count ))

+ local search_pattern
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
  set subnet 192.168.1.11 255.255.255.255
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  set comment "Captain America’s secure endpoint"
 next
+ [[ true == true ]]

+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
end'
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ print_file reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n {
+ [[ -n {
+ echo
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ -n reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
  "vendor": "fortinet",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
  "model": "FortiGate-200F",
  "vendor": "cisco",
+ local target_file=reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
  "version": "",
  "model": "ASA",
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
  "version": "9.12(4)",
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
  "domain": "global.dmz.example.net",
+ [[ -f reports/192.0.2.50/cisco/.objects/perimeter-fw1.list ]]
  "hostname": "dmz-fw2-backup"
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
}
  "domain": ""

  "hostname": "fg-campus-core"
ASA Version 9.12(4)
+ case "${target_file}" in
}
hostname dmz-fw2-backup

domain-name global.dmz.example.net
#hostname="fg-campus-core"

#model="FortiGate-200F"
object network Sentinel-NAT
+ cat reports/192.0.2.50/cisco/.objects/perimeter-fw1.list
 host 203.0.113.25
 description Corporate NAT edge ]]

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ echo -en '{
  set comment "Captain America’s secure endpoint"
  "vendor": "cisco",
 next
  "model": "ASA",
end ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--branch-isr-02.cfg.console
+ (( i++ ))
+++ date +%s%N
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/campus-sw-access01.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ [[ true == true ]]
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ cat -n
+ local search_pattern
+ sed '1{/^[[:space:]]*$/d;}'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
+ serialize_objects
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
 network-object host 10.10.10.10'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+++ base64
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
++ echo -e --verbose
+ [[ -n {
  "vendor": "cisco",
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ newline

version 12.2
+ local count=1
hostname campus-sw-access01

+ (( i = 0 ))
interface Vlan1
+ (( i < count ))
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt
+ echo

object-group network Floor-Networks
 description End-user and service devices
+ (( i++ ))
 network-object host 192.168.0.1
+ (( i < count ))
 network-object host 192.168.0.100
+ newline
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ dry_run=false
 network-object host 10.10.10.10 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ echo -en '{
  "vendor": "cisco",
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
  "model": "",
  "version": "12.2",
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ case "${target_platform}" in
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ cat -n
+ print_file reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ awk -v divisor=--MTc0ODkxMjY5MDEyNDY4MjAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }
++ sed -e '1s|^\(-\)\{1,\}||'

+ [[ -n reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ local target_file=reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ [[ -f reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]

                    # Skip platform metadata
+ case "${target_file}" in
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
+ cat reports/10.0.0.1/fortinet/.objects/fg-branch-vpn-01.list
++ echo reports/192.168.2.12/cisco/branch-isr-02.cfg
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
++ echo -e --export
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/172.16.1.6/fortinet/fg-campus-core.cfg
+++ date +%s%N
+ sed '1{/^[[:space:]]*$/d;}'
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ newline 2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i++ ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+++ tr -dc a-zA-Z0-9
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3SciSdkEOg ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3SciSdkEOg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
++ export divisor=--MTc0ODkxMjY5MDg1NzMzNTAwMAo--
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
++ divisor=--MTc0ODkxMjY5MDg1NzMzNTAwMAo--
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ source ./scripts/devops-helpers.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ [[ 5 -lt 4 ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_platform}" in
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
++ alias parse-listings--helper=parse_listings__helper
+ awk -v divisor=--MTc0ODkxMjY5MDIyODc0NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
++ alias network-configs--helper=network_configs__helper
                  }
+ local count=2
                ' reports/172.18.1.20/misc/fw1.cfg
+ newline
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(export|r)$ ]]
++ alias network-extract--helper=network_extract__helper
+ alias serialize-object=serialize_objects
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ newline 2
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ verbose == \h\e\l\p ]]
+ (( i < count ))
+ [[ verbose == \d\e\b\u\g ]]
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ local verbose=true
+ (( i < count ))
+ local parent_dir=reports/192.168.0.100/cisco
+ IFS=' 	
+ echo
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ search_pattern=192.168.2.12
+ [[ -z '' ]]
+ grep -F 172.18.1.20
+ alias parse-cisco=main
+ mkdir -p reports/192.168.2.12/cisco/.objects
+ [[ false == true ]]
+ [[ true == true ]]
+ newline 2
+ [[ export =~ ^(config|c)$ ]]
+ local count=2
+ [[ -z x ]]
+ export console_output=false
+ (( i++ ))
+ export logs_location=logs
+ (( i < count ))
+ logs_location=logs
+ (( i = 0 ))
+ message 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ mkdir -p logs/console
+ console_output=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch1.conf ]]
+ [[ export =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ local count=2
+ [[ export =~ ^(export|r)$ ]]
+ echo
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ local export_objects=true
+ [[ -z true ]]
+ [[ export =~ ^(extract|x)$ ]]
+ local 'extracted_configuration={
+ local parent_dir=reports/10.10.10.10/cisco
+ (( i = 0 ))
  "vendor": "cisco",
+ [[ export =~ ^(logger|l)$ ]]
  "model": "",
+ (( i++ ))
+ (( i < count ))
+ [[ export =~ ^(platform|p)$ ]]
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch1.conf'
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
  "version": "",
+ [[ export =~ ^(search|s)$ ]]
+ echo
+ serialize_objects
+ echo
+ [[ -z '' ]]
  "domain": "",
+ script_helper=false
  "hostname": ""
+ (( i++ ))
}
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ false == true ]]

+ (( i < count ))
+ (( i++ ))
object-group network Wakanda-Core
+ (( i < count ))
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo
 description National Core Routing Zone
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i++ ))
 network-object host 192.168.1.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ [[ export == \h\e\l\p ]]
+ (( i < count ))
+ [[ -z '' ]]
+ search_terms=()
 network-object host 10.0.2.3
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ declare -a search_terms
+ search_pattern=198.51.100.75
 network-object 10.0.0.0 255.255.255.0
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
++ dirname -- ./scripts/network-extract.shell
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ IFS==
+ local count=1
+ read -r key value
+ (( i = 0 ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ basename reports/192.168.0.100/cisco/campus-sw-access01
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ basename reports/10.10.10.10/cisco/campus-sw-access01
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ dirname reports/10.0.0.1/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ print '{
+ [[ logger == \d\e\b\u\g ]]
  "vendor": "cisco",
+ return 0
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ false == true ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ [[ true == true ]]
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
++ export divisor=--MTc0ODkxMjY5MDg2MTA3NDAwMAo--
+ [[ verbose =~ ^(search|s)$ ]]
++ divisor=--MTc0ODkxMjY5MDg2MTA3NDAwMAo--
 host 10.0.2.3
 description Secure outbound concentrator'
+ newline
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local count=1
  "domain": "",
+ (( i = 0 ))
  "hostname": ""
}
+ (( i < count ))

+ echo
object-group network Wakanda-Core
 description National Core Routing Zone
+ (( i++ ))
 network-object host 192.168.1.10
+ (( i < count ))
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ [[ true == true ]]

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
 network-object host 192.168.1.10
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console ]]
+ message 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console ]]

object network Panther-Gateway
 host 10.0.2.3
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ case "${target_file}" in
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
 description Secure outbound concentrator'
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--perimeter-fw1.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/dmz-fw2-backup.cfg'
+ [[ verbose == \d\e\b\u\g ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ serialize_objects
+ export console_output=false
+ source ./scripts/devops-helpers.shell
+ sed '1{/^[[:space:]]*$/d;}'
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
+ read -r key value
++ tr -d '\r'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local object_path=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local search_pattern
+ script_filename=network-extract
+ local SCRIPT_DIR=./scripts
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --verbose
+ local script_filename=cisco-configs.awk
+ touch logs/console/network-extract.console
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local verbose=true
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ result=0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ IFS=' 	
+ [[ 0 -ne 0 ]]
'
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console ]]
+ message 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/172.18.1.20/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local object_path=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ local parent_dir=reports/10.0.0.1/misc
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ alias network-configs--helper=network_configs__helper
++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local search_pattern
+ [[ -z true ]]
++ grep -v '^\s*$'
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ export console_output=false
+ newline
++ grep -v '^#'
+ case "${target_platform}" in
+ local count=1
+ awk -v divisor=--MTc0ODkxMjY5MDIwNzU3MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ (( i = 0 ))
                  }
+ (( i < count ))
                  /^[[:space:]]*$/ { next }
+ echo
+ print_file reports/172.18.1.20/misc/.objects/fw1.list
+ (( i++ ))
                  /^{$/ { in_json_header = 1; next }
+ (( i < count ))
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ [[ -n reports/172.18.1.20/misc/.objects/fw1.list ]]
                  /^[^[:space:]]/ {
++ which awk
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local target_file=reports/172.18.1.20/misc/.objects/fw1.list
                    blk = $0;
+ [[ -f reports/172.18.1.20/misc/.objects/fw1.list ]]
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
+ case "${target_platform}" in
                  }
+ case "${target_file}" in
+ cat reports/172.18.1.20/misc/.objects/fw1.list
+ awk -v divisor=--MTc0ODkxMjY5MDIyMjg2ODAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    if (in_json_header == 1) {
                  }
                      in_json_header = 0;
                ' reports/192.168.2.12/cisco/branch-isr-02.cfg
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/branch-isr-02.cfg
++ basename reports/10.0.0.1/misc/switch1
++ echo reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ tr -d '\r'
+ newline 2
++ echo -e --export
++ cut -d/ -f2
+ cat -n
++ grep -v '^\s*$'
+ local parent_dir=reports/203.0.113.25/cisco
+ local count=2
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ (( i < count ))
+ result=0
+ exit 0
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 198.51.100.75
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QEhSgW7FJt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QEhSgW7FJt
+ [[ 7 -eq 0 ]]
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.5jdwvji2cd/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ false == true ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console --export --verbose
+ newline
+ local count=1
+ oIFS=' 	
+ (( i = 0 ))
'
+ (( i < count ))
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ read -r key value
+ (( i < count ))
++ grep -v '^#'
+ grep -F 192.168.2.12
+ newline
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ local count=1
+ (( i = 0 ))
+ local parent_dir=reports/192.168.2.12/fortinet
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ message 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ -n Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ [[ verbose =~ ^(console|o)$ ]]
+ echo -e 'Exported objects from: reports/10.10.10.10/cisco/dmz-fw2-backup.cfg'
+ message 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ -n Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ false == true ]]
+ local 'message=Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(export|r)$ ]]
+ echo -e 'Exported objects from: reports/192.168.1.11/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ serialize_objects
++ basename reports/203.0.113.25/cisco/dmz-fw2-backup
++ echo reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ sed '/^[[:space:]]*$/d'
+ [[ verbose =~ ^(platform|p)$ ]]
+ serialize_objects
+ [[ true == true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local object_path=reports/10.0.0.1/misc/.objects/switch1.list
+ local first_search_entry=203.0.113.25
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local search_pattern
+ newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=1
+ local verbose=true
+ (( i = 0 ))
++ cut -d/ -f2
+ (( i < count ))
+ IFS=' 	
+ search_pattern=192.168.0.100
'
+ echo
+ local last_search_entry=203.0.113.25
+ mkdir -p reports/192.168.0.100/cisco/.objects
+ (( i++ ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ (( i < count ))
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ return 0
+ [[ -n Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
+ local 'message=Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ echo -e 'Exported objects from: reports/192.168.0.1/cisco/campus-sw-access01.cfg'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ] ]]
+ serialize_objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ -z '' ]]
+ local count=1
+ [[ true == true ]]
+ ((  count == 0  ))
+ debug=false
+ [[ -z '' ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ sed '/^[[:space:]]*$/d'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ dry_run=false
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ newline
+ [[ -z true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console ]]
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console ]]
+ export console_output=false
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ export =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ echo
+ script_helper=false
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ [[ false == true ]]
+ (( i++ ))
+ [[ export =~ ^(console|o)$ ]]
++ basename reports/192.168.2.12/fortinet/fg-branch-vpn-01
+ (( i < count ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list != *,* ]]
+ [[ -z cisco ]]
+ mapfile -t search_terms
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
++ alias network-extract--helper=network_extract__helper
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ -z true ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list != *,* ]]
+ [[ export =~ ^(export|r)$ ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=192.168.2.12
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ true == true ]]
+ alias serialize-object=serialize_objects
+ local object_path=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ local export_objects=true
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ local search_pattern
+ [[ export =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ] ]]
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ output_dir=reports/192.168.1.10/misc
+ [[ export =~ ^(platform|p)$ ]]
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ export =~ ^(search|s)$ ]]
+ result=0
+ [[ export == \h\e\l\p ]]
+ newline
+ [[ 0 -ne 0 ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ local count=1
+ [[ export == \v\e\r\b\o\s\e ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ (( i = 0 ))
+ for xitem in "${@}"
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ output_dir=reports/172.16.1.6/misc
+ [[ ! -d reports/172.16.1.6/misc ]]
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/branch-isr-02.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
++ echo reports/10.0.0.1/misc/switch1.conf
+ ((  count == 0  ))
+ local count=1
+ cat -n
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ read -r key value
+ [[ false == true ]]
+ [[ true == true ]]
+ search_pattern=10.10.10.10
+ message 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/10.0.2.3/misc/fw3.cfg ]]
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ local 'message=Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.0.2.3/misc/fw3.cfg'
+ serialize_objects
++ IFS=,
++ cut -d/ -f2
++ echo 192.168.1.10
++ tr -d '\r'
+ result=0
+ alias parse-cisco=main
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ local search_pattern
+ message 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ echo -e 'Serialized objects to: reports/192.168.2.12/cisco/.objects/branch-isr-02.list'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ newline
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local count=1
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ (( i = 0 ))
+ (( i < count ))
+ declare -a execute
+ echo
+ (( i++ ))
+ local parent_dir=reports/192.168.1.11/fortinet
+ (( i < count ))
+ newline
+ print_file reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ true == true ]]
+ [[ -n reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -f reports/198.51.100.75/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/branch-isr-02.list
+ [[ -z x ]]
+ local parent_dir=reports/10.10.10.10/cisco
+ export logs_location=logs
+ local count=1
+ logs_location=logs
+ mkdir -p logs/console
++ grep -v '^\s*$'
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ local parent_dir=reports/192.168.0.1/cisco
+ [[ search =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ search =~ ^(export|r)$ ]]
+ [[ true == true ]]
++ echo reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ [[ search == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--fw1.cfg.console
+ IFS==
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console ]]
+ read -r key value
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console ]]
+ cat -n
++ dirname reports/10.0.2.3/misc/fw3.cfg
+ case "${target_platform}" in
++ grep -v '^#'
+ print_file reports/192.168.2.12/cisco/.objects/branch-isr-02.list
+ awk -v divisor=--MTc0ODkxMjY5MDI2OTcwNDAwMAo-- '
++ cut -d/ -f2
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ [[ -n reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
++ grep -v '^\s*$'
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ local target_file=reports/192.168.2.12/cisco/.objects/branch-isr-02.list
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ -f reports/192.168.2.12/cisco/.objects/branch-isr-02.list ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ case "${target_file}" in
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ cat reports/192.168.2.12/cisco/.objects/branch-isr-02.list
++ echo -e --verbose
++ basename reports/192.168.0.1/cisco/campus-sw-access01
++ basename reports/192.168.1.11/fortinet/fg-campus-core
++ basename reports/10.10.10.10/cisco/dmz-fw2-backup
++ grep -v '^#'
++ echo reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/misc/fw3.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
++ cut -d/ -f2
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z '' ]]
+ script_helper=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ false == true ]]
+ echo
+ case "${target_file}" in
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]]
+ grep -F 172.16.1.6
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list != *,* ]]
+ case "${target_file}" in
+ mapfile -t search_terms
+ message 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
++ export targets_location=targets
+ [[ -n Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
++ targets_location=targets
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ local 'message=Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
++ targets_logfile=logs/jobs/targets.jobs
+ [[ cfg == \c\f\g ]]
+ echo -e 'Serialized objects to: reports/172.18.1.20/cisco/.objects/branch-isr-02.list'
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ return 0
+ (( i++ ))
+ (( i < count ))
+ newline
+ [[ true == true ]]
+ local count=1
+ newline
++ which awk
+ [[ -z '' ]]
+ (( i < count ))
+ local count=1
+ export console_output=false
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--access-sw1-west.cfg.console
+ (( i = 0 ))
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ cat -n
++ command -v -- ./scripts/network-extract.shell
+ cat -n
+ debug=false
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ (( i < count ))
+ console_output=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console ]]
+ echo
+ [[ -z true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ sed '/^[[:space:]]*$/d'
+ [[ -z '' ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ echo
+ case "${target_file}" in
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ (( i++ ))
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
+ dry_run=false
+ script_helper=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ false == true ]]
+ export console_output=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ search_terms=()
++ command -v -- ./scripts/network-extract.shell
+ declare -a search_terms
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ print_file reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ return 0
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ [[ -n reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ local target_file=reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ [[ -f reports/172.18.1.20/cisco/.objects/branch-isr-02.list ]]
+ case "${target_file}" in
+ newline
+ cat reports/172.18.1.20/cisco/.objects/branch-isr-02.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z true ]]
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ mapfile -t search_terms
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ true == true ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list != *,* ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ mapfile -t search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console ]]
+ (( i++ ))
+ newline
+ (( i < count ))
+ case "${target_file}" in
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local 'indent=            '
+ [[ true == true ]]
++ tr -d '\r'
+ cat -n
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local count=1
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ newline
+++ date +%s%N
+ local count=1
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z fortinet ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ newline
+ local awk_bin=/usr/bin/awk
+ local count=1
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ (( i = 0 ))
++ grep -v '^\s*$'
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo
+++ base64
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console ]]
+ newline
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ case "${target_file}" in
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZKSP2qrnQO/network-extract--dmz-fw2-backup.cfg.console
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ echo
+ local count=1
+ (( i++ ))
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
+ message 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+++ tr -dc a-zA-Z0-9
++ tr -d '\r'
++ tr -d '\r'
+ [[ -n Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ local 'message=Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ echo -e 'Serialized objects to: reports/172.16.1.6/fortinet/.objects/fg-campus-core.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ return 0
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ newline
+ return 0
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console ]]
+ output_dir=reports/198.51.100.75/cisco
+ case "${target_file}" in
+ case "${target_file}" in
+ (( i++ ))
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ grep -v '^#'
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local SCRIPT_DIR=./scripts
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local script_filename=cisco-configs.awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ exit 0
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRHA76kA8B/network-extract--fw3.cfg.console
+ case "${target_file}" in
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SVD8LUFSNt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SVD8LUFSNt
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ local 'indent=            '
+ local count=1
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console ]]
+ print_file reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ case "${target_file}" in
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--access-sw1-west.cfg.console
+ newline
+ local count=1
+ local first_search_entry=10.10.10.10
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ -n reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ echo
+ local last_search_entry=10.10.10.10
++ export divisor=--MTc0ODkxMjY5MDkwMzY2MTAwMAo--
+ (( i < count ))
+ (( i++ ))
+ local target_file=reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ (( i < count ))
++ divisor=--MTc0ODkxMjY5MDkwMzY2MTAwMAo--
+ [[ -f reports/172.16.1.6/fortinet/.objects/fg-campus-core.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local first_search_entry=192.168.2.12
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat reports/172.16.1.6/fortinet/.objects/fg-campus-core.list
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local last_search_entry=192.168.2.12
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ] ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw1.cfg ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-configs--ips.list ]'
+ source ./scripts/devops-helpers.shell
+ message '                .cache/resources/misc/fw3.cfg'
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
++ command -v -- ./scripts/network-extract.shell
++ which awk
+ local count=1
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ [[ -n '' ]]
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ __DEVOPS_HELPERS_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat -n
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
++ which awk
++ alias parse-listings--helper=parse_listings__helper
+ local count=1
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw1.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ serialize_objects
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ alias network-configs--helper=network_configs__helper
+ newline
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local count=1
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWORY5JTnL ]]
+ [[ config =~ ^(config|c)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tWORY5JTnL
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ local target_config=.cache/resources/misc/fw1.cfg
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ config =~ ^(console|o)$ ]]
+ alias serialize-object=serialize_objects
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(config|c)$ ]]
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ local first_search_entry=192.168.0.1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local last_search_entry=192.168.0.1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ config == \h\e\l\p ]]
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local first_search_entry=10.0.0.1
+ [[ config == \d\e\b\u\g ]]
+ local last_search_entry=10.0.0.1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
++ dirname -- ./scripts/network-extract.shell
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ alias parse-cisco=main
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ ((  count == 0  ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4JGasrUOej/network-extract--branch-isr-02.cfg.console
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ [[ -z x ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ export logs_location=logs
+ logs_location=logs
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ mkdir -p logs/console
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ newline
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local count=1
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ return 0
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -z fortinet ]]
+ result=0
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ exit 0
+ [[ true == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yvZ9wRRUGt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.yvZ9wRRUGt
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console ]]
+ newline
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console ]]
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console ]]
+ local count=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1xIYBfhwF ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1xIYBfhwF
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ case "${target_file}" in
+ local SCRIPT_DIR=./scripts
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local script_filename=cisco-configs.awk
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ local parent_dir=reports/192.168.1.10/misc
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ IFS=,
+ [[ verbose == \d\e\b\u\g ]]
++ IFS=,
+ local count=1
++ echo 172.16.1.6
++ echo 192.168.1.10
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ declare -a execute
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ export console_output=false
+ console_output=false
+ [[ -z true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ echo
#model="FortiGate-200F"
+ [[ -z '' ]]

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
+ output_dir=reports/192.168.2.12/misc

+ [[ ! -d reports/192.168.2.12/misc ]]
config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
++ basename reports/192.168.1.10/misc/fw1
++ which awk
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
++ which awk
++ which awk
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
  set comment "Guest WiFi node"
 next
+ result=0
end
+ exit 0

config firewall address
 edit "Wanda-Field"
+ (( i++ ))
  set subnet 192.168.100.100 255.255.255.255
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gbmaVf7veG ]]
  set comment "Wanda’s chaos relay"
 next
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gbmaVf7veG
end ]]
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ true == true ]]
+ touch logs/console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console

+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console ]]
object-group network Wakanda-Core
 description National Core Routing Zone
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ result=0
+ local 'prompt_message=Enter configuration file to be parsed: '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--fg-campus-core.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ result=0
+ script_helper=false
object-group network Wakanda-Core
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
+ exit 0
++ command -v -- ./scripts/network-extract.shell
+ [[ false == true ]]
 network-object host 10.0.2.3
+ [[ 7 -eq 0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.33PYjN7VRG ]]
+ [[ -z fortinet ]]
+ result=0
+ exit 0
 network-object 10.0.0.0 255.255.255.0 ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVubbUQSB6 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVubbUQSB6
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.33PYjN7VRG
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ -n reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ local object_path=reports/192.168.1.10/misc/.objects/fw1.list
+ output_dir=reports/198.51.100.75/fortinet
+ local target_file=reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ local search_pattern
+ [[ -f reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ cat reports/192.168.100.100/cisco/.objects/dmz-fw2-backup.list
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console --export --verbose
+ search_terms=()
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local awk_bin=/usr/bin/awk
+ oIFS=' 	
'
+ print '{
  "vendor": "fortinet",
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ for xitem in "${@}"
  "model": "FortiGate-200F",
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ IFS==
+ read -r key value
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]

#hostname="fg-campus-core"
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
#model="FortiGate-200F"
+ [[ conf == \c\o\n\f ]]

config system interface
+ [[ cfg == \c\f\g ]]
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ final_output=reports/10.0.0.1/misc/switch3.conf
 next
end
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg

+ extract_location=reports/10.0.0.1/misc/switch3.conf
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
  set comment "Guest WiFi node"
 next
end

config firewall address
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
+ print '{
  set ip 192.168.100.100 255.255.255.0
  "vendor": "cisco",
  set alias "Wireless VLAN"
  "model": "",
 next
  "version": "",
end
  "domain": "",

  "hostname": ""
config firewall address
}
 edit "Titan-WLAN-Host"

  set subnet 192.168.100.100 255.255.255.255
object-group network Wakanda-Core
  set comment "Guest WiFi node"
 description National Core Routing Zone
 next
 network-object host 192.168.1.10
end
 network-object host 10.0.2.3

 network-object 10.0.0.0 255.255.255.0'
config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
+ cat -n
 next
end ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ echo -en '{
  "vendor": "fortinet",
}
++ dirname -- ./scripts/network-extract.shell
  "model": "FortiGate-200F",

object-group network Wakanda-Core
  "version": "",
  "domain": ""
 description National Core Routing Zone
  "hostname": "fg-campus-core"
 network-object host 192.168.1.10
}
 network-object host 10.0.2.3

 network-object 10.0.0.0 255.255.255.0 ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
+ echo -en '{
  "vendor": "cisco",
 next
  "model": "",
end
  "version": "",

  "domain": "",
config firewall address
  "hostname": ""
 edit "Titan-WLAN-Host"
}
  set subnet 192.168.100.100 255.255.255.255

  set comment "Guest WiFi node"
object-group network Wakanda-Core
 description National Core Routing Zone
 next
 network-object host 192.168.1.10
end
 network-object host 10.0.2.3

 network-object 10.0.0.0 255.255.255.0'
config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ IFS=,
++ command -v -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
++ echo 198.51.100.75
++ printf '%*s' 12 ''
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'indent=            '
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
+ declare -a execute
+ output_dir=reports/192.168.2.12/fortinet
+ [[ ! -d reports/192.168.2.12/fortinet ]]
++ printf '%*s' 12 ''
+ [[ 7 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.gmcghrdpod/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ newline
+ newline
++ echo reports/192.168.1.10/misc/fw1.cfg
+ local count=1
+ local count=1
++ dirname reports/10.0.0.1/misc/switch3.conf
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console --export --verbose
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ oIFS=' 	
'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'indent=            '
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ result=0
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfu7AuDIwb ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pfu7AuDIwb
+ newline
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message '                .cache/resources/misc/switch3.conf'
++ cut -d/ -f2
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=                .cache/resources/misc/switch3.conf'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e '                .cache/resources/misc/switch3.conf'
+ newline
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ local count=1
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local SCRIPT_DIR=./scripts
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ message '                .cache/resources/misc/switch1.conf'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ tr -d '\r'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ extract =~ ^(export|r)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ output_dir=reports/192.168.0.1/fortinet
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ newline 2
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ local object_path=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local object_path=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ extract =~ ^(platform|p)$ ]]
+ local search_pattern
+ [[ extract =~ ^(search|s)$ ]]
+ newline 2
++ which awk
+ local count=2
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
+ (( i = 0 ))
+ local count=2
+ (( i < count ))
+ (( i = 0 ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ echo
+ output_dir=reports/10.0.0.1/misc
+ [[ extract == \d\r\y\-\r\u\n ]]
+ echo
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ (( i++ ))
+ [[ ! -d reports/10.0.0.1/misc ]]
+ local first_search_entry=203.0.113.25
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ echo
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ newline
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ local count=1
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ (( i < count ))
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ local SCRIPT_DIR=./scripts
+ cat -n reports/192.168.1.10/misc/fw3.cfg
+ newline
+ local script_filename=fortinet-configs.awk
+ local count=1
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ search_pattern=192.168.1.10
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ mkdir -p reports/192.168.1.10/misc/.objects
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local search_pattern
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
++ command -v -- ./scripts/network-extract.shell
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDIxMjQzNzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ which awk
++ echo -e --platform=cisco
++ dirname -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ printf '%*s' 12 ''
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'indent=            '
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ newline
+ local count=1
+ local last_search_entry=203.0.113.25
+ (( i = 0 ))
+ [[ search =~ ^(config|c)$ ]]
+ (( i < count ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search =~ ^(config|c)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ local first_search_entry=203.0.113.25
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ search =~ ^(extract|x)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ case "${target_file}" in
+ [[ search =~ ^(export|r)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--dmz-fw2-backup.cfg.console
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(extract|x)$ ]]
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search =~ ^(search|s)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ] ]]
+ [[ search == \h\e\l\p ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'extracted_configuration={
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "vendor": "cisco",
  "model": "",
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "version": "",
  "domain": "",
+ newline
  "hostname": ""
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ local 'extracted_configuration={
+ local count=1
  "vendor": "cisco",
}

  "model": "",
interface Vlan2
  "version": "",
+ (( i = 0 ))
  "domain": "",
+ newline
++ which awk
++ IFS=,
 ip address 172.16.1.6 255.255.255.0'
  "hostname": ""
++ echo 192.168.2.12
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ result=0
+ result=0
+ [[ -n {
+ [[ -n {
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "version": "",
  "model": "",
  "domain": "",
+ local count=1
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
  "version": "",
  "domain": "",
  "hostname": ""
  "hostname": ""
+ [[ search == \h\e\l\p ]]
}
}


interface Vlan2
interface Vlan20
 ip address 172.16.1.6 255.255.255.0 ]]
 ip address 192.168.1.10 255.255.255.0 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ declare -a execute
+ [[ false == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ ((  count == 0  ))
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ local script_filename=fortinet-configs.awk
+ [[ search == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ cfg == \c\f\g ]]
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ search == \v\e\r\b\o\s\e ]]
+ message 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ message 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Exported objects from: reports/192.168.1.10/misc/fw3.cfg ]]
+ [[ -n Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ local 'message=Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ local 'message=Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/192.168.100.100/fortinet/fg-campus-core.cfg'
+ for xitem in "${@}"
+ serialize_objects
+ serialize_objects
+ IFS==
+ newline
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]
+ case "${target_platform}" in
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ local count=1
+ awk -v divisor=--MTc0ODkxMjY5MDI0NDM3MDAwMAo-- '
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ (( i < count ))
                  }
+ print '{
+ [[ platform =~ ^(config|c)$ ]]
+ echo
                  /^[[:space:]]*$/ { next }
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ] ]]
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
                  /^{$/ { in_json_header = 1; next }
+ [[ platform =~ ^(console|o)$ ]]
  "model": "",
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
  "version": "",
+ [[ platform =~ ^(export|r)$ ]]
+ print '{
                      next;
  "vendor": "cisco",
  "model": "",
                    }
  "domain": "",
  "version": "",
  "domain": "",
  "hostname": ""
  "hostname": ""
++ which awk
}
}
                  }


interface Vlan20
++ IFS=,
 ip address 192.168.1.10 255.255.255.0'
interface Vlan2
                  (in_json_header == 1) { next }
 ip address 172.16.1.6 255.255.255.0'
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
++ echo 198.51.100.75
                    blk = blk divisor " " $0;
+ [[ -n {
  "vendor": "cisco",
  "model": "",
                  }
  "version": "",
                  END {
  "domain": "",
                    if (blk != "" && !seen[blk]++) print blk "\n";
  "hostname": ""
                  }
}
                ' reports/192.168.1.10/misc/fw1.cfg

+ [[ -n {
+ grep -F 10.10.10.10
interface Vlan20
  "vendor": "cisco",
 ip address 192.168.1.10 255.255.255.0 ]]
  "model": "",
  "version": "",
++ which awk
  "domain": "",
  "hostname": ""
+ echo -en '{
  "vendor": "cisco",
}
  "model": "",

++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
  "version": "",
interface Vlan2
  "domain": "",
 ip address 172.16.1.6 255.255.255.0 ]]
  "hostname": ""
}

interface Vlan20
+ echo -en '{
 ip address 192.168.1.10 255.255.255.0'
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ declare -a execute
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local SCRIPT_DIR=./scripts
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ grep -F 192.168.1.10
+ [[ platform =~ ^(logger|l)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ IFS==
++ echo reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ read -r key value
+ result=0
++ which awk
++ IFS=,
+ sed '/^[[:space:]]*$/d'
++ echo 192.168.2.12
++ cut -d/ -f2
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ which awk
++ echo reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ local parent_dir=reports/192.168.100.100/fortinet
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local parent_dir=reports/192.168.1.10/misc
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkLX5jz7co ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gkLX5jz7co
+ newline 2
+ output_dir=reports/10.10.10.10/fortinet
++ which awk
+ [[ ! -d reports/10.10.10.10/fortinet ]]
++ cut -d/ -f2
+ local count=2
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ (( i++ ))
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ local count=2
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ (( i = 0 ))
 description Outbound Internet NAT interface'
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ echo
+ (( i < count ))
+ result=0
+ echo
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i++ ))
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
+ echo
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ [[ true == true ]]
+ (( i++ ))
  "hostname": "dmz-fw2-backup"
}
+ (( i < count ))

+ [[ config =~ ^(export|r)$ ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
interface GigabitEthernet0/2
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ local awk_bin=/usr/bin/awk
++ IFS=,
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ [[ config =~ ^(search|s)$ ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
++ echo 192.168.0.1
++ basename reports/192.168.100.100/fortinet/fg-campus-core
++ basename reports/192.168.1.10/misc/fw3
++ printf '%*s' 12 ''
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ result=0
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ 0 -ne 0 ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ config == \h\e\l\p ]]
+ newline
+ [[ true == true ]]
+ [[ config == \d\e\b\u\g ]]
+ local count=1
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ (( i < count ))
+ for xitem in "${@}"
+ (( i++ ))
+ local 'indent=            '
+ declare -a execute
+ (( i < count ))
+ IFS==
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ read -r key value
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list ]]
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw1.list'
+ newline
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ echo
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
+ search_pattern=192.168.1.11
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i < count ))
+ ((  count == 0  ))
+ mkdir -p reports/192.168.1.11/fortinet/.objects
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ echo
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
++ printf '%*s' 12 ''
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ print '{
  "vendor": "cisco",
+ local count=1
  "model": "ASA",
+ (( i = 0 ))
  "version": "9.12(4)",
+ (( i < count ))
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ echo
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ local awk_bin=/usr/bin/awk
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
domain-name global.dmz.example.net

interface GigabitEthernet0/2
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
 nameif outside
+ [[ true == true ]]
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
+ echo -en '{
++ which awk
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ newline
++ IFS=,
++ echo 10.0.0.1
+ print_file reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw1.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/fw1.list
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ declare -a execute
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local target_config=.cache/resources/misc/fw3.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local object_path=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local search_pattern
+ local object_path=reports/192.168.1.10/misc/.objects/fw3.list
+ local search_pattern
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
++ printf '%*s' 12 ''
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ final_output=reports/203.0.113.25/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ local 'indent=            '
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ true == true ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ newline
+ [[ config =~ ^(search|s)$ ]]
+ local count=1
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(export|r)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ echo
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i++ ))
+ [[ config == \h\e\l\p ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ cat -n
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ which awk
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ newline
+ [[ config == \d\e\b\u\g ]]
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ [[ logger =~ ^(search|s)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ (( i < count ))
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ echo
+ (( i = 0 ))
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ false == true ]]
+ IFS==
+ newline
+ [[ true == true ]]
+ read -r key value
+ local count=1
+ for xitem in "${@}"
+ [[ false == true ]]
+ (( i = 0 ))
+ search_pattern=192.168.0.1
+ [[ true == true ]]
+ mkdir -p reports/192.168.0.1/cisco/.objects
+ IFS==
+ message 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ message 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ [[ -n Exported objects from: reports/172.16.1.6/misc/switch3.conf ]]
+ [[ -n Exported objects from: reports/192.168.1.10/misc/switch1.conf ]]
+ read -r key value
+ local 'message=Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ echo -e 'Exported objects from: reports/172.16.1.6/misc/switch3.conf'
+ local 'message=Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ echo -e 'Exported objects from: reports/192.168.1.10/misc/switch1.conf'
+ serialize_objects
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ serialize_objects
+ sed '/^[[:space:]]*$/d'
+ newline 2
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo reports/192.168.1.10/misc/fw3.cfg
+ echo
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
++ printf '%*s' 12 ''
++ cut -d/ -f2
++ dirname reports/172.16.1.6/misc/switch3.conf
++ cut -d/ -f2
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local 'indent=            '
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ local count=1
+ [[ extract =~ ^(export|r)$ ]]
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ echo
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i++ ))
+ newline
+ [[ extract =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local count=1
+ output_dir=reports/203.0.113.25/cisco
+ (( i = 0 ))
+ return 0
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i++ ))
+ [[ -z fortinet ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ true == true ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local object_path=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
++ dirname reports/192.168.1.10/misc/switch1.conf
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console ]]
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ extract == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ IFS==
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ read -r key value
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ case "${target_file}" in
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
+ newline
+ local SCRIPT_DIR=./scripts
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ echo
+ grep -F 192.168.0.100
+ (( i++ ))
+ local script_filename=fortinet-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ output_dir=reports/203.0.113.25/misc
+ newline
+ [[ ! -d reports/203.0.113.25/misc ]]
++ echo -e --export
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "cisco",
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ search_pattern=192.168.1.10
+ local 'indent=            '
+ mkdir -p reports/192.168.1.10/misc/.objects
+ search_pattern=192.168.100.100
+ [[ true == true ]]
+ mkdir -p reports/192.168.100.100/fortinet/.objects
+ local parent_dir=reports/172.16.1.6/misc
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local parent_dir=reports/192.168.1.10/misc
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'extracted_configuration={
++ echo -e --platform=fortinet
++ which awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ result=0
  "domain": ""
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "hostname": "fg-branch-vpn-01"
++ command -v -- ./scripts/network-extract.shell
}

+ message '                .cache/resources/misc/switch3.conf'
  "model": "FortiGate-200F",
#hostname="fg-branch-vpn-01"
  "version": "",
  "domain": ""
#model="FortiGate-60F"
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
  "hostname": "fg-campus-core"
+ local 'message=                .cache/resources/misc/switch3.conf'
}
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo -e '                .cache/resources/misc/switch3.conf'


+ newline
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local count=1

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ (( i = 0 ))
config system interface
+ (( i < count ))
  set comment "Vision’s quantum channel"
+ echo
+ (( i++ ))
+ (( i < count ))
 next
end'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ command -v -- ./scripts/network-extract.shell
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+ [[ -n {
  "vendor": "cisco",
  "domain": ""
  "model": "",
  "version": "",
  "domain": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "fg-campus-core"
}

  "hostname": ""
#hostname="fg-campus-core"
}

object-group network Metropolis-Internal
#model="FortiGate-200F"

 description Core internal LAN for application clusters
+ newline
config firewall address
 edit "wan1"
 network-object host 10.0.2.3
++ basename reports/172.16.1.6/misc/switch3
 network-object 192.168.2.0 255.255.255.0
 edit "Vision-Link"
  set ip 198.51.100.75 255.255.255.0
 network-object host 192.168.2.12 ]]
+ local count=1
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
  set alias "Branch ISP"
 next
 next
+ (( i = 0 ))
+ echo -en '{
end
+ (( i < count ))
  "vendor": "cisco",
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell

+ echo
config firewall address
  "model": "",
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "version": "",
+ echo
+ (( i++ ))
 next
  "domain": "",
  "hostname": ""
}
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]

+ (( i < count ))
end'
+ (( i < count ))
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
++ basename reports/192.168.1.10/misc/switch1
+ sed '1{/^[[:space:]]*$/d;}'
+ case "${target_platform}" in
+ result=0
+ [[ -n {
+ awk -v divisor=--MTc0ODkxMjY5MDI0MDYyOTAwMAo-- '
                    BEGIN {
  "vendor": "fortinet",
+ [[ false == true ]]
  "model": "FortiGate-60F",
                      blk = "";
+ [[ extract =~ ^(console|o)$ ]]
  "version": "v7.2.5.F",
+ [[ true == true ]]
                      in_json_header = 0;
+ [[ extract =~ ^(export|r)$ ]]
                    }

+ [[ 0 -ne 0 ]]
                    # Skip blank lines
  "domain": ""
                    /^[[:space:]]*$/ { next }
  "hostname": "fg-branch-vpn-01"

                    # Skip JSON preamble
}

+ [[ extract =~ ^(extract|x)$ ]]
+ [[ export =~ ^(config|c)$ ]]
                    /^{$/            { in_json_header = 1; next }
#hostname="fg-branch-vpn-01"
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
#model="FortiGate-60F"

#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ message 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
                    # Skip platform metadata
+ [[ -n Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]

                    /^#(hostname|model|config-version)=/ { next }
+ local 'message=Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(logger|l)$ ]]
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf

config system interface
                    # Start of a new block
 edit "wan1"
                    /^config / {
+ echo -e 'Exported objects from: reports/198.51.100.75/cisco/dmz-fw2-backup.cfg'
                      if (blk != "") print blk;
  set ip 198.51.100.75 255.255.255.0
+ [[ extract =~ ^(platform|p)$ ]]
  set alias "Branch ISP"
                      blk = $0;
+ [[ extract =~ ^(search|s)$ ]]
+ serialize_objects
                      next;
+ [[ export =~ ^(console|o)$ ]]
                    }
 next

                    # Add edit line to current block
end
                    /^ edit / {
+ [[ extract == \h\e\l\p ]]
+ [[ export =~ ^(export|r)$ ]]
                      blk = blk divisor " " $0;
+ [[ extract == \d\e\b\u\g ]]
+ [[ true == true ]]

                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
config firewall address
++ dirname -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end ]]
+ print '{
  "vendor": "fortinet",
+ case "${target_file}" in
  "model": "FortiGate-200F",
+ [[ extract == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw1.cfg.console
  "version": "",
+ [[ extract == \v\e\r\b\o\s\e ]]
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ for xitem in "${@}"
+ local export_objects=true
config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
+ [[ export =~ ^(extract|x)$ ]]
  set comment "Vision’s quantum channel"
+ IFS==
 next
+ read -r key value
end'
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ export =~ ^(search|s)$ ]]
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ [[ export == \h\e\l\p ]]
}

+ [[ export == \d\e\b\u\g ]]
#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ export == \d\r\y\-\r\u\n ]]
config firewall address
+ [[ export == \v\e\r\b\o\s\e ]]
 edit "Vision-Link"
+ for xitem in "${@}"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
+ IFS==
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
end ]]
+ read -r key value
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
  "domain": ""
  "hostname": "fg-campus-core"
}

+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
#hostname="fg-campus-core"
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
#model="FortiGate-200F"
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ local object_path=reports/172.16.1.6/misc/.objects/switch3.list
+ local search_pattern
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(export|r)$ ]]
+ case "${target_platform}" in
+ [[ platform =~ ^(extract|x)$ ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform =~ ^(logger|l)$ ]]
+ grep -F 192.168.1.11
+ awk -v divisor=--MTc0ODkxMjY5MDMxMjA2NjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ platform =~ ^(platform|p)$ ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ local target_platform=fortinet
                  }
                ' reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ print '{
+ [[ platform == \d\e\b\u\g ]]
  "vendor": "fortinet",
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local object_path=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ platform == \v\e\r\b\o\s\e ]]
  "model": "FortiGate-60F",
+ for xitem in "${@}"
  "version": "v7.2.5.F",
  "domain": ""
+ local search_pattern
+ IFS==
  "hostname": "fg-branch-vpn-01"
+ read -r key value
}

+ local 'extracted_configuration={
  "vendor": "fortinet",
+ case "${target_platform}" in
  "model": "FortiGate-60F",
#hostname="fg-branch-vpn-01"
  "version": "v7.2.5.F",
#model="FortiGate-60F"
  "domain": ""
#config-version=FGT_60F-v7.2.5.F-build1517-230421
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"

#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ awk -v divisor=--MTc0ODkxMjY5MDM5NTYzNDAwMAo-- '
config system interface
                  BEGIN {
 edit "wan1"
                    in_json_header = 0;
  set ip 198.51.100.75 255.255.255.0
                    blk = "";
  set alias "Branch ISP"
                  }
 next
                  /^[[:space:]]*$/ { next }
end
                  /^{$/ { in_json_header = 1; next }

                  /^}$/ {
config firewall address
                    if (in_json_header == 1) {
 edit "Branch-Public"
                      in_json_header = 0;
  set subnet 198.51.100.75 255.255.255.255
                      next;
  set comment "Branch NAT"
                    }
 next
                  }
end'
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
+ case "${target_platform}" in
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/fw3.cfg
+ [[ -n {
  "vendor": "fortinet",
++ IFS=,
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ echo 10.10.10.10
+ awk -v divisor=--MTc0ODkxMjY5MDMyNDQxODAwMAo-- '
#config-version=FGT_60F-v7.2.5.F-build1517-230421
                    BEGIN {

                      blk = "";
config system interface
                      in_json_header = 0;
 edit "wan1"
                    }
  set ip 198.51.100.75 255.255.255.0

  set alias "Branch ISP"
                    # Skip blank lines
 next
                    /^[[:space:]]*$/ { next }
end


                    # Skip JSON preamble
config firewall address
                    /^{$/            { in_json_header = 1; next }
 edit "Branch-Public"
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
  set subnet 198.51.100.75 255.255.255.255
                    (in_json_header == 1) { next }
  set comment "Branch NAT"

 next
                    # Skip platform metadata
end ]]
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;

                      blk = $0;
+ echo -en '{
                      next;
  "vendor": "fortinet",
                    }
  "model": "FortiGate-60F",

  "version": "v7.2.5.F",
                    # Add edit line to current block
  "domain": ""
+ newline 2
                    /^ edit / {
  "hostname": "fg-branch-vpn-01"
                      blk = blk divisor " " $0;
                      next;
}
config firewall address

#hostname="fg-branch-vpn-01"
                    }
#model="FortiGate-60F"
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
#config-version=FGT_60F-v7.2.5.F-build1517-230421

  set comment "Backup uplink for Milano crew"
 next

                    # Add next to block
config system interface
                    /^ next$/ {
 edit "wan1"
                      blk = blk divisor " " $0;
  set ip 198.51.100.75 255.255.255.0
                      next;
  set alias "Branch ISP"
                    }
 next
end'

end
                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;

                      if (blk != "" && !seen[blk]++) print blk;
config firewall address
                      blk = "";
 edit "Branch-Public"
                      next;
  set subnet 198.51.100.75 255.255.255.255
                    }

  set comment "Branch NAT"
                    # Accumulate middle lines
 next
                    {
end'
                      blk = blk divisor " " $0;
+ local count=2
                    }

                    END {
+ (( i = 0 ))
                      # No need for final print — all blocks end with end
+ (( i < count ))
                    }
                  ' reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ grep -F 192.168.1.10
+ grep -F 192.168.100.100
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ echo
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

+ (( i++ ))
++ echo -e --platform=cisco
+ (( i < count ))
+ echo
++ echo reports/172.16.1.6/misc/switch3.conf
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
+ (( i++ ))
  set comment "Backup uplink for Milano crew"
+ (( i < count ))
 next
end ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ local parent_dir=reports/198.51.100.75/cisco
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
+ declare -a execute
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
+ local SCRIPT_DIR=./scripts
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline 2
+ (( i++ ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ local script_filename=cisco-configs.awk
}

+ local script_filepath=./scripts/extract/cisco-configs.awk
interface Vlan1
 ip address 10.0.0.1 255.255.255.0
+ local count=2

+ (( i = 0 ))
object-group network Spider-Net
+ (( i < count ))
 description Web access switches
 network-object host 10.0.0.1
+ echo
 network-object 192.168.12.0 255.255.255.0'
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ result=0
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ echo
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ cut -d/ -f2
+ (( i++ ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
  "version": "",
+ (( i < count ))
  "domain": "",
+ result=0
  "hostname": ""
+ exit 0
}

interface Vlan1
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OruiKDQXU9 ]]
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
+ local SCRIPT_DIR=./scripts
 network-object host 10.0.0.1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OruiKDQXU9
 network-object 192.168.12.0 255.255.255.0 ]]
+ local script_filename=cisco-configs.awk
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ sed '/^[[:space:]]*$/d'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ sed '/^[[:space:]]*$/d'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ print '{
  "vendor": "fortinet",
++ echo reports/192.168.1.10/misc/switch1.conf
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ echo -e --verbose
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
++ which awk
  set comment "Backup uplink for Milano crew"
 next
end'
++ which awk
++ basename reports/198.51.100.75/cisco/dmz-fw2-backup
++ cut -d/ -f2
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "",
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
  "domain": "",
  "hostname": ""
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/campus-sw-access01.list'
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

+ newline
object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
+ local count=1
 network-object 192.168.12.0 255.255.255.0 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo -en '{
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ (( i++ ))
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ grep -F 192.168.0.1
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ platform =~ ^(config|c)$ ]]
+ search_pattern=172.16.1.6
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ result=0
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ 0 -ne 0 ]]
+ [[ platform =~ ^(export|r)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ result=0
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 0 -ne 0 ]]
+ mkdir -p reports/172.16.1.6/misc/.objects
+ [[ platform =~ ^(platform|p)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ local count=1
+ IFS==
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ (( i = 0 ))
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list ]]
+ message 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ read -r key value
+ (( i < count ))
+ [[ -n Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/fw3.list'
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ local 'message=Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
++ which awk
+ newline
+ echo -e 'Serialized objects to: reports/192.168.100.100/fortinet/.objects/fg-campus-core.list'
+ local count=1
+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ false == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ message 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/192.168.2.12/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ local object_path=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ echo -e 'Exported objects from: reports/192.168.2.12/misc/fw1.cfg'
+ local search_pattern
+ serialize_objects
+ newline
+ local count=1
+ (( i = 0 ))
+ search_pattern=192.168.1.10
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ mkdir -p reports/192.168.1.10/misc/.objects
+ [[ logger =~ ^(console|o)$ ]]
+ print_file reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ logger =~ ^(export|r)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ message 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ -n reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ [[ -n Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ local target_file=reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ logger =~ ^(platform|p)$ ]]
+ local 'message=Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ echo -e 'Exported objects from: reports/192.168.2.12/fortinet/fg-campus-core.cfg'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -f reports/10.10.10.10/cisco/.objects/campus-sw-access01.list ]]
+ [[ logger == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ cat reports/10.10.10.10/cisco/.objects/campus-sw-access01.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ serialize_objects
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file reports/192.168.1.10/misc/.objects/fw3.list
+ print_file reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/192.168.1.10/misc/.objects/fw3.list ]]
+ local target_file=reports/192.168.1.10/misc/.objects/fw3.list
+ [[ -f reports/192.168.1.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ newline 2
+ [[ -n reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ cat reports/192.168.1.10/misc/.objects/fw3.list
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_file=reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.100.100/fortinet/.objects/fg-campus-core.list ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ printf '%*s' 12 ''
+ case "${target_file}" in
+ cat reports/192.168.100.100/fortinet/.objects/fg-campus-core.list
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ IFS=,
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo 203.0.113.25
+ [[ true == true ]]
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ cat -n
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ verbose =~ ^(platform|p)$ ]]
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ newline 2
+ declare -a execute
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ cat -n
+ [[ verbose == \d\e\b\u\g ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local count=1
+ local count=2
+ (( i = 0 ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo
+ local verbose=true
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS=' 	
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
'
+ echo
+ [[ -z '' ]]
+ debug=false
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z '' ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ -z true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ echo
+ [[ -z true ]]
+ result=0
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ echo reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i < count ))
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ -z '' ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ search_terms=()
+ declare -a search_terms
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ message 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ sed '/^[[:space:]]*$/d'
++ echo -e --export
++ cut -d/ -f2
++ which awk
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch3.conf
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ local parent_dir=reports/192.168.2.12/misc
+ local 'message=Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ local parent_dir=reports/192.168.2.12/fortinet
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ case "${target_platform}" in
+ [[ cfg == \c\f\g ]]
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ newline
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Serialized objects to: reports/192.168.1.11/fortinet/.objects/fg-campus-core.list'
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ local count=1
+ newline
+ search_pattern=192.168.2.12
+ search_pattern=10.0.0.1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console ]]
+ local count=1
+ awk -v divisor=--MTc0ODkxMjY5MDM1MjExMTAwMAo-- '
+ (( i = 0 ))
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ (( i < count ))
+ cat -n
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
                    next;
+ echo
++ IFS=,
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console ]]
                  END {
++ echo 203.0.113.25
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i++ ))
+ case "${target_file}" in
                  }
                ' reports/172.16.1.6/misc/switch3.conf
++ tr -d '\r'
+ case "${target_platform}" in
+ (( i < count ))
++ basename reports/192.168.2.12/misc/fw1
+ awk -v divisor=--MTc0ODkxMjY5MDQzNTI1NDAwMAo-- '
+ return 0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.1.10/misc/switch1.conf
+ grep -F 172.16.1.6
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
++ basename reports/192.168.2.12/fortinet/fg-campus-core
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console ]]
+ search_pattern=198.51.100.75
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ mkdir -p reports/198.51.100.75/cisco/.objects
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ false == true ]]
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ grep -v '^\s*$'
+ [[ logger =~ ^(console|o)$ ]]
+ result=0
+ declare -a execute
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ grep -F 192.168.1.10
+ message 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ export =~ ^(config|c)$ ]]
+ sed '/^[[:space:]]*$/d'
+ [[ export =~ ^(console|o)$ ]]
+ [[ export =~ ^(export|r)$ ]]
+ local export_objects=true
++ grep -v '^#'
+ [[ export =~ ^(extract|x)$ ]]
+ [[ export =~ ^(logger|l)$ ]]
+ [[ export =~ ^(platform|p)$ ]]
+ [[ export =~ ^(search|s)$ ]]
+ [[ export == \h\e\l\p ]]
+ [[ export == \d\e\b\u\g ]]
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ local search_pattern
+ mkdir -p reports/10.0.0.1/misc/.objects
+ message 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ local parent_dir=reports/10.0.2.3/misc
+ newline
+ local 'message=Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ cat -n
+ local count=1
+ search_pattern=203.0.113.25
+ print_file reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ [[ -n reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.1.11/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.11/fortinet/.objects/fg-campus-core.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ local target_config=.cache/resources/misc/fw3.cfg
+ return 0
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(export|r)$ ]]
+ echo -e 'Serialized objects to: reports/192.168.0.1/cisco/.objects/campus-sw-access01.list'
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+ [[ config =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ result=0
+ [[ config =~ ^(search|s)$ ]]
+ exit 0
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ktouL58v28 ]]
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ktouL58v28
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
++ basename reports/10.0.2.3/misc/fw3
++ which awk
++ echo reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ cut -d/ -f2
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ (( i < count ))
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ message 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ [[ -n Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ cat -n
+ local 'message=Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ echo -e 'Serialized objects to: reports/192.168.0.100/cisco/.objects/campus-sw-access01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local object_path=reports/10.0.2.3/misc/.objects/fw3.list
+ output_dir=reports/203.0.113.25/fortinet
+ local search_pattern
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDI1MDY1MzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.0.1/misc/switch1.conf
+ case "${target_platform}" in
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ awk -v divisor=--MTc0ODkxMjY5MDMwNDQwNTAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
                      next;
+ [[ ! -d reports/203.0.113.25/fortinet ]]
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ print_file reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
+ [[ -n reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
                    }
                  ' reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local target_file=reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.100/cisco/.objects/campus-sw-access01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.100/cisco/.objects/campus-sw-access01.list
+ grep -F 10.0.0.1
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/cisco/.objects
+ grep -F 192.168.2.12
+ cat -n
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console ]]
+ newline
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--branch-isr-02.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console ]]
+ result=0
+ print_file reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ [[ -n reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ local target_file=reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ [[ -f reports/192.168.0.1/cisco/.objects/campus-sw-access01.list ]]
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ case "${target_file}" in
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list ]]
+ cat reports/192.168.0.1/cisco/.objects/campus-sw-access01.list
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch1.list'
+ newline
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ (( i = 0 ))
+ [[ extract =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ true == true ]]
+ [[ true == true ]]
+ echo
+ [[ extract =~ ^(export|r)$ ]]
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ extract =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ case "${target_file}" in
+ [[ logger =~ ^(export|r)$ ]]
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(logger|l)$ ]]
+ return 0
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--branch-isr-02.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ [[ extract == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ IFS==
+ read -r key value
+ case "${target_platform}" in
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ awk -v divisor=--MTc0ODkxMjY5MDMwODk5NDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
+ cat -n
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ echo reports/10.0.2.3/misc/fw3.cfg
+ local 'indent=            '
+ [[ true == true ]]
+ case "${target_platform}" in
+ grep -F 10.10.10.10
+ awk -v divisor=--MTc0ODkxMjY5MDMyMjQ2NzAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ print_file reports/10.0.0.1/misc/.objects/switch1.list
++ command -v -- ./scripts/network-extract.shell
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ [[ -n reports/10.0.0.1/misc/.objects/switch1.list ]]
                ' reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local target_file=reports/10.0.0.1/misc/.objects/switch1.list
+ [[ -f reports/10.0.0.1/misc/.objects/switch1.list ]]
++ cut -d/ -f2
+ case "${target_file}" in
+ cat reports/10.0.0.1/misc/.objects/switch1.list
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ sed '/^[[:space:]]*$/d'
+ cat -n
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SS80TMnbDv/network-extract--campus-sw-access01.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtQTAZXlti ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AtQTAZXlti
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ print_file reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-branch-vpn-01.list
++ echo -e --platform=cisco
+ return 0
+ [[ true == true ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ newline
+ (( i++ ))
+ [[ -n Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ (( i < count ))
+ cat -n
+ local count=1
+ local 'message=Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ (( i = 0 ))
+ (( i < count ))
+ echo -e 'Serialized objects to: reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list'
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ return 0
++ sed -e '1s|^\(-\)\{1,\}||'
+ grep -F 203.0.113.25
++ dirname -- ./scripts/network-extract.shell
+ search_pattern=10.0.2.3
+ mkdir -p reports/10.0.2.3/misc/.objects
+ [[ true == true ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console ]]
+ result=0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ exit 0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ScSMVaRCS5 ]]
+ case "${target_file}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ScSMVaRCS5
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ result=0
+ local first_search_entry=198.51.100.75
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local last_search_entry=198.51.100.75
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'indent=            '
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ logger =~ ^(logger|l)$ ]]
  "version": "",
+ [[ true == true ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ print_file reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MFxPaSnnst ]]
+ [[ -n reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MFxPaSnnst
+ local target_file=reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/cisco/.objects/dmz-fw2-backup.list
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat -n
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ platform =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.A3ZVbk476A/network-extract--fg-campus-core.cfg.console
+ [[ platform =~ ^(export|r)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
+ for xitem in "${@}"
+ IFS==
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console ]]
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ local 'extracted_configuration={
+ [[ 0 -ne 0 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
  "vendor": "cisco",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch1.conf.console
+ case "${target_file}" in
+ result=0
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZ3f5KovWi ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.rZ3f5KovWi
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console ]]

+ case "${target_file}" in
ASA Version 9.14(3)
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--campus-sw-access01.cfg.console
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'

+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list'
+ newline
interface GigabitEthernet0/0
+ local count=1
++ which awk
 nameif outside
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
+ echo

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ (( i++ ))
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
+ (( i < count ))
 network-object host 203.0.113.25
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
 network-object host 172.16.0.5'
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDM1MTk4MzAwMAo-- '
                  BEGIN {
  "domain": ""
+ result=0
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -n {
                  /^}$/ {
  "vendor": "cisco",
                    if (in_json_header == 1) {
  "model": "ASA",
                      in_json_header = 0;
  "version": "9.14(3)",
                      next;
  "domain": "edge.dc.example.com",
                    }
  "hostname": "perimeter-fw1"
                  }
}
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
ASA Version 9.14(3)
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
hostname perimeter-fw1
                    next;
domain-name edge.dc.example.com
                  }
                  {
                    blk = blk divisor " " $0;
                  }

+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/10.0.2.3/misc/fw3.cfg
interface GigabitEthernet0/0
  "hostname": "fg-campus-core"
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
}

 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT
#hostname="fg-campus-core"

object-group network Avengers-DMZ
+ newline
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ] ]]
#model="FortiGate-200F"
+ local count=1
 description Public access layer
+ (( i = 0 ))
+ (( i < count ))
+ echo
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ (( i++ ))
 network-object 192.168.2.0 255.255.255.0
+ (( i < count ))

object-group network Panther-Edge
 description Internet-facing proxy systems
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ grep -F 10.0.2.3
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ print_file reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
+ [[ -n reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ [[ -f reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/203.0.113.25/cisco/.objects/dmz-fw2-backup.list

+ cat -n
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "perimeter-fw1"
+ [[ true == true ]]
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

+ result=0
interface GigabitEthernet0/0
 nameif outside
 security-level 0
++ echo -e --export
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --verbose
 description Public access layer
+ exit 0
 network-object host 192.0.2.50
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console ]]
 network-object host 203.0.113.25
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wmJAoMXCkb ]]
 network-object 192.168.2.0 255.255.255.0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wmJAoMXCkb

object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ true == true ]]
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ result=0
+ echo -en '{
+ exit 0
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xJvyLITjSl ]]
}
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xJvyLITjSl

ASA Version 9.14(3)
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console ]]
hostname perimeter-fw1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console ]]
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ case "${target_file}" in
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

+ sed '/^[[:space:]]*$/d'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--dmz-fw2-backup.cfg.console
object-group network Avengers-DMZ
 description Public access layer
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8FMDdGoQm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.p8FMDdGoQm
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ echo -e '                .cache/resources/misc/fw1.cfg'
config system interface
 edit "core"
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ newline
  set ip 10.10.10.10 255.255.255.0
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
  set alias "Campus Core Transit"
+ local count=1
 next
+ (( i = 0 ))
end
+ newline

+ (( i < count ))
config firewall address
++ IFS=,
+ echo
+ [[ true == true ]]
 edit "Shield-WiFi"
+ (( i++ ))
+ (( i < count ))
+ result=0
+ local count=1
  set subnet 10.10.10.10 255.255.255.255
+ (( i = 0 ))
+ [[ 0 -ne 0 ]]
+ (( i < count ))
++ echo 203.0.113.25
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ result=0
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ message 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ declare -a execute
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console ]]
+ [[ -n Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list ]]
+ [[ 0 -ne 0 ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(export|r)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ echo
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ return 0
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_platform}" in
+ case "${target_file}" in
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ awk -v divisor=--MTc0ODkxMjY5MDQ1NDgxOTAwMAo-- '
                  BEGIN {
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg

                    in_json_header = 0;
#hostname="fg-campus-core"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
                    blk = "";
#model="FortiGate-200F"
                  }
+ result=0
                  /^[[:space:]]*$/ { next }

                  /^{$/ { in_json_header = 1; next }
config system interface
                  /^}$/ {
 edit "core"
                    if (in_json_header == 1) {
  set ip 10.10.10.10 255.255.255.0
                      in_json_header = 0;
  set alias "Campus Core Transit"
                      next;
                    }
 next
                  }
end
                  (in_json_header == 1) { next }

                  /^[^[:space:]]/ {
+ [[ 0 -ne 0 ]]
config firewall address
 edit "Shield-WiFi"
                    if (blk != "" && !seen[blk]++) print blk "\n";
  set subnet 10.10.10.10 255.255.255.255
                    blk = $0;
  set comment "Wireless AP Gateway"
                    next;
 next
                  }
end'
                  {
                    blk = blk divisor " " $0;
+ [[ export =~ ^(config|c)$ ]]
+ local 'message=Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
                  }
+ [[ true == true ]]
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ [[ export =~ ^(console|o)$ ]]

#hostname="fg-campus-core"
#model="FortiGate-200F"

+ [[ export =~ ^(export|r)$ ]]
+ message 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
config system interface
+ local export_objects=true
 edit "core"
+ [[ -n Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list ]]
++ which awk
  set ip 10.10.10.10 255.255.255.0
+ result=0
+ [[ export =~ ^(extract|x)$ ]]
  set alias "Campus Core Transit"
+ local 'message=Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
 next
+ exit 0
end
+ echo -e 'Serialized objects to: reports/10.0.2.3/misc/.objects/fw3.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j3cK9wik3G/network-extract--fg-campus-core.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vCUvcsAit ]]
+ [[ export =~ ^(logger|l)$ ]]

config firewall address
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3vCUvcsAit
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
+ newline
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
+ local count=1
}
+ (( i = 0 ))

+ (( i < count ))
#hostname="fg-campus-core"
#model="FortiGate-200F"
+ echo

+ [[ export =~ ^(platform|p)$ ]]
+ (( i++ ))
config system interface
+ (( i < count ))
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
+ [[ export =~ ^(search|s)$ ]]
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ result=0
+ [[ export == \h\e\l\p ]]
+ exit 0
+ [[ export == \d\e\b\u\g ]]
+ newline 2
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wjCeUfylVB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.wjCeUfylVB
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ IFS==
+ read -r key value
+ local count=2
+ [[ -n Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list ]]
+ (( i = 0 ))
+ echo -e 'Serialized objects to: reports/192.168.1.10/misc/.objects/switch1.list'
+ (( i < count ))
+ newline
+ local 'message=Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ echo
+ local count=1
+ echo -e 'Serialized objects to: reports/172.16.1.6/misc/.objects/switch3.list'
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ echo
+ [[ -n Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i++ ))
+ local parent_dir=reports/198.51.100.75/fortinet
+ (( i < count ))
+ (( i = 0 ))
+ [[ verbose =~ ^(export|r)$ ]]
+ (( i < count ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
'
+ [[ -z '' ]]
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ debug=false
+ print_file reports/10.0.2.3/misc/.objects/fw3.list
++ echo -e --export
+ [[ -n reports/10.0.2.3/misc/.objects/fw3.list ]]
+ [[ -z '' ]]
+ local target_file=reports/10.0.2.3/misc/.objects/fw3.list
+ dry_run=false
+ [[ -f reports/10.0.2.3/misc/.objects/fw3.list ]]
+ [[ -z true ]]
+ case "${target_file}" in
+ [[ -z '' ]]
+ cat reports/10.0.2.3/misc/.objects/fw3.list
+ grep -F 198.51.100.75
+ print_file reports/172.16.1.6/misc/.objects/switch3.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n reports/172.16.1.6/misc/.objects/switch3.list ]]
+ local target_file=reports/172.16.1.6/misc/.objects/switch3.list
+ [[ -f reports/172.16.1.6/misc/.objects/switch3.list ]]
+ case "${target_file}" in
+ cat reports/172.16.1.6/misc/.objects/switch3.list
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ export console_output=false
++ echo -e --verbose
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ console_output=false
+ [[ true == true ]]
+ cat -n
+ print_file reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -n reports/192.168.1.10/misc/.objects/switch1.list ]]
+ sed '/^[[:space:]]*$/d'
+ local target_file=reports/192.168.1.10/misc/.objects/switch1.list
+ [[ -f reports/192.168.1.10/misc/.objects/switch1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.1.10/misc/.objects/switch1.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
  "model": "",
  "version": "",
  "domain": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ case "${target_file}" in
  "hostname": ""
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--dmz-fw2-backup.cfg.console
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ local count=2
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ echo
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ (( i++ ))
}
+ (( i < count ))

object-group network Krypton-Cloud
+ echo
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console ]]

+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
++ printf '%*s' 12 ''
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ cat -n
+ local 'indent=            '
+ [[ true == true ]]
object network Krypton-Gateway
+ (( i < count ))
 host 203.0.113.25
+ [[ true == true ]]
 description Secure NAT boundary for cloud access ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
+ mapfile -t search_terms
+ (( i < count ))
+ result=0
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
+ exit 0
+ [[ cfg == \c\f\g ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WV2PL8khlg ]]
+ final_output=reports/198.51.100.75/misc/fw1.cfg
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ export =~ ^(config|c)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WV2PL8khlg
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ export =~ ^(console|o)$ ]]
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ export =~ ^(export|r)$ ]]
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local count=1
+ local export_objects=true
+ (( i = 0 ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ [[ export =~ ^(extract|x)$ ]]
+ echo
+ local count=1
+ (( i++ ))
+ extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ (( i = 0 ))
+ [[ export =~ ^(logger|l)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ export =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ [[ export =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ [[ export == \h\e\l\p ]]
+ (( i++ ))
+ [[ export == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ export == \d\r\y\-\r\u\n ]]
+ [[ export == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ IFS==
+ newline
+ [[ true == true ]]
+ read -r key value
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ return 0
+ [[ -n Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/cisco/perimeter-fw1.cfg'
+ serialize_objects
+ [[ true == true ]]
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ result=0
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ 0 -ne 0 ]]

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ [[ true == true ]]
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ cat -n
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ [[ verbose =~ ^(platform|p)$ ]]
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ message 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ [[ -z '' ]]
+ export console_output=false
+ [[ -n Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ console_output=false
+ local 'message=Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ newline
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ -z true ]]
+ echo -e 'Serialized objects to: reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list'
+ local count=1
+ local object_path=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local object_path=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console ]]
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ local search_pattern
+ local count=1
+ local 'message=Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ echo
+ local search_pattern
+ script_helper=false
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console ]]
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ echo -e 'Exported objects from: reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg'
+ result=0
+ local count=1
+ echo
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ exit 0
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ (( i < count ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vNousH6zU9 ]]
+ echo
+ search_terms=()
+ serialize_objects
+ declare -a search_terms
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vNousH6zU9
+ return 0
+ (( i < count ))
+ [[ false == true ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ basename reports/198.51.100.75/fortinet/fg-branch-vpn-01
++ tr -d '\r'
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--fw3.cfg.console
+ message 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ [[ -n Exported objects from: reports/10.0.0.1/misc/switch3.conf ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console ]]
+ local 'message=Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ echo -e 'Exported objects from: reports/10.0.0.1/misc/switch3.conf'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console ]]
++ echo -e --verbose
+ case "${target_file}" in
+ serialize_objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ print_file reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ local count=1
+ (( i = 0 ))
+ [[ -n reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ local target_file=reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
+ [[ -f reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/cisco/.objects/dmz-fw2-backup.list
++ grep -v '^#'
+ (( i < count ))
++ echo reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ echo
+ output_dir=reports/198.51.100.75/misc
+ local parent_dir=reports/203.0.113.25/cisco
+ [[ true == true ]]
+ [[ ! -d reports/198.51.100.75/misc ]]
+ (( i++ ))
++ echo reports/192.168.2.12/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console ]]
+ (( i < count ))
+ echo
+ case "${target_file}" in
+ return 0
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tkQCYMpoi0/network-extract--fw3.cfg.console
+ (( i < count ))
+ newline 2
+ [[ false == true ]]
+ [[ true == true ]]
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ cat -n
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ local count=2
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ (( i < count ))
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-campus-core.cfg'
+ echo
+ [[ true == true ]]
++ tr -d '\r'
+ serialize_objects
+ (( i++ ))
+ (( i < count ))
+ echo
++ cut -d/ -f2
+ (( i++ ))
+ (( i < count ))
++ cut -d/ -f2
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ local object_path=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local search_pattern
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ basename reports/203.0.113.25/cisco/perimeter-fw1
++ command -v -- ./scripts/network-extract.shell
+ (( i < count ))
++ dirname reports/10.0.0.1/misc/switch3.conf
++ grep -v '^\s*$'
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ verbose =~ ^(config|c)$ ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ verbose =~ ^(console|o)$ ]]
}
+ [[ verbose =~ ^(export|r)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ grep -v '^#'
+ [[ verbose =~ ^(logger|l)$ ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ verbose =~ ^(platform|p)$ ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
+ [[ verbose =~ ^(search|s)$ ]]
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ search_terms=()
+ declare -a search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list != *,* ]]
+ case "${target_file}" in
+ mapfile -t search_terms
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.2zLHnGVL6L/network-extract--switch3.conf.console
+ newline
+ local first_search_entry=10.10.10.10
+ local count=1
+ search_pattern=192.168.2.12
+ local last_search_entry=10.10.10.10
+ (( i = 0 ))
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ local parent_dir=reports/192.168.0.1/fortinet
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ return 0
+ search_pattern=192.168.2.12
+ mkdir -p reports/192.168.2.12/misc/.objects
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ local object_path=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ local search_pattern
+ mkdir -p reports/192.168.2.12/fortinet/.objects
+ [[ true == true ]]
+ result=0
+ print '{
+ exit 0
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ local count=1
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ ((  count == 0  ))
 next
end'
+ result=0
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xG3X2knPYa ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6NbYl1Pysn ]]
+ local parent_dir=reports/10.0.0.1/misc
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6NbYl1Pysn
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n {
  "vendor": "fortinet",
+ newline
  "model": "FortiGate-60F",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console ]]
  "version": "v7.2.5.F",
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.xG3X2knPYa
+ local count=1
  "domain": ""
+ case "${target_file}" in
  "hostname": "fg-branch-vpn-01"
+ (( i = 0 ))
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo
+ echo -en '{
+ (( i++ ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
++ dirname -- ./scripts/network-extract.shell
  "hostname": "fg-branch-vpn-01"
}

+ local 'prompt_message=Enter configuration file to be parsed: '
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local parent_dir=reports/10.10.10.10/fortinet
+ [[ -z fortinet ]]
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
+ [[ true == true ]]
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6PnqTgS54W/network-extract--switch1.conf.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-configs--ips.list ]'
++ tr -d '\r'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ basename reports/192.168.0.1/fortinet/fg-branch-vpn-01
++ basename reports/10.0.0.1/misc/switch3
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
++ grep -v '^\s*$'
++ basename reports/10.10.10.10/fortinet/fg-campus-core
++ echo reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ cut -d/ -f2
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ cut -d/ -f2
++ grep -v '^#'
+ local SCRIPT_DIR=./scripts
+ message 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw1.cfg ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ newline 2
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw1.cfg'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ serialize_objects
+ [[ true == true ]]
+ result=0
+ exit 0
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ local object_path=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local search_pattern
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXyDMWXe6B ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console ]]
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qXyDMWXe6B
+ case "${target_file}" in
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--dmz-fw2-backup.cfg.console
+ local search_pattern
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ local object_path=reports/10.0.0.1/misc/.objects/switch3.list
+ local search_pattern
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKDm42ynVD ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sKDm42ynVD
++ which awk
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/fortinet/.objects
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/cisco/.objects
+ case "${target_platform}" in
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ awk -v divisor=--MTc0ODkxMjY5MDQ4MDAzNzAwMAo-- '
                    BEGIN {
+ [[ true == true ]]
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'

                    # Add edit line to current block
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ] ]]
                    /^ edit / {
                      blk = blk divisor " " $0;
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
                      next;
                    }

+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-configs--ips.list ]'
                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

+ local count=1
                    # Finalize block at end
                    /^end$/ {
+ ((  count == 0  ))
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
                      next;
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
                    }

+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }
+ newline

                    END {
+ local count=1
                      # No need for final print — all blocks end with end
+ (( i = 0 ))
                    }
+ (( i < count ))
                  ' reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ case "${target_platform}" in
+ echo
+ (( i++ ))
+ (( i < count ))
+ awk -v divisor=--MTc0ODkxMjY5MDU0NDIxMTAwMAo-- '
+ local 'prompt_message=Enter configuration file to be parsed: '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
+ [[ -z .cache/resources/misc/fw3.cfg ]]
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
+ [[ -z cisco ]]
                  /^}$/ {
+ [[ true == true ]]
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ [[ cfg == \c\f\g ]]
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    blk = $0;
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/192.168.2.12/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ grep -F 192.168.2.12
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ echo reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ echo reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ grep -F 192.168.2.12
++ echo reports/10.0.0.1/misc/switch3.conf
+ sed '/^[[:space:]]*$/d'
++ cut -d/ -f2
++ cut -d/ -f2
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ cut -d/ -f2
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ local parent_dir=reports/203.0.113.25/misc
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ newline
+ local count=1
+ result=0
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ exit 0
+ (( i++ ))
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4yUOfGWoQu ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4yUOfGWoQu
+ [[ false == true ]]
+ sed '/^[[:space:]]*$/d'
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg'
+ serialize_objects
++ IFS=,
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ echo 198.51.100.75
++ basename reports/203.0.113.25/misc/fw1
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ declare -a execute
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ case "${target_platform}" in
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ search_pattern=10.10.10.10
+ awk -v divisor=--MTc0ODkxMjY5MDU2MTE2MDAwMAo-- '
                  BEGIN {
+ output_dir=reports/10.10.10.10/fortinet
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ [[ ! -d reports/10.10.10.10/fortinet ]]
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ message 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
+ search_pattern=192.168.0.1
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ case "${target_platform}" in
                    blk = $0;
+ search_pattern=10.0.0.1
+ [[ -n Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
                    next;
+ mkdir -p reports/192.168.0.1/fortinet/.objects
                  }
+ mkdir -p reports/10.0.0.1/misc/.objects
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
+ local 'message=Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
                ' reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ echo -e 'Serialized objects to: reports/192.168.2.12/fortinet/.objects/fg-campus-core.list'
+ awk -v divisor=--MTc0ODkxMjY5MDU1MzcxMzAwMAo-- '
                    BEGIN {
+ newline
                      blk = "";
+ local count=1
                      in_json_header = 0;
+ (( i = 0 ))
                    }

                    # Skip blank lines
+ (( i < count ))
                    /^[[:space:]]*$/ { next }
+ echo

                    # Skip JSON preamble
                    /^{$/            { in_json_header = 1; next }
+ (( i++ ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }
+ (( i < count ))

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ result=0
++ which awk
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ grep -F 203.0.113.25
+ message 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/192.168.2.12/misc/.objects/fw1.list'
+ newline
+ local count=1
+ grep -F 198.51.100.75
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ print_file reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ output_dir=reports/10.10.10.10/misc
+ [[ ! -d reports/10.10.10.10/misc ]]
+ [[ -n reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/192.168.2.12/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/fortinet/.objects/fg-campus-core.list
+ local object_path=reports/203.0.113.25/misc/.objects/fw1.list
+ local search_pattern
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ sed '/^[[:space:]]*$/d'
+ print_file reports/192.168.2.12/misc/.objects/fw1.list
+ local parent_dir=reports/203.0.113.25/fortinet
+ [[ -n reports/192.168.2.12/misc/.objects/fw1.list ]]
+ local target_file=reports/192.168.2.12/misc/.objects/fw1.list
+ [[ -f reports/192.168.2.12/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/192.168.2.12/misc/.objects/fw1.list
+ cat -n
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
++ command -v -- ./scripts/network-extract.shell
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ cat -n
+ [[ -n Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/cisco/.objects/perimeter-fw1.list'
++ basename reports/203.0.113.25/fortinet/fg-branch-vpn-01
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ case "${target_platform}" in
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ awk -v divisor=--MTc0ODkxMjY5MDUxNTk0ODAwMAo-- '
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
++ echo reports/203.0.113.25/misc/fw1.cfg
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
+ result=0
                    }
                  ' reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ case "${target_platform}" in
++ printf '%*s' 12 ''
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDY1MTU3MjAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
+ awk -v divisor=--MTc0ODkxMjY5MDY1MTc5MDAwMAo-- '
                    BEGIN {
                    }
                  }
                      blk = "";
                  (in_json_header == 1) { next }
+ message 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
                      in_json_header = 0;
                  /^[^[:space:]]/ {
                    }
                    if (blk != "" && !seen[blk]++) print blk "\n";

                    blk = $0;
                    # Skip blank lines
                    next;
                    /^[[:space:]]*$/ { next }
++ dirname -- ./scripts/network-extract.shell
+ local 'indent=            '
+ [[ -n Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
                  }
                  {
+ local 'message=Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'
                    blk = blk divisor " " $0;
+ newline
+ echo -e 'Serialized objects to: reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list'

                    # Skip JSON preamble
                  }
+ local count=1
                    /^{$/            { in_json_header = 1; next }
+ newline
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ (( i = 0 ))
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ grep -F 10.10.10.10
                    (in_json_header == 1) { next }
+ local count=1
                  }

                ' reports/10.0.0.1/misc/switch3.conf
+ print_file reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
                    }

                    # Add edit line to current block
++ cut -d/ -f2
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
+ [[ -n reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
+ local target_file=reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
                      blk = "";
+ [[ -f reports/203.0.113.25/cisco/.objects/perimeter-fw1.list ]]
                      next;
+ case "${target_file}" in
                    }

                    # Accumulate middle lines
                    {
+ cat reports/203.0.113.25/cisco/.objects/perimeter-fw1.list
                      blk = blk divisor " " $0;
                    }
+ (( i < count ))

                    END {
+ echo
                      # No need for final print — all blocks end with end
                    }
                  ' reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ (( i++ ))
+ (( i < count ))
+ grep -F 10.0.0.1
+ (( i = 0 ))
+ [[ true == true ]]
+ return 0
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console ]]
+ echo
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ grep -F 192.168.0.1
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local script_filename=fortinet-configs.awk
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ sed '/^[[:space:]]*$/d'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ cat -n
+ newline
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local count=1
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ (( i = 0 ))
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ (( i < count ))
+ local object_path=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ echo
+ newline
+ (( i++ ))
+ local search_pattern
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ return 0
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console ]]
+ output_dir=reports/203.0.113.25/misc
+ case "${target_file}" in
+ [[ ! -d reports/203.0.113.25/misc ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ sed '/^[[:space:]]*$/d'
+ sed '/^[[:space:]]*$/d'
+ print_file reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -n reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ [[ -f reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/fortinet/.objects/fg-branch-vpn-01.list
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ which awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ command -v -- ./scripts/network-extract.shell
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ cat -n
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ echo reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ result=0
+ [[ 0 -ne 0 ]]
++ which awk
+ [[ true == true ]]
+ newline
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ local count=1
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-campus-core.list'
+ (( i = 0 ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
++ cut -d/ -f2
+ result=0
+ result=0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ [[ 0 -ne 0 ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console ]]
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console ]]
+ message 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ [[ -n Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ [[ -n Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ local 'message=Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ case "${target_file}" in
+ echo -e 'Serialized objects to: reports/10.0.0.1/misc/.objects/switch3.list'
+ echo -e 'Serialized objects to: reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fg-campus-core.cfg.console
+ newline
+ newline
+ [[ true == true ]]
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console ]]
++ dirname -- ./scripts/network-extract.shell
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gRdPMkMuNm/network-extract--fw1.cfg.console
+ print_file reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-campus-core.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-campus-core.list
++ IFS=,
++ echo 10.10.10.10
+ print_file reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -n reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ (( i++ ))
+ local target_file=reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ (( i < count ))
+ [[ -f reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list ]]
+ case "${target_file}" in
+ cat reports/192.168.0.1/fortinet/.objects/fg-branch-vpn-01.list
+ return 0
+ [[ true == true ]]
+ print_file reports/10.0.0.1/misc/.objects/switch3.list
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ [[ -n reports/10.0.0.1/misc/.objects/switch3.list ]]
+ declare -a execute
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=reports/10.0.0.1/misc/.objects/switch3.list
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -f reports/10.0.0.1/misc/.objects/switch3.list ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ cat -n
+ cat reports/10.0.0.1/misc/.objects/switch3.list
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ cat -n
+ search_pattern=203.0.113.25
+ local 'extracted_configuration={
  "vendor": "cisco",
+ mkdir -p reports/203.0.113.25/fortinet/.objects
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ cat -n

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local SCRIPT_DIR=./scripts

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
+ local script_filename=cisco-configs.awk
 network-object host 203.0.113.25

+ local script_filepath=./scripts/extract/cisco-configs.awk
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ IFS=,
++ echo 10.10.10.10
++ which awk
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDU2OTYzNzAwMAo-- '
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
                  BEGIN {
                    in_json_header = 0;
+ declare -a execute
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
+ [[ true == true ]]
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
                    next;
                  }
                  {
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console ]]
                    blk = blk divisor " " $0;
                  }
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console ]]
                  }
                ' reports/203.0.113.25/misc/fw1.cfg
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--perimeter-fw1.cfg.console
+ result=0
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ exit 0
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

++ which awk
object network External-Failover
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OYarztcZlI ]]
 host 198.51.100.75
+ result=0
 description Secondary outbound route for edge'
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OYarztcZlI
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vpVrygYHTt ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vpVrygYHTt
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ grep -F 203.0.113.25
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
++ which awk
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ newline
+ [[ true == true ]]
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ local awk_bin=/usr/bin/awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ return 0
+ case "${target_file}" in
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SCHDuQlIeB ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
++ printf '%*s' 12 ''
+ newline 2
+ case "${target_platform}" in
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SCHDuQlIeB
++ IFS=,
+ awk -v divisor=--MTc0ODkxMjY5MDU4OTcwNzAwMAo-- '
++ echo 203.0.113.25
                    BEGIN {
                      blk = "";
                      in_json_header = 0;
                    }

                    # Skip blank lines
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ local count=2
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
+ (( i = 0 ))
                    (in_json_header == 1) { next }

+ (( i < count ))
                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }
+ echo

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
+ local 'indent=            '
                      blk = $0;
+ (( i++ ))
                      next;
                    }
+ [[ true == true ]]
+ (( i < count ))

+ echo
                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
+ (( i++ ))
                      next;
+ (( i < count ))
                    }
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')

                    # Add next to block
                    /^ next$/ {
+ declare -a execute
                      blk = blk divisor " " $0;
                      next;
+ [[ true == true ]]
                    }
+ newline

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
+ result=0
+ local count=1
+ [[ true == true ]]
+ [[ 0 -ne 0 ]]
                      if (blk != "" && !seen[blk]++) print blk;
+ grep -F 203.0.113.25
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ true == true ]]
+ (( i = 0 ))
                      blk = "";
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ (( i < count ))
                      next;
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
                    }
+ echo
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console

                    # Accumulate middle lines
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ (( i < count ))
+ newline
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list ]]
                    {
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
                      blk = blk divisor " " $0;
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw1.list'
                    }

+ newline
                    END {
                      # No need for final print — all blocks end with end
+ local count=1
                    }
+ (( i = 0 ))
                  ' reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local count=1
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ case "${target_file}" in
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-campus-core.cfg.console
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ echo
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
+ sed '/^[[:space:]]*$/d'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ result=0
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console ]]
+ exit 0
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QXgvGxvZSk ]]
+ case "${target_file}" in
+ newline
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.QXgvGxvZSk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vOLFskw2ew/network-extract--fg-branch-vpn-01.cfg.console
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ print_file reports/203.0.113.25/misc/.objects/fw1.list
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/203.0.113.25/misc/.objects/fw1.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local target_file=reports/203.0.113.25/misc/.objects/fw1.list
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -f reports/203.0.113.25/misc/.objects/fw1.list ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw1.list
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ cat -n
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console ]]
+ local count=1
+ (( i = 0 ))
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ case "${target_file}" in
+ (( i < count ))
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.28ub9MWcci/network-extract--switch3.conf.console
+ (( i++ ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ newline
+ result=0
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ exit 0
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J7fx6l6jbJ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.J7fx6l6jbJ
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ message 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ message 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ echo -e 'Serialized objects to: reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list'
+ [[ -n Exported objects from: reports/198.51.100.75/misc/fw1.cfg ]]
+ local 'message=Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ newline
+ echo -e 'Exported objects from: reports/198.51.100.75/misc/fw1.cfg'
+ local count=1
+ (( i = 0 ))
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWIhTIiH3T ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GWIhTIiH3T
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
++ printf '%*s' 12 ''
+ print_file reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ local 'indent=            '
+ [[ true == true ]]
+ [[ -n reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ local target_file=reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ [[ -f reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list ]]
+ newline
+ case "${target_file}" in
+ cat reports/203.0.113.25/fortinet/.objects/fg-branch-vpn-01.list
+ result=0
+ exit 0
+ local count=1
+ (( i = 0 ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GrEXYh0fpg ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GrEXYh0fpg
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ cat -n
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "domain": ""
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "fg-branch-vpn-01"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ message '                .cache/resources/misc/fw3.cfg'

config firewall policy
 edit 13
  set name "Remote NAT"
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
+ local 'message=                .cache/resources/misc/fw3.cfg'
  set logtraffic all
 next
end'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ result=0
+ echo
+ [[ -n {
  "vendor": "fortinet",
+ (( i++ ))
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ (( i < count ))
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
+ local parent_dir=reports/198.51.100.75/misc
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
#hostname="fg-branch-vpn-01"

#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
object-group network Shield-WiFi
  set name "Remote NAT"
 description Shield-controlled wireless network
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
+ [[ true == true ]]
 network-object host 10.10.10.10
  set dstaddr "203.0.113.10"
 network-object 192.168.100.0 255.255.255.0
  set action accept

  set logtraffic all
object-group network Shield-WiFi
 next
 description Shield-controlled wireless network
end'
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
object network Shield-WiFi-Alias
 host 10.10.10.10
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console ]]
+ [[ -n {
  "vendor": "fortinet",
 description Guest NAT'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
  "model": "FortiGate-60F",
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console ]]
  "version": "v7.2.5.F",
+ [[ -n {
  "vendor": "cisco",
+ case "${target_file}" in
  "domain": ""
+ newline
  "model": "",
++ basename reports/198.51.100.75/misc/fw1
  "version": "",
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw1.cfg.console
  "domain": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "hostname": ""
  "hostname": "fg-branch-vpn-01"
}
+ local count=1
}
+ (( i = 0 ))


object-group network Shield-WiFi
 description Shield-controlled wireless network
+ (( i < count ))
 network-object host 10.10.10.10
#hostname="fg-branch-vpn-01"
 network-object 192.168.100.0 255.255.255.0

+ echo
#model="FortiGate-60F"
object-group network Shield-WiFi
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))
 description Shield-controlled wireless network
+ (( i < count ))

 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ return 0

config firewall policy
object-group network Shield-WiFi
 edit 13
 description Shield-controlled wireless network
  set name "Remote NAT"
  set srcintf "dmz"
 network-object host 10.10.10.10
  set dstintf "wan1"
 network-object 192.168.100.0 255.255.255.0
+ [[ true == true ]]
  set srcaddr "10.10.10.10"

  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
object network Shield-WiFi-Alias
 next
 host 10.10.10.10
end ]]
 description Guest NAT ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
+ echo -en '{
  "vendor": "fortinet",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console ]]
  "model": "FortiGate-60F",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
  "version": "v7.2.5.F",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ case "${target_file}" in
}
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ local object_path=reports/198.51.100.75/misc/.objects/fw1.list

object-group network Shield-WiFi
+ local search_pattern
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

+ local 'extracted_configuration={
object network Shield-WiFi-Alias
  "vendor": "cisco",
  "model": "",
 host 10.10.10.10
  "version": "",
 description Guest NAT ]]
  "domain": "",
  "hostname": ""
}

+ echo -en '{
object-group network Panther-Edge
  "vendor": "cisco",
 description Internet-facing proxy systems
  "model": "",
  "version": "",
 network-object host 203.0.113.25
  "domain": "",
+ newline 2
 network-object host 172.16.0.5'
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ result=0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ -n {
 network-object 192.168.100.0 255.255.255.0
  "vendor": "cisco",

object-group network Shield-WiFi
+ local count=2
  "model": "",
+ result=0
  "version": "",
 description Shield-controlled wireless network
+ (( i = 0 ))
+ exit 0
  "domain": "",
 network-object host 10.10.10.10
+ (( i < count ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VpzBVtmmXX ]]
++ echo reports/198.51.100.75/misc/fw1.cfg
 network-object 192.168.100.0 255.255.255.0
++ cut -d/ -f2
+ echo

  "hostname": ""
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.VpzBVtmmXX
+ (( i++ ))
object network Shield-WiFi-Alias
+ (( i < count ))
 host 10.10.10.10
}
+ echo
 description Guest NAT'
+ (( i++ ))

+ (( i < count ))
object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ true == true ]]
+ [[ true == true ]]
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ print '{
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
  "vendor": "cisco",
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
  "model": "",
  "version": "",
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ newline
+ local count=1
+ (( i = 0 ))
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ cat -n reports/10.10.10.10/misc/fw3.cfg
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ search_pattern=198.51.100.75
+ mkdir -p reports/198.51.100.75/misc/.objects
+ result=0
+ newline 2
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lhf9VPzkxc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lhf9VPzkxc
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ newline
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ (( i++ ))
+ message 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ local 'message=Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ newline
+ echo -e 'Exported objects from: reports/10.10.10.10/fortinet/fg-testing-config.cfg'
+ local count=1
+ [[ false == true ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ serialize_objects
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ [[ -n Exported objects from: reports/10.10.10.10/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/10.10.10.10/misc/fw3.cfg'
+ serialize_objects
++ dirname reports/10.10.10.10/misc/fw3.cfg
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDczMTgwNDAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/198.51.100.75/misc/fw1.cfg
+ grep -F 198.51.100.75
+ sed '/^[[:space:]]*$/d'
+ newline
+ local count=1
+ local parent_dir=reports/10.10.10.10/fortinet
+ (( i = 0 ))
+ local parent_dir=reports/10.10.10.10/misc
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ [[ -n Exported objects from: reports/203.0.113.25/misc/fw3.cfg ]]
+ local 'message=Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ echo -e 'Exported objects from: reports/203.0.113.25/misc/fw3.cfg'
+ serialize_objects
++ basename reports/10.10.10.10/fortinet/fg-testing-config
++ basename reports/10.10.10.10/misc/fw3
+ result=0
+ [[ 0 -ne 0 ]]
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ [[ true == true ]]
+ message 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ [[ -n Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local 'message=Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ echo -e 'Serialized objects to: reports/198.51.100.75/misc/.objects/fw1.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -n reports/198.51.100.75/misc/.objects/fw1.list ]]
+ local target_file=reports/198.51.100.75/misc/.objects/fw1.list
+ [[ -f reports/198.51.100.75/misc/.objects/fw1.list ]]
+ case "${target_file}" in
+ cat reports/198.51.100.75/misc/.objects/fw1.list
+ local object_path=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ cat -n
+ local object_path=reports/10.10.10.10/misc/.objects/fw3.list
+ local search_pattern
+ local search_pattern
+ local parent_dir=reports/203.0.113.25/misc
++ echo reports/10.10.10.10/fortinet/fg-testing-config.cfg
++ echo reports/10.10.10.10/misc/fw3.cfg
++ cut -d/ -f2
++ cut -d/ -f2
++ basename reports/203.0.113.25/misc/fw3
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ local object_path=reports/203.0.113.25/misc/.objects/fw3.list
+ local search_pattern
+ search_pattern=10.10.10.10
+ search_pattern=10.10.10.10
+ mkdir -p reports/10.10.10.10/fortinet/.objects
+ mkdir -p reports/10.10.10.10/misc/.objects
++ echo reports/203.0.113.25/misc/fw3.cfg
++ cut -d/ -f2
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EyoXlioGzR/network-extract--fw1.cfg.console
+ case "${target_platform}" in
+ search_pattern=203.0.113.25
+ mkdir -p reports/203.0.113.25/misc/.objects
+ awk -v divisor=--MTc0ODkxMjY5MDg2MTA3NDAwMAo-- '
+ case "${target_platform}" in
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
                    next;
                  }
                  {
                    blk = blk divisor " " $0;
                  }
+ awk -v divisor=--MTc0ODkxMjY5MDkwMzY2MTAwMAo-- '
                    BEGIN {
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                      blk = "";
                      in_json_header = 0;
                    }
                  }

+ grep -F 10.10.10.10
                    # Skip blank lines
                ' reports/10.10.10.10/misc/fw3.cfg
                    /^[[:space:]]*$/ { next }

                    # Skip JSON preamble
+ sed '/^[[:space:]]*$/d'
                    /^{$/            { in_json_header = 1; next }
                    /^}$/            { if (in_json_header) { in_json_header = 0; next } }
                    (in_json_header == 1) { next }

                    # Skip platform metadata
                    /^#(hostname|model|config-version)=/ { next }

                    # Start of a new block
                    /^config / {
                      if (blk != "") print blk;
                      blk = $0;
                      next;
+ grep -F 10.10.10.10
                    }

                    # Add edit line to current block
                    /^ edit / {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Add next to block
                    /^ next$/ {
                      blk = blk divisor " " $0;
                      next;
                    }

                    # Finalize block at end
                    /^end$/ {
                      blk = blk divisor " " $0;
                      if (blk != "" && !seen[blk]++) print blk;
                      blk = "";
                      next;
                    }

                    # Accumulate middle lines
                    {
                      blk = blk divisor " " $0;
                    }

                    END {
                      # No need for final print — all blocks end with end
                    }
                  ' reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ sed '/^[[:space:]]*$/d'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gTAnQuIb3S ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gTAnQuIb3S
+ case "${target_platform}" in
+ awk -v divisor=--MTc0ODkxMjY5MDg1NzMzNTAwMAo-- '
                  BEGIN {
                    in_json_header = 0;
                    blk = "";
                  }
                  /^[[:space:]]*$/ { next }
                  /^{$/ { in_json_header = 1; next }
                  /^}$/ {
                    if (in_json_header == 1) {
                      in_json_header = 0;
                      next;
                    }
                  }
                  (in_json_header == 1) { next }
+ result=0
                  /^[^[:space:]]/ {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                    blk = $0;
+ [[ 0 -ne 0 ]]
                    next;
                  }
+ [[ true == true ]]
                  {
                    blk = blk divisor " " $0;
                  }
                  END {
                    if (blk != "" && !seen[blk]++) print blk "\n";
                  }
                ' reports/203.0.113.25/misc/fw3.cfg
+ grep -F 203.0.113.25
+ message 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ result=0
+ (( i < count ))
+ echo
+ [[ 0 -ne 0 ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ sed '/^[[:space:]]*$/d'
+ message 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ [[ -n Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local 'message=Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ echo -e 'Serialized objects to: reports/10.10.10.10/fortinet/.objects/fg-testing-config.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -n reports/10.10.10.10/misc/.objects/fw3.list ]]
+ local target_file=reports/10.10.10.10/misc/.objects/fw3.list
+ [[ -f reports/10.10.10.10/misc/.objects/fw3.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/misc/.objects/fw3.list
+ cat -n
+ print_file reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -n reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ local target_file=reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ [[ -f reports/10.10.10.10/fortinet/.objects/fg-testing-config.list ]]
+ case "${target_file}" in
+ cat reports/10.10.10.10/fortinet/.objects/fg-testing-config.list
+ cat -n
+ result=0
+ [[ 0 -ne 0 ]]
+ [[ true == true ]]
+ message 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ [[ -n Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list ]]
+ local 'message=Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ echo -e 'Serialized objects to: reports/203.0.113.25/misc/.objects/fw3.list'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ newline
+ print_file reports/203.0.113.25/misc/.objects/fw3.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/203.0.113.25/misc/.objects/fw3.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console ]]
+ return 0
+ local target_file=reports/203.0.113.25/misc/.objects/fw3.list
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ [[ -f reports/203.0.113.25/misc/.objects/fw3.list ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ case "${target_file}" in
+ cat reports/203.0.113.25/misc/.objects/fw3.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ cat -n
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fw3.cfg.console
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console ]]
+ (( i = 0 ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console ]]
+ echo
+ case "${target_file}" in
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.gMcghRdpoD/network-extract--fg-testing-config.cfg.console
+ return 0
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ result=0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vN5p6m2rmo ]]
+ exit 0
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.vN5p6m2rmo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fRkpzP9IIB ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fRkpzP9IIB
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5JDWVJI2CD/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9mwnaGWvxw ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9mwnaGWvxw
