+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bK5XkyDYq1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bK5XkyDYq1
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
++ export divisor=MTc0ODc1MzQ4Mjk1MDUyOTAwMAo
++ divisor=MTc0ODc1MzQ4Mjk1MDUyOTAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tMQ89qHNqJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tMQ89qHNqJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias pause=pause
++ alias print-line=print
+ main --search=.cache/ips.list --config=configs/cisco/access-sw1-west.cfg --extract=.cache/resources/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console --verbose
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=configs/cisco/access-sw1-west.cfg
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --extract=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4Mjk3MTU0NDAwMAo
++ divisor=MTc0ODc1MzQ4Mjk3MTU0NDAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ mktemp -d
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/access-sw1-west.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C07np78olT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C07np78olT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
++ alias pause=pause
+ [[ platform =~ ^(logger|l)$ ]]
++ alias print-line=print
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ 6 -eq 0 ]]
+ [[ platform == \h\e\l\p ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ main --search=.cache/ips.list --config=configs/cisco/branch-isr-02.cfg --extract=.cache/resources/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias system-metrics=system_metrics
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS=' 	
+ IFS==
'
+ read -r key value
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --extract=.cache/resources/cisco/branch-isr-02.cfg
++ export divisor=MTc0ODc1MzQ4Mjk5Mjk2NDAwMAo
++ divisor=MTc0ODc1MzQ4Mjk5Mjk2NDAwMAo
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ grep -v '^\s*$'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ mktemp -d
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/access-sw1-west.cfg
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cPH1wefObV
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cPH1wefObV
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(config|c)$ ]]
+ [[ 6 -eq 0 ]]
++ alias system-metrics=system_metrics
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/campus-sw-access01.cfg --extract=.cache/resources/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console --verbose
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ oIFS=' 	
++ alias validate-address=validate_address
+ [[ platform == \h\e\l\p ]]
'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias warning-message=warning
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
++ export LC_ALL=C
++ LC_ALL=C
+ IFS==
+ IFS==
+ read -r key value
++ export 'nl=\n'
+ read -r key value
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ [[ -n .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/access-sw1-west.cfg
+ extract_location=.cache/resources/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/access-sw1-west.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ output_dir=.cache/resources/cisco
+ [[ ! -d .cache/resources/cisco ]]
++ echo -e --config=configs/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ export targets_location=targets
++ command -v -- ./scripts/network-extract.shell
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ local SCRIPT_DIR=./scripts
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ local script_filename=cisco-configs.awk
+ [[ .cache/ips.list != *,* ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ mapfile -t search_terms
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ echo -e --extract=.cache/resources/cisco/campus-sw-access01.cfg
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4MzAxNTQxMzAwMAo
++ divisor=MTc0ODc1MzQ4MzAxNTQxMzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^\s*$'
++ alias network-configs--helper=network_configs__helper
++ grep -v '^#'
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
++ IFS=,
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ mktemp -d
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/access-sw1-west.cfg')
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ declare -a execute
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/branch-isr-02.cfg
++ which awk
++ echo -e --platform=cisco
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iI542AJkX7
+ [[ platform =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iI542AJkX7
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ export 'nl=\n'
+ [[ platform == \h\e\l\p ]]
+ nl='\n'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ -n '' ]]
+ read -r key value
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ main --search=.cache/ips.list --config=configs/cisco/dmz-fw2-backup.cfg --extract=.cache/resources/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console --verbose
++ alias list-file=list_file
++ alias log-error=log_error
+ oIFS=' 	
++ alias log-info=log_info
'
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ IFS==
++ alias print-message=message
+ read -r key value
++ alias print-newline=newline
++ printf '%*s' 12 ''
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local 'indent=            '
++ alias system-metrics=system_metrics
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias warning-message=warning
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export LC_ALL=C
++ LC_ALL=C
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export 'nl=\n'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ nl='\n'
++ export cache_location=.cache
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ cache_location=.cache
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
++ export logs_location=logs
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ logs_location=logs
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ mkdir -p logs/console logs/jobs
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/access-sw1-west.cfg'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ -n                 configs/cisco/access-sw1-west.cfg ]]
+ local 'message=                configs/cisco/access-sw1-west.cfg'
+ echo -e '                configs/cisco/access-sw1-west.cfg'
+ [[ -n .cache/resources/cisco/branch-isr-02.cfg ]]
+ newline
+ [[ cfg == \c\f\g ]]
+ local count=1
+ final_output=.cache/resources/cisco/branch-isr-02.cfg
+ (( i = 0 ))
+ (( i < count ))
+ extract_location=.cache/resources/cisco/branch-isr-02.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/branch-isr-02.cfg
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/access-sw1-west.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local search_pattern=.cache/ips.list
+ IFS==
+ [[ search == \h\e\l\p ]]
+ read -r key value
+ [[ search == \d\e\b\u\g ]]
+ output_dir=.cache/resources/cisco
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ ! -d .cache/resources/cisco ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ dirname -- ./scripts/network-extract.shell
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
++ export targets_location=targets
++ targets_location=targets
+ [[ -n {
++ export targets_logfile=logs/jobs/targets.jobs
  "vendor": "cisco",
++ targets_logfile=logs/jobs/targets.jobs
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

+++ date +%s%N
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+++ base64

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local target_config=configs/cisco/dmz-fw2-backup.cfg
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ config =~ ^(console|o)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ set -euo pipefail
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ [[ verbose == \d\e\b\u\g ]]
+ export LC_ALL=C
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ LC_ALL=C
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ which awk
++ mktemp -d
++ echo -e --extract=.cache/resources/cisco/dmz-fw2-backup.cfg
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/access-sw1-west.cfg ]'
++ export divisor=MTc0ODc1MzQ4MzAzOTQ2NjAwMAo
++ divisor=MTc0ODc1MzQ4MzAzOTQ2NjAwMAo
+ newline
++ grep -v '^#'
+ local count=1
+ source ./scripts/devops-helpers.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ cat -n .cache/resources/cisco/access-sw1-west.cfg
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ IFS=,
+ alias parse-cisco=main
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/branch-isr-02.cfg')
+ declare -a execute
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.If1oDvNsiL
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.If1oDvNsiL
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
++ [[ -n '' ]]
+ [[ extract =~ ^(console|o)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ extract =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
++ alias log-error=log_error
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ which awk
++ alias print-message=message
+ message 'Search Pattern: [ .cache/ips.list ]'
++ alias print-newline=newline
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
++ alias pause=pause
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
++ alias print-line=print
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ echo
+ (( i++ ))
++ alias system-metrics=system_metrics
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
++ alias validate-address=validate_address
+ [[ true == true ]]
++ alias warning-message=warning
+ newline
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ local count=1
+ newline
+ (( i = 0 ))
++ nl='\n'
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
++ export cache_location=.cache
+ echo
+ (( i < count ))
++ cache_location=.cache
+ (( i++ ))
+ (( i < count ))
++ export logs_location=logs
+ message 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ logs_location=logs
+ [[ -n Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ false == true ]]
+ echo -e 'Target Config: [ configs/cisco/campus-sw-access01.cfg ] ( cisco )'
++ mkdir -p logs/console logs/jobs
+ [[ true == true ]]
+ ls -al --color=auto configs/cisco/campus-sw-access01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
++ echo -e --platform=cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ message '                configs/cisco/branch-isr-02.cfg'
+ local target_platform=cisco
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -n                 configs/cisco/branch-isr-02.cfg ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console ]]
+ local 'message=                configs/cisco/branch-isr-02.cfg'
+ [[ platform == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e '                configs/cisco/branch-isr-02.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--access-sw1-west.cfg.console
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/cisco/perimeter-fw1.cfg --extract=.cache/resources/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/branch-isr-02.cfg
+ [[ -n .cache/resources/cisco/campus-sw-access01.cfg ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/campus-sw-access01.cfg
+ extract_location=.cache/resources/cisco/campus-sw-access01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname .cache/resources/cisco/campus-sw-access01.cfg
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bK5XkyDYq1 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bK5XkyDYq1
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ output_dir=.cache/resources/cisco
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ ! -d .cache/resources/cisco ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'extracted_configuration={
  "vendor": "cisco",
+ IFS==
  "model": "",
+ read -r key value
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
++ command -v -- ./scripts/network-extract.shell

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4MzA1ODEwMzAwMAo
+ print '{
++ divisor=MTc0ODc1MzQ4MzA1ODEwMzAwMAo
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ source ./scripts/devops-helpers.shell
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
++ [[ -n '' ]]

++ readonly __DEVOPS_HELPERS_SOURCED=1
interface GigabitEthernet0/0/1
++ mktemp -d
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
++ __DEVOPS_HELPERS_SOURCED=1
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
++ [[ 5 -lt 4 ]]
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
++ alias parse-listings--helper=parse_listings__helper
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ alias network-configs--helper=network_configs__helper
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
++ alias network-extract--helper=network_extract__helper
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT

object network Hydra-Link
 host 198.51.100.75
 description Branch NAT egress

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ [[ config =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ local target_config=configs/cisco/perimeter-fw1.cfg
+ search_terms=()
+ [[ config =~ ^(console|o)$ ]]
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ which awk
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XtIEK2PGQq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XtIEK2PGQq
+ newline 2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local count=2
+ (( i = 0 ))
++ [[ -n '' ]]
+ (( i < count ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ echo
+ (( i++ ))
++ [[ 5 -lt 4 ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
++ alias list-file=list_file
+ [[ -n Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
++ alias log-error=log_error
+ echo -e 'Configuration File [ .cache/resources/cisco/branch-isr-02.cfg ]'
++ alias log-info=log_info
+ newline
++ alias log-warn=log_warn
+ local count=1
+ (( i = 0 ))
++ alias print-message=message
+ (( i < count ))
++ alias print-newline=newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/branch-isr-02.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ tr -d '\r'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --extract=.cache/resources/cisco/perimeter-fw1.cfg
++ alias system-metrics=system_metrics
+ touch logs/console/network-extract.console
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ grep -v '^#'
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/campus-sw-access01.cfg')
+ declare -a execute
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ newline
+ [[ extract =~ ^(console|o)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-branch-vpn-01.cfg --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ local count=1
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ local extract_location=.cache/resources/cisco/perimeter-fw1.cfg
+ echo
+ [[ extract =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ oIFS=' 	
+ [[ extract =~ ^(search|s)$ ]]
'
++ actions_logfile=./logs/console/run.console
+ [[ extract == \h\e\l\p ]]
+ local first_search_entry=10.0.0.1
++ touch ./logs/console/run.console
+ [[ false == true ]]
+ local last_search_entry=203.0.113.25
+ [[ extract == \d\e\b\u\g ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console ]]
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/dmz-fw2-backup.cfg
++ echo -e --search=.cache/ips.list
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ printf '%*s' 12 ''
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console ]]
+ local 'indent=            '
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/cisco/campus-sw-access01.cfg'
+ [[ -n                 configs/cisco/campus-sw-access01.cfg ]]
+ local 'message=                configs/cisco/campus-sw-access01.cfg'
+ echo -e '                configs/cisco/campus-sw-access01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ search =~ ^(search|s)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+++ base64
+ [[ platform == \h\e\l\p ]]
+ [[ search == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/campus-sw-access01.cfg
+ [[ -n .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --config=configs/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/cisco/dmz-fw2-backup.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tMQ89qHNqJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.tMQ89qHNqJ
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4MzA4MDM2MTAwMAo
++ divisor=MTc0ODc1MzQ4MzA4MDM2MTAwMAo
++ mktemp -d
+ source ./scripts/devops-helpers.shell
++ dirname .cache/resources/cisco/dmz-fw2-backup.cfg
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ local 'extracted_configuration={
+ export logs_location=logs
  "vendor": "cisco",
  "model": "",
+ logs_location=logs
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
+ mkdir -p logs/console

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ [[ config =~ ^(config|c)$ ]]
object-group network Floor-Networks
+ output_dir=.cache/resources/cisco
 description End-user and service devices
+ [[ ! -d .cache/resources/cisco ]]
+ local target_config=configs/fortinet/fg-branch-vpn-01.cfg
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ [[ config =~ ^(console|o)$ ]]
 network-object host 10.10.10.10 ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnjOwF8NPi
interface Vlan1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnjOwF8NPi
+ sed '1{/^[[:space:]]*$/d;}'
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ command -v -- ./scripts/network-extract.shell
object-group network Floor-Networks
+ export 'nl=\n'
 description End-user and service devices
+ nl='\n'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ source ./scripts/devops-resources.shell
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ [[ -n '' ]]

++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
++ [[ 5 -lt 4 ]]
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --extract=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --verbose
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-newline=newline
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ dirname -- ./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/cisco/campus-sw-access01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS=' 	
+ IFS==
'
+ read -r key value
+ [[ -z '' ]]
+ local SCRIPT_DIR=./scripts
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ local script_filename=cisco-configs.awk
+ [[ -z true ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z '' ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ 6 -eq 0 ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ main --search=.cache/ips.list --config=configs/fortinet/fg-campus-core.cfg --extract=.cache/resources/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console --verbose
++ which awk
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=fortinet
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ echo -e --search=.cache/ips.list
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console ]]
++ grep -v '^#'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/dmz-fw2-backup.cfg')
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ declare -a execute
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ which awk
+++ base64
+ local first_search_entry=10.0.0.1
+ [[ search =~ ^(config|c)$ ]]
+ local last_search_entry=203.0.113.25
+ [[ search =~ ^(console|o)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ search =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+++ tr -dc a-zA-Z0-9
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ local search_pattern=.cache/ips.list
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local count=17
+ for xitem in "${@}"
+ ((  count == 0  ))
+ IFS==
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ read -r key value
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ echo
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ (( i++ ))
+ (( i < count ))
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ message 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ configs/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto configs/cisco/perimeter-fw1.cfg
++ echo -e --config=configs/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local 'indent=            '
+ [[ true == true ]]
++ export divisor=MTc0ODc1MzQ4MzEwNjkzMzAwMAo
++ divisor=MTc0ODc1MzQ4MzEwNjkzMzAwMAo
+ newline
+ source ./scripts/devops-helpers.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ logger =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ mktemp -d
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ logger =~ ^(platform|p)$ ]]
+ message '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 configs/cisco/dmz-fw2-backup.cfg ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local 'message=                configs/cisco/dmz-fw2-backup.cfg'
+ echo -e '                configs/cisco/dmz-fw2-backup.cfg'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ newline
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+ (( i++ ))
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ result=0
+ alias parse-cisco=main
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C07np78olT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C07np78olT
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
++ echo -e --verbose
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --extract=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j29VR0K1uQ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j29VR0K1uQ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ script_filename=network-extract.shell
+ script_filename=network-extract
++ [[ 5 -lt 4 ]]
++ dirname .cache/resources/cisco/perimeter-fw1.cfg
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
+ touch logs/console/network-extract.console
++ alias exit-error=exit_error
++ alias list-file=list_file
+ [[ verbose =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ [[ verbose =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias log-warn=log_warn
+ [[ verbose =~ ^(logger|l)$ ]]
++ alias print-message=message
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias print-newline=newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ alias pause=pause
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias print-line=print
+ local verbose=true
+ IFS=' 	
'
++ alias print-file=print_file
+ [[ -z '' ]]
+ debug=false
++ alias relative-configpath=relative_configpath
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console ]]
++ alias system-metrics=system_metrics
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
++ alias validate-address=validate_address
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ local 'extracted_configuration={
+ output_dir=.cache/resources/cisco
  "vendor": "cisco",
+ [[ ! -d .cache/resources/cisco ]]
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
+ [[ extract =~ ^(config|c)$ ]]
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

+ [[ extract =~ ^(console|o)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ [[ extract =~ ^(extract|x)$ ]]
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
+ local extract_location=.cache/resources/fortinet/fg-campus-core.cfg
 description Backup inside NAT IP
+ [[ extract =~ ^(logger|l)$ ]]

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ [[ extract =~ ^(platform|p)$ ]]
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
++ tr -d '\r'
 description Global secure relay
+ [[ extract =~ ^(search|s)$ ]]
 network-object host 192.0.2.50'
+ [[ extract == \h\e\l\p ]]
++ grep -v '^\s*$'
+ result=0
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

++ grep -v '^#'
+ [[ 6 -eq 0 ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

+ main --search=.cache/ips.list --config=configs/fortinet/fg-testing-config.cfg --extract=.cache/resources/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console --verbose
interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
++ command -v -- ./scripts/network-extract.shell
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP
+ oIFS=' 	
'

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT
+ for xitem in "${@}"

object network Sentinel-NAT
 host 203.0.113.25
+ IFS==
 description Corporate NAT edge
+ read -r key value

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
+ local SCRIPT_PATH=./scripts/network-extract.shell
 network-object host 192.0.2.50 ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
++ echo -e --platform=fortinet
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=.cache/ips.list
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

++ sed -e '1s|^\(-\)\{1,\}||'
object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface

object network Titan-WLAN-Host
+ local first_search_entry=10.0.0.1
 host 192.168.100.100
 description Backup inside NAT IP

+ local last_search_entry=203.0.113.25
object network Shield-WiFi-Alias
 host 10.10.10.10
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
 description Guest NAT

+ [[ true == true ]]
object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto configs/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
+ local SCRIPT_DIR=./scripts
++ targets_location=targets
+ local script_filename=cisco-configs.awk
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ newline 2
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ search =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ local count=2
+ [[ search == \h\e\l\p ]]
+ (( i = 0 ))
+ [[ search == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ echo
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ echo
++ which awk
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+++ date +%s%N
+ cat -n .cache/resources/cisco/dmz-fw2-backup.cfg
+++ base64
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
++ echo -e --config=configs/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ -n .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ extract_location=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=MTc0ODc1MzQ4MzEzMTcwMjAwMAo
++ divisor=MTc0ODc1MzQ4MzEzMTcwMjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/cisco/perimeter-fw1.cfg')
++ [[ 5 -lt 4 ]]
+ declare -a execute
+ newline
+ [[ config =~ ^(config|c)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ logger =~ ^(config|c)$ ]]
+ local count=1
+ [[ logger =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ local target_config=configs/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
++ alias network-extract--helper=network_extract__helper
++ which awk
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --extract=.cache/resources/fortinet/fg-testing-config.cfg
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ true == true ]]
++ mktemp -d
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console ]]
++ printf '%*s' 12 ''
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--dmz-fw2-backup.cfg.console
+ script_filename=network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ local 'indent=            '
+ network_extract__console=logs/console/network-extract.console
+ [[ true == true ]]
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(config|c)$ ]]
+ newline
+ [[ verbose =~ ^(config|c)$ ]]
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(logger|l)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ [[ extract == \h\e\l\p ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\e\b\u\g ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local verbose=true
+ read -r key value
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS=' 	
'
+ message '                configs/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ [[ -n                 configs/cisco/perimeter-fw1.cfg ]]
+ debug=false
+ local 'message=                configs/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ echo -e '                configs/cisco/perimeter-fw1.cfg'
+ dry_run=false
+ [[ -z true ]]
+ newline
+ [[ -z '' ]]
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ console_output=false
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console ]]
+ (( i++ ))
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/cisco/perimeter-fw1.cfg
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ result=0
+ exit 0
++ grep -v '^\s*$'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cPH1wefObV ]]
+ [[ 6 -eq 0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cPH1wefObV
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.M1itzmzdgs
+ local SCRIPT_DIR=./scripts
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.M1itzmzdgs
+ main --search=.cache/ips.list --config=configs/misc/fw1.cfg --extract=.cache/resources/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console --verbose
+ local script_filename=fortinet-configs.awk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ export 'nl=\n'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ grep -v '^#'
+ oIFS=' 	
'
+ for xitem in "${@}"
++ [[ -n '' ]]
+ IFS==
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ read -r key value
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ which awk
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --search=.cache/ips.list
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
+ echo
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ (( i++ ))
  "hostname": "perimeter-fw1"
+ (( i < count ))
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
+ local 'prompt_message=Enter configuration file to be parsed: '
 description External Internet-facing Interface
+ [[ -z configs/fortinet/fg-campus-core.cfg ]]

interface GigabitEthernet0/1
+ [[ -z fortinet ]]
 nameif inside
 security-level 100
+ [[ true == true ]]
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
+ newline
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ local count=1

+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ (( i < count ))
object-group network Panther-Edge
+ echo
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ (( i++ ))

+ (( i < count ))
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ message 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ result=0
+ local 'message=Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ configs/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ sed -e '1s|^\(-\)\{1,\}||'
  "hostname": "perimeter-fw1"
+ ls -al --color=auto configs/fortinet/fg-campus-core.cfg
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
++ IFS=,
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
++ export actions_logfile=./logs/console/run.console
+ [[ search == \h\e\l\p ]]
++ actions_logfile=./logs/console/run.console
+ [[ search == \d\e\b\u\g ]]
++ touch ./logs/console/run.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
+ sed '1{/^[[:space:]]*$/d;}'
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
++ which awk
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
++ echo -e --config=configs/misc/fw1.cfg
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ config =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ] ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ local target_config=configs/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ echo -e 'Configuration File [ .cache/resources/cisco/perimeter-fw1.cfg ]'
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ [[ config =~ ^(logger|l)$ ]]
+ local count=1
+++ date +%s%N
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ -n .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ config =~ ^(search|s)$ ]]
+ echo
+ [[ config == \h\e\l\p ]]
+ (( i++ ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
+ [[ config == \d\e\b\u\g ]]
+ final_output=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config == \d\r\y\-\r\u\n ]]
+ cat -n .cache/resources/cisco/perimeter-fw1.cfg
+ extract_location=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ read -r key value
+ [[ true == true ]]
+++ base64
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ tr -dc a-zA-Z0-9
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 configs/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                configs/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                configs/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
++ dirname .cache/resources/fortinet/fg-campus-core.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --extract=.cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-branch-vpn-01.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ output_dir=.cache/resources/fortinet
+ newline
++ export divisor=MTc0ODc1MzQ4MzE2MTE3NDAwMAo
+ [[ ! -d .cache/resources/fortinet ]]
++ divisor=MTc0ODc1MzQ4MzE2MTE3NDAwMAo
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
++ [[ -n '' ]]
+ [[ true == true ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ command -v -- ./scripts/network-extract.shell
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ grep -v '^\s*$'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
++ grep -v '^#'
+ logs_location=logs
+ mkdir -p logs/console
++ dirname -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --platform=cisco
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
++ mktemp -d
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--perimeter-fw1.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ script_filename=network-extract.shell
+ [[ true == true ]]
+ script_filename=network-extract
+ local SCRIPT_DIR=./scripts
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ local script_filename=fortinet-configs.awk
+ touch logs/console/network-extract.console
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ local 'extracted_configuration={
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  "version": "v7.2.5.F",
  "domain": ""
+ newline
  "hostname": "fg-branch-vpn-01"
}
+ local count=1

+ (( i = 0 ))
#hostname="fg-branch-vpn-01"
+ (( i < count ))
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ echo
+ (( i++ ))
+ (( i < count ))
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
+ local 'prompt_message=Enter configuration file to be parsed: '
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ [[ -z configs/fortinet/fg-testing-config.cfg ]]
  set comment "Primary LAN gateway"
 next
+ [[ -z fortinet ]]
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ [[ true == true ]]
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ newline
  set comment "Wakandan data store"
 next
 edit "Public-Test"
+ local count=1
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
+ (( i = 0 ))
 next
 edit "Guardians-Relay"
+ (( i < count ))
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
+ echo
end'
+ (( i++ ))
+ (( i < count ))
+ result=0
+ message 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n {
  "vendor": "fortinet",
+ [[ -n Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local 'message=Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ echo -e 'Target Config: [ configs/fortinet/fg-testing-config.cfg ] ( fortinet )'
}

++ which awk
+ ls -al --color=auto configs/fortinet/fg-testing-config.cfg
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iI542AJkX7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.iI542AJkX7
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.03xkVEOmhc
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.03xkVEOmhc
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ sed '1{/^[[:space:]]*$/d;}'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 next
end

config firewall address
+ export 'nl=\n'
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
+ nl='\n'
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ source ./scripts/devops-resources.shell
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ alias detect-vendor=detect_vendor
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
++ alias exit-error=exit_error
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
+ [[ 6 -eq 0 ]]
 edit "wan1"
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
+ main --search=.cache/ips.list --config=configs/misc/fw3.cfg --extract=.cache/resources/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console --verbose
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
++ alias list-file=list_file
 next
end

config firewall address
 edit "IronMan-HQ"
++ alias log-error=log_error
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
++ alias log-info=log_info
+ oIFS=' 	
'
  set comment "QA node in Peter's Lab"
++ alias log-warn=log_warn
 next
+ for xitem in "${@}"
 edit "Panther-Vault"
+ IFS==
++ alias print-message=message
+ read -r key value
  set subnet 192.168.1.10 255.255.255.255
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
  set comment "Wakandan data store"
 next
 edit "Public-Test"
++ alias print-newline=newline
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
++ alias pause=pause
++ alias print-line=print
+ echo -en '{
  "vendor": "fortinet",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
++ alias print-file=print_file
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
++ alias relative-configpath=relative_configpath
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
end

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
++ alias system-metrics=system_metrics
  set comment "Main node at Stark Tower"
 next
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-campus-core.cfg')
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ declare -a execute
++ echo -e --search=.cache/ips.list
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ [[ -n .cache/resources/fortinet/fg-testing-config.cfg ]]
+ local count=2
+ [[ cfg == \c\f\g ]]
+ (( i = 0 ))
+ final_output=.cache/resources/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ extract_location=.cache/resources/fortinet/fg-testing-config.cfg
+ echo
+ [[ logger =~ ^(console|o)$ ]]
+ (( i++ ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ]]
+ IFS==
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ read -r key value
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ dirname .cache/resources/fortinet/fg-testing-config.cfg
++ export actions_logfile=./logs/console/run.console
+ local awk_bin=/usr/bin/awk
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ output_dir=.cache/resources/fortinet
+ [[ ! -d .cache/resources/fortinet ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --config=configs/misc/fw3.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-campus-core.cfg'
+ [[ -n                 configs/fortinet/fg-campus-core.cfg ]]
+ local 'message=                configs/fortinet/fg-campus-core.cfg'
+ echo -e '                configs/fortinet/fg-campus-core.cfg'
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
++ command -v -- ./scripts/network-extract.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console ]]
++ targets_logfile=logs/jobs/targets.jobs
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-campus-core.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
++ dirname -- ./scripts/network-extract.shell
+++ date +%s%N
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ grep -v '^#'
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --extract=.cache/resources/misc/fw3.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-branch-vpn-01.cfg.console
++ export divisor=MTc0ODc1MzQ4MzE4OTk3MzAwMAo
++ divisor=MTc0ODc1MzQ4MzE4OTk3MzAwMAo
++ which awk
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
++ alias network-extract--helper=network_extract__helper
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ newline

#hostname="fg-campus-core"
+ local count=1
#model="FortiGate-200F"
+ (( i = 0 ))

config system interface
+ (( i < count ))
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
+ echo
 next
+ (( i++ ))
end
+ (( i < count ))

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ local 'prompt_message=Enter configuration file to be parsed: '
  set comment "Wanda’s chaos relay"
 next
end'
+ [[ -z configs/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
+ alias parse-cisco=main
+ newline
 edit "wifi"
+ local count=1
  set ip 192.168.100.100 255.255.255.0
+ set -euo pipefail
+ (( i = 0 ))
  set alias "Wireless VLAN"
+ export LC_ALL=C
 next
+ LC_ALL=C
+ (( i < count ))
end
+ echo

config firewall address
+ [[ -z x ]]
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
 edit "Shield-WiFi"
+ (( i < count ))
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
+ [[ extract =~ ^(console|o)$ ]]
 next
+ message 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
 edit "Titan-WLAN-Host"
+ [[ extract =~ ^(extract|x)$ ]]
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
+ local extract_location=.cache/resources/misc/fw3.cfg
end

+ export logs_location=logs
+ [[ -n Target Config: [ configs/misc/fw1.cfg ] ( cisco ) ]]
config firewall address
+ [[ extract =~ ^(logger|l)$ ]]
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ local 'message=Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
+ logs_location=logs
  set comment "Captain America’s secure endpoint"
 next
+ echo -e 'Target Config: [ configs/misc/fw1.cfg ] ( cisco )'
 edit "Vision-Link"
+ [[ extract =~ ^(platform|p)$ ]]
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
+ ls -al --color=auto configs/misc/fw1.cfg
 next
+ [[ extract =~ ^(search|s)$ ]]
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ [[ extract == \h\e\l\p ]]
  set comment "Wanda’s chaos relay"
+ [[ extract == \d\e\b\u\g ]]
 next
end ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ mkdir -p logs/console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.If1oDvNsiL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.If1oDvNsiL
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

++ IFS=,
config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Shield-WiFi"
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' 'configs/fortinet/fg-testing-config.cfg')
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ declare -a execute
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
++ echo -e --platform=cisco
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

++ sed -e '1s|^\(-\)\{1,\}||'
config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
++ which awk
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQy6YsvELU
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQy6YsvELU
+ [[ platform =~ ^(config|c)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ [[ platform =~ ^(console|o)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
++ [[ -n '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ newline 2
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ local count=2
+ IFS==
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ read -r key value
+ (( i = 0 ))
++ alias exit-error=exit_error
+ (( i < count ))
+ [[ -n .cache/resources/misc/fw1.cfg ]]
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ final_output=.cache/resources/misc/fw1.cfg
+ (( i < count ))
+ echo
+ extract_location=.cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias list-file=list_file
++ alias log-error=log_error
+ message 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
++ alias log-info=log_info
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
++ alias log-warn=log_warn
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-campus-core.cfg ]'
+ newline
++ alias print-message=message
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ alias print-newline=newline
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-campus-core.cfg
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname .cache/resources/misc/fw1.cfg
++ alias system-metrics=system_metrics
++ printf '%*s' 12 ''
+ local 'indent=            '
++ alias validate-address=validate_address
+ [[ true == true ]]
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ newline
+ local count=1
++ export 'nl=\n'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
++ nl='\n'
+ (( i < count ))
++ export cache_location=.cache
+ echo
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ mkdir -p logs/console logs/jobs
+ [[ 6 -eq 0 ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch1.conf --extract=.cache/resources/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console --verbose
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                configs/fortinet/fg-testing-config.cfg'
+ [[ -n                 configs/fortinet/fg-testing-config.cfg ]]
+ local 'message=                configs/fortinet/fg-testing-config.cfg'
+ oIFS=' 	
'
+ echo -e '                configs/fortinet/fg-testing-config.cfg'
+ for xitem in "${@}"
+ newline
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/fortinet-configs.awk configs/fortinet/fg-testing-config.cfg
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ [[ logger =~ ^(search|s)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
++ export targets_location=targets
+ result=0
++ targets_location=targets
+ [[ -n {
  "vendor": "fortinet",
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
++ which awk
end ]]
++ echo -e --config=configs/misc/switch1.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ print '{
+ local verbose=true
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ IFS=' 	
  "domain": ""
  "hostname": "fg-branch-vpn-01"
'
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ -z '' ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ debug=false
+++ date +%s%N
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -z '' ]]
+ dry_run=false

+ [[ -z true ]]
config firewall policy
+ [[ -z '' ]]
 edit 13
+ export console_output=false
  set name "Remote NAT"
+++ base64
+ console_output=false
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
  set action accept
+ script_helper=false
  set logtraffic all
 next
+ [[ false == true ]]
end'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console ]]
+ [[ .cache/ips.list != *,* ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
+ [[ -n {
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console ]]
  "vendor": "fortinet",
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-campus-core.cfg.console
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
+++ tr -dc a-zA-Z0-9
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch1.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ tr -d '\r'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
++ grep -v '^\s*$'
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw1.cfg')
+ declare -a execute
++ grep -v '^#'
+ newline 2
+ local count=2
++ export divisor=MTc0ODc1MzQ4MzIxNTA5NDAwMAo
+ (( i = 0 ))
++ divisor=MTc0ODc1MzQ4MzIxNTA5NDAwMAo
+ (( i < count ))
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
+ result=0
++ [[ -n '' ]]
+ [[ -n Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ] ]]
+ exit 0
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XtIEK2PGQq ]]
+ echo -e 'Configuration File [ .cache/resources/fortinet/fg-testing-config.cfg ]'
++ [[ 5 -lt 4 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XtIEK2PGQq
++ echo -e --extract=.cache/resources/misc/switch1.conf
+ newline
++ which awk
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/fortinet/fg-testing-config.cfg
++ alias parse-listings--helper=parse_listings__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ local awk_bin=/usr/bin/awk
+ (( i = 0 ))
+ (( i < count ))
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/fw3.cfg ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=.cache/resources/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ echo
+ (( i++ ))
+ [[ extract == \h\e\l\p ]]
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ message 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Target Config: [ configs/misc/fw3.cfg ] ( cisco ) ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local 'message=Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ for xitem in "${@}"
+ echo -e 'Target Config: [ configs/misc/fw3.cfg ] ( cisco )'
+ IFS==
+ ls -al --color=auto configs/misc/fw3.cfg
+ read -r key value
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'indent=            '
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console ]]
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw1.cfg'
+ [[ -n                 configs/misc/fw1.cfg ]]
+ local 'message=                configs/misc/fw1.cfg'
+ echo -e '                configs/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ echo -e --platform=cisco
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw1.cfg
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fg-testing-config.cfg.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ --search=.cache/ips.list =~ ^-*(h|help)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ main --search=.cache/ips.list --config=configs/misc/switch3.conf --extract=.cache/resources/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console --verbose
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n .cache/resources/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=.cache/resources/misc/fw3.cfg
+ extract_location=.cache/resources/misc/fw3.cfg
++ dirname .cache/resources/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
++ echo -e --search=.cache/ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
+ result=0
 network-object host 172.18.1.20
+ exit 0
 network-object host 192.168.1.10

object network Kent-Server
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnjOwF8NPi ]]
 host 10.0.2.3
 description Internal mail & identity services

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.YnjOwF8NPi
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access

+ [[ logger =~ ^(config|c)$ ]]
object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ [[ logger =~ ^(console|o)$ ]]
+ echo -en '{
+ [[ logger =~ ^(extract|x)$ ]]
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ logger =~ ^(logger|l)$ ]]
  "domain": "",
  "hostname": ""
}

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ logger =~ ^(platform|p)$ ]]
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
+ [[ logger =~ ^(search|s)$ ]]
 network-object host 192.168.2.12

object-group network Krypton-Cloud
+ [[ logger == \h\e\l\p ]]
 description Cloud-facing external nodes
++ command -v -- ./scripts/network-extract.shell
 network-object host 198.51.100.75
+ [[ logger == \d\e\b\u\g ]]
 network-object host 203.0.113.25

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ logger == \d\r\y\-\r\u\n ]]
 network-object host 172.18.1.20
+ [[ search =~ ^(config|c)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
 network-object host 192.168.1.10

+ for xitem in "${@}"
object network Kent-Server
+ [[ search =~ ^(console|o)$ ]]
+ IFS==
 host 10.0.2.3
+ read -r key value
 description Internal mail & identity services

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access
+ [[ search =~ ^(extract|x)$ ]]

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=.cache/ips.list
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=configs/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw1.cfg
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=configs/misc/switch3.conf
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
++ which awk
+ IFS==
+ IFS=' 	
+ read -r key value
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ echo -e --extract=.cache/resources/misc/switch3.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
++ IFS=,
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/fw3.cfg')
+ declare -a execute
+ [[ extract =~ ^(config|c)$ ]]
++ which awk
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ local extract_location=.cache/resources/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ IFS==
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console ]]
+ read -r key value
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw1.cfg.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch1.conf
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ result=0
+ local 'indent=            '
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j29VR0K1uQ ]]
+ [[ true == true ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.j29VR0K1uQ
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/fw3.cfg'
+ [[ -n                 configs/misc/fw3.cfg ]]
+ local 'message=                configs/misc/fw3.cfg'
+ echo -e '                configs/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/fw3.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n .cache/resources/misc/switch1.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch1.conf
+ extract_location=.cache/resources/misc/switch1.conf
++ dirname .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
+ [[ logger =~ ^(extract|x)$ ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

+ [[ logger =~ ^(logger|l)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0
+ [[ logger =~ ^(platform|p)$ ]]

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ [[ logger =~ ^(search|s)$ ]]
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator
+ [[ logger == \h\e\l\p ]]

object network Edge-Terminal
+ [[ logger == \d\e\b\u\g ]]
 host 172.16.0.5
 description Internet firewall handoff
+ [[ logger == \d\r\y\-\r\u\n ]]

object-group network Shield-WiFi
+ [[ logger == \v\e\r\b\o\s\e ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
+ for xitem in "${@}"
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ IFS==
 host 10.10.10.10
+ read -r key value
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
+ output_dir=.cache/resources/misc
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
+ [[ ! -d .cache/resources/misc ]]
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
++ command -v -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
+ local SCRIPT_PATH=./scripts/network-extract.shell
 host 10.10.10.10
++ echo -e --verbose
 description Guest NAT'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
++ dirname -- ./scripts/network-extract.shell
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ newline 2
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ local SCRIPT_DIR=./scripts
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ local script_filename=cisco-configs.awk
+ local count=2
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z true ]]
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z '' ]]
+ (( i < count ))
+ export console_output=false
+ echo
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ script_helper=false
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ (( i < count ))
+ [[ -z .cache/ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ true == true ]]
+ [[ -f .cache/ips.list ]]
+ [[ .cache/ips.list != *,* ]]
+ mapfile -t search_terms
+ message 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ [[ -n Configuration File [ .cache/resources/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ .cache/resources/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/fw3.cfg
++ which awk
++ tr -d '\r'
++ grep -v '^\s*$'
++ grep -v '^#'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ IFS=,
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console ]]
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch1.conf')
+ declare -a execute
+ local first_search_entry=10.0.0.1
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=10.0.0.1, ... ,203.0.113.25'
+ [[ true == true ]]
++ which awk
+ message 'Search Pattern: [ .cache/ips.list ]'
+ [[ -n Search Pattern: [ .cache/ips.list ] ]]
+ local 'message=Search Pattern: [ .cache/ips.list ]'
+ echo -e 'Search Pattern: [ .cache/ips.list ]'
+ local count=17
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,203.0.113.25 ] (17)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z configs/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ configs/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ configs/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto configs/misc/switch3.conf
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--fw3.cfg.console
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch1.conf'
+ [[ -n                 configs/misc/switch1.conf ]]
+ local 'message=                configs/misc/switch1.conf'
+ echo -e '                configs/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch1.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.M1itzmzdgs ]]
+ [[ -n .cache/resources/misc/switch3.conf ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.M1itzmzdgs
+ [[ conf == \c\o\n\f ]]
+ final_output=.cache/resources/misc/switch3.conf
+ extract_location=.cache/resources/misc/switch3.conf
++ dirname .cache/resources/misc/switch3.conf
+ output_dir=.cache/resources/misc
+ [[ ! -d .cache/resources/misc ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0

interface Vlan10
++ dirname -- ./scripts/network-extract.shell
 ip address 10.0.1.2 255.255.255.0

interface Vlan20
 ip address 192.168.1.10 255.255.255.0

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline 2
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch1.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch1.conf
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console ]]
++ IFS=,
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
++ echo 10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' 'configs/misc/switch3.conf')
+ declare -a execute
++ which awk
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
+ local awk_bin=/usr/bin/awk
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ local 'awk_args=-v targets="10.0.0.1, ... ,203.0.113.25"'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch1.conf.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                configs/misc/switch3.conf'
+ [[ -n                 configs/misc/switch3.conf ]]
+ local 'message=                configs/misc/switch3.conf'
+ echo -e '                configs/misc/switch3.conf'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=10.0.0.1,10.0.1.2,10.0.2.3,10.10.10.10,172.16.0.5,172.16.1.6,172.18.1.20,172.31.255.254,192.0.2.50,192.168.0.1,192.168.0.100,192.168.1.10,192.168.1.11,192.168.2.12,192.168.100.100,198.51.100.75,203.0.113.25 -f ./scripts/extract/cisco-configs.awk configs/misc/switch3.conf
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.03xkVEOmhc ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.03xkVEOmhc
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

interface Vlan2
 ip address 172.16.1.6 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ [[ -n Configuration File [ .cache/resources/misc/switch3.conf ] ]]
+ local 'message=Configuration File [ .cache/resources/misc/switch3.conf ]'
+ echo -e 'Configuration File [ .cache/resources/misc/switch3.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n .cache/resources/misc/switch3.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OQaeRExxS5/network-extract--switch3.conf.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQy6YsvELU ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fQy6YsvELU
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ mktemp -d
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XVK39LPTT1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XVK39LPTT1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MHW0BUkeY0
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5e9lYdUAm7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MHW0BUkeY0
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5e9lYdUAm7
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ source ./scripts/devops-resources.shell
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
+ source ./scripts/devops-resources.shell
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ 5 -lt 4 ]]
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias validate-address=validate_address
++ export LC_ALL=C
++ LC_ALL=C
++ alias validate-address=validate_address
++ export 'nl=\n'
++ alias warning-message=warning
++ nl='\n'
++ alias warning-message=warning
++ export LC_ALL=C
++ export cache_location=.cache
++ LC_ALL=C
++ cache_location=.cache
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ mktemp -d
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
+++ date +%s%N
+++ date +%s%N
+++ base64
+++ base64
+++ base64
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUM3feMVQ4
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUM3feMVQ4
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+++ tr -dc a-zA-Z0-9
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
+++ tr -dc a-zA-Z0-9
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9e0X5vBNVp
++ LC_ALL=C
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9e0X5vBNVp
++ export 'nl=\n'
++ nl='\n'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export cache_location=.cache
++ cache_location=.cache
+ export 'nl=\n'
++ export logs_location=logs
+ nl='\n'
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export divisor=MTc0ODc1MzQ4NDE4NDM5ODAwMAo
++ divisor=MTc0ODc1MzQ4NDE4NDM5ODAwMAo
+ source ./scripts/devops-helpers.shell
++ alias validate-address=validate_address
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias warning-message=warning
++ export LC_ALL=C
++ export divisor=MTc0ODc1MzQ4NDE4NDkzNjAwMAo
++ LC_ALL=C
++ divisor=MTc0ODc1MzQ4NDE4NDkzNjAwMAo
++ __DEVOPS_HELPERS_SOURCED=1
++ export 'nl=\n'
++ [[ 5 -lt 4 ]]
++ nl='\n'
+ source ./scripts/devops-helpers.shell
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ [[ -n '' ]]
++ mkdir -p logs/console logs/jobs
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
+ LC_ALL=C
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ export divisor=MTc0ODc1MzQ4NDE4NTU2ODAwMAo
++ divisor=MTc0ODc1MzQ4NDE4NTU2ODAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
++ alias network-extract--helper=network_extract__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ export actions_logfile=./logs/console/run.console
+ mkdir -p logs/console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ alias parse-cisco=main
++ mktemp -d
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ mktemp -d
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6wCoRbAHFk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6wCoRbAHFk
+ script_filename=network-extract.shell
+ set -euo pipefail
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export LC_ALL=C
+ script_filename=network-extract
+ LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ export 'nl=\n'
+ network_extract__console=logs/console/network-extract.console
+ nl='\n'
+ touch logs/console/network-extract.console
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ export targets_location=targets
++ alias log-warn=log_warn
++ targets_location=targets
++ alias print-message=message
++ export targets_logfile=logs/jobs/targets.jobs
++ alias print-newline=newline
++ targets_logfile=logs/jobs/targets.jobs
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+ set -euo pipefail
+ export LC_ALL=C
++ alias relative-configpath=relative_configpath
+ LC_ALL=C
+++ date +%s%N
++ mktemp -d
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+++ base64
++ mktemp -d
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
+++ date +%s%N
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kola59HCoq
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpL7Wqp3AF
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kola59HCoq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpL7Wqp3AF
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export LC_ALL=C
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ 6 -eq 0 ]]
+ source ./scripts/devops-resources.shell
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bfqhxrzfkg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.axfa5l5bil/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ LC_ALL=C
++ [[ -n '' ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ export 'nl=\n'
+ [[ 6 -eq 0 ]]
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
++ nl='\n'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console --verbose
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console --verbose
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ export cache_location=.cache
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qmxijkdchk/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias exit-error=exit_error
++ alias exit-error=exit_error
+ oIFS=' 	
'
++ cache_location=.cache
+ for xitem in "${@}"
++ alias list-file=list_file
++ export logs_location=logs
++ alias list-file=list_file
+ oIFS=' 	
+ IFS==
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console --verbose
++ alias log-error=log_error
++ alias log-error=log_error
+ read -r key value
++ logs_location=logs
++ alias log-info=log_info
+ for xitem in "${@}"
+++ base64
++ alias log-warn=log_warn
++ alias log-info=log_info
++ alias print-message=message
+ IFS==
++ mkdir -p logs/console logs/jobs
++ alias print-newline=newline
+ read -r key value
++ alias log-warn=log_warn
++ alias print-message=message
++ alias pause=pause
++ alias print-newline=newline
++ alias print-line=print
+ oIFS=' 	
'
++ alias print-file=print_file
++ alias pause=pause
+ for xitem in "${@}"
++ alias relative-configpath=relative_configpath
+ IFS==
++ alias print-line=print
+ read -r key value
++ alias print-file=print_file
++ alias system-metrics=system_metrics
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias validate-address=validate_address
++ export 'nl=\n'
++ nl='\n'
++ alias warning-message=warning
++ export cache_location=.cache
++ export LC_ALL=C
++ LC_ALL=C
++ cache_location=.cache
++ export 'nl=\n'
++ nl='\n'
++ export logs_location=logs
++ export cache_location=.cache
++ logs_location=logs
++ cache_location=.cache
++ export logs_location=logs
++ mkdir -p logs/console logs/jobs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lC80mhKKKK
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lC80mhKKKK
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export divisor=MTc0ODc1MzQ4NDIwNzI5NDAwMAo
++ divisor=MTc0ODc1MzQ4NDIwNzI5NDAwMAo
+ source ./scripts/devops-helpers.shell
++ alias list-file=list_file
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias log-error=log_error
++ [[ 5 -lt 4 ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias parse-listings--helper=parse_listings__helper
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fm9sEjIPfW
++ alias print-line=print
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fm9sEjIPfW
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ alias print-file=print_file
+ export 'nl=\n'
++ alias network-configs--helper=network_configs__helper
+ nl='\n'
++ alias relative-configpath=relative_configpath
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ alias network-extract--helper=network_extract__helper
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
++ alias validate-address=validate_address
++ alias list-file=list_file
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias log-error=log_error
++ export 'nl=\n'
++ nl='\n'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list
++ export cache_location=.cache
++ alias log-info=log_info
++ cache_location=.cache
++ export logs_location=logs
++ alias log-warn=log_warn
++ logs_location=logs
++ alias print-message=message
++ mkdir -p logs/console logs/jobs
++ alias print-newline=newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
++ alias pause=pause
++ alias print-line=print
+ alias parse-cisco=main
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias system-metrics=system_metrics
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ export divisor=MTc0ODc1MzQ4NDIxMDc0NTAwMAo
++ divisor=MTc0ODc1MzQ4NDIxMDc0NTAwMAo
++ alias warning-message=warning
++ export LC_ALL=C
+ source ./scripts/devops-helpers.shell
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ export actions_logfile=./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ touch ./logs/console/run.console
++ alias network-extract--helper=network_extract__helper
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(logger|l)$ ]]
++ mktemp -d
+ [[ search == \h\e\l\p ]]
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ [[ search == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ export network_extract__console=logs/console/network-extract.console
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ network_extract__console=logs/console/network-extract.console
+ IFS==
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
+ IFS==
+ read -r key value
+ logs_location=logs
+ touch logs/console/network-extract.console
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ mktemp -d
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+++ date +%s%N
+ [[ 6 -eq 0 ]]
+ script_filename=network-extract.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4doqzcyqmz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ script_filename=network-extract
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console --verbose
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ touch logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1jAGviTC0
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5IKIsH9KTA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1jAGviTC0
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5IKIsH9KTA
+ oIFS=' 	
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
'
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ nl='\n'
+ IFS==
+ read -r key value
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ [[ -n '' ]]
+++ base64
++ alias exit-error=exit_error
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export targets_location=targets
++ targets_location=targets
++ alias detect-vendor=detect_vendor
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias exit-error=exit_error
+++ base64
+++ base64
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ alias print-file=print_file
++ alias print-file=print_file
+++ tr -dc a-zA-Z0-9
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+++ tr -dc a-zA-Z0-9
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+++ tr -dc a-zA-Z0-9
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ date +%s%N
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
++ alias system-metrics=system_metrics
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ export divisor=MTc0ODc1MzQ4NDIzMTY4ODAwMAo
++ export divisor=MTc0ODc1MzQ4NDIzMjk4MTAwMAo
++ divisor=MTc0ODc1MzQ4NDIzMTY4ODAwMAo
++ divisor=MTc0ODc1MzQ4NDIzMjk4MTAwMAo
+ [[ 6 -eq 0 ]]
+ source ./scripts/devops-helpers.shell
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc1MzQ4NDIzMTYyMDAwMAo
++ divisor=MTc0ODc1MzQ4NDIzMTYyMDAwMAo
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console --verbose
+ source ./scripts/devops-helpers.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
+ oIFS=' 	
++ readonly __DEVOPS_HELPERS_SOURCED=1
'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
++ [[ 5 -lt 4 ]]
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
+++ date +%s%N
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ export divisor=MTc0ODc1MzQ4NDIzNTkwNjAwMAo
+ [[ config =~ ^(search|s)$ ]]
++ divisor=MTc0ODc1MzQ4NDIzNTkwNjAwMAo
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z x ]]
+ source ./scripts/devops-helpers.shell
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ export logs_location=logs
+ logs_location=logs
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ mkdir -p logs/console
++ __DEVOPS_HELPERS_SOURCED=1
+ alias parse-cisco=main
++ [[ 5 -lt 4 ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+++ base64
++ alias parse-listings--helper=parse_listings__helper
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+++ tr -dc a-zA-Z0-9
+ alias parse-cisco=main
+ [[ -z x ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ [[ search =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ touch ./logs/console/run.console
+ [[ config =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ export network_extract__console=logs/console/network-extract.console
++ export divisor=MTc0ODc1MzQ4NDI0MjkxMjAwMAo
+ network_extract__console=logs/console/network-extract.console
+ set -euo pipefail
+ script_filename=network-extract
+ script_filename=network-extract
++ divisor=MTc0ODc1MzQ4NDI0MjkxMjAwMAo
+ touch logs/console/network-extract.console
+ IFS==
+ export LC_ALL=C
+ LC_ALL=C
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ export targets_location=targets
+ touch logs/console/network-extract.console
++ targets_location=targets
+ export network_extract__console=logs/console/network-extract.console
+ source ./scripts/devops-helpers.shell
++ export targets_logfile=logs/jobs/targets.jobs
+ network_extract__console=logs/console/network-extract.console
++ targets_logfile=logs/jobs/targets.jobs
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ mktemp -d
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
+++ base64
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ echo -e --extract=reports/10.0.2.3/cisco/branch-isr-02.cfg
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ echo -e --extract=reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uvzroegmpl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console --verbose
+++ tr -dc a-zA-Z0-9
+ [[ 6 -eq 0 ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaPs3JNwGQ
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kcdowqaorq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaPs3JNwGQ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ 6 -eq 0 ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console --verbose
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cmkwnd5ohz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ oIFS=' 	
+ [[ 6 -eq 0 ]]
++ [[ -n '' ]]
'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qmxijkdchk/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ export divisor=MTc0ODc1MzQ4NDI1NjIwNzAwMAo
++ divisor=MTc0ODc1MzQ4NDI1NjIwNzAwMAo
+ for xitem in "${@}"
+ source ./scripts/devops-helpers.shell
++ alias list-file=list_file
+ IFS==
+ read -r key value
++ alias log-error=log_error
++ [[ -n '' ]]
+ oIFS=' 	
+ set -euo pipefail
++ readonly __DEVOPS_HELPERS_SOURCED=1
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/172.31.255.254/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console --verbose
++ alias log-info=log_info
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console --verbose
++ __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ export LC_ALL=C
+ IFS==
++ alias log-warn=log_warn
+ script_filename=network-extract
+ [[ config =~ ^(config|c)$ ]]
+ oIFS=' 	
+ read -r key value
+ LC_ALL=C
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
'
+ export network_extract__console=logs/console/network-extract.console
'
+ for xitem in "${@}"
+ network_extract__console=logs/console/network-extract.console
++ alias print-message=message
+ IFS==
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
++ alias print-newline=newline
+ touch logs/console/network-extract.console
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ read -r key value
++ alias pause=pause
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(platform|p)$ ]]
++ alias print-line=print
+ read -r key value
+ [[ config =~ ^(search|s)$ ]]
++ alias print-file=print_file
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias relative-configpath=relative_configpath
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-configs--helper=network_configs__helper
+ for xitem in "${@}"
+ [[ extract =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
++ alias system-metrics=system_metrics
+ local extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ export divisor=MTc0ODc1MzQ4NDI1ODkxMDAwMAo
++ divisor=MTc0ODc1MzQ4NDI1ODkxMDAwMAo
+ [[ extract =~ ^(search|s)$ ]]
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ alias parse-listings--helper=parse_listings__helper
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ mktemp -d
++ alias network-configs--helper=network_configs__helper
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
++ alias network-extract--helper=network_extract__helper
+ mkdir -p logs/console
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ set -euo pipefail
+ local extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ export LC_ALL=C
+ LC_ALL=C
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
++ echo -e --extract=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ mktemp -d
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.axfa5l5bil/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/10.0.2.3/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ script_filename=network-extract.shell
+ read -r key value
+ script_filename=network-extract
++ export actions_logfile=./logs/console/run.console
+ export network_extract__console=logs/console/network-extract.console
++ actions_logfile=./logs/console/run.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ touch ./logs/console/run.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RSKTPtXuoj
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RSKTPtXuoj
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
++ [[ -n '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ [[ 5 -lt 4 ]]
+ IFS==
++ alias detect-vendor=detect_vendor
+ read -r key value
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ alias validate-address=validate_address
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
++ alias warning-message=warning
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ export LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ LC_ALL=C
+ [[ search =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
++ export 'nl=\n'
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list
++ nl='\n'
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ [[ extract =~ ^(extract|x)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
++ cache_location=.cache
+ [[ search == \h\e\l\p ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ [[ search == \d\e\b\u\g ]]
++ export logs_location=logs
+ [[ search == \d\e\b\u\g ]]
++ logs_location=logs
+ [[ search == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
++ mkdir -p logs/console logs/jobs
+ local extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ extract =~ ^(platform|p)$ ]]
+ script_filename=network-extract.shell
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ script_filename=network-extract
+ [[ extract == \h\e\l\p ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
++ echo -e --platform=cisco
+ for xitem in "${@}"
+ network_extract__console=logs/console/network-extract.console
+ IFS==
+ IFS==
+ touch logs/console/network-extract.console
+ read -r key value
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AhcVVLpug2
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AhcVVLpug2
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ sed -e '1s|^\(-\)\{1,\}||'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
+ set -euo pipefail
++ alias log-error=log_error
+ export LC_ALL=C
+ LC_ALL=C
++ alias log-info=log_info
++ export targets_location=targets
+ [[ 6 -eq 0 ]]
++ alias log-warn=log_warn
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cdicfxn0om/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
++ targets_location=targets
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console --verbose
++ alias print-message=message
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias print-newline=newline
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias validate-address=validate_address
++ mktemp -d
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
++ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.bfqhxrzfkg/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.1.2/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console --verbose
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list
+++ date +%s%N
+ oIFS=' 	
'
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.286dzt8wv8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.286dzt8wv8
+ [[ config =~ ^(console|o)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ [[ -n '' ]]
+ local target_platform=cisco
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ config =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias exit-error=exit_error
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
++ alias list-file=list_file
+ [[ platform == \h\e\l\p ]]
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ alias log-error=log_error
+ [[ config =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
++ alias log-info=log_info
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ alias log-warn=log_warn
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ config =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ export targets_location=targets
++ alias print-message=message
+ [[ config =~ ^(search|s)$ ]]
++ targets_location=targets
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias print-newline=newline
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \h\e\l\p ]]
++ export targets_logfile=logs/jobs/targets.jobs
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config == \d\r\y\-\r\u\n ]]
++ alias pause=pause
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ alias print-line=print
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
++ export actions_logfile=./logs/console/run.console
++ alias print-file=print_file
+ read -r key value
++ actions_logfile=./logs/console/run.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \v\e\r\b\o\s\e ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list
++ touch ./logs/console/run.console
++ alias relative-configpath=relative_configpath
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ [[ config == \d\e\b\u\g ]]
+ IFS==
+ [[ config == \d\r\y\-\r\u\n ]]
+ read -r key value
+ IFS==
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias system-metrics=system_metrics
+ read -r key value
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
++ alias warning-message=warning
+ [[ platform =~ ^(logger|l)$ ]]
++ export LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
+ read -r key value
++ LC_ALL=C
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
++ nl='\n'
+ [[ search =~ ^(platform|p)$ ]]
++ export cache_location=.cache
++ cache_location=.cache
+ [[ search =~ ^(search|s)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list
++ mkdir -p logs/console logs/jobs
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ search == \d\e\b\u\g ]]
+ IFS==
+ [[ search == \d\r\y\-\r\u\n ]]
+ read -r key value
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4NDI4NjMzNTAwMAo
++ divisor=MTc0ODc1MzQ4NDI4NjMzNTAwMAo
+ source ./scripts/devops-helpers.shell
+ local target_platform=cisco
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+++ date +%s%N
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
++ echo -e --extract=reports/172.16.1.6/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/172.31.255.254/misc/switch1.conf
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ search =~ ^(config|c)$ ]]
+ alias parse-cisco=main
++ export actions_logfile=./logs/console/run.console
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -z x ]]
+ [[ search =~ ^(logger|l)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export logs_location=logs
++ touch ./logs/console/run.console
+ logs_location=logs
++ sed -e '1s|^\(-\)\{1,\}||'
+ mkdir -p logs/console
+ [[ search =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(console|o)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ local extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.31.255.254/misc/switch1.conf
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export divisor=MTc0ODc1MzQ4NDI5NjUwMDAwMAo
+ for xitem in "${@}"
+ [[ extract =~ ^(logger|l)$ ]]
++ divisor=MTc0ODc1MzQ4NDI5NjUwMDAwMAo
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ source ./scripts/devops-helpers.shell
+ read -r key value
+++ date +%s%N
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ extract == \h\e\l\p ]]
+ IFS==
+ [[ extract =~ ^(search|s)$ ]]
++ [[ -n '' ]]
+ read -r key value
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --platform=fortinet
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+++ base64
+ read -r key value
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/misc/switch1.conf
+ [[ extract == \d\e\b\u\g ]]
++ alias network-configs--helper=network_configs__helper
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
++ alias network-extract--helper=network_extract__helper
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --extract=reports/10.0.2.3/misc/fw1.cfg
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract
+++ tr -dc a-zA-Z0-9
+ export network_extract__console=logs/console/network-extract.console
++ export targets_location=targets
+ network_extract__console=logs/console/network-extract.console
++ targets_location=targets
+ touch logs/console/network-extract.console
++ export targets_logfile=logs/jobs/targets.jobs
+ alias parse-cisco=main
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --platform=fortinet
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ echo -e --platform=cisco
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4NDMwNTUxMzAwMAo
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=MTc0ODc1MzQ4NDMwNTUxMzAwMAo
+ [[ extract =~ ^(extract|x)$ ]]
+ source ./scripts/devops-helpers.shell
+ local extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local target_config=.cache/resources/misc/switch1.conf
++ [[ -n '' ]]
+ [[ extract =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ config =~ ^(console|o)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ extract == \h\e\l\p ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(extract|x)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias parse-listings--helper=parse_listings__helper
+++ base64
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.puqhmhxfsq/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias network-configs--helper=network_configs__helper
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console --verbose
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ oIFS=' 	
+ export network_extract__console=logs/console/network-extract.console
'
+ network_extract__console=logs/console/network-extract.console
+ for xitem in "${@}"
+ touch logs/console/network-extract.console
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw1.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ alias parse-cisco=main
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ [[ platform =~ ^(console|o)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ platform =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ export console_output=false
+ [[ platform =~ ^(platform|p)$ ]]
+ console_output=false
+ local target_platform=fortinet
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ search_terms=()
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ declare -a search_terms
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ local target_platform=cisco
+ IFS==
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ IFS==
+ [[ platform =~ ^(search|s)$ ]]
+ read -r key value
+ [[ platform =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/10.0.1.2/misc/switch1.conf
+ mapfile -t search_terms
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ local target_platform=cisco
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ local target_platform=cisco
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \h\e\l\p ]]
+ for xitem in "${@}"
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ extract == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(extract|x)$ ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4NDMxMjUxNjAwMAo
++ divisor=MTc0ODc1MzQ4NDMxMjUxNjAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ echo -e --platform=cisco
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.4doqzcyqmz/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/172.16.0.5/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console --verbose
++ mktemp -d
+ oIFS=' 	
++ alias network-configs--helper=network_configs__helper
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias network-extract--helper=network_extract__helper
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --platform=cisco
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ [[ logger =~ ^(console|o)$ ]]
+ IFS==
+ script_filename=network-extract
+ [[ logger =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\r\y\-\r\u\n ]]
++ grep -v '^\s*$'
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ extract =~ ^(config|c)$ ]]
+ mkdir -p logs/console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ [[ platform =~ ^(config|c)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(extract|x)$ ]]
++ mktemp -d
+ IFS==
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMfp4A45g8
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMfp4A45g8
+ local target_platform=cisco
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ export 'nl=\n'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ nl='\n'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ source ./scripts/devops-resources.shell
+ IFS==
+ [[ logger =~ ^(config|c)$ ]]
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
++ [[ -n '' ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
++ [[ 5 -lt 4 ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ [[ logger =~ ^(search|s)$ ]]
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ alias exit-error=exit_error
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias list-file=list_file
+ [[ logger == \d\r\y\-\r\u\n ]]
++ alias log-error=log_error
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-info=log_info
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
++ alias log-warn=log_warn
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qpe6hrcxlg/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ alias print-message=message
++ alias print-newline=newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list --config=.cache/resources/cisco/access-sw1-west.cfg --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console --verbose
+ local first_search_entry=10.10.10.10
++ alias pause=pause
+ local last_search_entry=10.10.10.10
++ echo -e --platform=cisco
++ alias print-line=print
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ oIFS=' 	
'
+ [[ true == true ]]
+ for xitem in "${@}"
++ alias print-file=print_file
+ IFS==
+ read -r key value
++ alias relative-configpath=relative_configpath
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
++ alias system-metrics=system_metrics
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ search =~ ^(config|c)$ ]]
+ local count=1
+ [[ search =~ ^(console|o)$ ]]
+ ((  count == 0  ))
++ alias validate-address=validate_address
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
++ alias warning-message=warning
+ IFS==
+ read -r key value
++ export LC_ALL=C
++ LC_ALL=C
+ script_filename=network-extract.shell
++ export 'nl=\n'
+ script_filename=network-extract
++ nl='\n'
+ export network_extract__console=logs/console/network-extract.console
++ export cache_location=.cache
+ network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
+ touch logs/console/network-extract.console
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
++ export logs_location=logs
++ logs_location=logs
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ mkdir -p logs/console logs/jobs
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ echo
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3COY7zfI6J
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3COY7zfI6J
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i++ ))
+ export 'nl=\n'
+ nl='\n'
+ (( i < count ))
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ alias exit-error=exit_error
++ alias list-file=list_file
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias system-metrics=system_metrics
++ mktemp -d
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --verbose
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ config =~ ^(search|s)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ for xitem in "${@}"
+ [[ config == \h\e\l\p ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ export actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ IFS==
+ [[ config == \d\e\b\u\g ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console --verbose
+ read -r key value
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(logger|l)$ ]]
+ oIFS=' 	
'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ for xitem in "${@}"
++ actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ touch ./logs/console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ read -r key value
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local verbose=true
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS=' 	
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
'
+ [[ logger == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local verbose=true
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
+ IFS=' 	
+ [[ -z '' ]]
'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ debug=false
+ [[ -z '' ]]
+ debug=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -z '' ]]
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ search =~ ^(config|c)$ ]]
+ dry_run=false
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ dry_run=false
+ [[ -z '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ dry_run=false
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z true ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ local verbose=true
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list
+ [[ config =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console ]]
+ [[ search == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ search == \d\e\b\u\g ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ script_helper=false
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ config =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ console_output=false
+ [[ -z '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ debug=false
+ [[ config =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ [[ false == true ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ config == \d\e\b\u\g ]]
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ]]
+ export console_output=false
+ [[ config == \d\r\y\-\r\u\n ]]
+ search_terms=()
+ [[ config == \v\e\r\b\o\s\e ]]
+ console_output=false
+ dry_run=false
+ declare -a search_terms
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ]]
+ export console_output=false
+ IFS==
+ console_output=false
+ read -r key value
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list != *,* ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ -z '' ]]
+ [[ false == true ]]
+ script_helper=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ false == true ]]
+ script_helper=false
+ mapfile -t search_terms
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ search_terms=()
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ declare -a search_terms
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ search_terms=()
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]]
+ declare -a search_terms
+ search_terms=()
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list != *,* ]]
+ declare -a search_terms
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list != *,* ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ mapfile -t search_terms
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h7U8LnTrLO
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h7U8LnTrLO
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ alias detect-vendor=detect_vendor
++ touch ./logs/console/run.console
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ echo -e --extract=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ alias log-info=log_info
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
++ alias log-warn=log_warn
++ alias print-message=message
++ echo -e --verbose
++ alias print-newline=newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ echo -e --verbose
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/172.16.0.5/misc/fw3.cfg
++ echo -e --config=.cache/resources/cisco/access-sw1-west.cfg
++ tr -d '\r'
++ tr -d '\r'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ set -euo pipefail
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ tr -d '\r'
++ tr -d '\r'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ grep -v '^#'
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export actions_logfile=./logs/console/run.console
++ grep -v '^#'
+ export LC_ALL=C
+ LC_ALL=C
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ grep -v '^#'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local extract_location=reports/172.16.0.5/misc/fw3.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+++ date +%s%N
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ logger == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local target_config=.cache/resources/cisco/access-sw1-west.cfg
+ [[ logger == \d\e\b\u\g ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ for xitem in "${@}"
+ IFS==
+ [[ extract == \d\e\b\u\g ]]
+ IFS=' 	
'
+ read -r key value
+ [[ -z '' ]]
+ IFS==
+ debug=false
+ [[ -z '' ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ dry_run=false
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z true ]]
+ for xitem in "${@}"
+ [[ -z '' ]]
+ read -r key value
+ export console_output=false
+ IFS==
++ mktemp -d
++ mktemp -d
+++ base64
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+++ tr -dc a-zA-Z0-9
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+++ base64
++ echo -e --platform=cisco
+++ tr -dc a-zA-Z0-9
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
++ export targets_location=targets
++ targets_location=targets
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
++ export divisor=MTc0ODc1MzQ4NDM1ODYxMDAwMAo
++ divisor=MTc0ODc1MzQ4NDM1ODYxMDAwMAo
+ source ./scripts/devops-helpers.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRzNcfZzPX
++ __DEVOPS_HELPERS_SOURCED=1
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRzNcfZzPX
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0qh3dJKUPI
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0qh3dJKUPI
++ [[ 5 -lt 4 ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ export 'nl=\n'
+ nl='\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-resources.shell
++ alias parse-listings--helper=parse_listings__helper
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias exit-error=exit_error
++ alias network-configs--helper=network_configs__helper
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias network-extract--helper=network_extract__helper
++ alias log-warn=log_warn
+++ date +%s%N
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ export divisor=MTc0ODc1MzQ4NDM2MDQ5MzAwMAo
++ alias print-file=print_file
+ console_output=false
++ divisor=MTc0ODc1MzQ4NDM2MDQ5MzAwMAo
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ source ./scripts/devops-helpers.shell
++ alias relative-configpath=relative_configpath
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ alias system-metrics=system_metrics
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(config|c)$ ]]
++ alias system-metrics=system_metrics
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ alias parse-cisco=main
+ [[ verbose =~ ^(platform|p)$ ]]
++ alias validate-address=validate_address
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
++ alias warning-message=warning
++ export LC_ALL=C
+ [[ platform =~ ^(extract|x)$ ]]
++ LC_ALL=C
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ export 'nl=\n'
+ local target_platform=cisco
++ nl='\n'
+ [[ -z x ]]
+ [[ platform =~ ^(search|s)$ ]]
++ export cache_location=.cache
+ export logs_location=logs
++ cache_location=.cache
+ logs_location=logs
+ [[ platform == \h\e\l\p ]]
++ export logs_location=logs
+ [[ platform == \d\e\b\u\g ]]
+++ base64
++ logs_location=logs
+ mkdir -p logs/console
+ [[ platform == \d\r\y\-\r\u\n ]]
++ alias parse-listings--helper=parse_listings__helper
++ mkdir -p logs/console logs/jobs
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias validate-address=validate_address
+ IFS==
++ tr -d '\r'
+ read -r key value
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
++ grep -v '^\s*$'
++ alias network-configs--helper=network_configs__helper
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
++ export divisor=MTc0ODc1MzQ4NDM2ODA0NTAwMAo
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
++ divisor=MTc0ODc1MzQ4NDM2ODA0NTAwMAo
+ [[ logger =~ ^(platform|p)$ ]]
++ export actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(search|s)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
++ touch ./logs/console/run.console
++ [[ -n '' ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ script_filename=network-extract
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ export network_extract__console=logs/console/network-extract.console
+ local verbose=true
+ network_extract__console=logs/console/network-extract.console
+ IFS=' 	
'
+ [[ -z '' ]]
+ touch logs/console/network-extract.console
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ export actions_logfile=./logs/console/run.console
+ [[ -z true ]]
++ actions_logfile=./logs/console/run.console
+ [[ -z '' ]]
+ export console_output=false
++ alias parse-listings--helper=parse_listings__helper
+ console_output=false
++ touch ./logs/console/run.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-extract--helper=network_extract__helper
+ local first_search_entry=10.0.0.1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console ]]
+ local last_search_entry=10.0.0.1
+ [[ verbose =~ ^(search|s)$ ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ alias parse-cisco=main
+ [[ -z x ]]
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ grep -v '^\s*$'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ 6 -eq 0 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.kcdowqaorq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/172.18.1.20/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console --verbose
++ grep -v '^#'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ touch logs/console/network-extract.console
+++ date +%s%N
+++ date +%s%N
+ [[ logger =~ ^(console|o)$ ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
++ mktemp -d
+++ base64
+++ base64
+ IFS==
+ read -r key value
+++ tr -dc a-zA-Z0-9
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ [[ logger =~ ^(extract|x)$ ]]
+ network_extract__console=logs/console/network-extract.console
++ mktemp -d
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.buZpHAjmSP
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.buZpHAjmSP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ mktemp -d
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ export divisor=MTc0ODc1MzQ4NDM4OTAwODAwMAo
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ divisor=MTc0ODc1MzQ4NDM4OTAwODAwMAo
++ [[ 5 -lt 4 ]]
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc1MzQ4NDM4OTcxODAwMAo
++ alias detect-vendor=detect_vendor
++ divisor=MTc0ODc1MzQ4NDM4OTcxODAwMAo
++ alias exit-error=exit_error
++ [[ -n '' ]]
+ source ./scripts/devops-helpers.shell
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ alias list-file=list_file
++ [[ 5 -lt 4 ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ local first_search_entry=10.0.2.3
++ alias log-error=log_error
+ local last_search_entry=10.0.2.3
+ local count=1
++ alias log-info=log_info
+ ((  count == 0  ))
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
++ alias log-warn=log_warn
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ alias print-message=message
++ alias parse-listings--helper=parse_listings__helper
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias network-configs--helper=network_configs__helper
++ alias print-file=print_file
++ alias network-configs--helper=network_configs__helper
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias network-extract--helper=network_extract__helper
++ alias network-extract--helper=network_extract__helper
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list
+ alias parse-cisco=main
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ [[ -z x ]]
+ logs_location=logs
+ export logs_location=logs
+ mkdir -p logs/console
+ logs_location=logs
+ mkdir -p logs/console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WNDE7x4Dnn
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WNDE7x4Dnn
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SQIn8lcrDv
+ export 'nl=\n'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SQIn8lcrDv
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ [[ 5 -lt 4 ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-message=message
++ alias print-newline=newline
++ alias print-newline=newline
++ alias pause=pause
++ alias pause=pause
++ alias print-line=print
++ alias print-line=print
++ echo -e --verbose
++ alias print-file=print_file
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ export actions_logfile=./logs/console/run.console
++ alias system-metrics=system_metrics
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ alias validate-address=validate_address
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ alias warning-message=warning
++ export LC_ALL=C
++ export 'nl=\n'
++ LC_ALL=C
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export 'nl=\n'
++ export logs_location=logs
++ nl='\n'
++ logs_location=logs
++ export cache_location=.cache
++ cache_location=.cache
++ mkdir -p logs/console logs/jobs
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ script_filename=network-extract.shell
+ [[ 6 -eq 0 ]]
+ export network_extract__console=logs/console/network-extract.console
+ script_filename=network-extract
+ network_extract__console=logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.axfa5l5bil/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ touch logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qmxijkdchk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.0.2.3/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console --verbose
+ touch logs/console/network-extract.console
+ oIFS=' 	
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/10.0.0.1/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ [[ search =~ ^(platform|p)$ ]]
+ [[ true == true ]]
'
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ IFS==
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.cdicfxn0om/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console --verbose
+ [[ 6 -eq 0 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sbhotf2c4e/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ oIFS=' 	
+ [[ verbose =~ ^(console|o)$ ]]
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
'
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]]
+ newline
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local count=1
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ date +%s%N
++ echo -e --verbose
+++ base64
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ [[ config =~ ^(config|c)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list
+ [[ search =~ ^(search|s)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+++ date +%s%N
++ export divisor=MTc0ODc1MzQ4NDQxODI0NDAwMAo
++ divisor=MTc0ODc1MzQ4NDQxODI0NDAwMAo
+ local target_config=.cache/resources/misc/fw1.cfg
++ grep -v '^\s*$'
+ source ./scripts/devops-helpers.shell
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ (( i++ ))
++ [[ -n '' ]]
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ] ]]
+ [[ search =~ ^(config|c)$ ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config =~ ^(platform|p)$ ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ [[ search =~ ^(console|o)$ ]]
+ [[ config =~ ^(search|s)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ alias parse-listings--helper=parse_listings__helper
+ [[ search =~ ^(platform|p)$ ]]
+++ base64
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias network-configs--helper=network_configs__helper
+++ base64
++ alias network-extract--helper=network_extract__helper
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ IFS==
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+++ tr -dc a-zA-Z0-9
+ read -r key value
+ mkdir -p logs/console
++ echo -e --config=.cache/resources/misc/switch1.conf
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
++ export divisor=MTc0ODc1MzQ4NDQyNDkwMjAwMAo
++ divisor=MTc0ODc1MzQ4NDQyNDkwMjAwMAo
+ source ./scripts/devops-helpers.shell
++ export divisor=MTc0ODc1MzQ4NDQyNTQwMzAwMAo
++ [[ -n '' ]]
++ divisor=MTc0ODc1MzQ4NDQyNTQwMzAwMAo
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ source ./scripts/devops-helpers.shell
++ [[ 5 -lt 4 ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ alias network-configs--helper=network_configs__helper
+ local first_search_entry=172.16.0.5
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
++ echo -e --extract=reports/172.18.1.20/misc/fw1.cfg
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ alias network-extract--helper=network_extract__helper
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ alias parse-cisco=main
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -z x ]]
+ export logs_location=logs
+ newline
+ logs_location=logs
+ mkdir -p logs/console
+ alias parse-cisco=main
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ (( i < count ))
+ mkdir -p logs/console
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ local target_config=.cache/resources/misc/fw3.cfg
+ (( i++ ))
+ [[ config =~ ^(console|o)$ ]]
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ true == true ]]
+ [[ config =~ ^(extract|x)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ set -euo pipefail
+ echo
+ export LC_ALL=C
+ (( i++ ))
+ LC_ALL=C
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local target_config=.cache/resources/misc/switch1.conf
+ [[ config =~ ^(platform|p)$ ]]
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(platform|p)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(search|s)$ ]]
+ IFS==
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ read -r key value
++ mktemp -d
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ 6 -eq 0 ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uvzroegmpl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ script_filename=network-extract.shell
+ [[ config =~ ^(platform|p)$ ]]
+ script_filename=network-extract
+ [[ config =~ ^(search|s)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ config == \h\e\l\p ]]
+ network_extract__console=logs/console/network-extract.console
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ touch logs/console/network-extract.console
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ [[ extract =~ ^(console|o)$ ]]
+ script_filename=network-extract
+ [[ extract =~ ^(extract|x)$ ]]
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ local extract_location=reports/172.18.1.20/misc/fw1.cfg
+ touch logs/console/network-extract.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ local count=1
+ read -r key value
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ [[ verbose =~ ^(logger|l)$ ]]
++ echo -e --extract=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ config =~ ^(console|o)$ ]]
+ newline
+ local count=1
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ echo
+ [[ verbose == \h\e\l\p ]]
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ export console_output=false
+ console_output=false
+ [[ -z cisco ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.0.0.1/misc/switch1.conf
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
++ echo -e --extract=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/10.0.2.3/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lBsbExZpSB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lBsbExZpSB
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.puqhmhxfsq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console --verbose
++ alias system-metrics=system_metrics
+ [[ 6 -eq 0 ]]
+ oIFS=' 	
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qpe6hrcxlg/network-configs--ips.list =~ ^-*(h|help)$ ]]
'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list --config=.cache/resources/cisco/campus-sw-access01.cfg --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console --verbose
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ alias validate-address=validate_address
++ alias warning-message=warning
+ oIFS=' 	
'
++ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ LC_ALL=C
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ tr -d '\r'
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n reports/172.16.0.5/cisco/perimeter-fw1.cfg ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ extract =~ ^(search|s)$ ]]
+ final_output=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract == \h\e\l\p ]]
+ extract_location=reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ grep -v '^\s*$'
++ grep -v '^#'
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ dirname reports/172.16.0.5/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/10.0.0.1/misc/switch1.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
++ echo -e --platform=cisco
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ sed -e '1s|^\(-\)\{1,\}||'
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ read -r key value
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/10.0.2.3/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(config|c)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ output_dir=reports/172.16.0.5/cisco
+ local target_platform=cisco
+ [[ ! -d reports/172.16.0.5/cisco ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local first_search_entry=10.0.1.2
+ [[ platform == \h\e\l\p ]]
+ local last_search_entry=10.0.1.2
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ [[ search =~ ^(console|o)$ ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ (( i = 0 ))
+ read -r key value
++ echo -e --platform=fortinet
++ command -v -- ./scripts/network-extract.shell
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i < count ))
+ [[ -n reports/10.0.0.1/cisco/perimeter-fw1.cfg ]]
+ echo
+ [[ cfg == \c\f\g ]]
+ (( i++ ))
+ (( i < count ))
+ final_output=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ extract_location=reports/10.0.0.1/cisco/perimeter-fw1.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -n reports/10.0.2.3/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.0.2.3/cisco/branch-isr-02.cfg
+ extract_location=reports/10.0.2.3/cisco/branch-isr-02.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local count=1
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ echo -e --config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MQWQOqn7yq
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MQWQOqn7yq
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+++ base64
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ set -euo pipefail
++ alias system-metrics=system_metrics
+ export LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
+ LC_ALL=C
++ echo -e --extract=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ alias validate-address=validate_address
+++ tr -dc a-zA-Z0-9
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
++ mkdir -p logs/console logs/jobs
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ local target_platform=cisco
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ platform == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ platform =~ ^(logger|l)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ IFS==
+ [[ platform == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ mktemp -d
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_config=.cache/resources/cisco/campus-sw-access01.cfg
+ [[ config == \h\e\l\p ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ config =~ ^(extract|x)$ ]]
+ for xitem in "${@}"
+ [[ config =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=MTc0ODc1MzQ4NDQ2ODMzNjAwMAo
++ divisor=MTc0ODc1MzQ4NDQ2ODMzNjAwMAo
+ [[ logger =~ ^(config|c)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
++ dirname reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ dirname reports/10.0.2.3/cisco/branch-isr-02.cfg
+ IFS==
+ read -r key value
++ mktemp -d
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
++ alias network-configs--helper=network_configs__helper
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ extract =~ ^(config|c)$ ]]
++ alias network-extract--helper=network_extract__helper
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
++ echo -e --verbose
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ echo -e --extract=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ read -r key value
++ echo -e --extract=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxfyGAMBRj
++ sed -e '1s|^\(-\)\{1,\}||'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxfyGAMBRj
++ sed -e '1s|^\(-\)\{1,\}||'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
+ output_dir=reports/10.0.2.3/cisco
+ [[ ! -d reports/10.0.2.3/cisco ]]
++ echo -e --verbose
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ IFS=,
++ echo 172.16.0.5
++ echo -e --platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ [[ logger =~ ^(config|c)$ ]]
+ declare -a execute
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bcM3LaLCgl
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bcM3LaLCgl
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ [[ logger =~ ^(config|c)$ ]]
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ extract =~ ^(console|o)$ ]]
+ script_helper=false
+ [[ extract =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]]
+ local extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ search_terms=()
+ [[ extract =~ ^(logger|l)$ ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ declare -a search_terms
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]]
++ [[ 5 -lt 4 ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ config =~ ^(extract|x)$ ]]
+ IFS=' 	
'
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
++ alias list-file=list_file
+ [[ config =~ ^(platform|p)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ config =~ ^(search|s)$ ]]
+ dry_run=false
++ alias log-error=log_error
+ [[ -z true ]]
+ [[ config == \h\e\l\p ]]
+ [[ -z '' ]]
+ [[ config == \d\e\b\u\g ]]
++ alias log-info=log_info
+ [[ config == \d\r\y\-\r\u\n ]]
+ export console_output=false
+ local first_search_entry=172.31.255.254
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias log-warn=log_warn
+ for xitem in "${@}"
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list != *,* ]]
++ alias print-message=message
+ IFS==
+ mapfile -t search_terms
+ local first_search_entry=10.0.0.1
++ alias print-newline=newline
+ read -r key value
++ alias pause=pause
++ alias print-line=print
+ console_output=false
++ export targets_location=targets
++ alias print-file=print_file
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console ]]
+ local last_search_entry=172.31.255.254
+ [[ -z '' ]]
++ alias relative-configpath=relative_configpath
+ script_helper=false
+ local 'target_search_range=172.31.255.254, ... ,172.31.255.254'
+ local last_search_entry=10.0.0.1
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ targets_location=targets
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ alias system-metrics=system_metrics
++ targets_logfile=logs/jobs/targets.jobs
+ search_terms=()
+ declare -a search_terms
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ]'
+ output_dir=reports/10.0.0.1/cisco
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
+ [[ ! -d reports/10.0.0.1/cisco ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list != *,* ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ mapfile -t search_terms
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ [[ -n Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1) ]]
++ alias validate-address=validate_address
+ echo -en 'Search Listing: [ 172.31.255.254, ... ,172.31.255.254 ] (1)'
+ newline
++ alias warning-message=warning
+ local count=1
++ export LC_ALL=C
+ (( i = 0 ))
++ LC_ALL=C
+ (( i < count ))
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ set -euo pipefail
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ export LC_ALL=C
+ LC_ALL=C
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ true == true ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ export actions_logfile=./logs/console/run.console
++ echo -e --verbose
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ actions_logfile=./logs/console/run.console
+ (( i < count ))
+ newline
++ touch ./logs/console/run.console
++ mktemp -d
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ local count=1
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ echo
++ echo -e --extract=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ echo -e --platform=cisco
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ tr -d '\r'
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
++ grep -v '^\s*$'
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+++ base64
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ grep -v '^#'
++ touch ./logs/console/run.console
++ grep -v '^#'
+++ tr -dc a-zA-Z0-9
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sn6rIdSwLw
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sn6rIdSwLw
++ export targets_location=targets
++ targets_location=targets
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ export targets_logfile=logs/jobs/targets.jobs
+ export 'nl=\n'
++ targets_logfile=logs/jobs/targets.jobs
+ [[ verbose =~ ^(config|c)$ ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ [[ -n '' ]]
+ local extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ verbose =~ ^(console|o)$ ]]
++ alias detect-vendor=detect_vendor
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
++ alias exit-error=exit_error
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ local extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
++ alias list-file=list_file
+ [[ verbose == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ extract =~ ^(search|s)$ ]]
++ alias log-error=log_error
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
++ alias log-info=log_info
+ read -r key value
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias log-warn=log_warn
+ IFS==
+ read -r key value
+ local first_search_entry=10.0.2.3
++ alias print-message=message
+ local verbose=true
+ local last_search_entry=10.0.2.3
++ alias print-newline=newline
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ for xitem in "${@}"
+ [[ -z '' ]]
++ alias pause=pause
+ dry_run=false
+ IFS==
+ [[ -z true ]]
++ alias print-line=print
+ read -r key value
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local first_search_entry=192.0.2.50
+ [[ -z '' ]]
+ local last_search_entry=192.0.2.50
++ alias print-file=print_file
+ export console_output=false
+ [[ true == true ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ console_output=false
++ alias relative-configpath=relative_configpath
+ [[ true == true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console ]]
+ [[ -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]]
++ export divisor=MTc0ODc1MzQ4NDQ5MjMyMzAwMAo
++ divisor=MTc0ODc1MzQ4NDQ5MjMyMzAwMAo
+ source ./scripts/devops-helpers.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ] ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ] ]]
+ script_helper=false
++ alias system-metrics=system_metrics
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
++ [[ -n '' ]]
+ [[ false == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ __DEVOPS_HELPERS_SOURCED=1
+ local count=1
+ final_output=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ extract_location=reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ [[ 5 -lt 4 ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ ((  count == 0  ))
+ [[ -n reports/172.31.255.254/misc/switch1.conf ]]
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
++ alias validate-address=validate_address
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/172.31.255.254/misc/switch1.conf
+ extract_location=reports/172.31.255.254/misc/switch1.conf
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
++ alias warning-message=warning
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
++ export LC_ALL=C
+ search_terms=()
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
++ alias parse-listings--helper=parse_listings__helper
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
+ declare -a search_terms
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]]
+ local count=1
+ newline
++ export logs_location=logs
+ local count=1
+ (( i = 0 ))
++ logs_location=logs
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list != *,* ]]
+ (( i < count ))
++ mkdir -p logs/console logs/jobs
+ mapfile -t search_terms
+ (( i = 0 ))
++ alias network-configs--helper=network_configs__helper
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
+ [[ -n reports/10.10.10.10/cisco/access-sw1-west.cfg ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ local first_search_entry=172.18.1.20
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local first_search_entry=172.16.1.6
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ local last_search_entry=172.16.1.6
+ [[ true == true ]]
+ local last_search_entry=172.18.1.20
+ local 'prompt_message=Enter configuration file to be parsed: '
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+++ date +%s%N
++ command -v -- ./scripts/network-extract.shell
++ dirname reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
++ dirname reports/172.31.255.254/misc/switch1.conf
+ echo
+ local count=1
++ export targets_location=targets
+ (( i = 0 ))
++ targets_location=targets
+ (( i < count ))
+ echo
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo -e --platform=cisco
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
++ echo -e --platform=cisco
++ echo -e --platform=cisco
+++ base64
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ (( i++ ))
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ alias parse-cisco=main
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+++ tr -dc a-zA-Z0-9
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ tr -d '\r'
++ mktemp -d
+++ date +%s%N
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ output_dir=reports/10.0.0.1/fortinet
+ output_dir=reports/172.31.255.254/misc
++ touch ./logs/console/run.console
++ grep -v '^\s*$'
+ [[ ! -d reports/10.0.0.1/fortinet ]]
+ [[ ! -d reports/172.31.255.254/misc ]]
+++ base64
++ grep -v '^#'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+++ tr -dc a-zA-Z0-9
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ IFS==
+ [[ platform =~ ^(platform|p)$ ]]
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export divisor=MTc0ODc1MzQ4NDUwMzU4NjAwMAo
+ IFS==
++ divisor=MTc0ODc1MzQ4NDUwMzU4NjAwMAo
+ read -r key value
+ source ./scripts/devops-helpers.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ script_filename=network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.56BOiYnJ88
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.56BOiYnJ88
+ network_extract__console=logs/console/network-extract.console
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-resources.shell
+ touch logs/console/network-extract.console
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias network-extract--helper=network_extract__helper
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ set -euo pipefail
+ export LC_ALL=C
++ export targets_location=targets
+ LC_ALL=C
++ alias list-file=list_file
++ targets_location=targets
++ alias log-error=log_error
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
+ [[ -n reports/10.0.2.3/misc/fw1.cfg ]]
+ final_output=reports/10.10.10.10/cisco/access-sw1-west.cfg
+ [[ cfg == \c\f\g ]]
+ local first_search_entry=10.0.1.2
++ alias print-file=print_file
+ final_output=reports/10.0.2.3/misc/fw1.cfg
++ alias relative-configpath=relative_configpath
+ alias parse-cisco=main
++ export divisor=MTc0ODc1MzQ4NDUwODU4MjAwMAo
++ divisor=MTc0ODc1MzQ4NDUwODU4MjAwMAo
+ [[ -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ source ./scripts/devops-helpers.shell
+ final_output=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/10.0.2.3/misc/fw1.cfg
+ extract_location=reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ [[ -z x ]]
+ local last_search_entry=10.0.1.2
+ export logs_location=logs
++ alias system-metrics=system_metrics
+ logs_location=logs
+ local 'target_search_range=10.0.1.2, ... ,10.0.1.2'
++ dirname -- ./scripts/network-extract.shell
++ [[ -n '' ]]
+ mkdir -p logs/console
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ echo -e --verbose
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ alias parse-listings--helper=parse_listings__helper
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ [[ -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ] ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-configs--ips.list ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
++ alias network-configs--helper=network_configs__helper
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
++ mktemp -d
+ print 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ local count=1
+ [[ cfg == \c\f\g ]]
+ [[ -n Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1) ]]
+ ((  count == 0  ))
+ echo -en 'Search Listing: [ 10.0.1.2, ... ,10.0.1.2 ] (1)'
+ final_output=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ newline
+ extract_location=reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ (( i = 0 ))
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ extract_location=reports/10.10.10.10/cisco/access-sw1-west.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ dirname reports/10.0.2.3/misc/fw1.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ newline
+ alias parse-cisco=main
+++ base64
+++ tr -dc a-zA-Z0-9
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ 6 -eq 0 ]]
+ local script_filename=fortinet-configs.awk
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uvzroegmpl/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/172.16.1.6/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console --verbose
+ [[ verbose =~ ^(config|c)$ ]]
+ oIFS=' 	
'
+ [[ verbose =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ read -r key value
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console ]]
+ echo
+ output_dir=reports/10.0.2.3/misc
+ [[ -z '' ]]
+ (( i++ ))
+ script_helper=false
+ [[ ! -d reports/10.0.2.3/misc ]]
++ export actions_logfile=./logs/console/run.console
+ output_dir=reports/192.0.2.50/cisco
+ (( i < count ))
++ actions_logfile=./logs/console/run.console
+ [[ ! -d reports/192.0.2.50/cisco ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ logger =~ ^(config|c)$ ]]
+ [[ false == true ]]
++ touch ./logs/console/run.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ script_filename=network-extract.shell
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
+ script_filename=network-extract
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ search_terms=()
+ export network_extract__console=logs/console/network-extract.console
+ declare -a search_terms
+ network_extract__console=logs/console/network-extract.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ touch logs/console/network-extract.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DFJwrBPHpD
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ logger =~ ^(console|o)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DFJwrBPHpD
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger =~ ^(logger|l)$ ]]
+ export 'nl=\n'
+ nl='\n'
+ newline
+ source ./scripts/devops-resources.shell
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ] ]]
++ [[ -n '' ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
+ [[ logger == \h\e\l\p ]]
++ [[ 5 -lt 4 ]]
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ ((  count == 0  ))
++ alias detect-vendor=detect_vendor
+ for xitem in "${@}"
+ [[ platform =~ ^(config|c)$ ]]
+ IFS==
++ alias exit-error=exit_error
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(console|o)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(logger|l)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ [[ platform == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
++ alias list-file=list_file
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
++ which awk
++ alias log-error=log_error
+ for xitem in "${@}"
++ alias log-info=log_info
+ IFS==
+ read -r key value
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ command -v -- ./scripts/network-extract.shell
++ alias relative-configpath=relative_configpath
++ command -v -- ./scripts/network-extract.shell
++ which awk
++ dirname reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ export divisor=MTc0ODc1MzQ4NDUyMDQ1MzAwMAo
++ divisor=MTc0ODc1MzQ4NDUyMDQ1MzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ alias system-metrics=system_metrics
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ alias validate-address=validate_address
++ alias warning-message=warning
++ alias parse-listings--helper=parse_listings__helper
++ export LC_ALL=C
++ LC_ALL=C
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
++ tr -d '\r'
++ alias network-configs--helper=network_configs__helper
++ sed -e '1s|^\(-\)\{1,\}||'
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --verbose
++ export 'nl=\n'
++ nl='\n'
+ script_filename=network-extract.shell
++ export cache_location=.cache
+ script_filename=network-extract
++ cache_location=.cache
++ alias network-extract--helper=network_extract__helper
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
++ grep -v '^\s*$'
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ dirname -- ./scripts/network-extract.shell
++ mktemp -d
++ dirname -- ./scripts/network-extract.shell
+ alias parse-cisco=main
++ export logs_location=logs
++ logs_location=logs
+ [[ -z x ]]
+ export logs_location=logs
++ mkdir -p logs/console logs/jobs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ni8dikfss3/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console --verbose
++ echo -e --verbose
+ oIFS=' 	
'
+++ date +%s%N
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.0.1.2/misc/switch1.conf ]]
++ IFS=,
++ echo 10.0.0.1
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+++ tr -dc a-zA-Z0-9
+ [[ search =~ ^(console|o)$ ]]
+ set -euo pipefail
+ [[ conf == \c\o\n\f ]]
+ export LC_ALL=C
+ [[ search =~ ^(extract|x)$ ]]
+ final_output=reports/10.0.1.2/misc/switch1.conf
+ LC_ALL=C
++ IFS=,
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
++ echo 172.31.255.254
+ [[ verbose =~ ^(extract|x)$ ]]
+ extract_location=reports/10.0.1.2/misc/switch1.conf
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list
+ [[ -z '' ]]
+ export console_output=false
+ [[ search == \h\e\l\p ]]
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local SCRIPT_DIR=./scripts
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ local first_search_entry=192.168.0.1
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jxv4tevo3a/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ script_filename=network-extract.shell
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console --verbose
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ oIFS=' 	
+ [[ search == \d\r\y\-\r\u\n ]]
'
++ mktemp -d
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
+ search_terms=()
+ local last_search_entry=192.168.0.1
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ execute=('/usr/bin/awk' '-v' 'targets=172.31.255.254' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
++ export actions_logfile=./logs/console/run.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list
+ [[ true == true ]]
++ actions_logfile=./logs/console/run.console
+ mapfile -t search_terms
+ declare -a execute
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GmEuMnjHnP
++ touch ./logs/console/run.console
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GmEuMnjHnP
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ output_dir=reports/10.0.1.2/fortinet
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ] ]]
+ export 'nl=\n'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ local count=1
+ ((  count == 0  ))
+ [[ ! -d reports/10.0.1.2/fortinet ]]
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ [[ -n '' ]]
+ newline
++ dirname reports/10.0.1.2/misc/switch1.conf
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ echo
+ (( i++ ))
+ (( i < count ))
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline
++ alias print-message=message
+ [[ verbose =~ ^(extract|x)$ ]]
++ which awk
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
++ export divisor=MTc0ODc1MzQ4NDUzNTU4OTAwMAo
++ divisor=MTc0ODc1MzQ4NDUzNTU4OTAwMAo
+ echo
+ (( i++ ))
++ alias print-newline=newline
+ source ./scripts/devops-helpers.shell
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ verbose == \h\e\l\p ]]
++ alias pause=pause
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ alias parse-listings--helper=parse_listings__helper
++ which awk
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ alias network-configs--helper=network_configs__helper
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ local verbose=true
++ alias print-line=print
+ IFS=' 	
'
++ alias network-extract--helper=network_extract__helper
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list
++ echo -e --config=.cache/resources/misc/switch3.conf
++ alias system-metrics=system_metrics
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias validate-address=validate_address
+ [[ 6 -eq 0 ]]
+ set -euo pipefail
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nvyloqj9im/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -z '' ]]
++ alias warning-message=warning
+ debug=false
+ export LC_ALL=C
++ export LC_ALL=C
+ [[ -z '' ]]
+ LC_ALL=C
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console --verbose
++ tr -d '\r'
++ LC_ALL=C
++ sed -e '1s|^\(-\)\{1,\}||'
++ export 'nl=\n'
+ oIFS=' 	
++ nl='\n'
'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export cache_location=.cache
++ cache_location=.cache
+ for xitem in "${@}"
++ export logs_location=logs
+ local awk_bin=/usr/bin/awk
+ IFS==
++ logs_location=logs
+ read -r key value
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ output_dir=reports/10.0.1.2/misc
++ mkdir -p logs/console logs/jobs
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ [[ ! -d reports/10.0.1.2/misc ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]]
+ (( i < count ))
+ [[ search =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list != *,* ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dc2UNaCmV5
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dc2UNaCmV5
+ mapfile -t search_terms
++ grep -v '^\s*$'
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ search =~ ^(console|o)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export 'nl=\n'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ [[ 5 -lt 4 ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export targets_location=targets
++ alias detect-vendor=detect_vendor
+ IFS==
++ targets_location=targets
++ which awk
++ alias exit-error=exit_error
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local awk_bin=/usr/bin/awk
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ local 'awk_args=-v targets="172.31.255.254, ... ,172.31.255.254"'
++ mktemp -d
++ alias pause=pause
++ dirname reports/10.10.10.10/cisco/access-sw1-west.cfg
++ alias print-line=print
++ alias print-file=print_file
+ local 'base_cmd=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254"'
++ alias relative-configpath=relative_configpath
++ grep -v '^#'
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ IFS=,
++ echo 10.0.2.3
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ search =~ ^(config|c)$ ]]
+ declare -a execute
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
++ tr -d '\r'
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ IFS=,
+ [[ config =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ echo 192.0.2.50
++ printf '%*s' 12 ''
++ printf '%*s' 12 ''
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
++ grep -v '^\s*$'
+ [[ config =~ ^(platform|p)$ ]]
+ local 'indent=            '
++ mktemp -d
+ [[ config =~ ^(search|s)$ ]]
+ local first_search_entry=10.10.10.10
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local last_search_entry=10.10.10.10
+ [[ config == \h\e\l\p ]]
+ declare -a execute
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ config == \d\e\b\u\g ]]
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
++ grep -v '^#'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JP4IUxvBd7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JP4IUxvBd7
++ which awk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+++ date +%s%N
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
++ alias detect-vendor=detect_vendor
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias exit-error=exit_error
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
+ local count=1
+ ((  count == 0  ))
++ touch ./logs/console/run.console
+ for xitem in "${@}"
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ IFS==
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ read -r key value
++ alias list-file=list_file
++ alias log-error=log_error
+ newline
++ alias log-info=log_info
+ local count=1
+ (( i = 0 ))
++ export actions_logfile=./logs/console/run.console
+ (( i < count ))
++ alias log-warn=log_warn
++ actions_logfile=./logs/console/run.console
+ echo
++ alias print-message=message
++ touch ./logs/console/run.console
++ alias print-newline=newline
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias pause=pause
++ alias print-line=print
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ newline
+ local count=1
+++ base64
++ alias system-metrics=system_metrics
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ [[ -n reports/192.168.0.1/cisco/access-sw1-west.cfg ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ cfg == \c\f\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ alias validate-address=validate_address
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ (( i = 0 ))
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
++ alias warning-message=warning
+ [[ search =~ ^(config|c)$ ]]
++ export LC_ALL=C
+ (( i < count ))
++ LC_ALL=C
++ which awk
+ echo
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ 6 -eq 0 ]]
+ [[ search =~ ^(console|o)$ ]]
+ final_output=reports/192.168.0.1/cisco/access-sw1-west.cfg
++ mkdir -p logs/console logs/jobs
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sbhotf2c4e/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.1.10/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search =~ ^(extract|x)$ ]]
++ dirname -- ./scripts/network-extract.shell
+ oIFS=' 	
'
+++ tr -dc a-zA-Z0-9
+ for xitem in "${@}"
+ [[ search =~ ^(logger|l)$ ]]
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ [[ search =~ ^(platform|p)$ ]]
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ (( i < count ))
+ (( i++ ))
+ extract_location=reports/192.168.0.1/cisco/access-sw1-west.cfg
+ [[ search =~ ^(search|s)$ ]]
+ (( i < count ))
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \h\e\l\p ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ search == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ read -r key value
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -z cisco ]]
+ [[ true == true ]]
+ local 'message=/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ echo -e '/usr/bin/awk -v targets="172.31.255.254, ... ,172.31.255.254" \'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kc4bOPIr1N
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kc4bOPIr1N
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ source ./scripts/devops-resources.shell
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local awk_bin=/usr/bin/awk
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'message=                .cache/resources/misc/switch1.conf'
++ [[ -n '' ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ echo -e '                .cache/resources/misc/switch1.conf'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
+ local count=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ alias detect-vendor=detect_vendor
+ (( i < count ))
++ alias exit-error=exit_error
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --extract=reports/172.16.1.6/misc/switch3.conf
+ (( i++ ))
+ (( i < count ))
++ alias list-file=list_file
+ local first_search_entry=192.168.0.100
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local last_search_entry=192.168.0.100
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ alias log-error=log_error
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ [[ config =~ ^(config|c)$ ]]
++ alias log-info=log_info
+ [[ true == true ]]
++ alias log-warn=log_warn
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
++ alias print-message=message
+ [[ config =~ ^(extract|x)$ ]]
++ alias print-newline=newline
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
+ [[ config =~ ^(search|s)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ] ]]
++ alias pause=pause
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ alias print-line=print
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
++ alias print-file=print_file
+ [[ config == \v\e\r\b\o\s\e ]]
++ alias relative-configpath=relative_configpath
+ local count=1
+ for xitem in "${@}"
+ ((  count == 0  ))
+ local awk_bin=/usr/bin/awk
+ IFS==
+ read -r key value
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
++ export targets_location=targets
++ alias system-metrics=system_metrics
++ dirname reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local SCRIPT_DIR=./scripts
++ targets_location=targets
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ local script_filename=cisco-configs.awk
++ export targets_logfile=logs/jobs/targets.jobs
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
++ targets_logfile=logs/jobs/targets.jobs
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ [[ config =~ ^(config|c)$ ]]
++ alias validate-address=validate_address
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ local count=1
++ alias warning-message=warning
+ (( i = 0 ))
+ [[ config =~ ^(console|o)$ ]]
++ export divisor=MTc0ODc1MzQ4NDU1NjY4NjAwMAo
++ export targets_location=targets
++ export LC_ALL=C
+ (( i < count ))
++ targets_location=targets
+ [[ config =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
++ divisor=MTc0ODc1MzQ4NDU1NjY4NjAwMAo
++ LC_ALL=C
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(logger|l)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
++ export 'nl=\n'
+ [[ config =~ ^(platform|p)$ ]]
+ echo
+ [[ logger =~ ^(config|c)$ ]]
++ nl='\n'
+ (( i++ ))
+ source ./scripts/devops-helpers.shell
++ export cache_location=.cache
+ [[ config =~ ^(search|s)$ ]]
++ cache_location=.cache
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ config == \h\e\l\p ]]
++ [[ -n '' ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ config == \v\e\r\b\o\s\e ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
++ [[ 5 -lt 4 ]]
+ output_dir=reports/10.10.10.10/cisco
+ read -r key value
++ printf '%*s' 12 ''
+ local 'prompt_message=Enter configuration file to be parsed: '
++ /usr/bin/awk -v targets=172.31.255.254 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ [[ -z .cache/resources/cisco/access-sw1-west.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias parse-listings--helper=parse_listings__helper
+ newline
++ export actions_logfile=./logs/console/run.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ actions_logfile=./logs/console/run.console
+ local 'indent=            '
+ echo
++ touch ./logs/console/run.console
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -e 'Target Config: [ .cache/resources/cisco/access-sw1-west.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/access-sw1-west.cfg
+ [[ true == true ]]
++ alias network-configs--helper=network_configs__helper
+ [[ ! -d reports/10.10.10.10/cisco ]]
++ printf '%*s' 12 ''
++ which awk
++ alias network-extract--helper=network_extract__helper
+ newline
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ echo -e --extract=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+++ date +%s%N
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+++ date +%s%N
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.11/cisco/branch-isr-02.cfg
+++ base64
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
+++ tr -dc a-zA-Z0-9
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+++ tr -dc a-zA-Z0-9
++ export targets_location=targets
++ targets_location=targets
+ newline
+ newline
++ export targets_logfile=logs/jobs/targets.jobs
+ local count=1
++ targets_logfile=logs/jobs/targets.jobs
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ config =~ ^(config|c)$ ]]
+ (( i < count ))
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ config =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ output_dir=reports/192.168.0.1/cisco
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local 'extracted_configuration={
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
  "vendor": "cisco",
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n reports/10.10.10.10/cisco/campus-sw-access01.cfg ]]
  "version": "",
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ cfg == \c\f\g ]]
  "model": "FortiGate-60F",
  "domain": "",
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
  "hostname": ""
  "version": "v7.2.5.F",
  "domain": ""
}
+ final_output=reports/10.10.10.10/cisco/campus-sw-access01.cfg
  "hostname": "fg-branch-vpn-01"
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]

}
+ [[ extract =~ ^(config|c)$ ]]
interface Vlan1
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ extract_location=reports/10.10.10.10/cisco/campus-sw-access01.cfg
 ip address 172.31.255.254 255.255.255.0'

+ local extract_location=reports/172.16.1.6/misc/switch3.conf
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
#hostname="fg-branch-vpn-01"
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ extract =~ ^(console|o)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ newline
config firewall address
 edit "IronMan-HQ"
+ [[ extract =~ ^(logger|l)$ ]]
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ echo -e --config=.cache/resources/misc/fw1.cfg
+++ date +%s%N
+ [[ extract =~ ^(platform|p)$ ]]
+ result=0
++ export divisor=MTc0ODc1MzQ4NDU2ODc2NzAwMAo
++ divisor=MTc0ODc1MzQ4NDU2ODc2NzAwMAo
+ source ./scripts/devops-helpers.shell
+ [[ extract =~ ^(extract|x)$ ]]
+ local count=1
++ [[ -n '' ]]
+ (( i = 0 ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ echo
+ result=0
++ [[ 5 -lt 4 ]]
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ local extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ -n {
+ [[ extract =~ ^(search|s)$ ]]
  "vendor": "cisco",
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
  "model": "",
+ local extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
  "version": "",
  "domain": "",
+ [[ extract =~ ^(logger|l)$ ]]
  "hostname": ""
+ [[ -n {
+ for xitem in "${@}"
+ [[ extract =~ ^(platform|p)$ ]]
++ alias parse-listings--helper=parse_listings__helper
}
+ [[ extract =~ ^(search|s)$ ]]

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ extract =~ ^(search|s)$ ]]
+ IFS==
+ read -r key value
  "vendor": "fortinet",
+ [[ extract == \h\e\l\p ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ extract == \d\e\b\u\g ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ [[ extract == \d\r\y\-\r\u\n ]]
++ export divisor=MTc0ODc1MzQ4NDU3MDQ2MzAwMAo
}
++ divisor=MTc0ODc1MzQ4NDU3MDQ2MzAwMAo
+ [[ -n reports/192.168.0.100/cisco/access-sw1-west.cfg ]]
++ IFS=,
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ source ./scripts/devops-helpers.shell
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]

+ [[ extract == \v\e\r\b\o\s\e ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ for xitem in "${@}"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ echo 10.0.1.2
+ IFS==

+ read -r key value
config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
++ [[ -n '' ]]
 edit "IronMan-HQ"
+++ base64
+ read -r key value
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
+ final_output=reports/192.168.0.100/cisco/access-sw1-west.cfg
+ extract_location=reports/192.168.0.100/cisco/access-sw1-west.cfg
++ alias network-extract--helper=network_extract__helper
 next
++ readonly __DEVOPS_HELPERS_SOURCED=1
end ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
++ [[ 5 -lt 4 ]]
++ dirname reports/10.10.10.10/cisco/campus-sw-access01.cfg
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ (( i < count ))
+ declare -a execute
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ alias parse-listings--helper=parse_listings__helper
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ alias parse-cisco=main
+ [[ -z x ]]
+++ tr -dc a-zA-Z0-9
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
++ alias network-configs--helper=network_configs__helper
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0 ]]
++ dirname reports/192.168.0.100/cisco/access-sw1-west.cfg
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 172.31.255.254 255.255.255.0'
++ alias network-extract--helper=network_extract__helper
++ echo -e --platform=cisco
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ local target_config=.cache/resources/misc/fw1.cfg
++ echo -e --platform=cisco
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ print '{
  "vendor": "fortinet",
+ [[ config =~ ^(logger|l)$ ]]
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ [[ config =~ ^(platform|p)$ ]]
  "hostname": "fg-branch-vpn-01"
}

+ [[ config =~ ^(search|s)$ ]]
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ config == \h\e\l\p ]]

+ [[ config == \d\e\b\u\g ]]
++ which awk
config firewall address
+ [[ config == \d\r\y\-\r\u\n ]]
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
+ [[ config == \v\e\r\b\o\s\e ]]
+++ date +%s%N
+ for xitem in "${@}"
  set comment "Main node at Stark Tower"
+ IFS==
 next
+ read -r key value
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
++ sed -e '1s|^\(-\)\{1,\}||'

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "IronMan-HQ"
  set subnet 10.0.0.1 255.255.255.255
  set comment "Main node at Stark Tower"
 next
end'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ export divisor=MTc0ODc1MzQ4NDU3Njk0MzAwMAo
++ divisor=MTc0ODc1MzQ4NDU3Njk0MzAwMAo
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+++ base64
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ alias network-extract--helper=network_extract__helper
+++ tr -dc a-zA-Z0-9
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ alias parse-cisco=main
++ echo -e --extract=reports/192.168.1.10/misc/fw1.cfg
+ [[ -z x ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ export logs_location=logs
+ [[ extract =~ ^(logger|l)$ ]]
+ output_dir=reports/10.10.10.10/cisco
+ logs_location=logs
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ mkdir -p logs/console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local awk_bin=/usr/bin/awk
+ IFS==
+ read -r key value
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ output_dir=reports/192.168.0.100/cisco
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ alias parse-cisco=main
+ local 'extracted_configuration={
+ local 'extracted_configuration={
  "vendor": "cisco",
  "vendor": "cisco",
  "model": "",
  "model": "ASA",
+ [[ -z x ]]
  "version": "9.12(4)",
  "version": "",
+ [[ platform =~ ^(config|c)$ ]]
+ export logs_location=logs
+ [[ platform =~ ^(console|o)$ ]]
  "domain": "global.dmz.example.net",
  "domain": "",
+ [[ platform =~ ^(extract|x)$ ]]
  "hostname": "dmz-fw2-backup"
+ logs_location=logs
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ mkdir -p logs/console
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
  "hostname": ""
}
+ [[ platform =~ ^(platform|p)$ ]]
}

+ local SCRIPT_DIR=./scripts

ASA Version 9.12(4)
+ local target_platform=cisco
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(config|c)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ [[ platform =~ ^(platform|p)$ ]]
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
hostname dmz-fw2-backup
domain-name global.dmz.example.net
 network-object host 192.168.2.12
+ [[ platform =~ ^(search|s)$ ]]

++ command -v -- ./scripts/network-extract.shell
object-group network Watchtower-DMZ
+ local target_platform=cisco
 description Global secure relay
 network-object host 192.0.2.50'
+ [[ platform =~ ^(search|s)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ result=0
+ [[ -n {

  "vendor": "cisco",
object network Kent-Server
  "model": "ASA",
 host 10.0.2.3
  "version": "9.12(4)",
 description Internal mail & identity services'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ result=0
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ platform == \d\e\b\u\g ]]
  "version": "",
+ [[ platform == \v\e\r\b\o\s\e ]]
  "domain": "",
+ [[ platform == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
  "hostname": ""
  "domain": "global.dmz.example.net",
+ [[ platform == \v\e\r\b\o\s\e ]]
++ command -v -- ./scripts/network-extract.shell
}
  "hostname": "dmz-fw2-backup"
+ IFS==
+ for xitem in "${@}"
++ export divisor=MTc0ODc1MzQ4NDU4NDM3ODAwMAo
++ divisor=MTc0ODc1MzQ4NDU4NDM3ODAwMAo

+ source ./scripts/devops-helpers.shell
object-group network Metropolis-Internal
}
+ local SCRIPT_PATH=./scripts/network-extract.shell

 description Core internal LAN for application clusters
 network-object host 10.0.2.3
ASA Version 9.12(4)
+ read -r key value
 network-object 192.168.2.0 255.255.255.0
++ printf '%*s' 12 ''
++ [[ -n '' ]]
hostname dmz-fw2-backup
+ IFS==
++ readonly __DEVOPS_HELPERS_SOURCED=1
domain-name global.dmz.example.net
++ __DEVOPS_HELPERS_SOURCED=1

object-group network Watchtower-DMZ
+ read -r key value
 description Global secure relay
++ [[ 5 -lt 4 ]]
 network-object host 192.0.2.50 ]]
 network-object host 192.168.2.12
++ alias parse-listings--helper=parse_listings__helper

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ alias network-configs--helper=network_configs__helper
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uadwfasopp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console --verbose
++ echo -e --platform=fortinet
++ alias network-extract--helper=network_extract__helper
+ local 'indent=            '
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ true == true ]]
++ which awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw1.cfg
+ alias parse-cisco=main
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -z x ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ export logs_location=logs
+ for xitem in "${@}"
+ script_filename=network-extract.shell
+ logs_location=logs
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ script_filename=network-extract
+ mkdir -p logs/console
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ export network_extract__console=logs/console/network-extract.console
+ read -r key value
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline 2
+ message '                .cache/resources/misc/switch1.conf'
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

+ [[ -n                 .cache/resources/misc/switch1.conf ]]
ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
++ dirname -- ./scripts/network-extract.shell
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50 ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object-group network Watchtower-DMZ
 description Global secure relay
 network-object host 192.0.2.50'
++ mktemp -d
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
 description Internal mail & identity services'
+ local count=1
+ [[ -n {
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ (( i = 0 ))
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
+ local count=2
 network-object host 10.0.2.3
+ (( i = 0 ))
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12
+ newline 2

+ (( i < count ))
object network Kent-Server
++ sed -e '1s|^\(-\)\{1,\}||'
 host 10.0.2.3
+ echo
 description Internal mail & identity services ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ [[ 6 -eq 0 ]]
}
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12

object network Kent-Server
 host 10.0.2.3
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console --verbose
 description Internal mail & identity services'
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ script_filename=network-extract.shell
+ oIFS=' 	
'
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ for xitem in "${@}"
+ network_extract__console=logs/console/network-extract.console
+ IFS==
+ read -r key value
+ touch logs/console/network-extract.console
++ echo -e --platform=cisco
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=2
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ (( i = 0 ))
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ 6 -eq 0 ]]
+ script_filename=network-extract
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.qmxijkdchk/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ (( i < count ))
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ echo
+ [[ logger =~ ^(extract|x)$ ]]
+ local SCRIPT_DIR=./scripts
+ echo
+ [[ logger =~ ^(logger|l)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list --config=.cache/resources/misc/switch3.conf --extract=reports/10.0.0.1/misc/switch3.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console --verbose
+ (( i++ ))
+ (( i++ ))
+ network_extract__console=logs/console/network-extract.console
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ touch logs/console/network-extract.console
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ oIFS=' 	
'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ for xitem in "${@}"
+ [[ logger == \h\e\l\p ]]
+ IFS==
+ [[ logger == \d\e\b\u\g ]]
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local script_filename=cisco-configs.awk
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ echo
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ true == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
+ [[ true == true ]]
++ mktemp -d
+ message 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/172.31.255.254/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/172.31.255.254/misc/switch1.conf ]'
+ [[ logger =~ ^(config|c)$ ]]
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ local count=1
+ [[ platform =~ ^(console|o)$ ]]
+ (( i = 0 ))
+ [[ logger =~ ^(extract|x)$ ]]
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
+ [[ platform =~ ^(extract|x)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgJRiJPTmO
+ echo
+ [[ logger =~ ^(config|c)$ ]]
+ newline 2
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ newline 2
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ message 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ for xitem in "${@}"
+ [[ -n Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ IFS==
+ [[ logger =~ ^(logger|l)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgJRiJPTmO
+ (( i++ ))
++ which awk
+ echo -e 'Configuration File [ reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg ]'
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
++ echo -e --verbose
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
++ IFS=,
+ local count=2
+ [[ 6 -eq 0 ]]
+ (( i = 0 ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emvosdfzjb/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ echo 192.168.0.1
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console --verbose
++ which awk
+ [[ logger =~ ^(search|s)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger == \h\e\l\p ]]
+ (( i < count ))
'
+ [[ logger == \d\e\b\u\g ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ (( i = 0 ))
+ for xitem in "${@}"
+ local count=2
+ echo
+ cat -n reports/172.31.255.254/misc/switch1.conf
+ IFS==
+ [[ logger =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ export 'nl=\n'
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ nl='\n'
+ (( i < count ))
+ (( i++ ))
+ IFS==
+ [[ logger == \h\e\l\p ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ read -r key value
+ [[ logger == \d\e\b\u\g ]]
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ (( i < count ))
+ source ./scripts/devops-resources.shell
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ [[ logger == \d\r\y\-\r\u\n ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console --verbose
+ (( i++ ))
+ echo
+ declare -a execute
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ for xitem in "${@}"
+ (( i++ ))
+ (( i < count ))
+ IFS==
+ oIFS=' 	
'
+ (( i < count ))
+ read -r key value
+ for xitem in "${@}"
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ message 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
+ cat -n reports/10.0.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/dmz-fw2-backup.cfg ]'
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ newline
++ [[ 5 -lt 4 ]]
+ local SCRIPT_DIR=./scripts
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local script_filename=cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias exit-error=exit_error
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'prompt_message=Enter configuration file to be parsed: '
++ alias list-file=list_file
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
+ [[ true == true ]]
++ alias pause=pause
++ alias print-line=print
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ alias print-file=print_file
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
++ alias relative-configpath=relative_configpath
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ script_filename=network-extract.shell
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ network_extract__console=logs/console/network-extract.console
++ alias system-metrics=system_metrics
+ [[ logger =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ touch logs/console/network-extract.console
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ alias validate-address=validate_address
+ IFS=' 	
'
+ [[ -z '' ]]
++ alias warning-message=warning
+ debug=false
++ export LC_ALL=C
+ newline
+ [[ -z '' ]]
++ LC_ALL=C
+ newline
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ local count=1
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ [[ logger =~ ^(platform|p)$ ]]
+ set -euo pipefail
++ IFS=,
+ export LC_ALL=C
+ LC_ALL=C
++ echo 10.0.0.1
+ dry_run=false
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ logger == \h\e\l\p ]]
++ dirname -- ./scripts/network-extract.shell
+ export console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ logger == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
++ export 'nl=\n'
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ (( i++ ))
+ IFS==
+ (( i < count ))
+ read -r key value
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ for xitem in "${@}"
+ IFS==
+ declare -a execute
+ read -r key value
++ nl='\n'
+ console_output=false
++ export cache_location=.cache
++ cache_location=.cache
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console ]]
++ export logs_location=logs
+ [[ -z '' ]]
++ logs_location=logs
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mKGsJ8vydC
+ script_helper=false
++ mkdir -p logs/console logs/jobs
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]]
+ search_terms=()
+ [[ logger == \h\e\l\p ]]
+ declare -a search_terms
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ logger == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]]
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list != *,* ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mKGsJ8vydC
+ mapfile -t search_terms
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ which awk
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ dirname -- ./scripts/network-extract.shell
++ alias exit-error=exit_error
++ mktemp -d
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ which awk
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --verbose
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ echo -e --verbose
++ which awk
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ local SCRIPT_DIR=./scripts
+ [[ 6 -eq 0 ]]
+ local script_filename=cisco-configs.awk
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nvyloqj9im/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list --config=.cache/resources/cisco/branch-isr-02.cfg --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console --verbose
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ oIFS=' 	
'
++ grep -v '^\s*$'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E2HUYU7u9w
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E2HUYU7u9w
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
++ sed -e '1s|^\(-\)\{1,\}||'
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ which awk
++ [[ -n '' ]]
++ export actions_logfile=./logs/console/run.console
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ [[ 5 -lt 4 ]]
++ grep -v '^#'
++ alias detect-vendor=detect_vendor
+ local awk_bin=/usr/bin/awk
++ alias exit-error=exit_error
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ [[ -n reports/172.18.1.20/cisco/branch-isr-02.cfg ]]
+ [[ cfg == \c\f\g ]]
++ alias system-metrics=system_metrics
+ final_output=reports/172.18.1.20/cisco/branch-isr-02.cfg
+ extract_location=reports/172.18.1.20/cisco/branch-isr-02.cfg
++ IFS=,
++ echo 10.0.2.3
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ [[ verbose =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ which awk
+ declare -a execute
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ IFS=' 	
+ debug=false
'
+ [[ -z '' ]]
+ dry_run=false
++ export actions_logfile=./logs/console/run.console
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ -n reports/172.16.1.6/cisco/branch-isr-02.cfg ]]
+ debug=false
+ [[ -z true ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ actions_logfile=./logs/console/run.console
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ local extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ touch ./logs/console/run.console
+ export console_output=false
+ [[ -z true ]]
+ console_output=false
+ [[ cfg == \c\f\g ]]
++ dirname reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ -z '' ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console ]]
+ export console_output=false
+ [[ extract == \h\e\l\p ]]
++ printf '%*s' 12 ''
+ console_output=false
+ final_output=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ extract_location=reports/172.16.1.6/cisco/branch-isr-02.cfg
+ script_helper=false
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
+ local awk_bin=/usr/bin/awk
+ search_terms=()
+ [[ platform =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]]
+ [[ -z '' ]]
+ local 'indent=            '
+ [[ extract == \d\e\b\u\g ]]
+ script_helper=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list != *,* ]]
+ [[ true == true ]]
+ [[ extract =~ ^(logger|l)$ ]]
+ local first_search_entry=172.18.1.20
+ [[ false == true ]]
+ mapfile -t search_terms
+ [[ verbose =~ ^(platform|p)$ ]]
+ local last_search_entry=172.18.1.20
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'target_search_range=172.18.1.20, ... ,172.18.1.20'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform =~ ^(extract|x)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ [[ true == true ]]
+ search_terms=()
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ local count=1
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ declare -a search_terms
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ echo
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list != *,* ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local verbose=true
+ mapfile -t search_terms
+ [[ extract =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ] ]]
++ which awk
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
+ IFS=' 	
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-configs--ips.list ]'
'
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local count=1
+ [[ -z '' ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ dry_run=false
+ for xitem in "${@}"
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ ((  count == 0  ))
+ IFS==
+ [[ -z true ]]
+ read -r key value
+ [[ extract == \h\e\l\p ]]
++ which awk
+ print 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ [[ -n Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1) ]]
+ echo -en 'Search Listing: [ 172.18.1.20, ... ,172.18.1.20 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z '' ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ export console_output=false
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ console_output=false
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -z '' ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ script_helper=false
+ [[ false == true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ IFS=,
+ local count=1
+ (( i = 0 ))
++ dirname reports/172.16.1.6/cisco/branch-isr-02.cfg
+ (( i < count ))
++ echo 10.0.1.2
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.1.2' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ output_dir=reports/172.18.1.20/cisco
+ (( i++ ))
+ [[ ! -d reports/172.18.1.20/cisco ]]
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ local target_platform=fortinet
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ platform =~ ^(search|s)$ ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ [[ platform == \h\e\l\p ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ [[ platform == \d\e\b\u\g ]]
++ tr -d '\r'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
++ which awk
++ tr -d '\r'
++ IFS=,
++ echo 10.10.10.10
++ grep -v '^\s*$'
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
++ tr -d '\r'
++ grep -v '^\s*$'
+ output_dir=reports/172.16.1.6/cisco
+ [[ ! -d reports/172.16.1.6/cisco ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
++ command -v -- ./scripts/network-extract.shell
++ grep -v '^#'
+++ date +%s%N
++ grep -v '^\s*$'
++ grep -v '^#'
+++ base64
++ grep -v '^#'
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ export targets_location=targets
+++ tr -dc a-zA-Z0-9
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ declare -a execute
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.1.2, ... ,10.0.1.2"'
++ printf '%*s' 12 ''
++ mktemp -d
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2"'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local 'indent=            '
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ local first_search_entry=10.0.0.1

+ newline
+ local last_search_entry=10.0.0.1
+ local first_search_entry=10.0.2.3
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local first_search_entry=172.16.0.5
+ local last_search_entry=10.0.2.3
+ local last_search_entry=172.16.0.5
+ local 'target_search_range=10.0.2.3, ... ,10.0.2.3'
+ local 'target_search_range=172.16.0.5, ... ,172.16.0.5'
interface GigabitEthernet0/1
+ [[ true == true ]]
+ [[ true == true ]]
+ local count=1
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ (( i = 0 ))
+++ date +%s%N
+ (( i < count ))
+ [[ true == true ]]
+ echo
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
+ (( i++ ))

+ (( i < count ))
object network Stark-Tower
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-configs--ips.list ]'
++ printf '%*s' 12 ''
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ local count=1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ] ]]
+ ((  count == 0  ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ print 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
 host 10.0.0.1
 description Core services gateway'
++ export divisor=MTc0ODc1MzQ4NDYzNTg1MzAwMAo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
++ divisor=MTc0ODc1MzQ4NDYzNTg1MzAwMAo
+ result=0
+++ date +%s%N
+ [[ -n {
++ which awk
  "vendor": "cisco",
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-configs--ips.list ]'
  "model": "ASA",
+ local 'indent=            '
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ [[ -n Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1) ]]
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -n reports/172.18.1.20/misc/fw1.cfg ]]
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
  "version": "9.14(3)",
+ echo -en 'Search Listing: [ 172.16.0.5, ... ,172.16.0.5 ] (1)'
  "domain": "edge.dc.example.com",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ] ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "perimeter-fw1"
}
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

ASA Version 9.14(3)
+ source ./scripts/devops-helpers.shell
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+++ base64
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ local count=1
hostname perimeter-fw1
+ (( i = 0 ))
domain-name edge.dc.example.com

+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
interface GigabitEthernet0/1
+ ((  count == 0  ))
++ [[ -n '' ]]
+ final_output=reports/172.18.1.20/misc/fw1.cfg
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ echo
+ extract_location=reports/172.18.1.20/misc/fw1.cfg
 nameif inside
+ echo
+ print 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ [[ verbose == \d\e\b\u\g ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
++ __DEVOPS_HELPERS_SOURCED=1
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

++ dirname -- ./scripts/network-extract.shell
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
+ [[ -n Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 10.0.2.3, ... ,10.0.2.3 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+++ base64
+ [[ -z cisco ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ local count=1
+ newline
+ ((  count == 0  ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ echo
+ (( i++ ))
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ alias parse-listings--helper=parse_listings__helper
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+++ tr -dc a-zA-Z0-9
+ (( i < count ))
+ [[ extract == \d\e\b\u\g ]]
+ newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ newline
+ local count=1
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ (( i = 0 ))
+ [[ -z cisco ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ true == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ [[ -n /usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \ ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ echo -e '/usr/bin/awk -v targets="10.0.1.2, ... ,10.0.1.2" \'
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+++ tr -dc a-zA-Z0-9
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
++ alias network-extract--helper=network_extract__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ echo -e --platform=cisco
++ dirname reports/172.18.1.20/misc/fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z8j0IreMWk
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z8j0IreMWk
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
interface GigabitEthernet0/1
+ (( i < count ))
 nameif inside
++ alias list-file=list_file
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

object network Stark-Tower
 host 10.0.0.1
 description Core services gateway'
++ alias log-error=log_error
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
++ alias log-info=log_info
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
++ alias log-warn=log_warn
+ [[ -n {
  "vendor": "cisco",
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
++ alias print-message=message
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
++ alias print-newline=newline
  "hostname": "perimeter-fw1"
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
}

ASA Version 9.14(3)
hostname perimeter-fw1
+ newline
domain-name edge.dc.example.com
++ alias pause=pause
+ local count=1

++ alias print-line=print
+ (( i = 0 ))
interface GigabitEthernet0/1
+ (( i < count ))
 nameif inside
 security-level 100
+ echo
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface
++ alias print-file=print_file

+ local awk_bin=/usr/bin/awk
object network Stark-Tower
 host 10.0.0.1
 description Core services gateway ]]
++ alias relative-configpath=relative_configpath
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ echo -en '{
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
  "vendor": "cisco",
+ local SCRIPT_DIR=./scripts
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
  "model": "ASA",
  "version": "9.14(3)",
++ alias system-metrics=system_metrics
  "domain": "edge.dc.example.com",
+ local script_filename=cisco-configs.awk
  "hostname": "perimeter-fw1"
+ local SCRIPT_DIR=./scripts
}

++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ alias parse-cisco=main
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/1
 nameif inside
 security-level 100
 ip address 10.0.0.1 255.255.255.0
 description Internal Network Interface

+ local script_filename=cisco-configs.awk
object network Stark-Tower
 host 10.0.0.1
+ local script_filepath=./scripts/extract/cisco-configs.awk
 description Core services gateway'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z x ]]
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ [[ config =~ ^(config|c)$ ]]
++ mkdir -p logs/console logs/jobs
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ (( i++ ))
++ export divisor=MTc0ODc1MzQ4NDY0MjQ5NzAwMAo
+ [[ config =~ ^(extract|x)$ ]]
+ (( i < count ))
++ divisor=MTc0ODc1MzQ4NDY0MjQ5NzAwMAo
+ [[ config =~ ^(logger|l)$ ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ source ./scripts/devops-helpers.shell
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ [[ config =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
++ [[ -n '' ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ set -euo pipefail
++ [[ 5 -lt 4 ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ export LC_ALL=C
+ LC_ALL=C
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias parse-listings--helper=parse_listings__helper
++ export divisor=MTc0ODc1MzQ4NDY0MzA2NjAwMAo
++ divisor=MTc0ODc1MzQ4NDY0MzA2NjAwMAo
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ source ./scripts/devops-helpers.shell
+ [[ config == \d\r\y\-\r\u\n ]]
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ [[ -n '' ]]
+ newline
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ read -r key value
+ local count=1
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
++ [[ 5 -lt 4 ]]
++ alias network-configs--helper=network_configs__helper
+ output_dir=reports/172.18.1.20/misc
+ [[ ! -d reports/172.18.1.20/misc ]]
+ (( i < count ))
++ alias network-extract--helper=network_extract__helper
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ alias parse-listings--helper=parse_listings__helper
+ IFS==
++ which awk
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
++ mktemp -d
+ alias parse-cisco=main
++ printf '%*s' 12 ''
++ alias network-configs--helper=network_configs__helper
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ alias network-extract--helper=network_extract__helper
+ local 'indent=            '
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
++ which awk
++ mktemp -d
++ /usr/bin/awk -v targets=10.0.1.2 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ echo -e --extract=reports/192.168.2.12/cisco/branch-isr-02.cfg
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ newline 2
+ (( i = 0 ))
+ local 'extracted_configuration={
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ alias parse-cisco=main
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ read -r key value
  "version": "16.9",
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
  "domain": "",
+ (( i++ ))
  "hostname": "branch-isr-02"
+ [[ -z x ]]
+ script_filename=network-extract.shell
+ export logs_location=logs
}
+ script_filename=network-extract
+ (( i < count ))

+ export network_extract__console=logs/console/network-extract.console
version 16.9
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
hostname branch-isr-02
+ network_extract__console=logs/console/network-extract.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=2
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i++ ))

+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ touch logs/console/network-extract.console
+ logs_location=logs
interface GigabitEthernet0/0/2
+ (( i < count ))
+ echo
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n reports/172.16.0.5/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ mkdir -p logs/console
 ip address 10.0.2.3 255.255.255.0
+ final_output=reports/172.16.0.5/misc/fw3.cfg
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
 description Dev VLAN
+ (( i++ ))
+ [[ platform =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ extract_location=reports/172.16.0.5/misc/fw3.cfg
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
object network Panther-Gateway
+ for xitem in "${@}"
+ (( i < count ))
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
 host 10.0.2.3
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
 description Secure outbound concentrator'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ result=0
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "16.9",
+ echo
  "domain": "",
+ [[ true == true ]]
+ (( i++ ))
  "hostname": "branch-isr-02"
}
+ (( i < count ))

version 16.9
+ message 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
hostname branch-isr-02
+ [[ -n Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/cisco/perimeter-fw1.cfg ]'

interface GigabitEthernet0/0/2
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JPNUPz4DZa
+ newline
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JPNUPz4DZa
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
+ local count=1

object network Panther-Gateway
+ (( i = 0 ))
 host 10.0.2.3
+ (( i < count ))
+ [[ -n reports/10.0.2.3/misc/fw3.cfg ]]
 description Secure outbound concentrator ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ IFS==
+ echo
+ [[ cfg == \c\f\g ]]
+ export 'nl=\n'
+ (( i++ ))
+ nl='\n'
+ final_output=reports/10.0.2.3/misc/fw3.cfg
+ [[ -n reports/10.0.0.1/misc/switch1.conf ]]
+ (( i < count ))
+ source ./scripts/devops-resources.shell
++ dirname -- ./scripts/network-extract.shell
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ extract_location=reports/10.0.2.3/misc/fw3.cfg
+ cat -n reports/10.0.0.1/cisco/perimeter-fw1.cfg
++ [[ -n '' ]]
+ export network_extract__console=logs/console/network-extract.console
+ [[ conf == \c\o\n\f ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ network_extract__console=logs/console/network-extract.console
+ final_output=reports/10.0.0.1/misc/switch1.conf
+ extract_location=reports/10.0.0.1/misc/switch1.conf
++ [[ 5 -lt 4 ]]
+ touch logs/console/network-extract.console
++ alias detect-vendor=detect_vendor
++ IFS=,
++ alias exit-error=exit_error
++ echo 172.18.1.20
++ alias list-file=list_file
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ local 'indent=            '
++ alias print-newline=newline
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ true == true ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ declare -a execute
+ local verbose=true
++ alias pause=pause
+ IFS=' 	
'
++ alias print-line=print
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ dirname reports/172.16.0.5/misc/fw3.cfg
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uM5scrvKo7
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uM5scrvKo7
++ alias system-metrics=system_metrics
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ 5 -lt 4 ]]
++ alias validate-address=validate_address
++ alias detect-vendor=detect_vendor
++ alias warning-message=warning
++ export LC_ALL=C
++ alias exit-error=exit_error
++ LC_ALL=C
+ print '{
  "vendor": "cisco",
  "model": "",
++ export 'nl=\n'
  "version": "16.9",
++ nl='\n'
  "domain": "",
  "hostname": "branch-isr-02"
++ export cache_location=.cache
}
++ cache_location=.cache

version 16.9
++ export logs_location=logs
hostname branch-isr-02
++ logs_location=logs

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
++ alias list-file=list_file

object network Panther-Gateway
++ mkdir -p logs/console logs/jobs
 host 10.0.2.3
++ alias log-error=log_error
 description Secure outbound concentrator'
++ alias log-info=log_info
++ alias log-warn=log_warn
++ IFS=,
++ alias print-message=message
+ [[ -n {
++ alias print-newline=newline
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
++ echo 172.16.1.6
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
++ alias pause=pause
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN

object network Panther-Gateway
 host 10.0.2.3
++ alias print-line=print
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
++ alias print-file=print_file
  "model": "",
++ export targets_location=targets
  "version": "16.9",
++ targets_location=targets
++ alias relative-configpath=relative_configpath
++ dirname reports/10.0.0.1/misc/switch1.conf
++ export targets_logfile=logs/jobs/targets.jobs
  "domain": "",
++ targets_logfile=logs/jobs/targets.jobs
  "hostname": "branch-isr-02"
+ [[ extract =~ ^(config|c)$ ]]
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/2
 ip address 10.0.2.3 255.255.255.0
 description Dev VLAN
++ alias system-metrics=system_metrics

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
++ alias validate-address=validate_address
  "hostname": "fg-branch-vpn-01"
}
++ dirname reports/10.0.2.3/misc/fw3.cfg

++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
++ export logs_location=logs
++ logs_location=logs
+ declare -a execute
++ mkdir -p logs/console logs/jobs
+ [[ extract =~ ^(console|o)$ ]]
#hostname="fg-branch-vpn-01"
+ [[ extract =~ ^(extract|x)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
+ local extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
  set subnet 10.0.1.2 255.255.255.255
+ [[ extract =~ ^(logger|l)$ ]]
  set comment "QA node in Peter'\''s Lab"
 next
++ which awk
+ [[ extract =~ ^(platform|p)$ ]]
end'
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uadwfasopp/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list --config=.cache/resources/cisco/perimeter-fw1.cfg --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console --verbose

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ [[ 6 -eq 0 ]]
+ touch logs/console/network-extract.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emvosdfzjb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ output_dir=reports/172.16.0.5/misc
+ [[ ! -d reports/172.16.0.5/misc ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list --config=.cache/resources/cisco/dmz-fw2-backup.cfg --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
+++ date +%s%N
++ which awk
+ newline
+ output_dir=reports/10.0.0.1/misc
+ local count=1
+ [[ ! -d reports/10.0.0.1/misc ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
+++ base64
++ export actions_logfile=./logs/console/run.console
  "version": "v7.2.5.F",
++ actions_logfile=./logs/console/run.console
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
++ touch ./logs/console/run.console

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter's Lab"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
++ command -v -- ./scripts/network-extract.shell
 edit "Spidey-Sandbox"
  set subnet 10.0.1.2 255.255.255.255
  set comment "QA node in Peter'\''s Lab"
 next
++ echo -e --platform=cisco
end'
+ output_dir=reports/10.0.2.3/misc
+ [[ ! -d reports/10.0.2.3/misc ]]
+++ tr -dc a-zA-Z0-9
+ set -euo pipefail
++ export actions_logfile=./logs/console/run.console
+ export LC_ALL=C
++ actions_logfile=./logs/console/run.console
+ LC_ALL=C
++ touch ./logs/console/run.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console ]]
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
}

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console ]]
version 12.4
hostname access-sw1-west
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ platform =~ ^(extract|x)$ ]]
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ [[ platform =~ ^(logger|l)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(platform|p)$ ]]
+ newline 2
+ local target_platform=cisco
+ case "${target_file}" in

object-group network MGMT-ACCESS
 description Management objects
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
+ [[ platform =~ ^(search|s)$ ]]
 network-object host 10.10.10.10 ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ read -r key value
+ local count=2
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ command -v -- ./scripts/network-extract.shell
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ mktemp -d
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ sed '1{/^[[:space:]]*$/d;}'
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/10.0.2.3/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/10.0.2.3/cisco/branch-isr-02.cfg
++ printf '%*s' 12 ''
+ [[ platform == \v\e\r\b\o\s\e ]]
++ dirname -- ./scripts/network-extract.shell
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
++ export targets_location=targets
 description Controlled guest devices
++ targets_location=targets
++ dirname -- ./scripts/network-extract.shell
 network-object host 10.10.10.10 ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ IFS=,
+ echo -en '{
  "vendor": "cisco",
++ printf '%*s' 12 ''
  "model": "",
  "version": "12.4",
++ echo 172.18.1.20
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10

object-group network Mutant-WiFi
 description Controlled guest devices
 network-object host 10.10.10.10'
++ export divisor=MTc0ODc1MzQ4NDY2NzY4MjAwMAo
++ divisor=MTc0ODc1MzQ4NDY2NzY4MjAwMAo
+ source ./scripts/devops-helpers.shell
+ execute=('/usr/bin/awk' '-v' 'targets=172.18.1.20' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ declare -a execute
+ local 'indent=            '
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ [[ 6 -eq 0 ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local 'indent=            '
++ alias parse-listings--helper=parse_listings__helper
+ [[ platform =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/fortinet/fg-testing-config.cfg --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console --verbose
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
+ [[ platform =~ ^(platform|p)$ ]]
+ local count=1
+ (( i = 0 ))
+ local target_platform=cisco
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ [[ platform == \h\e\l\p ]]
+ (( i++ ))
+ [[ platform == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ dirname -- ./scripts/network-extract.shell
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias network-configs--helper=network_configs__helper
++ export targets_location=targets
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ targets_location=targets
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ for xitem in "${@}"
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ sed '1{/^[[:space:]]*$/d;}'
+ IFS==
+ read -r key value
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias network-extract--helper=network_extract__helper
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ oIFS=' 	
+ local count=1
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i = 0 ))
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export console_output=false
+ console_output=false
+ [[ search =~ ^(config|c)$ ]]
+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ newline 2
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]
++ which awk
+ [[ search =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ search =~ ^(console|o)$ ]]
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ [[ false == true ]]
+ alias parse-cisco=main
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ -z x ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ export logs_location=logs
+ [[ search == \v\e\r\b\o\s\e ]]
+ logs_location=logs
+ for xitem in "${@}"
+ mkdir -p logs/console
+ IFS==
+ read -r key value
+ local count=2
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console ]]
+ (( i < count ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTdnLPdGdm
+ case "${target_file}" in
+ echo
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTdnLPdGdm
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--perimeter-fw1.cfg.console
+++ date +%s%N
+ (( i++ ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ (( i < count ))
+ echo
+ export 'nl=\n'
+ (( i++ ))
+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ nl='\n'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search =~ ^(extract|x)$ ]]
+ source ./scripts/devops-resources.shell
+ (( i < count ))
+ newline
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ [[ search =~ ^(logger|l)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ [[ true == true ]]
++ [[ -n '' ]]
+ [[ search =~ ^(platform|p)$ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ search =~ ^(search|s)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
++ [[ 5 -lt 4 ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local SCRIPT_DIR=./scripts
+ [[ search == \h\e\l\p ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local script_filename=cisco-configs.awk
+ message 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ search == \d\e\b\u\g ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ for xitem in "${@}"
+ local 'message=Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
++ alias list-file=list_file
+ echo -e 'Configuration File [ reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ alias log-error=log_error
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
++ alias log-info=log_info
+ newline
+ newline
++ alias log-warn=log_warn
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
++ alias print-message=message
+ (( i < count ))
+ (( i < count ))
+ IFS==
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
+++ base64
++ alias relative-configpath=relative_configpath
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ read -r key value
++ alias system-metrics=system_metrics
+++ date +%s%N
+ echo
+ (( i++ ))
+ (( i < count ))
++ alias validate-address=validate_address
+ echo
+ cat -n reports/10.0.1.2/fortinet/fg-branch-vpn-01.cfg
++ alias warning-message=warning
++ export LC_ALL=C
+ local SCRIPT_DIR=./scripts
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+++ tr -dc a-zA-Z0-9
+ local script_filename=cisco-configs.awk
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+++ base64
++ which awk
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ newline
+ (( i++ ))
+ (( i < count ))
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ local count=1
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ newline 2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="172.18.1.20, ... ,172.18.1.20"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20"'
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ echo -e --config=.cache/resources/cisco/perimeter-fw1.cfg
+ local count=2
+ (( i = 0 ))
++ export divisor=MTc0ODc1MzQ4NDY3OTIzMjAwMAo
+ (( i < count ))
++ divisor=MTc0ODc1MzQ4NDY3OTIzMjAwMAo
+ (( i++ ))
+ (( i < count ))
+ echo
+ source ./scripts/devops-helpers.shell
+ (( i++ ))
++ [[ -n '' ]]
+ (( i < count ))
+ [[ false == true ]]
+ echo
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/access-sw1-west.cfg ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias parse-listings--helper=parse_listings__helper
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ export actions_logfile=./logs/console/run.console
+ (( i < count ))
++ actions_logfile=./logs/console/run.console
+ cat -n reports/10.10.10.10/cisco/access-sw1-west.cfg
++ touch ./logs/console/run.console
++ alias network-configs--helper=network_configs__helper
++ which awk
++ export divisor=MTc0ODc1MzQ4NDY4MTI5NzAwMAo
++ divisor=MTc0ODc1MzQ4NDY4MTI5NzAwMAo
++ alias network-extract--helper=network_extract__helper
+ source ./scripts/devops-helpers.shell
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
++ [[ -n '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
+ local 'extracted_configuration={
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console ]]
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ [[ 5 -lt 4 ]]
  "domain": "",
+ case "${target_file}" in
+ [[ logger =~ ^(config|c)$ ]]
  "hostname": "branch-isr-02"
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
}
+ result=0

+ [[ logger =~ ^(logger|l)$ ]]
version 16.9
+ exit 0
++ printf '%*s' 12 ''
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MHW0BUkeY0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MHW0BUkeY0
++ alias parse-listings--helper=parse_listings__helper
hostname branch-isr-02
+ [[ search =~ ^(config|c)$ ]]

+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
interface GigabitEthernet0/0/0
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
 ip address 172.16.1.6 255.255.255.0
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ local 'indent=            '
+ [[ search =~ ^(search|s)$ ]]
+ [[ config =~ ^(config|c)$ ]]
 description ISP uplink
+ alias parse-cisco=main
++ alias network-configs--helper=network_configs__helper
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ true == true ]]

+ [[ config =~ ^(console|o)$ ]]
+ [[ -z x ]]
+ [[ config =~ ^(extract|x)$ ]]
+ export logs_location=logs
+ logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ mkdir -p logs/console
+ [[ search == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
++ alias network-extract--helper=network_extract__helper
+ [[ config =~ ^(platform|p)$ ]]
object network BlackWidow-Core
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ newline
+ IFS==
++ IFS=,
+ read -r key value
+ read -r key value
+ local count=1
+ IFS==
++ echo 172.16.0.5
 host 172.16.1.6
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
+ echo
+ read -r key value
++ echo 10.0.0.1
 description Branch router uplink NAT'
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "model": "",
  "version": "16.9",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ false == true ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ alias parse-cisco=main
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "",
  "hostname": "branch-isr-02"
}

+ message '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
version 16.9
hostname branch-isr-02
+ [[ -n /usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \ ]]

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
+ [[ -z x ]]
 description ISP uplink
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ export logs_location=logs

+ echo -e '/usr/bin/awk -v targets="172.18.1.20, ... ,172.18.1.20" \'
+ logs_location=logs
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.0.5' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
object network BlackWidow-Core
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ mkdir -p logs/console
+ declare -a execute
 host 172.16.1.6
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a execute
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 description Branch router uplink NAT ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message '                .cache/resources/misc/fw1.cfg'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ newline
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ local count=1
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ (( i = 0 ))
+ [[ 6 -eq 0 ]]
+ (( i < count ))
+ echo
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.puqhmhxfsq/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console --verbose
++ echo -e --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local target_config=.cache/resources/cisco/perimeter-fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
++ which awk
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ echo -e --platform=cisco
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ echo -e --extract=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
++ echo -e --config=.cache/resources/fortinet/fg-testing-config.cfg
+ newline
+ [[ config == \d\r\y\-\r\u\n ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ which awk
  "domain": "",
  "hostname": "branch-isr-02"
}
++ IFS=,
++ sed -e '1s|^\(-\)\{1,\}||'

++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo 10.0.2.3
version 16.9
hostname branch-isr-02
+ script_filename=network-extract.shell

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink
+ script_filename=network-extract

object network BlackWidow-Core
 host 172.16.1.6
+ export network_extract__console=logs/console/network-extract.console
 description Branch router uplink NAT'
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --verbose
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
 description Branch router uplink NAT ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ [[ config == \v\e\r\b\o\s\e ]]
+ echo -en '{
  "vendor": "cisco",
+ for xitem in "${@}"
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02
+ IFS==

+ read -r key value
interface GigabitEthernet0/0/0
 ip address 172.16.1.6 255.255.255.0
 description ISP uplink

object network BlackWidow-Core
 host 172.16.1.6
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.2.3' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
 description Branch router uplink NAT'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ declare -a execute
  "model": "",
+ [[ true == true ]]
  "version": "16.9",
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console ]]
  "hostname": "branch-isr-02"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
}
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
+ script_filename=network-extract.shell
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ case "${target_file}" in
+ touch logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.18.1.20 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
+++ date +%s%N
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console ]]
++ which awk
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--fg-branch-vpn-01.cfg.console
+++ base64
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local awk_bin=/usr/bin/awk
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-testing-config.cfg
+ [[ config =~ ^(console|o)$ ]]
+ local 'awk_args=-v targets="172.16.0.5, ... ,172.16.0.5"'
+++ tr -dc a-zA-Z0-9
+ [[ config =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ print '{
++ echo -e --extract=reports/203.0.113.25/cisco/perimeter-fw1.cfg
  "vendor": "cisco",
+ [[ extract =~ ^(console|o)$ ]]
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
+ [[ config =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ local extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ [[ extract == \d\r\y\-\r\u\n ]]
  "domain": "",
+ [[ extract == \v\e\r\b\o\s\e ]]
  "hostname": "branch-isr-02"
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5"'
+ for xitem in "${@}"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ [[ 6 -eq 0 ]]
version 16.9
hostname branch-isr-02
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.jxv4tevo3a/network-configs--ips.list =~ ^-*(h|help)$ ]]

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ IFS==
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ oIFS=' 	
+ [[ search =~ ^(config|c)$ ]]
'
+ [[ search =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ [[ search =~ ^(extract|x)$ ]]
+ [[ config == \h\e\l\p ]]
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ read -r key value
+ [[ config == \d\e\b\u\g ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list
+ read -r key value
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ 6 -eq 0 ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.ni8dikfss3/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console --verbose
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ oIFS=' 	
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline 2
++ printf '%*s' 12 ''
'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'awk_args=-v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose == \h\e\l\p ]]
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3"'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local count=2
+ local verbose=true
+ (( i = 0 ))
+ IFS=' 	
+ (( i < count ))
+ local 'indent=            '
+ echo
'
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ [[ true == true ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ result=0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ exit 0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5e9lYdUAm7 ]]
+ search_terms=()
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5e9lYdUAm7
+ declare -a search_terms
+ local count=1
+ message 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
+ local 'message=Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/cisco/branch-isr-02.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console ]]
++ printf '%*s' 12 ''
+ sed '1{/^[[:space:]]*$/d;}'
+ newline
+ (( i = 0 ))
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--access-sw1-west.cfg.console
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ (( i < count ))
+ mapfile -t search_terms
+ echo
+ cat -n reports/172.16.1.6/cisco/branch-isr-02.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local 'indent=            '
  "model": "",
++ export divisor=MTc0ODc1MzQ4NDY5OTQ2ODAwMAo
++ divisor=MTc0ODc1MzQ4NDY5OTQ2ODAwMAo
+ (( i++ ))
+ (( i < count ))
+ source ./scripts/devops-helpers.shell
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "",
  "domain": "",
+ [[ true == true ]]
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
 network-object host 172.18.1.20
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ [[ 5 -lt 4 ]]
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias parse-listings--helper=parse_listings__helper
++ printf '%*s' 12 ''
++ echo -e --platform=cisco
+ message '                .cache/resources/misc/switch1.conf'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ echo -e '                .cache/resources/misc/switch1.conf'
+ newline
+ local count=1
+ (( i = 0 ))
 network-object host 192.168.1.10'
+ (( i < count ))
++ alias network-configs--helper=network_configs__helper
+ echo
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ local 'indent=            '
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ newline
+ local count=1
+ [[ extract =~ ^(config|c)$ ]]
+ (( i = 0 ))
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ newline
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(platform|p)$ ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(search|s)$ ]]
+ alias parse-cisco=main
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ result=0
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]]
+ exit 0
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ -z x ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XVK39LPTT1 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ extract == \d\e\b\u\g ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ export logs_location=logs
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ verbose =~ ^(config|c)$ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.XVK39LPTT1
+ logs_location=logs
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ mkdir -p logs/console
+ for xitem in "${@}"
+ [[ verbose =~ ^(extract|x)$ ]]
+ IFS==
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ [[ -n /usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \ ]]
+ IFS=' 	
'
+ local 'message=/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -z '' ]]
+ debug=false
+ echo -e '/usr/bin/awk -v targets="10.0.2.3, ... ,10.0.2.3" \'
+ [[ -z '' ]]
+ dry_run=false
+ [[ -n /usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \ ]]
+ [[ -z true ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ echo -e '/usr/bin/awk -v targets="172.16.0.5, ... ,172.16.0.5" \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ print '{
  "vendor": "cisco",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "model": "",
+ [[ -z '' ]]
+ [[ platform =~ ^(config|c)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
  "version": "",
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ export console_output=false
++ sed -e '1s|^\(-\)\{1,\}||'
+ search_terms=()
+ console_output=false
+ message '                .cache/resources/misc/fw3.cfg'
  "domain": "",
+ [[ logger =~ ^(platform|p)$ ]]
  "hostname": ""
+ [[ platform =~ ^(console|o)$ ]]
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
}
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ message '                .cache/resources/misc/fw3.cfg'
+ declare -a search_terms
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -z '' ]]

+ [[ logger =~ ^(config|c)$ ]]
object-group network Fortress-Wireless
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
 description Secure wireless access layer
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
 network-object host 172.18.1.20
+ local count=1
 network-object host 192.168.1.10'
+ (( i = 0 ))
+ (( i < count ))
+ newline 2
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
+ local 'message=                .cache/resources/misc/fw3.cfg'
 description Secure wireless access layer
+ echo -e '                .cache/resources/misc/fw3.cfg'
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ newline
+ echo -en '{
+ local count=1
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "",
+ (( i < count ))
  "version": "",
++ tr -d '\r'
  "domain": "",
  "hostname": ""
+ echo
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ grep -v '^\s*$'
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.18.1.20/cisco/branch-isr-02.cfg
+ [[ search =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ newline
+ [[ search =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ local target_platform=cisco
+ [[ config =~ ^(console|o)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ config =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ platform == \d\r\y\-\r\u\n ]]
+ IFS==
+ [[ platform == \v\e\r\b\o\s\e ]]
+ read -r key value
+ for xitem in "${@}"
+ [[ config =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
+ [[ config =~ ^(search|s)$ ]]
+ result=0
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
++ grep -v '^#'
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9e0X5vBNVp ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.9e0X5vBNVp
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
+ echo
+ [[ extract =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ local extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ script_filename=network-extract.shell
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=10.0.2.3 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ script_filename=network-extract
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ export network_extract__console=logs/console/network-extract.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ network_extract__console=logs/console/network-extract.console
+ read -r key value
+ touch logs/console/network-extract.console
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console ]]
+ [[ extract =~ ^(search|s)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ extract == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ script_helper=false
+ [[ logger =~ ^(console|o)$ ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ local 'extracted_configuration={
  "vendor": "cisco",
+ newline
+ [[ platform =~ ^(logger|l)$ ]]
+ local count=1
  "model": "",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ (( i = 0 ))
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
+ [[ platform =~ ^(platform|p)$ ]]
 network-object 192.168.12.0 255.255.255.0'
+ newline 2
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ result=0
+ local target_platform=cisco
+ [[ logger =~ ^(search|s)$ ]]
+ echo
+ [[ logger == \h\e\l\p ]]
+ (( i++ ))
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n {
+ [[ logger == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ IFS==
+ local count=2
  "model": "",
  "version": "",
+ (( i = 0 ))
  "domain": "",
  "hostname": ""
+ (( i < count ))
}

+ echo
object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --extract=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/172.18.1.20/misc/fw1.cfg ] ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/172.18.1.20/misc/fw1.cfg ]'
+ local first_search_entry=192.168.2.12
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local last_search_entry=192.168.2.12
+ local count=1
+ (( i = 0 ))
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ (( i < count ))
+ echo
++ echo -e --platform=fortinet
+ [[ true == true ]]
+ read -r key value
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ ((  count == 0  ))
+ [[ platform =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ print '{
+ [[ platform =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
  "vendor": "cisco",
+ [[ platform =~ ^(platform|p)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ local target_platform=cisco

object-group network Avengers-Office
++ echo -e --verbose
+ [[ platform =~ ^(search|s)$ ]]
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ sed -e '1s|^\(-\)\{1,\}||'
+ IFS==
+ read -r key value
+ [[ -n {
+ cat -n reports/172.18.1.20/misc/fw1.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
object-group network Avengers-Office
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Avengers-Office
 description VLAN access layer
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sbhotf2c4e/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/192.168.1.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console --verbose
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ /usr/bin/awk -v targets=172.16.0.5 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ true == true ]]
++ tr -d '\r'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ newline
+ local 'extracted_configuration={
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console ]]
  "vendor": "cisco",
  "model": "",
+ local count=1
+ local 'extracted_configuration={
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
  "vendor": "cisco",
  "model": "",
  "version": "",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console ]]
  "domain": "",
  "version": "",
  "hostname": ""
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
  "domain": "",
+ echo
}
  "hostname": ""
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--branch-isr-02.cfg.console
+ (( i++ ))

+ (( i < count ))
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
object-group network Panther-Edge
 description Internet-facing proxy systems
+ result=0
 network-object host 203.0.113.25
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
 network-object host 172.16.0.5
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'


object network Edge-Terminal
object-group network Wakanda-Core
 host 172.16.0.5
 description Internet firewall handoff'
+ result=0
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
 description National Core Routing Zone
 network-object host 192.168.1.10
++ grep -v '^\s*$'
 network-object host 10.0.2.3
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

 network-object 10.0.0.0 255.255.255.0
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
object network Edge-Terminal
 host 172.16.0.5
++ tr -d '\r'
 description Internet firewall handoff ]]

object network Panther-Gateway
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ [[ config =~ ^(logger|l)$ ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ [[ config =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(logger|l)$ ]]
++ grep -v '^#'
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\e\b\u\g ]]
+ for xitem in "${@}"
+ [[ logger =~ ^(config|c)$ ]]
++ grep -v '^\s*$'
+ IFS==
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ extract == \v\e\r\b\o\s\e ]]
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ for xitem in "${@}"
+ IFS==
+ [[ config =~ ^(extract|x)$ ]]
+ read -r key value
+ [[ config =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ print '{
  "vendor": "cisco",
+ [[ platform =~ ^(extract|x)$ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
 host 172.16.0.5
 description Internet firewall handoff ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Edge-Terminal
+ newline
 host 172.16.0.5
 description Internet firewall handoff'
+ newline 2
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ [[ platform =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ local target_platform=fortinet
+ [[ false == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ [[ platform == \h\e\l\p ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console ]]
+ [[ platform == \d\e\b\u\g ]]
+ local count=2
+ [[ platform == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--branch-isr-02.cfg.console
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i++ ))
+ print '{
  "vendor": "cisco",
+ (( i < count ))
  "model": "",
  "version": "",
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console ]]
  "domain": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
  "hostname": ""
+ (( i++ ))
++ echo -e --extract=reports/192.168.1.11/fortinet/fg-campus-core.cfg
}
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console ]]

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
++ echo -e --platform=fortinet
 host 10.0.2.3
+ local 'extracted_configuration={
+ (( i < count ))
 description Secure outbound concentrator'
++ echo -e --extract=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ [[ true == true ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0

object network Panther-Gateway
 host 10.0.2.3
 description Secure outbound concentrator'
+ sed '1{/^[[:space:]]*$/d;}'
++ echo -e --verbose
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6wCoRbAHFk ]]
+ message 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch1.conf ] ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.6wCoRbAHFk
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch1.conf ]'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ sed '1{/^[[:space:]]*$/d;}'
+ echo
+ (( i++ ))
+ [[ logger =~ ^(config|c)$ ]]
+ (( i < count ))
+ cat -n reports/10.0.0.1/misc/switch1.conf
+ [[ logger =~ ^(console|o)$ ]]
+ local first_search_entry=192.168.1.10
+ [[ logger =~ ^(extract|x)$ ]]
+ local last_search_entry=192.168.1.10
+ [[ logger =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
  "model": "ASA",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ logger =~ ^(platform|p)$ ]]
  "hostname": "perimeter-fw1"
+ [[ true == true ]]
}

+ [[ logger =~ ^(search|s)$ ]]
ASA Version 9.14(3)
+ [[ logger == \h\e\l\p ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]

+ [[ logger == \d\r\y\-\r\u\n ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local first_search_entry=192.0.2.50
+ [[ verbose =~ ^(extract|x)$ ]]
 network-object host 203.0.113.25
+ local 'extracted_configuration={
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
+ for xitem in "${@}"
+ local last_search_entry=192.0.2.50
  "model": "",
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'target_search_range=192.0.2.50, ... ,192.0.2.50'
+ IFS==
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
 network-object host 172.16.0.5
  "version": "",
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ] ]]
+ [[ true == true ]]

+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
object network Magneto-Core
+ local awk_bin=/usr/bin/awk
+ [[ verbose =~ ^(search|s)$ ]]
 host 172.16.0.5
+ local count=1
  "domain": "",
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
 description WAN firewall entry point'
  "hostname": ""
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ] ]]
+ [[ logger =~ ^(config|c)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ result=0
+ local count=1
+ [[ logger =~ ^(extract|x)$ ]]
+ ((  count == 0  ))
+ local count=1
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n {
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
++ echo -e --verbose
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ ((  count == 0  ))
  "vendor": "cisco",
+ newline
}
  "model": "ASA",
+ print 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local count=1

+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1) ]]
+ (( i < count ))
+ echo -en 'Search Listing: [ 192.0.2.50, ... ,192.0.2.50 ] (1)'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ newline
interface Vlan10
+ local count=1
 ip address 10.0.1.2 255.255.255.0'
  "version": "9.14(3)",
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ result=0
+ (( i++ ))
  "domain": "edge.dc.example.com",
+ (( i < count ))
  "hostname": "perimeter-fw1"
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ echo
+ (( i++ ))
+ [[ -n {
  "vendor": "cisco",
}
  "model": "",
+ (( i < count ))
  "version": "",

+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
  "domain": "",
  "hostname": ""
}

interface Vlan10
+ set -euo pipefail
 ip address 10.0.1.2 255.255.255.0 ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
ASA Version 9.14(3)
+ newline
hostname perimeter-fw1
domain-name edge.dc.example.com
+ local count=1
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'

object-group network Panther-Edge
+ (( i = 0 ))
 description Internet-facing proxy systems
++ echo -e --verbose
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
 network-object host 203.0.113.25
 network-object host 172.16.0.5

+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
object network Magneto-Core
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
 host 172.16.0.5
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
 description WAN firewall entry point ]]
++ printf '%*s' 12 ''
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
++ mktemp -d
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ print '{
  "vendor": "cisco",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ (( i < count ))
  "model": "",
+ [[ logger =~ ^(platform|p)$ ]]
  "version": "",
  "domain": "",
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(config|c)$ ]]
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n {
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
  "model": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "version": "",
+ [[ config =~ ^(config|c)$ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "",
  "hostname": ""
}
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'

interface Vlan10
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
 ip address 10.0.1.2 255.255.255.0 ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ echo -en '{
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "vendor": "cisco",
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan10
 ip address 10.0.1.2 255.255.255.0'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --verbose
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(search|s)$ ]]
+ print '{
+ [[ verbose == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ verbose =~ ^(console|o)$ ]]
  "model": "ASA",
+ [[ config == \h\e\l\p ]]
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
+ [[ config == \d\e\b\u\g ]]
  "hostname": "perimeter-fw1"
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
}
+ [[ config == \v\e\r\b\o\s\e ]]

+ [[ verbose =~ ^(logger|l)$ ]]
ASA Version 9.14(3)
hostname perimeter-fw1
+ for xitem in "${@}"
domain-name edge.dc.example.com
+ (( i = 0 ))

+ [[ verbose =~ ^(platform|p)$ ]]
object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
+ [[ verbose == \d\e\b\u\g ]]
}
+ [[ verbose == \d\r\y\-\r\u\n ]]

ASA Version 9.14(3)
+ [[ verbose == \v\e\r\b\o\s\e ]]
hostname perimeter-fw1
domain-name edge.dc.example.com
+ (( i < count ))

object-group network Panther-Edge
+ echo
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5
+ (( i++ ))

+ (( i < count ))
object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point ]]
+ cat -n reports/192.0.2.50/cisco/dmz-fw2-backup.cfg
+ local verbose=true
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
+ IFS=' 	
++ sed -e '1s|^\(-\)\{1,\}||'
'

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5

object network Magneto-Core
 host 172.16.0.5
 description WAN firewall entry point'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list != *,* ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ message 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw1.cfg ] ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw1.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ mapfile -t search_terms
+ [[ logger =~ ^(extract|x)$ ]]
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ [[ verbose == \h\e\l\p ]]
+ [[ logger =~ ^(platform|p)$ ]]
++ IFS=,
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
++ echo 10.10.10.10
+ [[ logger == \d\r\y\-\r\u\n ]]
+ newline
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local count=1
+ for xitem in "${@}"
+ (( i = 0 ))
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ [[ logger == \d\r\y\-\r\u\n ]]
++ echo -e --verbose
+ cat -n reports/10.0.2.3/misc/fw1.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ search =~ ^(logger|l)$ ]]
+ local verbose=true
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.66EllUqzrL
+ [[ search =~ ^(extract|x)$ ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.66EllUqzrL
+ [[ search == \d\e\b\u\g ]]
++ IFS=,
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ search =~ ^(platform|p)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ [[ search =~ ^(search|s)$ ]]
+ export 'nl=\n'
++ echo 192.168.0.100
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list
+ nl='\n'
+ [[ search == \h\e\l\p ]]
+ local count=2
+ [[ search == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ echo
+ for xitem in "${@}"
+ [[ verbose == \d\e\b\u\g ]]
+ (( i++ ))
+ source ./scripts/devops-resources.shell
+ IFS==
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ [[ -n '' ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ verbose =~ ^(config|c)$ ]]
++ [[ 5 -lt 4 ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ message 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -n Configuration File [ reports/10.0.1.2/misc/switch1.conf ] ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ local 'message=Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
++ tr -d '\r'
+ echo -e 'Configuration File [ reports/10.0.1.2/misc/switch1.conf ]'
++ alias detect-vendor=detect_vendor
+ [[ -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ cfg == \c\f\g ]]
+ local count=1
+ [[ verbose == \h\e\l\p ]]
++ alias exit-error=exit_error
+ (( i = 0 ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n reports/192.0.2.50/cisco/perimeter-fw1.cfg ]]
+ final_output=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ IFS=' 	
+ newline
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ [[ search == \v\e\r\b\o\s\e ]]
'
+ echo
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ read -r key value
+ newline
+ (( i++ ))
+ extract_location=reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ local count=1
+ (( i < count ))
+ newline 2
+ IFS==
++ alias list-file=list_file
+ for xitem in "${@}"
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/access-sw1-west.cfg')
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ cat -n reports/10.0.1.2/misc/switch1.conf
+ final_output=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ declare -a execute
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ extract_location=reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ [[ search =~ ^(config|c)$ ]]
++ alias log-error=log_error
+ local verbose=true
+ [[ verbose =~ ^(console|o)$ ]]
++ alias log-info=log_info
+ [[ verbose =~ ^(extract|x)$ ]]
+ local count=2
+ [[ verbose =~ ^(logger|l)$ ]]
+ (( i = 0 ))
++ alias log-warn=log_warn
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS=' 	
+ (( i < count ))
'
+ [[ verbose =~ ^(search|s)$ ]]
++ alias print-message=message
+ [[ -z '' ]]
+ [[ verbose == \h\e\l\p ]]
+ echo
+ declare -a execute
+ [[ verbose == \d\e\b\u\g ]]
+ debug=false
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ alias print-newline=newline
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ local verbose=true
+ [[ -z '' ]]
+ local verbose=true
+ [[ -z '' ]]
+ local count=1
+ (( i < count ))
+ IFS=' 	
+ echo
+ debug=false
'
+ (( i = 0 ))
+ IFS==
++ alias pause=pause
+ [[ search =~ ^(console|o)$ ]]
+ read -r key value
+ dry_run=false
+ [[ search =~ ^(extract|x)$ ]]
++ grep -v '^\s*$'
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias print-line=print
+ [[ -z true ]]
+ [[ -z '' ]]
++ alias print-file=print_file
+ export console_output=false
+ console_output=false
+ message 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ alias relative-configpath=relative_configpath
+ [[ -n Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
++ echo -e --verbose
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/cisco/perimeter-fw1.cfg ]'
+ search_terms=()
+ declare -a search_terms
++ alias system-metrics=system_metrics
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^#'
+ echo
+ (( i++ ))
+ (( i < count ))
++ dirname reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/172.16.0.5/cisco/perimeter-fw1.cfg
++ dirname reports/192.0.2.50/cisco/perimeter-fw1.cfg
++ alias validate-address=validate_address
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
++ nl='\n'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list != *,* ]]
++ export cache_location=.cache
+ mapfile -t search_terms
++ cache_location=.cache
++ export logs_location=logs
+ [[ search =~ ^(logger|l)$ ]]
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ search =~ ^(platform|p)$ ]]
++ echo -e --extract=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ (( i = 0 ))
+ [[ search == \h\e\l\p ]]
+ (( i < count ))
+ [[ search == \d\e\b\u\g ]]
+ local 'extracted_configuration={
+ IFS=' 	
+ echo
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ -z '' ]]
  "vendor": "cisco",
'
+ (( i < count ))
+ [[ -z '' ]]
  "model": "",
+ read -r key value
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ [[ verbose =~ ^(config|c)$ ]]
  "version": "12.4",
  "domain": "",
+ [[ search =~ ^(config|c)$ ]]
  "hostname": "access-sw1-west"
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ false == true ]]
}
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ [[ true == true ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ search =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ debug=false
+ IFS==
+ read -r key value
+ [[ search =~ ^(platform|p)$ ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ echo
+ debug=false
+ [[ -z true ]]
+ dry_run=false
+ (( i++ ))
+ [[ -z '' ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ search =~ ^(search|s)$ ]]
+ echo
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console ]]
+ (( i++ ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --config=.cache/resources/misc/switch3.conf
++ which awk
+ (( i < count ))
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west
+ output_dir=reports/192.0.2.50/cisco

interface Vlan1
+ output_dir=reports/192.168.1.10/fortinet
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
+ [[ ! -d reports/192.168.1.10/fortinet ]]
 description Management objects
+ [[ ! -d reports/192.0.2.50/cisco ]]
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local first_search_entry=172.16.1.6
+ local last_search_entry=172.16.1.6
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Management Interface

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.4",
  "domain": "",
  "hostname": "access-sw1-west"
}

version 12.4
hostname access-sw1-west

interface Vlan1
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
 ip address 192.168.0.1 255.255.255.0
 description Management Interface
+ newline
+ [[ true == true ]]

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ] ]]
++ grep -v '^\s*$'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ sed '1{/^[[:space:]]*$/d;}'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ [[ true == true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console ]]
+ ((  count == 0  ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console ]]
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ export console_output=false
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
+ console_output=false
+ newline
+ local count=1
+ (( i = 0 ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z true ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console ]]
+ export console_output=false
+ [[ -z '' ]]
+ console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ script_helper=false
+ echo
++ export actions_logfile=./logs/console/run.console
+ (( i < count ))
+ (( i++ ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console ]]
++ actions_logfile=./logs/console/run.console
+ dry_run=false
+ [[ false == true ]]
+ (( i < count ))
++ touch ./logs/console/run.console
+ [[ -z true ]]
+ newline
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ false == true ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local count=1
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z fortinet ]]
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
++ command -v -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ echo
+ [[ false == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console ]]
+ case "${target_file}" in
+ (( i++ ))
++ grep -v '^#'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ [[ true == true ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ local awk_bin=/usr/bin/awk
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console ]]
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ case "${target_file}" in
+ [[ -z '' ]]
+ local count=1
+ script_helper=false
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ false == true ]]
+ [[ -z '' ]]
+ (( i = 0 ))
+ [[ extract =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ [[ extract =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]]
+ [[ true == true ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ search_terms=()
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ echo -e --verbose
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ IFS=' 	
'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ debug=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ local awk_bin=/usr/bin/awk
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ newline 2
+ [[ false == true ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=2
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ echo
+ search_terms=()
+ declare -a search_terms
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]]
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
+ local target_config=.cache/resources/misc/switch3.conf
+ [[ config =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --config=.cache/resources/cisco/branch-isr-02.cfg
+ message 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ export console_output=false
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/access-sw1-west.cfg ]'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ newline
+ local first_search_entry=192.168.0.1
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ local last_search_entry=192.168.0.1
+ local count=1
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list != *,* ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ cat -n reports/192.168.0.1/cisco/access-sw1-west.cfg
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
++ export targets_location=targets
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ local count=1
+ (( i = 0 ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console ]]
+ (( i < count ))
++ targets_location=targets
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console ]]
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.BFqHxrZFKG/network-extract--switch1.conf.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ mapfile -t search_terms
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ case "${target_file}" in
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--perimeter-fw1.cfg.console
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ search_terms=()
+ [[ false == true ]]
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ config =~ ^(extract|x)$ ]]
+ declare -a search_terms
+ [[ config =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]]
+ console_output=false
+ local extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(platform|p)$ ]]
+ search_terms=()
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list != *,* ]]
++ printf '%*s' 12 ''
+ local script_filename=cisco-configs.awk
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local target_config=.cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ config =~ ^(console|o)$ ]]
+ set -euo pipefail
+ export LC_ALL=C
+ [[ config =~ ^(extract|x)$ ]]
+ LC_ALL=C
+ [[ config =~ ^(logger|l)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list != *,* ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
++ printf '%*s' 12 ''
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ [[ config =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
+ mapfile -t search_terms
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+++ date +%s%N
+ IFS=' 	
'
+ [[ -z '' ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ debug=false
+ [[ extract =~ ^(logger|l)$ ]]
+ declare -a search_terms
+ [[ extract =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'indent=            '
++ which awk
+ [[ true == true ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
++ which awk
+ [[ -n reports/172.16.1.6/fortinet/fg-campus-core.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ extract_location=reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ tr -d '\r'
+++ base64
++ mktemp -d
+ local 'indent=            '
+ read -r key value
+ [[ true == true ]]
+ [[ true == true ]]
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console ]]
+ dry_run=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ [[ -z true ]]
+ case "${target_file}" in
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ export console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console ]]
+ console_output=false
+ case "${target_file}" in
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--dmz-fw2-backup.cfg.console
+ [[ config == \h\e\l\p ]]
+ [[ extract == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local target_config=.cache/resources/cisco/branch-isr-02.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ result=0
++ grep -v '^\s*$'
+++ tr -dc a-zA-Z0-9
+ exit 0
+ newline
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5IKIsH9KTA ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.5IKIsH9KTA
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ exit 0
++ dirname reports/172.16.1.6/fortinet/fg-campus-core.cfg
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUM3feMVQ4 ]]
++ grep -v '^#'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.oUM3feMVQ4
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ IFS==
+ read -r key value
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console ]]
+ newline
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]]
+ local count=1
+ search_terms=()
+ (( i = 0 ))
+ declare -a search_terms
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list != *,* ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ mapfile -t search_terms
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console ]]
+ echo
+ [[ -z '' ]]
+ script_helper=false
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ [[ false == true ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ search_terms=()
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ for xitem in "${@}"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ read -r key value
+ message '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -n                 .cache/resources/cisco/access-sw1-west.cfg ]]
+ local 'message=                .cache/resources/cisco/access-sw1-west.cfg'
+ echo -e '                .cache/resources/cisco/access-sw1-west.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console ]]
+ newline
++ IFS=,
+ local count=1
+ [[ true == true ]]
++ echo 192.168.1.10
++ export divisor=MTc0ODc1MzQ4NDc3MDI1MzAwMAo
++ divisor=MTc0ODc1MzQ4NDc3MDI1MzAwMAo
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aCIIlOOyq6
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aCIIlOOyq6
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ tr -d '\r'
+ source ./scripts/devops-resources.shell
+ source ./scripts/devops-helpers.shell
++ tr -d '\r'
++ [[ -n '' ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ tr -d '\r'
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ [[ 5 -lt 4 ]]
+ declare -a execute
+ [[ -n reports/192.168.0.1/cisco/campus-sw-access01.cfg ]]
++ alias detect-vendor=detect_vendor
+ (( i = 0 ))
+ case "${target_file}" in
+ [[ cfg == \c\f\g ]]
++ alias exit-error=exit_error
+ final_output=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.cMKWND5ohZ/network-extract--switch1.conf.console
+ extract_location=reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
++ IFS=,
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias list-file=list_file
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list != *,* ]]
++ echo 192.0.2.50
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ alias parse-listings--helper=parse_listings__helper
++ alias log-error=log_error
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
+ output_dir=reports/172.16.1.6/fortinet
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
++ grep -v '^\s*$'
++ alias system-metrics=system_metrics
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ [[ ! -d reports/172.16.1.6/fortinet ]]
++ echo -e --extract=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
++ alias validate-address=validate_address
+ execute=('/usr/bin/awk' '-v' 'targets=192.0.2.50' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
++ echo -e --platform=cisco
+ declare -a execute
++ echo -e --extract=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ alias warning-message=warning
++ alias network-configs--helper=network_configs__helper
++ export LC_ALL=C
++ LC_ALL=C
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ grep -v '^#'
++ grep -v '^#'
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ dirname reports/192.168.0.1/cisco/campus-sw-access01.cfg
++ echo -e --extract=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--access-sw1-west.cfg.console
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ mapfile -t search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ alias parse-cisco=main
++ which awk
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ local first_search_entry=172.16.1.6
+ output_dir=reports/192.168.0.1/cisco
+ local awk_bin=/usr/bin/awk
+ [[ ! -d reports/192.168.0.1/cisco ]]
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ local last_search_entry=172.16.1.6
+ local 'target_search_range=172.16.1.6, ... ,172.16.1.6'
+ [[ true == true ]]
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ echo
+ (( i++ ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-configs--ips.list ]'
+ (( i < count ))
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
++ dirname -- ./scripts/network-extract.shell
+ local count=1
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ ((  count == 0  ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--fg-branch-vpn-01.cfg.console
+ local first_search_entry=192.168.0.100
+ local last_search_entry=192.168.0.100
+ local 'target_search_range=192.168.0.100, ... ,192.168.0.100'
+ result=0
+ [[ true == true ]]
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1jAGviTC0 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.c1jAGviTC0
+ [[ extract =~ ^(config|c)$ ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ] ]]
+ [[ extract =~ ^(config|c)$ ]]
+ local extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local first_search_entry=192.168.1.10
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local last_search_entry=192.168.1.10
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ extract =~ ^(extract|x)$ ]]
+ local first_search_entry=192.168.1.11
+ [[ true == true ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ extract =~ ^(logger|l)$ ]]
+ print 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ printf '%*s' 12 ''
+ [[ -n Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1) ]]
+ echo -en 'Search Listing: [ 172.16.1.6, ... ,172.16.1.6 ] (1)'
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local 'indent=            '
+ [[ true == true ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ local target_platform=cisco
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ newline
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ extract =~ ^(search|s)$ ]]
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ [[ extract == \h\e\l\p ]]
+ (( i = 0 ))
+ read -r key value
++ echo -e --extract=reports/10.0.0.1/misc/switch3.conf
+ [[ extract == \d\e\b\u\g ]]
+ (( i < count ))
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.0.2.50, ... ,192.0.2.50"'
+ echo
+ local 'base_cmd=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50"'
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract =~ ^(platform|p)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract =~ ^(search|s)$ ]]
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local last_search_entry=192.168.1.11
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-configs--ips.list ]'
+ [[ extract == \h\e\l\p ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i++ ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ] ]]
+ (( i < count ))
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ (( i = 0 ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ echo
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ extract =~ ^(platform|p)$ ]]
+ ((  count == 0  ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ print 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ local script_filename=fortinet-configs.awk
+ result=0
+ (( i++ ))
+ IFS==
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ script_filename=network-extract.shell
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ extract == \v\e\r\b\o\s\e ]]
+ exit 0
+ for xitem in "${@}"
+ read -r key value
+ [[ -n Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1) ]]
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -en 'Search Listing: [ 192.168.0.100, ... ,192.168.0.100 ] (1)'
+ script_filename=network-extract
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ IFS==
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ newline
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaPs3JNwGQ ]]
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ network_extract__console=logs/console/network-extract.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpL7Wqp3AF ]]
++ printf '%*s' 12 ''
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mpL7Wqp3AF
+ touch logs/console/network-extract.console
++ tr -d '\r'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ZaPs3JNwGQ
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/access-sw1-west.cfg
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ tr -d '\r'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ local count=1
+ local 'indent=            '
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console ]]
+ echo
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ read -r key value
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ newline
+ [[ -z cisco ]]
+ [[ extract == \h\e\l\p ]]
+ [[ true == true ]]
+ local count=1
+ case "${target_file}" in
+ echo
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i = 0 ))
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ] ]]
+ (( i++ ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw1.cfg.console
+ (( i < count ))
+ (( i < count ))
+ [[ -z .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
+ [[ -z cisco ]]
+ newline
++ export targets_location=targets
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ [[ true == true ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
++ targets_location=targets
+ (( i++ ))
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
+ [[ -n /usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ grep -v '^\s*$'
+ echo -e '/usr/bin/awk -v targets="192.0.2.50, ... ,192.0.2.50" \'
++ grep -v '^\s*$'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
++ grep -v '^#'
++ grep -v '^#'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
+ echo
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ set -euo pipefail
+ export LC_ALL=C
+ LC_ALL=C
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+++ date +%s%N
++ /usr/bin/awk -v targets=192.0.2.50 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+++ base64
++ which awk
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.sbhotf2c4e/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list --config=.cache/resources/misc/switch1.conf --extract=reports/192.168.1.10/misc/switch1.conf --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console --verbose
+++ tr -dc a-zA-Z0-9
+ oIFS=' 	
'
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ (( i = 0 ))
+ (( i < count ))
+ (( i++ ))
+ [[ extract =~ ^(config|c)$ ]]
+ echo
+ (( i < count ))
+ newline
+ local count=1
+ [[ extract =~ ^(console|o)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ extract =~ ^(extract|x)$ ]]
++ echo -e --platform=cisco
+ (( i < count ))
+ local extract_location=reports/10.0.0.1/misc/switch3.conf
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ newline
+ [[ extract == \h\e\l\p ]]
+ local count=1
+ [[ extract == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ extract == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ echo -e --platform=cisco
++ IFS=,
+ local 'extracted_configuration={
++ echo 172.16.1.6
++ sed -e '1s|^\(-\)\{1,\}||'
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ echo
+ (( i++ ))
  "hostname": "fg-branch-vpn-01"
}

+ (( i++ ))
+ local first_search_entry=192.168.100.100
#hostname="fg-branch-vpn-01"
+ (( i < count ))
+ local first_search_entry=192.168.2.12
#model="FortiGate-60F"
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ echo
+ local 'extracted_configuration={
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ (( i++ ))
+ declare -a execute
+ local last_search_entry=192.168.100.100
+ (( i < count ))

config firewall address
 edit "Panther-Vault"
++ sed -e '1s|^\(-\)\{1,\}||'
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ result=0
+ newline
+ result=0
+ local count=1
+ [[ -n {
+ (( i = 0 ))
  "vendor": "fortinet",
+ local last_search_entry=192.168.2.12
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ [[ true == true ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ ls -al --color=auto .cache/resources/misc/switch3.conf

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
  set comment "Wakandan data store"
 next
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ] ]]
end ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
  "version": "12.4",
+ local count=1
  "domain": "",
  "hostname": "access-sw1-west"
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
}
+ ((  count == 0  ))

version 12.4
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway

+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
object-group network MGMT-ACCESS
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
++ mktemp -d
+ exit 0
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -n Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ echo -e 'Target Config: [ .cache/resources/cisco/campus-sw-access01.cfg ] ( cisco )'
+ echo
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ ls -al --color=auto .cache/resources/cisco/campus-sw-access01.cfg
+ ((  count == 0  ))
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -z cisco ]]
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ result=0
+ exit 0
++ export divisor=MTc0ODc1MzQ4NDc5OTExMzAwMAo
++ divisor=MTc0ODc1MzQ4NDc5OTExMzAwMAo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fm9sEjIPfW ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fm9sEjIPfW
+ source ./scripts/devops-helpers.shell
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
++ which awk
++ alias parse-listings--helper=parse_listings__helper
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
++ alias network-configs--helper=network_configs__helper
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
++ alias network-extract--helper=network_extract__helper
}
 description Management objects

+ [[ -n {
  "vendor": "fortinet",
ASA Version 9.14(3)
  "model": "FortiGate-60F",
++ echo -e --platform=fortinet
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lC80mhKKKK ]]
hostname perimeter-fw1
  "version": "v7.2.5.F",
domain-name edge.dc.example.com
+ [[ logger =~ ^(console|o)$ ]]
  "domain": ""

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lC80mhKKKK
  "hostname": "fg-branch-vpn-01"
+ [[ logger =~ ^(extract|x)$ ]]
object-group network Avengers-DMZ
}
++ IFS=,
++ echo -e --platform=cisco
 description Public access layer
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'

+ local count=1
+ [[ logger =~ ^(logger|l)$ ]]
++ echo 192.168.0.1
+ newline
+ (( i = 0 ))
 network-object host 192.0.2.50
#hostname="fg-branch-vpn-01"
+ newline
 network-object host 203.0.113.25
#model="FortiGate-60F"
 network-object 192.168.2.0 255.255.255.0'
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local count=1
+ local count=1

+ (( i = 0 ))
config firewall address
 edit "Panther-Vault"
+ (( i = 0 ))
+ (( i < count ))
+ result=0
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
 next
end ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
+ echo -en '{
 network-object host 192.168.0.1
 network-object host 192.168.0.100
  "version": "9.14(3)",
  "vendor": "fortinet",
  "domain": "edge.dc.example.com",
  "model": "FortiGate-60F",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ [[ logger =~ ^(platform|p)$ ]]
  "hostname": "perimeter-fw1"
  "version": "v7.2.5.F",
+ [[ platform =~ ^(config|c)$ ]]
  "domain": ""
+ declare -a execute
+ [[ logger =~ ^(search|s)$ ]]
  "hostname": "fg-branch-vpn-01"
}
+ [[ logger == \h\e\l\p ]]
+ alias parse-cisco=main
+ [[ logger == \d\e\b\u\g ]]
}
+ [[ logger == \d\r\y\-\r\u\n ]]


#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Panther-Vault"
  set subnet 192.168.1.10 255.255.255.255
  set comment "Wakandan data store"
ASA Version 9.14(3)
+ [[ -z x ]]
hostname perimeter-fw1
 next
+ export logs_location=logs
end'
+ logs_location=logs
+ [[ logger == \v\e\r\b\o\s\e ]]
domain-name edge.dc.example.com
+ for xitem in "${@}"
+ mkdir -p logs/console

+ IFS==
object-group network Avengers-DMZ
 network-object host 10.10.10.10'
+ read -r key value
 description Public access layer
+ (( i < count ))
 network-object host 192.0.2.50
 network-object host 203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object 192.168.2.0 255.255.255.0 ]]
+ echo
+ echo
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ [[ platform =~ ^(console|o)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ result=0
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -z fortinet ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i++ ))
+ [[ -n {
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ [[ platform =~ ^(logger|l)$ ]]
  "vendor": "cisco",
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i < count ))
  "model": "",
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ [[ platform =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
  "version": "12.4",
  "domain": "",
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ newline
+ local target_platform=cisco
+ [[ platform == \h\e\l\p ]]
  "hostname": "access-sw1-west"
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local count=1
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i = 0 ))
}
+ [[ platform == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
+ (( i < count ))
+ [[ platform == \h\e\l\p ]]
version 12.4
+ IFS==
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ read -r key value
hostname access-sw1-west
+ [[ -z cisco ]]
+ echo
+ [[ true == true ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]

+ for xitem in "${@}"
interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ IFS==
 description Guest VLAN Gateway
+ read -r key value

object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ (( i++ ))
+ (( i < count ))
++ which awk
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ newline
+ local count=1
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
ASA Version 9.14(3)
+ (( i = 0 ))
hostname perimeter-fw1
domain-name edge.dc.example.com
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'

+ local awk_bin=/usr/bin/awk
object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
+ set -euo pipefail
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0 ]]
+ export LC_ALL=C
+ LC_ALL=C
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0'
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
+ sed '1{/^[[:space:]]*$/d;}'
++ mktemp -d
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
++ echo -e --verbose
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
+ newline 2
+ [[ search == \h\e\l\p ]]
+ echo
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hsFToqHskZ
+ (( i < count ))
+ [[ search == \v\e\r\b\o\s\e ]]
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hsFToqHskZ
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=2
+ for xitem in "${@}"
+ (( i = 0 ))
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
+ script_filename=network-extract.shell
+ echo
+ script_filename=network-extract
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ local awk_bin=/usr/bin/awk
+ message 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
+ print '{
+ [[ -n Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ] ]]
  "vendor": "cisco",
+ local 'message=Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
  "model": "",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "12.4",
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ echo -e 'Configuration File [ reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg ]'
  "domain": "",
  "hostname": "access-sw1-west"
}

+ [[ platform =~ ^(config|c)$ ]]
version 12.4
hostname access-sw1-west

interface Vlan100
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
 ip address 192.168.0.100 255.255.255.0
+ [[ platform =~ ^(console|o)$ ]]
 description Guest VLAN Gateway
+ newline

+ local 'indent=            '
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local count=1
object-group network MGMT-ACCESS
+ [[ true == true ]]
 description Management objects
+ (( i = 0 ))
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
 network-object host 10.10.10.10'
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -n reports/192.168.1.10/misc/fw1.cfg ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ final_output=reports/192.168.1.10/misc/fw1.cfg
+ [[ -n {
+ [[ platform =~ ^(logger|l)$ ]]
+ newline
  "vendor": "cisco",
+ extract_location=reports/192.168.1.10/misc/fw1.cfg
  "model": "",
+ local count=1
  "version": "12.4",
  "domain": "",
+ (( i = 0 ))
  "hostname": "access-sw1-west"
}
+ (( i < count ))

version 12.4
+ echo
hostname access-sw1-west

interface Vlan100
 ip address 192.168.0.100 255.255.255.0
+ (( i++ ))
 description Guest VLAN Gateway
+ echo
+ (( i < count ))

+ [[ platform =~ ^(platform|p)$ ]]
object-group network MGMT-ACCESS
 description Management objects
 network-object host 192.168.0.1
 network-object host 192.168.0.100
+ (( i++ ))
 network-object host 10.10.10.10 ]]
+ (( i < count ))
+ cat -n reports/192.168.1.10/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "vendor": "cisco",
  "model": "",
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ platform =~ ^(extract|x)$ ]]
  "version": "12.4",
+ [[ -n reports/172.16.1.6/misc/switch3.conf ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
  "domain": "",
  "hostname": "access-sw1-west"
+ local 'extracted_configuration={
}
  "vendor": "cisco",
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'

  "model": "",
version 12.4
  "version": "12.2",
hostname access-sw1-west
  "domain": "",
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'

  "hostname": "campus-sw-access01"
+ export 'nl=\n'
interface Vlan100
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
 ip address 192.168.0.100 255.255.255.0
 description Guest VLAN Gateway
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'

+ [[ platform =~ ^(logger|l)$ ]]
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local target_platform=cisco
object-group network MGMT-ACCESS
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ conf == \c\o\n\f ]]
+ nl='\n'
+ [[ platform =~ ^(search|s)$ ]]
}
+ [[ -n reports/192.168.0.100/cisco/campus-sw-access01.cfg ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
 description Management objects
+ source ./scripts/devops-resources.shell

+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ platform == \h\e\l\p ]]
+ final_output=reports/172.16.1.6/misc/switch3.conf
version 12.2
 network-object host 192.168.0.1
+ local target_platform=fortinet
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ platform == \d\e\b\u\g ]]
hostname campus-sw-access01
+ extract_location=reports/172.16.1.6/misc/switch3.conf
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
 network-object host 192.168.0.100
+ [[ cfg == \c\f\g ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
++ [[ -n '' ]]

 network-object host 10.10.10.10'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ [[ platform == \h\e\l\p ]]
+ local count=1
+ [[ platform == \v\e\r\b\o\s\e ]]
object-group network Floor-Networks
+ final_output=reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ platform == \d\e\b\u\g ]]
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
++ printf '%*s' 12 ''
++ echo -e --config=.cache/resources/misc/switch1.conf
+ local 'indent=            '
 description End-user and service devices
 network-object host 192.168.0.1
+ for xitem in "${@}"
 network-object host 192.168.0.100
+ [[ true == true ]]
+ newline 2
+ extract_location=reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ IFS==
++ [[ 5 -lt 4 ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ alias list-file=list_file
+ newline
+ (( i++ ))
+ (( i < count ))
++ alias log-error=log_error
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ true == true ]]
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
+ message 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ] ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ local 'message=Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ dirname reports/192.168.1.10/misc/fw1.cfg
+ echo -e 'Configuration File [ reports/192.0.2.50/cisco/perimeter-fw1.cfg ]'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ (( i = 0 ))
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zes5mQZ2ot
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zes5mQZ2ot
+ echo
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ (( i++ ))
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i < count ))
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ cat -n reports/192.0.2.50/cisco/perimeter-fw1.cfg
+ export 'nl=\n'
+ newline
+ nl='\n'
++ alias log-info=log_info
+ [[ platform == \v\e\r\b\o\s\e ]]
+ source ./scripts/devops-resources.shell
+ for xitem in "${@}"
+ local count=1
++ alias log-warn=log_warn
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ [[ -n '' ]]
 network-object host 10.10.10.10'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ 6 -eq 0 ]]
+ read -r key value
+ result=0
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ [[ -n {
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nvyloqj9im/network-configs--ips.list =~ ^-*(h|help)$ ]]
++ [[ 5 -lt 4 ]]
+ IFS==
  "vendor": "cisco",
+ (( i < count ))
+ [[ -n reports/192.168.1.11/cisco/branch-isr-02.cfg ]]
+ read -r key value
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list --config=.cache/resources/fortinet/fg-campus-core.cfg --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console --verbose
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ [[ verbose =~ ^(config|c)$ ]]
++ alias print-message=message
+ oIFS=' 	
'
++ alias print-newline=newline
+ for xitem in "${@}"
+ [[ verbose =~ ^(console|o)$ ]]
++ alias list-file=list_file
+ IFS==
+ set -euo pipefail
+ read -r key value
++ alias log-error=log_error
++ alias pause=pause
++ alias log-info=log_info
+ export LC_ALL=C
++ alias log-warn=log_warn
+ LC_ALL=C
++ alias print-line=print
++ alias print-message=message
++ alias print-newline=newline
++ alias print-file=print_file
++ dirname reports/192.168.0.100/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias relative-configpath=relative_configpath
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ dirname reports/172.16.1.6/misc/switch3.conf
++ alias relative-configpath=relative_configpath
++ alias system-metrics=system_metrics
++ alias validate-address=validate_address
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}
++ alias warning-message=warning
+ [[ cfg == \c\f\g ]]
++ export LC_ALL=C
+ newline
+ final_output=reports/192.168.1.11/cisco/branch-isr-02.cfg

+ extract_location=reports/192.168.1.11/cisco/branch-isr-02.cfg
++ LC_ALL=C
+ local count=1
++ alias system-metrics=system_metrics
+ (( i = 0 ))
+ newline 2
+ (( i < count ))
+ echo
++ export 'nl=\n'
+ (( i++ ))
++ nl='\n'
+ (( i < count ))
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
+ [[ false == true ]]
+ [[ true == true ]]
version 12.2
hostname campus-sw-access01

+ [[ verbose =~ ^(logger|l)$ ]]
object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
++ alias validate-address=validate_address
++ alias warning-message=warning
+ [[ verbose =~ ^(platform|p)$ ]]
++ export LC_ALL=C
++ mktemp -d
+ local count=2
++ LC_ALL=C
+ [[ verbose =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]]
+ (( i < count ))
+ echo
+ [[ cfg == \c\f\g ]]
+ [[ verbose == \h\e\l\p ]]
++ export 'nl=\n'
+ final_output=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
++ nl='\n'
+ [[ verbose == \d\e\b\u\g ]]
+ [[ config =~ ^(config|c)$ ]]
+ (( i++ ))
++ export cache_location=.cache
+ [[ logger =~ ^(config|c)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ local target_config=.cache/resources/misc/switch1.conf
++ cache_location=.cache
+ extract_location=reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ (( i < count ))
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
++ export logs_location=logs
++ logs_location=logs
+ [[ config =~ ^(extract|x)$ ]]
++ mkdir -p logs/console logs/jobs
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ dirname reports/192.168.1.11/cisco/branch-isr-02.cfg
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ IFS=' 	
'
+ [[ true == true ]]
+ [[ -z '' ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ search_terms=()
+ [[ -n reports/192.168.2.12/cisco/branch-isr-02.cfg ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
+ declare -a search_terms
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ cfg == \c\f\g ]]
+ message 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ [[ logger == \h\e\l\p ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list != *,* ]]
+ output_dir=reports/192.168.0.100/cisco
+ mapfile -t search_terms
+ [[ logger == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/access-sw1-west.cfg ]'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ output_dir=reports/172.16.1.6/misc
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ IFS==
+ read -r key value
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
++ sed -e '1s|^\(-\)\{1,\}||'

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
+ newline
  "hostname": "campus-sw-access01"
}
+ newline

version 12.2
+ local count=1
+ local count=1
+ (( i = 0 ))
hostname campus-sw-access01
+ (( i < count ))
+ (( i = 0 ))

++ dirname reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
object-group network Floor-Networks
+ (( i < count ))
 description End-user and service devices
 network-object host 192.168.0.1
+ echo
+ echo
 network-object host 192.168.0.100
+ (( i++ ))
+ (( i++ ))
+ [[ ! -d reports/192.168.0.100/cisco ]]
+ (( i < count ))
 network-object host 10.10.10.10'
+ [[ ! -d reports/172.16.1.6/misc ]]
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ cat -n reports/192.168.0.100/cisco/access-sw1-west.cfg
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}
+ sed '1{/^[[:space:]]*$/d;}'

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ local SCRIPT_PATH=./scripts/network-extract.shell

++ echo -e --extract=reports/192.168.1.10/misc/switch1.conf
++ export actions_logfile=./logs/console/run.console
config firewall address
++ actions_logfile=./logs/console/run.console
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
++ touch ./logs/console/run.console
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
++ sed -e '1s|^\(-\)\{1,\}||'
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fg-branch-vpn-01.cfg.console
+ output_dir=reports/192.168.1.11/cisco
+ [[ ! -d reports/192.168.1.11/cisco ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
++ command -v -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
++ tr -d '\r'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

++ echo -e --verbose
interface Vlan1
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
 ip address 192.168.0.1 255.255.255.0
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ print '{
+ [[ search == \v\e\r\b\o\s\e ]]
  "vendor": "fortinet",
 description Switch Mgmt
+ for xitem in "${@}"
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ IFS==
  "hostname": "fg-campus-core"
+ read -r key value
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end'

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
++ grep -v '^\s*$'
+ result=0
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ [[ -n {
  "vendor": "cisco",
#model="FortiGate-200F"
++ echo -e --verbose
+ local SCRIPT_PATH=./scripts/network-extract.shell
  "model": "",

  "version": "12.2",
config firewall address
++ sed -e '1s|^\(-\)\{1,\}||'
  "domain": "",
 edit "Hawkeye-Nest"
  "hostname": "campus-sw-access01"
  set subnet 172.16.1.6 255.255.255.255
  set comment "Remote sniper node"
 next
end ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -en '{
}

  "vendor": "fortinet",
version 12.2
  "model": "FortiGate-200F",
hostname campus-sw-access01
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"


interface Vlan1
config firewall address
 ip address 192.168.0.1 255.255.255.0
 edit "Hawkeye-Nest"
  set subnet 172.16.1.6 255.255.255.255
 description Switch Mgmt
  set comment "Remote sniper node"
 next
end'

object-group network Floor-Networks
+ sed '1{/^[[:space:]]*$/d;}'
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ grep -v '^#'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ output_dir=reports/192.168.2.12/fortinet
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELRhklINKB
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELRhklINKB
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console ]]
+ export 'nl=\n'
+ case "${target_file}" in
++ export actions_logfile=./logs/console/run.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.CdiCFXN0om/network-extract--perimeter-fw1.cfg.console
++ actions_logfile=./logs/console/run.console
+ [[ logger =~ ^(config|c)$ ]]
++ touch ./logs/console/run.console
+ [[ extract =~ ^(config|c)$ ]]
++ export targets_location=targets
+ [[ logger =~ ^(config|c)$ ]]
++ targets_location=targets
+ [[ extract =~ ^(console|o)$ ]]
+ newline 2
++ export targets_logfile=logs/jobs/targets.jobs
+ [[ extract =~ ^(extract|x)$ ]]
++ targets_logfile=logs/jobs/targets.jobs
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ nl='\n'
+ [[ logger =~ ^(console|o)$ ]]
+ local extract_location=reports/192.168.1.10/misc/switch1.conf
+ output_dir=reports/192.168.100.100/cisco
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ ! -d reports/192.168.100.100/cisco ]]
++ dirname -- ./scripts/network-extract.shell
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ local count=2
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger == \h\e\l\p ]]
+ echo
+ [[ logger == \d\e\b\u\g ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
+ [[ logger == \d\r\y\-\r\u\n ]]
  "vendor": "cisco",
+ [[ true == true ]]
  "model": "",
+ source ./scripts/devops-resources.shell
+ [[ logger == \v\e\r\b\o\s\e ]]
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
+ newline
+ [[ logger =~ ^(platform|p)$ ]]
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

+ result=0
object-group network Floor-Networks
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ dirname -- ./scripts/network-extract.shell
++ echo -e --config=.cache/resources/fortinet/fg-campus-core.cfg
 description End-user and service devices
+ exit 0
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRzNcfZzPX ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
++ dirname -- ./scripts/network-extract.shell
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

interface Vlan1
 ip address 192.168.0.1 255.255.255.0
 description Switch Mgmt

object-group network Floor-Networks
 description End-user and service devices
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JRzNcfZzPX
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
+ local count=1
+ (( i = 0 ))
+ for xitem in "${@}"
+ (( i < count ))
+ echo
+ IFS==
+ read -r key value
+ (( i++ ))
+ (( i < count ))
++ [[ -n '' ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ] ]]
+ [[ false == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/campus-sw-access01.cfg ]'
+ newline
++ alias detect-vendor=detect_vendor
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local count=1
++ alias exit-error=exit_error
+ [[ logger == \v\e\r\b\o\s\e ]]
+ read -r key value
+ (( i = 0 ))
+ for xitem in "${@}"
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(config|c)$ ]]
+ IFS==
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ (( i < count ))
+ read -r key value
+ echo
++ alias list-file=list_file
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console ]]
++ alias log-error=log_error
+ cat -n reports/10.10.10.10/cisco/campus-sw-access01.cfg
+ [[ verbose =~ ^(extract|x)$ ]]
++ alias log-info=log_info
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
+ [[ verbose =~ ^(logger|l)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console ]]
+ newline 2
+ [[ verbose =~ ^(search|s)$ ]]
+ case "${target_file}" in
++ alias print-line=print
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ local count=2
+ local verbose=true
+ (( i = 0 ))
+ (( i < count ))
+ echo
+++ date +%s%N
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ true == true ]]
++ alias print-file=print_file
+ local first_search_entry=203.0.113.25
++ alias relative-configpath=relative_configpath
+ IFS=' 	
+ message 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ] ]]
++ echo -e --platform=cisco
'
+ local last_search_entry=203.0.113.25
+ local 'message=Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo -e 'Configuration File [ reports/172.16.1.6/fortinet/fg-campus-core.cfg ]'
++ alias system-metrics=system_metrics
+ newline
+ local count=1
+ (( i = 0 ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/172.16.1.6/fortinet/fg-campus-core.cfg
++ dirname -- ./scripts/network-extract.shell
+++ base64
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -z '' ]]
+ debug=false
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ -z true ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ -z '' ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
++ alias validate-address=validate_address
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ export console_output=false
+ [[ -z '' ]]
+ console_output=false
+ debug=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ dry_run=false
+ script_helper=false
+ [[ -z true ]]
+ [[ false == true ]]
+ [[ -z '' ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ result=0
+ local SCRIPT_DIR=./scripts
+ exit 0
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ export console_output=false
++ alias warning-message=warning
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0qh3dJKUPI ]]
+ console_output=false
+ local script_filename=cisco-configs.awk
+ local SCRIPT_DIR=./scripts
++ export LC_ALL=C
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.0qh3dJKUPI
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console ]]
+ local script_filename=cisco-configs.awk
++ export targets_location=targets
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ targets_location=targets
+ local SCRIPT_DIR=./scripts
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ local script_filename=cisco-configs.awk
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+++ tr -dc a-zA-Z0-9
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ search_terms=()
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
++ LC_ALL=C
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ newline
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local count=1
+ (( i = 0 ))
+ [[ -z '' ]]
++ echo -e --verbose
+ script_helper=false
+ (( i < count ))
++ export 'nl=\n'
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/fortinet/fg-campus-core.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ declare -a search_terms
+ [[ config == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ newline 2
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ dirname -- ./scripts/network-extract.shell
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ local count=2
++ dirname -- ./scripts/network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list != *,* ]]
+ (( i < count ))
+ mapfile -t search_terms
+ echo
+ (( i++ ))
++ nl='\n'
+ (( i < count ))
+ echo
++ export cache_location=.cache
++ sed -e '1s|^\(-\)\{1,\}||'
++ cache_location=.cache
+ (( i++ ))
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
++ export logs_location=logs
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
++ logs_location=logs
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
+ message 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.1/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ mkdir -p logs/console logs/jobs
+ cat -n reports/192.168.0.1/cisco/campus-sw-access01.cfg
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ which awk
++ which awk
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ newline
++ export divisor=MTc0ODc1MzQ4NDg0MjM1NzAwMAo
++ divisor=MTc0ODc1MzQ4NDg0MjM1NzAwMAo
+ local count=1
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ (( i = 0 ))
+++ date +%s%N
++ alias parse-listings--helper=parse_listings__helper
++ alias network-configs--helper=network_configs__helper
++ echo -e --extract=reports/192.168.2.12/fortinet/fg-campus-core.cfg
++ alias network-extract--helper=network_extract__helper
+++ base64
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i = 0 ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
+ (( i++ ))
+ (( i < count ))
+ alias parse-cisco=main
+ [[ false == true ]]
+ [[ -z x ]]
+ [[ true == true ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console ]]
+ local SCRIPT_DIR=./scripts
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+++ tr -dc a-zA-Z0-9
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ tr -d '\r'
++ tr -d '\r'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
++ grep -v '^\s*$'
++ grep -v '^\s*$'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
++ grep -v '^#'
++ grep -v '^#'
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_DIR=./scripts
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ set -euo pipefail
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ export LC_ALL=C
+ LC_ALL=C
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ export actions_logfile=./logs/console/run.console
+ [[ verbose =~ ^(config|c)$ ]]
++ actions_logfile=./logs/console/run.console
+ local verbose=true
++ mktemp -d
++ touch ./logs/console/run.console
+ [[ verbose =~ ^(console|o)$ ]]
+ echo
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ IFS=' 	
'
++ export divisor=MTc0ODc1MzQ4NDg1MTA1NTAwMAo
++ which awk
+ script_filename=network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ script_filename=network-extract
+ final_output=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ extract_location=reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ result=0
+ debug=false
+ exit 0
+ [[ -z '' ]]
+ dry_run=false
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kola59HCoq ]]
+ [[ -z true ]]
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.Kola59HCoq
+ export console_output=false
+ console_output=false
+ [[ search =~ ^(console|o)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
++ which awk
+ [[ search =~ ^(extract|x)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ script_helper=false
+ [[ extract =~ ^(console|o)$ ]]
+ newline 2
+ [[ extract =~ ^(extract|x)$ ]]
+ newline 2
+ local extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ for xitem in "${@}"
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console ]]
+ [[ logger =~ ^(config|c)$ ]]
+ IFS==
+ case "${target_file}" in
+ read -r key value
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kcDOWQAOrq/network-extract--fw1.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ search =~ ^(search|s)$ ]]
+ local target_platform=fortinet
+ [[ false == true ]]
+ [[ platform =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ [[ platform == \h\e\l\p ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ search_terms=()
+ [[ search == \h\e\l\p ]]
+ local count=2
+ declare -a search_terms
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ local count=2
+ [[ extract =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ extract == \h\e\l\p ]]
+ echo
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ extract == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ platform == \d\e\b\u\g ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ (( i = 0 ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list != *,* ]]
++ dirname reports/192.168.2.12/cisco/branch-isr-02.cfg
+ mapfile -t search_terms
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ true == true ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ [[ verbose == \d\e\b\u\g ]]
++ divisor=MTc0ODc1MzQ4NDg1MTA1NTAwMAo
+ read -r key value
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console ]]
+ read -r key value
+ [[ true == true ]]
+ source ./scripts/devops-helpers.shell
+ case "${target_file}" in
+ message 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -n Configuration File [ reports/10.0.2.3/misc/fw3.cfg ] ]]
+ local verbose=true
+ local 'message=Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
+ message 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ IFS=' 	
+ echo -e 'Configuration File [ reports/10.0.2.3/misc/fw3.cfg ]'
'
++ [[ -n '' ]]
+ [[ -n Configuration File [ reports/172.16.0.5/misc/fw3.cfg ] ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console ]]
++ __DEVOPS_HELPERS_SOURCED=1
+ debug=false
+ newline
+ local 'message=Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console ]]
+ dry_run=false
+ case "${target_file}" in
+ [[ -z true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--access-sw1-west.cfg.console
+ [[ -z '' ]]
+ echo -e 'Configuration File [ reports/172.16.0.5/misc/fw3.cfg ]'
+ local count=1
+ export console_output=false
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ cat -n reports/10.0.2.3/misc/fw3.cfg
+ console_output=false
+ (( i < count ))
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ echo
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ (( i++ ))
+ (( i < count ))
+ search_terms=()
+ declare -a search_terms
+ cat -n reports/172.16.0.5/misc/fw3.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ echo -e --verbose
++ echo -e --platform=fortinet
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e1K6KtXCDJ
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e1K6KtXCDJ
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
++ echo -e --platform=fortinet
+ source ./scripts/devops-resources.shell
+ output_dir=reports/192.168.2.12/cisco
++ [[ -n '' ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ ! -d reports/192.168.2.12/cisco ]]
++ [[ 5 -lt 4 ]]
++ tr -d '\r'
++ alias detect-vendor=detect_vendor
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
++ alias exit-error=exit_error
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias list-file=list_file
++ alias log-error=log_error
+ newline
+ debug=false
++ alias log-info=log_info
++ sed -e '1s|^\(-\)\{1,\}||'
++ alias log-warn=log_warn
++ alias print-message=message
++ alias print-newline=newline
++ alias pause=pause
++ alias print-line=print
++ alias print-file=print_file
++ alias relative-configpath=relative_configpath
+ local count=1
++ grep -v '^\s*$'
+ (( i = 0 ))
+ (( i < count ))
++ IFS=,
++ alias system-metrics=system_metrics
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
++ which awk
++ echo 172.16.1.6
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
+ (( i++ ))
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
+ result=0
++ mkdir -p logs/console logs/jobs
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3COY7zfI6J ]]
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.3COY7zfI6J
++ command -v -- ./scripts/network-extract.shell
+ [[ false == true ]]
+ [[ true == true ]]
++ grep -v '^#'
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ tr -d '\r'
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
+ (( i++ ))
+ [[ verbose =~ ^(config|c)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ [[ platform =~ ^(config|c)$ ]]
+ (( i < count ))
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console ]]
+ [[ false == true ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ case "${target_file}" in
+ [[ verbose =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
++ grep -v '^#'
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ logger =~ ^(console|o)$ ]]
+ newline
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ true == true ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local verbose=true
+ local count=1
+ [[ platform =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ IFS=' 	
+ (( i < count ))
++ dirname -- ./scripts/network-extract.shell
'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ echo
+ execute=('/usr/bin/awk' '-v' 'targets=172.16.1.6' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ [[ platform =~ ^(platform|p)$ ]]
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ declare -a execute
+ (( i < count ))
+ local target_platform=fortinet
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local verbose=true
+ IFS=' 	
+ local target_platform=fortinet
+ [[ -z '' ]]
+ [[ platform =~ ^(search|s)$ ]]
+ debug=false
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
'
+ dry_run=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ [[ -z true ]]
+ [[ platform == \h\e\l\p ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console ]]
+ [[ platform =~ ^(search|s)$ ]]
+ [[ -z '' ]]
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console ]]
+ [[ false == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ script_helper=false
+ case "${target_file}" in
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ debug=false
+ [[ true == true ]]
+ [[ false == true ]]
+ [[ logger == \h\e\l\p ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ [[ -z '' ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ search_terms=()
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ local first_search_entry=10.10.10.10
+ declare -a search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
+ dry_run=false
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ -z true ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ [[ -z '' ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ export actions_logfile=./logs/console/run.console
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ for xitem in "${@}"
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
+ export console_output=false
+ read -r key value
+ console_output=false
++ actions_logfile=./logs/console/run.console
+ IFS==
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
+ read -r key value
++ touch ./logs/console/run.console
+ local first_search_entry=10.0.0.1
+ local last_search_entry=10.0.0.1
++ IFS=,
+ local 'target_search_range=10.0.0.1, ... ,10.0.0.1'
+ for xitem in "${@}"
+ mapfile -t search_terms
+ [[ true == true ]]
+ IFS==
+ [[ -z '' ]]
+ read -r key value
++ echo 192.168.0.100
+ script_helper=false
+ [[ false == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ] ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ search_terms=()
+ declare -a search_terms
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list != *,* ]]
+ local count=1
+ local first_search_entry=198.51.100.75
+ mapfile -t search_terms
+ [[ config =~ ^(config|c)$ ]]
+ ((  count == 0  ))
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ -n Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1) ]]
++ [[ 5 -lt 4 ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo -en 'Search Listing: [ 10.0.0.1, ... ,10.0.0.1 ] (1)'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ [[ config =~ ^(platform|p)$ ]]
+ (( i < count ))
+ [[ config =~ ^(search|s)$ ]]
+ echo
+ [[ config == \h\e\l\p ]]
+ (( i++ ))
+ [[ config == \d\e\b\u\g ]]
+ (( i < count ))
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch3.conf ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ local SCRIPT_DIR=./scripts
+ echo -e 'Target Config: [ .cache/resources/misc/switch3.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch3.conf
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ -z '' ]]
+ [[ true == true ]]
+ dry_run=false
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
++ alias parse-listings--helper=parse_listings__helper
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ local last_search_entry=198.51.100.75
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ true == true ]]
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ local count=1
+ (( i < count ))
++ which awk
++ IFS=,
++ echo -e --verbose
++ echo 192.168.2.12
++ tr -d '\r'
+ [[ true == true ]]
++ tr -d '\r'
++ sed -e '1s|^\(-\)\{1,\}||'
+ echo
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --extract=reports/192.168.1.10/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ (( i < count ))
++ grep -v '^\s*$'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ export targets_location=targets
++ targets_location=targets
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
++ grep -v '^\s*$'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console ]]
+ [[ true == true ]]
+ newline
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^#'
++ grep -v '^#'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.4DoQzCyqMz/network-extract--fw3.cfg.console
+ local count=1
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console ]]
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ case "${target_file}" in
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console ]]
+ [[ logger =~ ^(config|c)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch1.conf.console
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ case "${target_file}" in
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ [[ logger =~ ^(console|o)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aXfA5l5BiL/network-extract--fw3.cfg.console
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ] ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ [[ logger =~ ^(logger|l)$ ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ [[ logger =~ ^(config|c)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ local count=1
+ [[ logger =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ ((  count == 0  ))
+ for xitem in "${@}"
+++ date +%s%N
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ verbose =~ ^(extract|x)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ IFS==
++ alias network-configs--helper=network_configs__helper
+ read -r key value
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ IFS==
+ read -r key value
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/192.168.1.10/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ extract == \h\e\l\p ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
++ export targets_location=targets
+ debug=false
+ for xitem in "${@}"
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/campus-sw-access01.cfg')
+ export console_output=false
+ local awk_bin=/usr/bin/awk
+ declare -a execute
+ IFS==
+++ base64
++ IFS=,
++ echo 192.168.2.12
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local first_search_entry=10.10.10.10
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ read -r key value
+ local last_search_entry=10.10.10.10
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ [[ -n reports/10.0.0.1/misc/switch3.conf ]]
+ [[ conf == \c\o\n\f ]]
+ final_output=reports/10.0.0.1/misc/switch3.conf
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
+ extract_location=reports/10.0.0.1/misc/switch3.conf
+ search_terms=()
+ local first_search_entry=203.0.113.25
+ declare -a search_terms
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]]
+ local last_search_entry=203.0.113.25
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list != *,* ]]
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ declare -a execute
+ mapfile -t search_terms
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+++ tr -dc a-zA-Z0-9
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ newline
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ ((  count == 0  ))
+ local 'awk_args=-v targets="172.16.1.6, ... ,172.16.1.6"'
+ local count=1
+ [[ -z true ]]
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ ((  count == 0  ))
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ echo
+ local count=1
+ (( i++ ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ declare -a execute
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/cisco/perimeter-fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
++ IFS=,
++ dirname reports/10.0.0.1/misc/switch3.conf
++ echo 192.168.1.11
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ echo -e --verbose
+ echo
+ (( i++ ))
+ newline
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i++ ))
+ [[ -z .cache/resources/fortinet/fg-testing-config.cfg ]]
+ (( i < count ))
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ message 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/cisco/perimeter-fw1.cfg ] ( cisco )'
++ echo -e --verbose
+ ls -al --color=auto .cache/resources/cisco/perimeter-fw1.cfg
+ newline
+ local count=1
+ (( i = 0 ))
++ which awk
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-testing-config.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-testing-config.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ result=0
+ exit 0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RSKTPtXuoj ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMfp4A45g8 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RSKTPtXuoj
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sMfp4A45g8
++ targets_location=targets
++ echo -e --platform=cisco
+ result=0
+ exit 0
++ alias network-extract--helper=network_extract__helper
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h7U8LnTrLO ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.h7U8LnTrLO
++ export targets_logfile=logs/jobs/targets.jobs
++ targets_logfile=logs/jobs/targets.jobs
+ local 'base_cmd=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6"'
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ [[ -z '' ]]
++ which awk
+ (( i < count ))
++ tr -d '\r'
++ IFS=,
++ export divisor=MTc0ODc1MzQ4NDg4ODM3NjAwMAo
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=MTc0ODc1MzQ4NDg4ODM3NjAwMAo
++ echo 192.168.100.100
+ source ./scripts/devops-helpers.shell
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
++ [[ 5 -lt 4 ]]
+ result=0
+ export console_output=false
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ console_output=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console ]]
+ declare -a execute
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
++ alias parse-listings--helper=parse_listings__helper
+ search_terms=()
+ exit 0
+ declare -a search_terms
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AhcVVLpug2 ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.AhcVVLpug2
++ grep -v '^\s*$'
++ grep -v '^#'
++ alias network-configs--helper=network_configs__helper
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ set -euo pipefail
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ export LC_ALL=C
+ LC_ALL=C
++ alias network-extract--helper=network_extract__helper
+ [[ -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ extract_location=reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ output_dir=reports/10.0.0.1/misc
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ ! -d reports/10.0.0.1/misc ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ alias parse-cisco=main
+ [[ verbose == \d\e\b\u\g ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
++ mktemp -d
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
++ printf '%*s' 12 ''
+ IFS=' 	
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n reports/203.0.113.25/cisco/perimeter-fw1.cfg ]]
+ local 'indent=            '
+ [[ verbose =~ ^(search|s)$ ]]
'
+ [[ true == true ]]
+ [[ verbose == \h\e\l\p ]]
+ local first_search_entry=192.168.0.1
+ [[ verbose == \d\e\b\u\g ]]
++ dirname reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ command -v -- ./scripts/network-extract.shell
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -z '' ]]
+ debug=false
+ newline
+ [[ -z '' ]]
+ local count=1
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ extract_location=reports/203.0.113.25/cisco/perimeter-fw1.cfg
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local last_search_entry=192.168.0.1
+ (( i++ ))
+ (( i < count ))
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform == \v\e\r\b\o\s\e ]]
+ [[ -n reports/10.10.10.10/fortinet/fg-testing-config.cfg ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local verbose=true
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ console_output=false
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ for xitem in "${@}"
+ local 'target_search_range=192.168.0.1, ... ,192.168.0.1'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ IFS==
+ [[ cfg == \c\f\g ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ read -r key value
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ final_output=reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ [[ true == true ]]
+ IFS=' 	
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console ]]
+ extract_location=reports/10.10.10.10/fortinet/fg-testing-config.cfg
'
+ [[ -z '' ]]
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ debug=false
+ [[ -z '' ]]
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ script_helper=false
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ -z '' ]]
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ [[ false == true ]]
+ newline
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ dry_run=false
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z true ]]
+ local count=1
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]]
+ [[ -z '' ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ] ]]
+ search_terms=()
+ mapfile -t search_terms
+ declare -a search_terms
+ export console_output=false
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list != *,* ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ mapfile -t search_terms
+ echo
+ (( i++ ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-configs--ips.list ]'
+ local 'awk_args=-v targets="192.168.0.100, ... ,192.168.0.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100"'
+ echo
+ local count=1
+ (( i++ ))
+ ((  count == 0  ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ console_output=false
+ [[ -n Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.0.1, ... ,192.168.0.1 ] (1)'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console ]]
+ local 'prompt_message=Enter configuration file to be parsed: '
+ newline
+ [[ -z '' ]]
+ [[ -z .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ local count=1
+ script_helper=false
+ (( i = 0 ))
+ [[ -z cisco ]]
+ (( i < count ))
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]]
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ alias parse-cisco=main
+ search_terms=()
+ echo
+ declare -a execute
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console ]]
+ (( i++ ))
+ declare -a search_terms
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list != *,* ]]
+ [[ -z x ]]
+ mapfile -t search_terms
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ which awk
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ printf '%*s' 12 ''
++ dirname reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ dirname -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ output_dir=reports/198.51.100.75/cisco
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
+ [[ ! -d reports/198.51.100.75/cisco ]]
++ dirname reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
+++ date +%s%N
+ script_filename=network-extract.shell
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ script_filename=network-extract
++ which awk
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local 'prompt_message=Enter configuration file to be parsed: '
++ tr -d '\r'
+++ base64
++ command -v -- ./scripts/network-extract.shell
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
++ tr -d '\r'
++ grep -v '^\s*$'
+++ tr -dc a-zA-Z0-9
++ sed -e '1s|^\(-\)\{1,\}||'
++ grep -v '^\s*$'
++ grep -v '^#'
++ grep -v '^#'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKcEqLBqkA
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKcEqLBqkA
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ export 'nl=\n'
+ nl='\n'
+ source ./scripts/devops-resources.shell
+ output_dir=reports/10.10.10.10/fortinet
+ local SCRIPT_DIR=./scripts
+ [[ ! -d reports/10.10.10.10/fortinet ]]
+ output_dir=reports/203.0.113.25/cisco
+ local script_filename=cisco-configs.awk
++ [[ -n '' ]]
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ -z .cache/resources/cisco/branch-isr-02.cfg ]]
+ [[ -z cisco ]]
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ [[ true == true ]]
++ alias detect-vendor=detect_vendor
++ alias exit-error=exit_error
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--campus-sw-access01.cfg.console
++ alias list-file=list_file
+ local count=1
++ alias log-error=log_error
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
++ alias log-info=log_info
+ echo
++ alias log-warn=log_warn
+ [[ true == true ]]
+ (( i++ ))
++ alias print-message=message
+ [[ logger =~ ^(config|c)$ ]]
++ alias print-newline=newline
+ (( i < count ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
++ alias pause=pause
+ local 'extracted_configuration={
  "vendor": "cisco",
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
  "model": "",
++ alias print-line=print
+ [[ logger =~ ^(platform|p)$ ]]
  "version": "16.9",
  "domain": "",
+ [[ logger =~ ^(search|s)$ ]]
  "hostname": "branch-isr-02"
}

version 16.9
+ [[ logger == \h\e\l\p ]]
hostname branch-isr-02
+ [[ logger == \d\e\b\u\g ]]
++ alias print-file=print_file
+ [[ logger == \d\r\y\-\r\u\n ]]

+ [[ logger == \v\e\r\b\o\s\e ]]
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
+ for xitem in "${@}"
 description Workstation LAN

+ IFS==
object-group network Hydra-Edge
+ read -r key value
 description Remote site uplink
++ alias relative-configpath=relative_configpath
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

++ printf '%*s' 12 ''
interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
++ alias system-metrics=system_metrics
+ local first_search_entry=192.168.100.100
++ alias validate-address=validate_address
++ alias warning-message=warning
+ local last_search_entry=192.168.100.100
++ export LC_ALL=C
+ local 'target_search_range=192.168.100.100, ... ,192.168.100.100'
++ LC_ALL=C
+ [[ true == true ]]
++ dirname -- ./scripts/network-extract.shell
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ command -v -- ./scripts/network-extract.shell
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-configs--ips.list ]'
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ ((  count == 0  ))
++ which awk
+ local first_search_entry=192.168.1.11
+ print 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ [[ -n Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1) ]]
+ local last_search_entry=192.168.1.11
+ echo -en 'Search Listing: [ 192.168.100.100, ... ,192.168.100.100 ] (1)'
+ local 'target_search_range=192.168.1.11, ... ,192.168.1.11'
+ newline
+ [[ true == true ]]
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ (( i = 0 ))
+ local awk_bin=/usr/bin/awk
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ 6 -eq 0 ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uadwfasopp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ echo
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ] ]]
+ (( i++ ))
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/203.0.113.25/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console --verbose
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
+ oIFS=' 	
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-configs--ips.list ]'
'
+ for xitem in "${@}"
+ local count=1
+ IFS==
+ ((  count == 0  ))
+ newline
+ read -r key value
+ local awk_bin=/usr/bin/awk
+ print 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1) ]]
++ tr -d '\r'
+ echo -en 'Search Listing: [ 192.168.1.11, ... ,192.168.1.11 ] (1)'
+ local count=1
+ newline
++ export divisor=MTc0ODc1MzQ4NDkxMTkxNDAwMAo
+ newline
+ (( i = 0 ))
+ local count=1
+ print '{
+ local count=1
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
+ (( i = 0 ))
  "domain": "",
+ (( i < count ))
+ echo
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
+ (( i++ ))
 ip address 192.168.2.12 255.255.255.0
+ (( i < count ))
 description Workstation LAN
+ message 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'

object-group network Hydra-Edge
+ echo
 description Remote site uplink
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco ) ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
 network-object host 192.168.2.12
+ local 'message=Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
 network-object host 198.51.100.75'
+ (( i++ ))
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/branch-isr-02.cfg ] ( cisco )'
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ ls -al --color=auto .cache/resources/cisco/branch-isr-02.cfg
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

interface GigabitEthernet0/0/1
 ip address 192.168.2.12 255.255.255.0
 description Workstation LAN

object-group network Hydra-Edge
 description Remote site uplink
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
++ echo -e --verbose
++ grep -v '^\s*$'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
++ grep -v '^#'
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ dirname -- ./scripts/network-extract.shell
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ script_filename=network-extract.shell
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ script_filename=network-extract
+ local SCRIPT_DIR=./scripts
+ export network_extract__console=logs/console/network-extract.console
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ network_extract__console=logs/console/network-extract.console
+ touch logs/console/network-extract.console
+ local script_filename=cisco-configs.awk
+ [[ -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ cfg == \c\f\g ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ final_output=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ extract_location=reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ dirname -- ./scripts/network-extract.shell
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
++ sed -e '1s|^\(-\)\{1,\}||'
++ dirname reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
++ which awk
++ IFS=,
++ echo 10.0.0.1
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ verbose =~ ^(console|o)$ ]]
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ [[ verbose =~ ^(extract|x)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.0.0.1' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch3.conf')
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ true == true ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ declare -a execute
+ [[ verbose =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ verbose =~ ^(platform|p)$ ]]
+ message 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ -n Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ] ]]
+ [[ verbose == \h\e\l\p ]]
+ local 'message=Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\e\b\u\g ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/cisco/branch-isr-02.cfg ]'
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ newline
+ IFS=' 	
+ local count=1
'
+ (( i = 0 ))
+ [[ -z '' ]]
+ (( i < count ))
+ debug=false
+ local script_filename=cisco-configs.awk
+ [[ -z '' ]]
+ echo
+ dry_run=false
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ -z true ]]
+ (( i++ ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ cat -n reports/192.168.2.12/cisco/branch-isr-02.cfg
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console ]]
+ [[ -z '' ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
++ divisor=MTc0ODc1MzQ4NDkxMTkxNDAwMAo
+ [[ search =~ ^(config|c)$ ]]
+ [[ search =~ ^(console|o)$ ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ output_dir=reports/192.168.0.1/fortinet
+ [[ search =~ ^(search|s)$ ]]
+ [[ ! -d reports/192.168.0.1/fortinet ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ which awk
++ which awk
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
+ source ./scripts/devops-helpers.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local count=1
++ [[ -n '' ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ which awk
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ [[ 5 -lt 4 ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'indent=            '
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ set -euo pipefail
+ message '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ export LC_ALL=C
+ [[ -n /usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \ ]]
+ LC_ALL=C
+ local 'message=/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ echo -e '/usr/bin/awk -v targets="172.16.1.6, ... ,172.16.1.6" \'
+ local first_search_entry=10.10.10.10
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local last_search_entry=10.10.10.10
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
++ alias parse-listings--helper=parse_listings__helper
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ message '                .cache/resources/misc/switch3.conf'
+ (( i++ ))
+ [[ true == true ]]
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ (( i < count ))
+ local 'message=                .cache/resources/misc/switch3.conf'
+ [[ -n reports/192.168.100.100/fortinet/fg-campus-core.cfg ]]
+ echo -e '                .cache/resources/misc/switch3.conf'
+ message 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ newline
+ [[ -n Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco ) ]]
++ alias network-configs--helper=network_configs__helper
+ local count=1
+ local 'message=Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ (( i = 0 ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ cfg == \c\f\g ]]
+ echo -e 'Target Config: [ .cache/resources/cisco/dmz-fw2-backup.cfg ] ( cisco )'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
+ final_output=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ extract_location=reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ (( i < count ))
+ result=0
+ local count=1
++ export targets_location=targets
++ targets_location=targets
+ exit 0
++ alias network-extract--helper=network_extract__helper
++ printf '%*s' 12 ''
++ export targets_logfile=logs/jobs/targets.jobs
+ newline
+ [[ -n reports/192.168.1.11/fortinet/fg-campus-core.cfg ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.286dzt8wv8 ]]
+ local count=1
+ ls -al --color=auto .cache/resources/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
++ targets_logfile=logs/jobs/targets.jobs
+ (( i < count ))
+ echo
+ (( i++ ))
++ command -v -- ./scripts/network-extract.shell
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ (( i < count ))
+ extract_location=reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ echo
++ IFS=,
+ (( i++ ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
++ echo 198.51.100.75
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ echo -e '/usr/bin/awk -v targets="192.168.0.100, ... ,192.168.0.100" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a execute
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
++ tr -d '\r'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ local count=1
+ message '                .cache/resources/cisco/campus-sw-access01.cfg'
+ (( i = 0 ))
+ (( i < count ))
+ [[ -n                 .cache/resources/cisco/campus-sw-access01.cfg ]]
+ local 'message=                .cache/resources/cisco/campus-sw-access01.cfg'
+ echo -e '                .cache/resources/cisco/campus-sw-access01.cfg'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.286dzt8wv8
+ newline
+ echo
++ dirname reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ (( i = 0 ))
+ local 'indent=            '
+ (( i < count ))
+ alias parse-cisco=main
+ local 'prompt_message=Enter configuration file to be parsed: '
+ echo
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ (( i++ ))
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ [[ true == true ]]
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ (( i++ ))
+ (( i < count ))
++ mktemp -d
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
++ grep -v '^\s*$'
++ dirname reports/192.168.1.11/fortinet/fg-campus-core.cfg
++ printf '%*s' 12 ''
++ dirname -- ./scripts/network-extract.shell
++ printf '%*s' 12 ''
++ which awk
++ /usr/bin/awk -v targets=172.16.1.6 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ sed -e '1s|^\(-\)\{1,\}||'
+++ date +%s%N
+ newline
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ local awk_bin=/usr/bin/awk
+ [[ true == true ]]
+ local 'awk_args=-v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1"'
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+++ base64
++ IFS=,
++ echo 10.10.10.10
++ IFS=,
++ echo 203.0.113.25
+++ tr -dc a-zA-Z0-9
+ output_dir=reports/192.168.100.100/fortinet
+ output_dir=reports/192.168.1.11/fortinet
+ [[ ! -d reports/192.168.1.11/fortinet ]]
+ [[ config =~ ^(config|c)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/perimeter-fw1.cfg')
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ config =~ ^(console|o)$ ]]
+ declare -a execute
+ local SCRIPT_DIR=./scripts
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-testing-config.cfg')
+ [[ config =~ ^(extract|x)$ ]]
+ declare -a execute
+ [[ config =~ ^(logger|l)$ ]]
++ printf '%*s' 12 ''
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ local script_filename=fortinet-configs.awk
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ [[ ! -d reports/192.168.100.100/fortinet ]]
+ local awk_bin=/usr/bin/awk
+ local first_search_entry=192.168.1.10
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local last_search_entry=192.168.1.10
+ local 'indent=            '
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ newline
+ local count=1
+ local count=1
+ ((  count == 0  ))
+ (( i = 0 ))
+ (( i < count ))
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ echo
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ (( i++ ))
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ [[ -n /usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo -e '/usr/bin/awk -v targets="10.0.0.1, ... ,10.0.0.1" \'
+ echo
+ (( i++ ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch3.conf'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -n                 .cache/resources/misc/switch3.conf ]]
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/switch3.conf'
++ command -v -- ./scripts/network-extract.shell
+ [[ -z cisco ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
++ which awk
+ echo -e '                .cache/resources/misc/switch3.conf'
++ which awk
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ true == true ]]
+ (( i < count ))
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console ]]
++ which awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ local 'indent=            '
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--branch-isr-02.cfg.console
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ echo
++ export divisor=MTc0ODc1MzQ4NDk0MTI1NTAwMAo
++ divisor=MTc0ODc1MzQ4NDk0MTI1NTAwMAo
+ [[ 6 -eq 0 ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uadwfasopp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ source ./scripts/devops-helpers.shell
+ newline
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ local count=1
++ command -v -- ./scripts/network-extract.shell
+ (( i = 0 ))
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
++ __DEVOPS_HELPERS_SOURCED=1
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlB7cwHCVY
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlB7cwHCVY
++ [[ 5 -lt 4 ]]
+ oIFS=' 	
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
'
+ (( i < count ))
+ export 'nl=\n'
+ for xitem in "${@}"
+ nl='\n'
+ echo
+ local 'indent=            '
+ IFS==
+ read -r key value
+ source ./scripts/devops-resources.shell
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.0.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/campus-sw-access01.cfg
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
++ alias parse-listings--helper=parse_listings__helper
+ (( i < count ))
+ echo
+ [[ -n reports/198.51.100.75/cisco/branch-isr-02.cfg ]]
+ local 'extracted_configuration={
+ (( i++ ))
  "vendor": "cisco",
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
  "model": "",
+ final_output=reports/198.51.100.75/cisco/branch-isr-02.cfg
++ echo -e --extract=reports/203.0.113.25/misc/fw1.cfg
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
++ alias network-configs--helper=network_configs__helper
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ alias network-extract--helper=network_extract__helper
++ /usr/bin/awk -v targets=10.0.0.1 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch3.conf
++ dirname -- ./scripts/network-extract.shell
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ newline
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i = 0 ))
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ echo
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ (( i++ ))
+ (( i < count ))
+ newline
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ (( i = 0 ))
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
++ dirname -- ./scripts/network-extract.shell
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ alias parse-cisco=main
+ [[ -z x ]]
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
++ printf '%*s' 12 ''
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ [[ extract =~ ^(config|c)$ ]]
+ [[ extract =~ ^(console|o)$ ]]
+ local 'indent=            '
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw1.cfg
+ result=0
+ [[ extract =~ ^(logger|l)$ ]]
+ exit 0
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lBsbExZpSB ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.lBsbExZpSB
+ [[ extract =~ ^(search|s)$ ]]
++ IFS=,
+ [[ extract == \h\e\l\p ]]
++ printf '%*s' 12 ''
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
++ echo 192.168.0.1
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ true == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ newline
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ local count=1
+ local SCRIPT_DIR=./scripts
+ (( i++ ))
++ [[ -n '' ]]
+ (( i = 0 ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.0.1' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ local script_filename=fortinet-configs.awk
+ extract_location=reports/198.51.100.75/cisco/branch-isr-02.cfg
+ local script_filepath=./scripts/extract/fortinet-configs.awk
  "version": "",
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
++ [[ 5 -lt 4 ]]
+ local 'indent=            '
+ (( i < count ))
+ (( i < count ))
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ declare -a execute
+ [[ true == true ]]
+ script_filename=network-extract.shell
+ echo
+ script_filename=network-extract
  "domain": "",
+ export network_extract__console=logs/console/network-extract.console
+ network_extract__console=logs/console/network-extract.console
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
+ touch logs/console/network-extract.console
+ (( i++ ))
  "domain": "",
+ local 'extracted_configuration={
+ newline
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
  "model": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local count=1
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i = 0 ))
  "version": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "domain": "",
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
  "hostname": ""
+ echo
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
}
+ (( i < count ))
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'

+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "hostname": "campus-sw-access01"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
++ alias detect-vendor=detect_vendor
interface Vlan1
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": ""
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
}
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ result=0
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
  "vendor": "cisco",
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '                .cache/resources/cisco/perimeter-fw1.cfg'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n                 .cache/resources/cisco/perimeter-fw1.cfg ]]
  "model": "",
  "version": "",
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
  "domain": "",
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-testing-config.cfg'
+ [[ -n reports/192.168.1.10/misc/fw3.cfg ]]
  "hostname": ""
+ local 'message=                .cache/resources/cisco/perimeter-fw1.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-testing-config.cfg ]]
+ [[ cfg == \c\f\g ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '                .cache/resources/cisco/perimeter-fw1.cfg'
}
}
++ alias exit-error=exit_error

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]

+ final_output=reports/192.168.1.10/misc/fw3.cfg
+ local 'message=                .cache/resources/fortinet/fg-testing-config.cfg'
+ newline
interface Vlan1
+ extract_location=reports/192.168.1.10/misc/fw3.cfg
 ip address 10.0.0.1 255.255.255.0
+ echo -e '                .cache/resources/fortinet/fg-testing-config.cfg'
+ local count=1

object-group network Spider-Net
 description Web access switches
+ newline
+ [[ -n reports/10.10.10.10/fortinet/fg-campus-core.cfg ]]
+ (( i = 0 ))
 network-object host 10.0.0.1
+ local count=1
++ which awk
+ (( i = 0 ))
+ [[ cfg == \c\f\g ]]
+ (( i < count ))
++ alias list-file=list_file
 network-object 192.168.12.0 255.255.255.0 ]]
+ (( i < count ))
++ alias log-error=log_error
+ echo
+ (( i++ ))
++ which awk
+ (( i < count ))
+ echo
++ alias log-info=log_info
++ which awk
+ (( i++ ))
+ (( i < count ))

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
version 12.2
hostname campus-sw-access01
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'

+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
object-group network Floor-Networks
+ final_output=reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ dirname reports/198.51.100.75/cisco/branch-isr-02.cfg
 description End-user and service devices
+ extract_location=reports/10.10.10.10/fortinet/fg-campus-core.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
 network-object host 192.168.0.1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ alias log-warn=log_warn
 network-object host 192.168.0.100
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
++ alias print-message=message
+ [[ -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]]
+ result=0
 network-object host 10.10.10.10'
+ export network_extract__console=logs/console/network-extract.console
++ alias print-newline=newline
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ cfg == \c\f\g ]]
+ result=0
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ network_extract__console=logs/console/network-extract.console
+ final_output=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ touch logs/console/network-extract.console
+ [[ -n {
++ alias pause=pause
+ [[ -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]]
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n {
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "vendor": "cisco",
+ extract_location=reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
  "vendor": "cisco",
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
  "model": "",
  "model": "",
+ newline
++ alias print-line=print
+ newline
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ local count=1
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ (( i = 0 ))
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ newline
  "version": "12.2",
+ local count=1
  "domain": "",
+ (( i = 0 ))
  "version": "",
+ (( i < count ))
+ local count=1
+ (( i < count ))
++ alias print-file=print_file
+ script_filename=network-extract.shell
++ IFS=,
  "hostname": "campus-sw-access01"
  "domain": "",
+ script_filename=network-extract
}
+ (( i = 0 ))
++ echo -e --platform=cisco
+ echo
++ echo 192.168.1.10
++ dirname reports/192.168.1.10/misc/fw3.cfg
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ print '{
  "vendor": "cisco",
++ sed -e '1s|^\(-\)\{1,\}||'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0'
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/perimeter-fw1.cfg
+ network_extract__console=logs/console/network-extract.console
+ [[ -n {
  "vendor": "cisco",
  "model": "",
+ touch logs/console/network-extract.console
+ echo
  "version": "",
  "domain": "",
+ (( i++ ))
  "hostname": ""
+ (( i < count ))
}

interface Vlan1
 ip address 10.0.0.1 255.255.255.0

+ echo
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-testing-config.cfg
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
 network-object 192.168.12.0 255.255.255.0 ]]
+ echo -en '{
  "hostname": ""
}

  "vendor": "cisco",
++ alias relative-configpath=relative_configpath
  "model": "",
  "version": "",
  "domain": "",

interface Vlan2
  "hostname": ""
version 12.2
}
hostname campus-sw-access01
 ip address 172.16.1.6 255.255.255.0 ]]


interface Vlan1
+ (( i++ ))
 ip address 10.0.0.1 255.255.255.0

object-group network Spider-Net
 description Web access switches
 network-object host 10.0.0.1
object-group network Floor-Networks
 network-object 192.168.12.0 255.255.255.0'
+ (( i < count ))
 description End-user and service devices
 network-object host 192.168.0.1
++ alias system-metrics=system_metrics
 network-object host 192.168.0.100
++ alias validate-address=validate_address
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
 network-object host 10.10.10.10 ]]
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
++ dirname reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ dirname reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.0.1, ... ,192.168.0.1"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1"'
+ sed '1{/^[[:space:]]*$/d;}'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface'
+ output_dir=reports/198.51.100.75/cisco
+ result=0
+ [[ ! -d reports/198.51.100.75/cisco ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ 6 -eq 0 ]]
domain-name global.dmz.example.net

+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emvosdfzjb/network-configs--ips.list =~ ^-*(h|help)$ ]]
interface GigabitEthernet0/2
 nameif outside
 ip address 198.51.100.75 255.255.255.0
 description Outbound Internet NAT interface ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg --platform=fortinet --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console --verbose
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
+ [[ -n {
  "vendor": "cisco",

object-group network Floor-Networks
 description End-user and service devices
  "model": "",
  "version": "",
 network-object host 192.168.0.1
  "domain": "",
 network-object host 192.168.0.100
  "hostname": ""
 network-object host 10.10.10.10'
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan2
 ip address 172.16.1.6 255.255.255.0'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "12.2",
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
  "vendor": "cisco",
++ IFS=,
  "model": "",
++ printf '%*s' 12 ''
  "version": "12.2",
++ echo 192.168.1.11
  "domain": "",
  "hostname": "campus-sw-access01"
}

version 12.2
hostname campus-sw-access01
++ IFS=,

object-group network Floor-Networks
 description End-user and service devices
 network-object host 192.168.0.1
 network-object host 192.168.0.100
 network-object host 10.10.10.10'
++ echo 192.168.100.100
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ local 'indent=            '
+ IFS==
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.11' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ read -r key value
+ output_dir=reports/192.168.1.10/misc
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.100.100' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ declare -a execute
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ true == true ]]
+ declare -a execute
+ [[ 6 -eq 0 ]]
+ newline
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.c0xqjdah4s/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ local count=1
+ oIFS=' 	
+ (( i = 0 ))
'
+ (( i < count ))
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/10.10.10.10/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console --verbose
+ echo
+ for xitem in "${@}"
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ print '{
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
  "model": "ASA",
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
  "version": "9.12(4)",
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ oIFS=' 	
  "domain": "global.dmz.example.net",
'
  "hostname": "dmz-fw2-backup"
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ for xitem in "${@}"
+ message '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
domain-name global.dmz.example.net

+ IFS==
interface GigabitEthernet0/2
+ read -r key value
 nameif outside
+ [[ -n /usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \ ]]
 ip address 198.51.100.75 255.255.255.0
+ local 'message=/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
 description Outbound Internet NAT interface'
+ [[ search =~ ^(config|c)$ ]]
+ echo -e '/usr/bin/awk -v targets="192.168.0.1, ... ,192.168.0.1" \'
+ [[ -n {
+ newline 2
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
  "vendor": "cisco",
  "model": "ASA",
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
  "hostname": "dmz-fw2-backup"
}
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ sed '1{/^[[:space:]]*$/d;}'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
domain-name global.dmz.example.net
+ local count=2

interface GigabitEthernet0/2
+ (( i = 0 ))
 nameif outside
 ip address 198.51.100.75 255.255.255.0
+ (( i < count ))
 description Outbound Internet NAT interface ]]
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ echo
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
}
+ (( i++ ))
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'

ASA Version 9.12(4)
+ (( i < count ))
hostname dmz-fw2-backup
domain-name global.dmz.example.net
+ echo

interface GigabitEthernet0/2
 nameif outside
+ newline
 ip address 198.51.100.75 255.255.255.0
+ local count=1
+ local 'extracted_configuration={
  "vendor": "cisco",
+ (( i++ ))
+ local 'extracted_configuration={
  "model": "ASA",
+ output_dir=reports/10.10.10.10/cisco
+ (( i = 0 ))
 description Outbound Internet NAT interface'
+ [[ ! -d reports/10.10.10.10/cisco ]]
+ (( i < count ))
+ [[ true == true ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "fg-branch-vpn-01"
  "hostname": "perimeter-fw1"
}
}
+ (( i < count ))

+ echo
#hostname="fg-branch-vpn-01"
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i++ ))
++ which awk
++ command -v -- ./scripts/network-extract.shell

ASA Version 9.14(3)
#model="FortiGate-60F"
+ message 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
+ (( i < count ))
++ which awk
hostname perimeter-fw1
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ -n Configuration File [ reports/10.0.0.1/misc/switch3.conf ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside

config firewall policy
 edit 13
  set name "Remote NAT"
 security-level 0
  set srcintf "dmz"
+ local 'message=Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
+ echo -e 'Configuration File [ reports/10.0.0.1/misc/switch3.conf ]'
  set action accept
  set logtraffic all
+ [[ search =~ ^(console|o)$ ]]
 next
 ip address 203.0.113.25 255.255.255.0
+ output_dir=reports/10.10.10.10/fortinet
 description External Internet-facing Interface
end'

+ newline
object network NAT-Edge
 host 203.0.113.25
+ result=0
 description Internet-bound IP NAT
+ local count=1

object-group network Avengers-DMZ
+ [[ -n {
 description Public access layer
  "vendor": "fortinet",
 network-object host 192.0.2.50
  "model": "FortiGate-60F",
+ (( i = 0 ))
 network-object host 203.0.113.25
  "version": "v7.2.5.F",
+ (( i < count ))
+ echo
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
+ (( i++ ))
  "domain": ""
+ (( i < count ))
 network-object host 203.0.113.25
++ export actions_logfile=./logs/console/run.console
+ cat -n reports/10.0.0.1/misc/switch3.conf
++ actions_logfile=./logs/console/run.console
 network-object host 172.16.0.5'
  "hostname": "fg-branch-vpn-01"
++ touch ./logs/console/run.console
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
+ result=0
+ [[ -n {
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
  "vendor": "cisco",
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  "model": "ASA",
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  "version": "9.14(3)",
  set action accept
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
  set logtraffic all
}
+ sed '1{/^[[:space:]]*$/d;}'

++ command -v -- ./scripts/network-extract.shell
 next
end ]]
++ command -v -- ./scripts/network-extract.shell
ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
++ sed -e '1s|^\(-\)\{1,\}||'
 description Internet-bound IP NAT
++ dirname -- ./scripts/network-extract.shell

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ ! -d reports/10.10.10.10/fortinet ]]
 network-object 192.168.2.0 255.255.255.0
+ [[ search =~ ^(extract|x)$ ]]

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
+ local SCRIPT_PATH=./scripts/network-extract.shell

#hostname="fg-branch-vpn-01"
++ /usr/bin/awk -v targets=192.168.0.1 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
#model="FortiGate-60F"
+ [[ search =~ ^(logger|l)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ search == \v\e\r\b\o\s\e ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
+ local 'extracted_configuration={
+ for xitem in "${@}"
+ local 'extracted_configuration={
  "vendor": "cisco",
  "vendor": "cisco",
+ IFS==
end
  "model": "ASA",
+ newline 2
+ [[ cfg == \c\f\g ]]
  "model": "",
  "version": "16.9",

  "domain": "",
  "version": "9.12(4)",
config firewall address
+ read -r key value
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
  "hostname": "branch-isr-02"
}
+ result=0
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"

+ [[ -n {
}
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
version 16.9
hostname branch-isr-02
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ local awk_bin=/usr/bin/awk
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
+ local 'awk_args=-v targets="192.168.1.11, ... ,192.168.1.11"'
  "hostname": "fg-branch-vpn-01"
+ local awk_bin=/usr/bin/awk
}

+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11"'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
  set logtraffic all
 next
end'
+ local 'awk_args=-v targets="192.168.100.100, ... ,192.168.100.100"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100"'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",

  "hostname": "perimeter-fw1"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
ASA Version 9.14(3)
#config-version=FGT_60F-v7.2.5.F-build1517-230421
hostname perimeter-fw1

config firewall policy
domain-name edge.dc.example.com

 edit 13
interface GigabitEthernet0/0
  set name "Remote NAT"
 nameif outside
  set srcintf "dmz"
 security-level 0
  set dstintf "wan1"
 ip address 203.0.113.25 255.255.255.0
  set srcaddr "10.10.10.10"
 description External Internet-facing Interface
  set dstaddr "203.0.113.10"

  set action accept
object network NAT-Edge
  set logtraffic all
 next
end ]]
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0
+ echo -en '{
  "vendor": "fortinet",

  "model": "FortiGate-60F",
object-group network Panther-Edge
  "version": "v7.2.5.F",
 description Internet-facing proxy systems
  "domain": ""
 network-object host 203.0.113.25
  "hostname": "fg-branch-vpn-01"
}

 network-object host 172.16.0.5'
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall policy
 edit 13
  set name "Remote NAT"
  set srcintf "dmz"
  set dstintf "wan1"
  set srcaddr "10.10.10.10"
  set dstaddr "203.0.113.10"
  set action accept
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
  set logtraffic all
 next
+ [[ -n {
end'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
+ sed '1{/^[[:space:]]*$/d;}'
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
++ echo -e --platform=fortinet
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.14(3)",
  "domain": "edge.dc.example.com",
  "hostname": "perimeter-fw1"
}

ASA Version 9.14(3)
hostname perimeter-fw1
domain-name edge.dc.example.com

interface GigabitEthernet0/0
 nameif outside
 security-level 0
 ip address 203.0.113.25 255.255.255.0
 description External Internet-facing Interface

object network NAT-Edge
 host 203.0.113.25
 description Internet-bound IP NAT

object-group network Avengers-DMZ
 description Public access layer
 network-object host 192.0.2.50
 network-object host 203.0.113.25
 network-object 192.168.2.0 255.255.255.0

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ [[ logger =~ ^(config|c)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=2
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ (( i = 0 ))
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ [[ logger =~ ^(search|s)$ ]]
+ (( i++ ))
+ [[ logger == \h\e\l\p ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ [[ logger == \d\e\b\u\g ]]
+ local SCRIPT_DIR=./scripts
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local script_filename=cisco-configs.awk
+ [[ logger == \v\e\r\b\o\s\e ]]
+ newline
+ sed '1{/^[[:space:]]*$/d;}'
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ echo
+ for xitem in "${@}"
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i < count ))
+ IFS==
+ echo
+ read -r key value
+ (( i++ ))
++ printf '%*s' 12 ''
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]

object-group network Lantern-DMZ
 description Protected but public-facing zone
+ local count=2
+ [[ search =~ ^(config|c)$ ]]
+ (( i = 0 ))
 network-object host 172.18.1.20
+ (( i < count ))
+ [[ search =~ ^(console|o)$ ]]
+ echo
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))

+ local 'indent=            '
ASA Version 9.12(4)
+ [[ search =~ ^(logger|l)$ ]]
+ (( i < count ))
hostname dmz-fw2-backup
+ message 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ local 'indent=            '
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ [[ true == true ]]
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ] ]]
+ [[ true == true ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console ]]
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/dmz-fw2-backup.cfg ]'
+ [[ search =~ ^(platform|p)$ ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console ]]
+ newline
+ [[ search =~ ^(search|s)$ ]]
+ newline
+ case "${target_file}" in
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ local count=1
+ [[ search == \h\e\l\p ]]

+ (( i = 0 ))
+ newline
+ (( i < count ))
+ local count=1
+ [[ search == \d\e\b\u\g ]]
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ search == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ dirname -- ./scripts/network-extract.shell
++ command -v -- ./scripts/network-extract.shell
+ message '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ search == \v\e\r\b\o\s\e ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \ ]]
+ newline 2
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ local 'message=/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ IFS==
+ cat -n reports/198.51.100.75/cisco/dmz-fw2-backup.cfg
 network-object host 192.168.1.11'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
++ dirname -- ./scripts/network-extract.shell
  "domain": "",
domain-name global.dmz.example.net
+ local SCRIPT_PATH=./scripts/network-extract.shell

interface GigabitEthernet0/1
 nameif inside
+ final_output=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ local count=2
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ extract_location=reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ (( i = 0 ))
+ declare -a execute
+ [[ 6 -eq 0 ]]
+ (( i < count ))
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.nvyloqj9im/network-configs--ips.list =~ ^-*(h|help)$ ]]
  "hostname": "branch-isr-02"
+ echo
}
+ (( i++ ))

+ (( i < count ))
version 16.9
+ [[ logger =~ ^(config|c)$ ]]
hostname branch-isr-02

+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/192.168.2.12/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console --verbose
 ip address 192.168.100.100 255.255.255.0
+ echo
object-group network Lantern-DMZ
+ [[ true == true ]]
+ (( i++ ))
 description Inside LAN segment
+ (( i < count ))
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console ]]
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ [[ logger =~ ^(extract|x)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(logger|l)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console

object network Titan-WLAN-Host
+ [[ logger =~ ^(platform|p)$ ]]
 host 192.168.100.100
 description Backup inside NAT IP

+ [[ logger =~ ^(search|s)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ oIFS=' 	
++ echo -e --verbose
+ message 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ [[ -n Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.0.100/cisco/campus-sw-access01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
object-group network Sector-Wireless
+ (( i++ ))
 description Staff WiFi clients
 network-object host 192.168.100.100
++ dirname -- ./scripts/network-extract.shell
 network-object host 10.10.10.10'
+ result=0
+ [[ -n {
+ (( i < count ))
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ dirname reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ cat -n reports/192.168.0.100/cisco/campus-sw-access01.cfg
++ which awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
'
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value

ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ platform =~ ^(console|o)$ ]]
domain-name global.dmz.example.net
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ local SCRIPT_DIR=./scripts
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=fortinet
+ local script_filename=cisco-configs.awk
+ [[ platform =~ ^(search|s)$ ]]
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ platform == \h\e\l\p ]]

interface GigabitEthernet0/1
+ [[ platform == \d\e\b\u\g ]]
 nameif inside
+ local SCRIPT_DIR=./scripts
+ for xitem in "${@}"
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

version 16.9
hostname branch-isr-02

object-group network Lantern-DMZ
 description Protected but public-facing zone
 network-object host 172.18.1.20
 network-object host 192.168.1.11'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
+ IFS==
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ read -r key value
+ IFS==
+ read -r key value
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ which awk
+ output_dir=reports/203.0.113.25/cisco
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ ! -d reports/203.0.113.25/cisco ]]
+ [[ -n {
  "vendor": "cisco",
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ echo -en '{
+ sed '1{/^[[:space:]]*$/d;}'
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
++ echo -e --verbose
domain-name global.dmz.example.net

interface GigabitEthernet0/1
 nameif inside
 ip address 192.168.100.100 255.255.255.0
 description Inside LAN segment

object network Titan-WLAN-Host
 host 192.168.100.100
 description Backup inside NAT IP

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
++ which awk
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
++ export targets_location=targets
config system interface
++ targets_location=targets
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
++ export targets_logfile=logs/jobs/targets.jobs
end
++ targets_logfile=logs/jobs/targets.jobs

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ [[ true == true ]]
+ result=0
+ exit 0
+ [[ config =~ ^(config|c)$ ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.buZpHAjmSP ]]
+ message 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.1.11, ... ,192.168.1.11" \'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.buZpHAjmSP
+ [[ -n Configuration File [ reports/172.16.1.6/misc/switch3.conf ] ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console ]]
+ echo -e 'Configuration File [ reports/172.16.1.6/misc/switch3.conf ]'
+ [[ config =~ ^(extract|x)$ ]]
+ case "${target_file}" in
+ [[ search =~ ^(config|c)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--campus-sw-access01.cfg.console
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ echo
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ IFS==
+ read -r key value
++ printf '%*s' 12 ''
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
+ cat -n reports/172.16.1.6/misc/switch3.conf
+ [[ search =~ ^(console|o)$ ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ [[ search =~ ^(extract|x)$ ]]
+ [[ search =~ ^(logger|l)$ ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ search =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ newline
+ (( i = 0 ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ (( i < count ))
+ print '{
+ [[ search =~ ^(search|s)$ ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
  "vendor": "fortinet",
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
  "model": "FortiGate-60F",
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
  "version": "v7.2.5.F",
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ [[ false == true ]]
  "domain": ""
+ message '             -f ./scripts/extract/cisco-configs.awk \'
  "hostname": "fg-branch-vpn-01"
}
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

#hostname="fg-branch-vpn-01"
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ [[ search == \h\e\l\p ]]
+ [[ true == true ]]

+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ search == \d\e\b\u\g ]]
config system interface
 edit "internal"
+ [[ search == \d\r\y\-\r\u\n ]]
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
+ [[ search == \v\e\r\b\o\s\e ]]
 next
end
+ for xitem in "${@}"

+ read -r key value
+ IFS==
+ message '                .cache/resources/misc/fw1.cfg'
+ read -r key value
config firewall address
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'extracted_configuration={
 edit "Branch-Gateway"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
  set subnet 192.168.2.12 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
  set comment "Primary LAN gateway"
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console ]]
 next
end'
+ case "${target_file}" in
+ newline
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ newline 2
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
++ which awk
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "internal"
  set ip 192.168.2.12 255.255.255.0
  set alias "User LAN"
 next
end

config firewall address
 edit "Branch-Gateway"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Primary LAN gateway"
 next
end'
+++ date +%s%N
+ sed '1{/^[[:space:]]*$/d;}'
++ dirname -- ./scripts/network-extract.shell
++ IFS=,
++ echo -e --extract=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
++ echo 198.51.100.75
+++ base64
+ newline 2
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/branch-isr-02.cfg')
+ declare -a execute
++ sed -e '1s|^\(-\)\{1,\}||'
++ IFS=,
++ echo 10.10.10.10
+++ tr -dc a-zA-Z0-9
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ newline 2
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ search =~ ^(config|c)$ ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ echo
+ [[ verbose =~ ^(logger|l)$ ]]
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ [[ verbose =~ ^(platform|p)$ ]]
+ declare -a execute
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ local count=2
+ [[ verbose == \d\e\b\u\g ]]
+ (( i = 0 ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ (( i < count ))
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ echo
+ local verbose=true
+ (( i++ ))
+ IFS=' 	
+ (( i < count ))
'
+ [[ logger =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ echo
+ [[ search =~ ^(console|o)$ ]]
+ debug=false
+ [[ -z '' ]]
+ [[ search =~ ^(extract|x)$ ]]
+ (( i++ ))
+ dry_run=false
+ (( i < count ))
+ [[ search =~ ^(logger|l)$ ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z true ]]
+ (( i++ ))
+ [[ -z '' ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ export console_output=false
+ [[ search =~ ^(search|s)$ ]]
+ [[ true == true ]]
++ which awk
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list
+ console_output=false
+ [[ true == true ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console ]]
+ [[ search == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ message 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ -z '' ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ -n Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ] ]]
+ script_helper=false
+ [[ search == \d\e\b\u\g ]]
+ [[ false == true ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ local 'message=Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
+ [[ search == \v\e\r\b\o\s\e ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ for xitem in "${@}"
++ IFS=,
+ IFS==
+ read -r key value
+ [[ logger == \d\r\y\-\r\u\n ]]
+ echo -e 'Configuration File [ reports/192.168.1.11/cisco/branch-isr-02.cfg ]'
++ echo 10.10.10.10
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ message 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ [[ logger == \v\e\r\b\o\s\e ]]
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ newline
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ local count=1
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ cat -n reports/192.168.1.11/cisco/branch-isr-02.cfg
+ for xitem in "${@}"
+ search_terms=()
+ [[ -n Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ] ]]
+ IFS==
+ declare -a execute
+ local 'message=Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ read -r key value
+ local count=1
++ which awk
+ declare -a search_terms
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]]
+ (( i < count ))
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list != *,* ]]
+ echo
+ mapfile -t search_terms
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.100.100/cisco/dmz-fw2-backup.cfg
+ newline 2
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ extract =~ ^(config|c)$ ]]
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ (( i < count ))
+ [[ extract =~ ^(console|o)$ ]]
++ echo -e --config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console ]]
+ [[ false == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qPE6hrcXlg/network-extract--campus-sw-access01.cfg.console
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
++ which awk
++ which awk
+ local extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
++ export divisor=MTc0ODc1MzQ4NDk5OTcxNDAwMAo
+ local count=2
++ sed -e '1s|^\(-\)\{1,\}||'
++ divisor=MTc0ODc1MzQ4NDk5OTcxNDAwMAo
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ [[ extract == \v\e\r\b\o\s\e ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console ]]
+ for xitem in "${@}"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console ]]
+ source ./scripts/devops-helpers.shell
+ local awk_bin=/usr/bin/awk
+ case "${target_file}" in
+ (( i < count ))
+ IFS==
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ exit 0
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ read -r key value
+ echo
++ [[ -n '' ]]
+ (( i++ ))
++ readonly __DEVOPS_HELPERS_SOURCED=1
+ (( i < count ))
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WNDE7x4Dnn ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
++ __DEVOPS_HELPERS_SOURCED=1
+ (( i++ ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.WNDE7x4Dnn
+ (( i < count ))
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
++ [[ 5 -lt 4 ]]
+ [[ true == true ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(config|c)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
++ alias parse-listings--helper=parse_listings__helper
+ [[ verbose =~ ^(logger|l)$ ]]
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ verbose =~ ^(platform|p)$ ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-branch-vpn-01.cfg
+ local awk_bin=/usr/bin/awk
+ local 'extracted_configuration={
  "vendor": "cisco",
++ alias network-configs--helper=network_configs__helper
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
 network-object host 192.168.1.10'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
++ printf '%*s' 12 ''
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local 'indent=            '
++ grep -v '^#'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ [[ false == true ]]
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ newline
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ local 'indent=            '
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print '{
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console ]]
  "model": "",
  "version": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
  "domain": "",
+ result=0
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console ]]
  "hostname": ""
+ exit 0
+ case "${target_file}" in
}

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SQIn8lcrDv ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
object-group network Fortress-Wireless
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.SQIn8lcrDv
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ newline
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local count=1
+ (( i = 0 ))
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ echo
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n {
+ (( i++ ))
+ (( i < count ))
  "vendor": "cisco",
  "model": "",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "version": "",
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Fortress-Wireless
 description Secure wireless access layer
 network-object host 172.18.1.20
 network-object host 192.168.1.10'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ message '                .cache/resources/cisco/branch-isr-02.cfg'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n                 .cache/resources/cisco/branch-isr-02.cfg ]]
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local 'message=                .cache/resources/cisco/branch-isr-02.cfg'
+ echo -e '                .cache/resources/cisco/branch-isr-02.cfg'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ printf '%*s' 12 ''
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ newline
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ local count=1
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ config =~ ^(config|c)$ ]]
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local target_config=.cache/resources/misc/fw1.cfg
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
+ [[ config =~ ^(console|o)$ ]]
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
+ local 'indent=            '
+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
++ IFS=,
+ [[ true == true ]]
+ newline
+ [[ config =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo 203.0.113.25
+ (( i++ ))
+ [[ config =~ ^(logger|l)$ ]]
+ (( i < count ))
+ newline
+ [[ config =~ ^(platform|p)$ ]]
+ local count=1
+ [[ config =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ config == \h\e\l\p ]]
+ echo
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ (( i++ ))
+ [[ config == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ IFS==
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ read -r key value
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
++ echo -e --platform=fortinet
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/cisco/dmz-fw2-backup.cfg')
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ declare -a execute
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ config =~ ^(config|c)$ ]]
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ local target_config=.cache/resources/fortinet/fg-branch-vpn-01.cfg
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ true == true ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ alias parse-cisco=main
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ verbose =~ ^(search|s)$ ]]
+ newline
+ [[ verbose == \h\e\l\p ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -z x ]]
+ (( i < count ))
+ [[ verbose == \d\r\y\-\r\u\n ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/branch-isr-02.cfg
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ local first_search_entry=192.168.1.10
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ local last_search_entry=192.168.1.10
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ local 'target_search_range=192.168.1.10, ... ,192.168.1.10'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console ]]
+ [[ -z '' ]]
+ [[ true == true ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ export logs_location=logs
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ logs_location=logs
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list != *,* ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ] ]]
++ which awk
+ mkdir -p logs/console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ mapfile -t search_terms
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-configs--ips.list ]'
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg
+ [[ -z true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console ]]
+ ((  count == 0  ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ print 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ [[ -n Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1) ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console ]]
+ echo -en 'Search Listing: [ 192.168.1.10, ... ,192.168.1.10 ] (1)'
+ case "${target_file}" in
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uVzROEGMPl/network-extract--switch3.conf.console
+ newline
+ [[ true == true ]]
+ echo
+ newline 2
+ (( i++ ))
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
  "vendor": "fortinet",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console ]]
+ newline 2
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/switch1.conf ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ [[ -z cisco ]]
+ [[ true == true ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console ]]
+ local count=2
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--branch-isr-02.cfg.console
+ (( i = 0 ))
+ [[ true == true ]]
+ (( i < count ))
++ echo -e --extract=reports/192.168.2.12/misc/fw1.cfg
+ echo
+ (( i++ ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
+ (( i < count ))
+ newline
+ echo
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ local count=1
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console ]]
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ message 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw1.cfg ] ]]
+ message 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ [[ -n Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco ) ]]
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw1.cfg ]'
+ local 'message=Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ newline
+ echo -e 'Target Config: [ .cache/resources/misc/switch1.conf ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/switch1.conf
+ local count=1
+ newline
+ (( i = 0 ))
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
++ echo -e --extract=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ echo
+ (( i++ ))
+ echo
+ (( i < count ))
+ echo
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ cat -n reports/192.168.1.10/misc/fw1.cfg
+ (( i++ ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ (( i < count ))
+ (( i++ ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console ]]
+ (( i < count ))
+ export console_output=false
+ echo
+ case "${target_file}" in
+ [[ false == true ]]
+ (( i++ ))
+ local count=1
+ (( i < count ))
+ [[ true == true ]]
+ (( i = 0 ))
  "model": "FortiGate-60F",
+ (( i < count ))
  "version": "v7.2.5.F",
  "domain": ""
+ message '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ echo
  "hostname": "fg-branch-vpn-01"
++ sed -e '1s|^\(-\)\{1,\}||'
+ console_output=false
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ (( i = 0 ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console ]]
+ (( i < count ))
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.qmxIjkDchK/network-extract--switch3.conf.console
+ local count=2
+ [[ true == true ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
++ tr -d '\r'
+ local awk_bin=/usr/bin/awk
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ grep -v '^\s*$'
+ local target_platform=fortinet
+ [[ platform =~ ^(search|s)$ ]]
+ (( i = 0 ))
+ [[ platform == \h\e\l\p ]]
+ (( i < count ))
+ [[ -n /usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \ ]]
+ echo
+ (( i++ ))
+ local 'message=/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e '/usr/bin/awk -v targets="192.168.100.100, ... ,192.168.100.100" \'
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ IFS==
}
+ read -r key value
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]

+ echo
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console ]]
#hostname="fg-branch-vpn-01"
++ grep -v '^#'
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "ASA",
version 16.9
  "version": "9.12(4)",
hostname branch-isr-02
  "domain": "global.dmz.example.net",

  "hostname": "dmz-fw2-backup"
object network Hydra-Link
}
 host 198.51.100.75

 description Branch NAT egress
ASA Version 9.12(4)

hostname dmz-fw2-backup
object-group network Hydra-Edge
domain-name global.dmz.example.net
 description Remote site uplink
+ [[ extract =~ ^(config|c)$ ]]

++ printf '%*s' 12 ''
 network-object host 192.168.2.12
 network-object host 198.51.100.75'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
}

interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Guest access interface

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ [[ extract =~ ^(console|o)$ ]]
+ result=0
version 16.9
hostname branch-isr-02
+ [[ -n {

+ [[ extract =~ ^(extract|x)$ ]]
object network Hydra-Link
 host 198.51.100.75
  "vendor": "cisco",
 description Branch NAT egress

+ local extract_location=reports/192.168.2.12/misc/fw1.cfg
object-group network Hydra-Edge
  "model": "ASA",
+ [[ extract =~ ^(logger|l)$ ]]
 description Remote site uplink
+ local 'indent=            '
+ [[ extract =~ ^(platform|p)$ ]]
  "version": "9.12(4)",
+ [[ true == true ]]
  "domain": "global.dmz.example.net",
+ [[ extract =~ ^(search|s)$ ]]
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ [[ extract == \h\e\l\p ]]
interface GigabitEthernet0/0
 network-object host 192.168.2.12
 nameif guest
+ [[ extract == \d\e\b\u\g ]]
 network-object host 198.51.100.75 ]]
 ip address 10.10.10.10 255.255.255.0
+ [[ extract == \d\r\y\-\r\u\n ]]
 description Guest access interface

+ [[ extract == \v\e\r\b\o\s\e ]]
object network Shield-WiFi-Alias
+ for xitem in "${@}"
 host 10.10.10.10
+ newline
+ IFS==
+ result=0
+ read -r key value
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10 ]]
+ exit 0
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bcM3LaLCgl ]]
+ newline
  "version": "",
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.bcM3LaLCgl
+ (( i = 0 ))
+ result=0
+ local count=1
+ result=0
+ script_filename=network-extract.shell
+ (( i = 0 ))
  "domain": ""
+ (( i < count ))
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ echo
  "hostname": "fg-campus-core"
+ exit 0
+ exit 0
+ echo
}
+ (( i++ ))
+ (( i++ ))
+ (( i < count ))
#model="FortiGate-60F"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MQWQOqn7yq ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxfyGAMBRj ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ extract =~ ^(config|c)$ ]]
+ script_filename=network-extract

#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.OxfyGAMBRj
+ (( i < count ))
+ [[ false == true ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ (( i < count ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.MQWQOqn7yq
+ [[ true == true ]]
+ [[ -z '' ]]
+ echo
+ export network_extract__console=logs/console/network-extract.console
+ [[ extract =~ ^(console|o)$ ]]
#hostname="fg-campus-core"
+ script_helper=false
#model="FortiGate-200F"
+ network_extract__console=logs/console/network-extract.console
+ (( i++ ))

+ [[ extract =~ ^(extract|x)$ ]]
+ (( i < count ))
+ [[ false == true ]]
config system interface
+ [[ true == true ]]
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ true == true ]]
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console

+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ] ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ touch logs/console/network-extract.console
 edit "core"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console ]]
  set ip 10.10.10.10 255.255.255.0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ false == true ]]
  set alias "Campus Core Transit"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console ]]
 next
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ case "${target_file}" in
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ extract =~ ^(search|s)$ ]]
end
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-branch-vpn-01.cfg.console
+ case "${target_file}" in

config firewall address
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
 edit "Shield-WiFi"
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ [[ extract == \h\e\l\p ]]
  set subnet 10.10.10.10 255.255.255.255
+ [[ extract == \d\e\b\u\g ]]
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
  set comment "Wireless AP Gateway"
 next
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
end'
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ result=0
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ message '             -f ./scripts/extract/cisco-configs.awk \'
#model="FortiGate-200F"
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]

+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
config system interface
 edit "core"
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  set ip 10.10.10.10 255.255.255.0
+ print '{
  "vendor": "cisco",
  set alias "Campus Core Transit"
+ message '                .cache/resources/cisco/dmz-fw2-backup.cfg'
 next
  "model": "",
+ [[ -n                 .cache/resources/cisco/dmz-fw2-backup.cfg ]]
end
++ IFS=,
  "version": "16.9",

  "domain": "",
  "hostname": "branch-isr-02"
+ local 'message=                .cache/resources/cisco/dmz-fw2-backup.cfg'
}
++ echo 192.168.1.10

+ echo -e '                .cache/resources/cisco/dmz-fw2-backup.cfg'
version 16.9
+ print '{
+ [[ extract == \v\e\r\b\o\s\e ]]
hostname branch-isr-02
  "vendor": "cisco",
config firewall address
  "model": "ASA",
+ newline
  "version": "9.12(4)",
+ for xitem in "${@}"
  "domain": "global.dmz.example.net",

 edit "Shield-WiFi"
  "hostname": "dmz-fw2-backup"
+ local count=1
+ IFS==
+ [[ config =~ ^(config|c)$ ]]
+ (( i = 0 ))
}
+ read -r key value
object network Hydra-Link
+ local target_config=.cache/resources/misc/fw3.cfg
  set subnet 10.10.10.10 255.255.255.255
+ (( i < count ))
 host 198.51.100.75

  set comment "Wireless AP Gateway"
ASA Version 9.12(4)
 description Branch NAT egress
hostname dmz-fw2-backup
domain-name global.dmz.example.net

+ echo

object-group network Hydra-Edge
 description Remote site uplink
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
interface GigabitEthernet0/0
 network-object host 192.168.2.12
 next
end ]]
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 network-object host 198.51.100.75'
 description Guest access interface
+ set -euo pipefail
+ (( i < count ))

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ export LC_ALL=C
+ LC_ALL=C
+ [[ -n {
  "vendor": "cisco",
+ [[ -n reports/192.168.1.10/misc/switch1.conf ]]
+ local first_search_entry=192.168.2.12
  "model": "",
  "version": "16.9",
  "domain": "",
  "hostname": "branch-isr-02"
+ [[ -n {
  "vendor": "cisco",
+ local last_search_entry=192.168.2.12
+ [[ conf == \c\o\n\f ]]
}
  "model": "ASA",

  "version": "9.12(4)",
+ final_output=reports/192.168.1.10/misc/switch1.conf
version 16.9
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
  "domain": "global.dmz.example.net",
+ [[ config =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ extract_location=reports/192.168.1.10/misc/switch1.conf
hostname branch-isr-02
  "hostname": "dmz-fw2-backup"
+ [[ config =~ ^(extract|x)$ ]]
}

+ sed '1{/^[[:space:]]*$/d;}'
ASA Version 9.12(4)
+ [[ config =~ ^(logger|l)$ ]]
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'

+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
hostname dmz-fw2-backup
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
domain-name global.dmz.example.net
+ [[ config =~ ^(platform|p)$ ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ] ]]
object network Hydra-Link
+ declare -a execute

+ [[ config =~ ^(search|s)$ ]]
config firewall address
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
 host 198.51.100.75
interface GigabitEthernet0/0
 nameif guest
 ip address 10.10.10.10 255.255.255.0
 description Branch NAT egress

 description Guest access interface
object-group network Hydra-Edge

 description Remote site uplink
object network Shield-WiFi-Alias
 network-object host 192.168.2.12
 host 10.10.10.10
 description Guest NAT
 network-object host 198.51.100.75 ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
+ echo -en '{
 network-object host 10.10.10.10 ]]
  "vendor": "cisco",
  "model": "",
+ sed '1{/^[[:space:]]*$/d;}'
  "version": "16.9",
+ local count=1
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ ((  count == 0  ))
+ echo -en '{
  "domain": "",
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
 edit "Guardians-Relay"
  "vendor": "cisco",
  set subnet 192.168.0.1 255.255.255.255
  "model": "ASA",
  "hostname": "branch-isr-02"
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ true == true ]]
++ echo -e --platform=cisco
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console ]]
  "version": "9.12(4)",
}

version 16.9
hostname branch-isr-02

  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
object network Hydra-Link
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
 host 198.51.100.75
domain-name global.dmz.example.net
 description Branch NAT egress


interface GigabitEthernet0/0
object-group network Hydra-Edge
 nameif guest
 description Remote site uplink
 ip address 10.10.10.10 255.255.255.0
 network-object host 192.168.2.12
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
 description Guest access interface
 network-object host 198.51.100.75'

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT

object-group network Sector-Wireless
 description Staff WiFi clients
 network-object host 192.168.100.100
 network-object host 10.10.10.10'
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
++ mktemp -d
}
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/cisco/dmz-fw2-backup.cfg

#hostname="fg-campus-core"
#model="FortiGate-200F"
+ newline

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
++ sed -e '1s|^\(-\)\{1,\}||'
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "core"
  set ip 10.10.10.10 255.255.255.0
  set alias "Campus Core Transit"
 next
end

config firewall address
 edit "Shield-WiFi"
  set subnet 10.10.10.10 255.255.255.255
  set comment "Wireless AP Gateway"
 next
end'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/fortinet/fg-campus-core.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ newline
+ local count=1
++ dirname reports/192.168.1.10/misc/switch1.conf
+ sed '1{/^[[:space:]]*$/d;}'
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(config|c)$ ]]
+ echo
++ echo -e --platform=fortinet
+ (( i++ ))
+ [[ logger =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ (( i < count ))
+ [[ logger =~ ^(extract|x)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet ) ]]
+ [[ 6 -eq 0 ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console ]]
+ [[ logger =~ ^(search|s)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-campus-core.cfg ] ( fortinet )'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.emvosdfzjb/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console ]]
+ [[ logger == \h\e\l\p ]]
+ case "${target_file}" in
+ [[ logger == \d\e\b\u\g ]]
+ ls -al --color=auto .cache/resources/fortinet/fg-campus-core.cfg
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw1.cfg.console
+ newline 2
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list --config=.cache/resources/misc/fw1.cfg --extract=reports/198.51.100.75/misc/fw1.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console --verbose
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-testing-config.cfg ]'
+ result=0
  set comment "Backup uplink for Milano crew"
+ newline
+ local count=2
+ oIFS=' 	
+ exit 0
+ local count=1
+ (( i = 0 ))
'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sn6rIdSwLw ]]
+ (( i < count ))
+ for xitem in "${@}"
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sn6rIdSwLw
+ echo
+ IFS==
+ search_terms=()
+ read -r key value
+ declare -a search_terms
+ (( i++ ))
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ echo
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list != *,* ]]
+ (( i++ ))
+ mapfile -t search_terms
+ (( i < count ))
+ [[ true == true ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ message 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ newline 2
+ [[ -n Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/cisco/branch-isr-02.cfg ]'
+ newline
+ local count=1
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ (( i = 0 ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ cat -n reports/198.51.100.75/cisco/branch-isr-02.cfg
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=192.168.1.11 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ cat -n reports/10.10.10.10/cisco/dmz-fw2-backup.cfg
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ output_dir=reports/192.168.1.10/misc
+ [[ ! -d reports/192.168.1.10/misc ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ export TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pxyNyQePZT
+ TMP_DIR=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pxyNyQePZT
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ trap '[[ -d "${TMP_DIR}" ]] && rm -rf "${TMP_DIR}"' EXIT
+ newline 2
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ export 'nl=\n'
++ which awk
+ nl='\n'
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ source ./scripts/devops-resources.shell
+ [[ config == \v\e\r\b\o\s\e ]]
+ newline
+ for xitem in "${@}"
+ [[ platform == \v\e\r\b\o\s\e ]]
+ local count=1
+ IFS==
+ for xitem in "${@}"
+ read -r key value
+ (( i = 0 ))
+ IFS==
+ local count=2
++ [[ -n '' ]]
+ (( i = 0 ))
++ declare -gr __DEVOPS_RESOURCES_SOURCED=1
+ (( i < count ))
+ echo
+ read -r key value
++ [[ 5 -lt 4 ]]
+ (( i++ ))
 next
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
+ (( i = 0 ))
  "model": "ASA",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console ]]
+ message 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
  "version": "9.12(4)",
+ result=0
  "domain": "global.dmz.example.net",
end'
+ case "${target_file}" in
++ alias detect-vendor=detect_vendor
+ echo
+ (( i < count ))
+ exit 0
++ echo -e --verbose
+ (( i++ ))
  "hostname": "dmz-fw2-backup"
+ (( i < count ))
+ (( i < count ))
++ alias exit-error=exit_error
+ result=0
}
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ] ]]
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'

++ alias list-file=list_file
ASA Version 9.12(4)
hostname dmz-fw2-backup
+ [[ -n Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ] ]]
domain-name global.dmz.example.net
+ local 'message=Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
++ alias log-error=log_error
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ echo -e 'Configuration File [ reports/10.10.10.10/fortinet/fg-campus-core.cfg ]'
+ newline
++ alias log-info=log_info
+ local count=1

+ (( i = 0 ))
++ alias log-warn=log_warn
object network Sentinel-NAT
 host 203.0.113.25
+ (( i < count ))
++ alias print-message=message
+ echo
 description Corporate NAT edge'
++ alias print-newline=newline
+ result=0
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
++ command -v -- ./scripts/network-extract.shell
  "model": "ASA",
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat -n reports/10.10.10.10/fortinet/fg-campus-core.cfg
++ alias pause=pause
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}
++ alias print-line=print

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo
+ [[ platform =~ ^(config|c)$ ]]
++ alias print-file=print_file
+ (( i++ ))
+ (( i < count ))
++ alias relative-configpath=relative_configpath
+ [[ platform =~ ^(console|o)$ ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
++ alias system-metrics=system_metrics
+ local target_platform=fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ result=0
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
+ exit 0
+ echo
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JP4IUxvBd7 ]]
+ (( i++ ))
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.56BOiYnJ88 ]]
+ (( i < count ))
++ alias validate-address=validate_address
+ [[ -n {
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JP4IUxvBd7
  "vendor": "fortinet",
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/perimeter-fw1.cfg ]'
+ cat -n reports/10.10.10.10/fortinet/fg-testing-config.cfg
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.56BOiYnJ88
++ alias warning-message=warning
++ export LC_ALL=C
++ LC_ALL=C
++ tr -d '\r'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/cisco/perimeter-fw1.cfg
++ export 'nl=\n'
++ nl='\n'
++ export cache_location=.cache
++ cache_location=.cache
++ export logs_location=logs
++ logs_location=logs
++ mkdir -p logs/console logs/jobs
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
++ grep -v '^\s*$'
++ dirname -- ./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
+ [[ -n {
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "ASA",
  "version": "9.12(4)",
  "domain": "global.dmz.example.net",
  "hostname": "dmz-fw2-backup"
}

ASA Version 9.12(4)
hostname dmz-fw2-backup
domain-name global.dmz.example.net

object network Sentinel-NAT
 host 203.0.113.25
 description Corporate NAT edge'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ grep -v '^#'
++ echo -e --extract=reports/10.10.10.10/misc/fw3.cfg
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ -n reports/192.168.2.12/fortinet/fg-campus-core.cfg ]]
+ newline
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console ]]
+ local count=1
+ [[ cfg == \c\f\g ]]
+ final_output=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ extract_location=reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ sed '1{/^[[:space:]]*$/d;}'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ newline
+ [[ verbose =~ ^(console|o)$ ]]
+ local count=1
+ [[ verbose =~ ^(extract|x)$ ]]
+ (( i = 0 ))
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(search|s)$ ]]
  "domain": ""
+ local SCRIPT_DIR=./scripts
+ [[ false == true ]]
+ [[ verbose == \h\e\l\p ]]
  "hostname": "fg-branch-vpn-01"
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console ]]
+ [[ verbose == \d\e\b\u\g ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console ]]
+ local verbose=true
+ case "${target_file}" in
+ IFS=' 	
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
'
+ [[ -z '' ]]
+ debug=false
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
++ dirname reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ [[ search =~ ^(config|c)$ ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ [[ search =~ ^(console|o)$ ]]
+ search_terms=()
+ declare -a search_terms
+ [[ search =~ ^(extract|x)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ [[ logger =~ ^(config|c)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list != *,* ]]
+ [[ search =~ ^(logger|l)$ ]]
+ mapfile -t search_terms
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ logger =~ ^(console|o)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger =~ ^(logger|l)$ ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list
+ [[ search == \h\e\l\p ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ search == \v\e\r\b\o\s\e ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ for xitem in "${@}"
+ IFS==
+ IFS==
+ read -r key value
+ read -r key value
++ export actions_logfile=./logs/console/run.console
++ actions_logfile=./logs/console/run.console
++ touch ./logs/console/run.console
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
++ which awk
++ /usr/bin/awk -v targets=192.168.100.100 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
++ sed -e '1s|^\(-\)\{1,\}||'
+ local 'extracted_configuration={
  "vendor": "fortinet",
+ newline 2
  "model": "FortiGate-200F",
}

  "version": "",
#hostname="fg-branch-vpn-01"
+ local first_search_entry=203.0.113.25
+ local count=2
+ local last_search_entry=203.0.113.25
+ (( i = 0 ))
+ (( i < count ))
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ echo
  "domain": ""
+ [[ true == true ]]
  "hostname": "fg-campus-core"
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ echo
}

+ [[ extract =~ ^(console|o)$ ]]
+ (( i++ ))
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ] ]]
+ [[ true == true ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ message 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/cisco/dmz-fw2-backup.cfg ]'
+ newline
+ local count=1

+ (( i = 0 ))
+ local count=1
config firewall address
 edit "Guardians-Relay"
+ (( i < count ))
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
+ echo
 next
#hostname="fg-campus-core"
+ (( i++ ))
+ [[ extract =~ ^(extract|x)$ ]]
#model="FortiGate-200F"
end ]]
+ (( i < count ))
+ local extract_location=reports/10.10.10.10/misc/fw3.cfg
+ cat -n reports/203.0.113.25/cisco/dmz-fw2-backup.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ [[ extract =~ ^(search|s)$ ]]
+ [[ extract == \h\e\l\p ]]
+ [[ extract == \d\e\b\u\g ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ [[ extract == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ ((  count == 0  ))

+ IFS==
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ read -r key value
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
config firewall address
+ newline
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
+ local count=1
  set comment "Captain America’s secure endpoint"
+ (( i = 0 ))
 next
+ (( i < count ))
+ output_dir=reports/192.168.2.12/fortinet
+ [[ true == true ]]
+ [[ ! -d reports/192.168.2.12/fortinet ]]
+ echo
+ (( i++ ))
+ (( i < count ))
++ tr -d '\r'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console ]]
+ case "${target_file}" in
+ [[ true == true ]]
++ echo -e --verbose
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console ]]
++ echo -e --config=.cache/resources/misc/fw1.cfg
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--branch-isr-02.cfg.console
++ grep -v '^\s*$'
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--dmz-fw2-backup.cfg.console
+ [[ true == true ]]
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
++ sed -e '1s|^\(-\)\{1,\}||'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-campus-core.cfg.console
+ [[ logger =~ ^(config|c)$ ]]
end'
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ newline
+ [[ logger =~ ^(logger|l)$ ]]
+ local count=1
+ result=0
+ (( i = 0 ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n {
+ [[ logger =~ ^(platform|p)$ ]]
++ command -v -- ./scripts/network-extract.shell
  "vendor": "fortinet",
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ (( i < count ))
+ for xitem in "${@}"
+ echo
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ grep -v '^#'
+ [[ true == true ]]
+ (( i++ ))
++ export targets_location=targets
+ (( i < count ))
++ printf '%*s' 12 ''
++ targets_location=targets
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
++ export targets_logfile=logs/jobs/targets.jobs
+ print '{
++ targets_logfile=logs/jobs/targets.jobs
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
  "model": "FortiGate-200F",
  "version": "",

  "domain": ""
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n {
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'

#hostname="fg-branch-vpn-01"
+ newline
#model="FortiGate-60F"
  "hostname": "fg-campus-core"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end ]]
+ newline
++ IFS=,
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
++ echo 192.168.1.10
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Guardians-Relay"
  set subnet 192.168.0.1 255.255.255.255
  set comment "Backup uplink for Milano crew"
 next
end'
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.1.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/switch1.conf')
+ declare -a execute
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ true == true ]]
+ case "${target_file}" in
++ dirname -- ./scripts/network-extract.shell
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--dmz-fw2-backup.cfg.console
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ local count=1
  set alias "Wireless VLAN"
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
 next
+ [[ false == true ]]
+ newline
end
+ [[ true == true ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console ]]

+ local count=1
config firewall address
+ newline
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ (( i = 0 ))
  set comment "Guest WiFi node"
+ (( i < count ))
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console ]]
+ local count=1
+ echo
+ case "${target_file}" in
+ (( i = 0 ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ (( i < count ))
+ (( i++ ))
+ echo
+ (( i < count ))
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ false == true ]]
 next
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console ]]
+ [[ true == true ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console ]]
  set comment "Wanda’s chaos relay"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console ]]
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ case "${target_file}" in
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
++ echo -e --verbose
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+++ date +%s%N
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ case "${target_file}" in
+ [[ config =~ ^(config|c)$ ]]
++ echo -e --platform=cisco
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ [[ verbose =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw1.cfg
++ which awk
+ [[ config =~ ^(console|o)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
 next
+ [[ verbose =~ ^(console|o)$ ]]
end'
+ [[ config =~ ^(platform|p)$ ]]
+ result=0
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ verbose =~ ^(logger|l)$ ]]
  "model": "FortiGate-200F",
+ [[ config =~ ^(search|s)$ ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
  "version": "",
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ config == \h\e\l\p ]]
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ verbose == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
+ result=0
+ [[ -z '' ]]
+ exit 0
+ dry_run=false
+ [[ -z true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GmEuMnjHnP ]]
+ [[ -z '' ]]
+ export console_output=false
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.GmEuMnjHnP
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local first_search_entry=203.0.113.25
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
+ local last_search_entry=203.0.113.25
+ search_terms=()
+ declare -a search_terms
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list != *,* ]]
+++ base64
+ mapfile -t search_terms
+ result=0
  "domain": ""
+ exit 0
  "hostname": "fg-campus-core"
}
+ echo -e '                .cache/resources/misc/fw3.cfg'

#hostname="fg-campus-core"
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kc4bOPIr1N ]]
#model="FortiGate-200F"
+ newline

+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.kc4bOPIr1N
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ local count=1
+ result=0
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ] ]]
+ exit 0
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DFJwrBPHpD ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DFJwrBPHpD
config system interface
+ (( i = 0 ))
+ local count=1
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
+ ((  count == 0  ))
  set alias "Wireless VLAN"
 next
end
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'

+ (( i < count ))
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
config firewall address
+ echo
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ (( i++ ))
+ (( i < count ))
+ newline
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
  set comment "Guest WiFi node"
 next
end

config firewall address
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
+ local 'prompt_message=Enter configuration file to be parsed: '
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
+++ tr -dc a-zA-Z0-9
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Cap-HQ"
  set subnet 192.168.1.11 255.255.255.255
  set comment "Captain America’s secure endpoint"
 next
end'
++ echo -e --extract=reports/198.51.100.75/misc/fw1.cfg
++ tr -d '\r'
+ local SCRIPT_DIR=./scripts
+ local awk_bin=/usr/bin/awk
+ local script_filename=fortinet-configs.awk
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'awk_args=-v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ true == true ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10"'
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -z fortinet ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console ]]
+ local count=1
+ [[ verbose =~ ^(config|c)$ ]]
+ (( i = 0 ))
+ (( i < count ))
++ grep -v '^\s*$'
+ echo
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--dmz-fw2-backup.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ verbose =~ ^(console|o)$ ]]
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(extract|x)$ ]]
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ verbose =~ ^(logger|l)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
++ export divisor=MTc0ODc1MzQ4NTA2Njc0NzAwMAo
+ [[ verbose =~ ^(platform|p)$ ]]
++ divisor=MTc0ODc1MzQ4NTA2Njc0NzAwMAo
+ [[ verbose =~ ^(search|s)$ ]]
+ source ./scripts/devops-helpers.shell
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local verbose=true
++ [[ -n '' ]]
++ readonly __DEVOPS_HELPERS_SOURCED=1
++ __DEVOPS_HELPERS_SOURCED=1
+ IFS=' 	
'
+ newline 2
++ [[ 5 -lt 4 ]]
+ [[ -z '' ]]
+ debug=false
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ export console_output=false
+ [[ true == true ]]
+ console_output=false
++ alias parse-listings--helper=parse_listings__helper
++ grep -v '^#'
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -z '' ]]
+ script_helper=false
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list != *,* ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ mapfile -t search_terms
++ alias network-configs--helper=network_configs__helper
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console ]]
++ printf '%*s' 12 ''
++ which awk
++ alias network-extract--helper=network_extract__helper
+ [[ true == true ]]
+ local 'indent=            '
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fg-testing-config.cfg.console
+ newline
+ local count=2
+ local count=1
+ [[ platform =~ ^(logger|l)$ ]]
+ (( i = 0 ))
+ (( i = 0 ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--perimeter-fw1.cfg.console
+ echo
+ [[ platform =~ ^(platform|p)$ ]]
+ [[ -n reports/203.0.113.25/misc/fw1.cfg ]]
+ (( i++ ))
+ (( i < count ))
+ (( i < count ))
+ local target_platform=cisco
+ result=0
+ [[ platform =~ ^(search|s)$ ]]
+ echo
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ exit 0
+ [[ cfg == \c\f\g ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ platform == \h\e\l\p ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E2HUYU7u9w ]]
+ (( i < count ))
+ [[ platform == \v\e\r\b\o\s\e ]]
+ echo
+ alias parse-cisco=main
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.E2HUYU7u9w
+ final_output=reports/203.0.113.25/misc/fw1.cfg
+ message '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ (( i++ ))
+ for xitem in "${@}"
+ [[ -n /usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \ ]]
+ (( i < count ))
+ local 'message=/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ [[ -z x ]]
+ extract_location=reports/203.0.113.25/misc/fw1.cfg
+ echo -e '/usr/bin/awk -v targets="192.168.1.10, ... ,192.168.1.10" \'
+ export logs_location=logs
+ logs_location=logs
+ mkdir -p logs/console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/switch1.conf'
+ [[ -n                 .cache/resources/misc/switch1.conf ]]
+ local 'message=                .cache/resources/misc/switch1.conf'
+ IFS==
+ echo -e '                .cache/resources/misc/switch1.conf'
+ read -r key value
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print '{
+ [[ true == true ]]
+ (( i++ ))
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
+ (( i < count ))
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end
+ message 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'

+ [[ -n Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ] ]]
config firewall address
 edit "Wanda-Field"
+ local 'message=Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
  set subnet 192.168.100.100 255.255.255.255
+ [[ extract =~ ^(config|c)$ ]]
  set comment "Wanda’s chaos relay"
+ echo -e 'Configuration File [ reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg ]'
 next
end'
+ [[ extract =~ ^(console|o)$ ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/198.51.100.75/misc/fw1.cfg
+ [[ -n {
+ [[ extract =~ ^(logger|l)$ ]]
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ [[ extract =~ ^(platform|p)$ ]]
  "hostname": "fg-campus-core"
}
+ [[ extract =~ ^(search|s)$ ]]

#hostname="fg-campus-core"
+ [[ extract == \h\e\l\p ]]
#model="FortiGate-200F"
+ [[ extract == \d\e\b\u\g ]]

+ [[ extract == \d\r\y\-\r\u\n ]]
config system interface
+ [[ extract == \v\e\r\b\o\s\e ]]
 edit "wifi"
+ for xitem in "${@}"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
+ IFS==
+ newline
end

+ read -r key value
config firewall address
+ local count=1
 edit "Titan-WLAN-Host"
+ (( i = 0 ))
  set subnet 192.168.100.100 255.255.255.255
+ (( i < count ))
  set comment "Guest WiFi node"
 next
+ echo
end

config firewall address
+ (( i++ ))
 edit "Wanda-Field"
+ (( i < count ))
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end ]]
+ cat -n reports/192.168.0.1/fortinet/fg-branch-vpn-01.cfg
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config system interface
 edit "wifi"
  set ip 192.168.100.100 255.255.255.0
  set alias "Wireless VLAN"
 next
end

+ newline 2
config firewall address
 edit "Titan-WLAN-Host"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Guest WiFi node"
 next
end

config firewall address
+ sed '1{/^[[:space:]]*$/d;}'
 edit "Wanda-Field"
  set subnet 192.168.100.100 255.255.255.255
  set comment "Wanda’s chaos relay"
 next
end'
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ tr -d '\r'
+ message 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ] ]]
+ local first_search_entry=192.168.2.12
+ local 'message=Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ local last_search_entry=192.168.2.12
+ echo -e 'Configuration File [ reports/192.168.1.11/fortinet/fg-campus-core.cfg ]'
+ result=0
++ dirname reports/203.0.113.25/misc/fw1.cfg
+ local 'target_search_range=192.168.2.12, ... ,192.168.2.12'
+ exit 0
+ newline
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dc2UNaCmV5 ]]
+ local count=1
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.dc2UNaCmV5
+ (( i = 0 ))
++ /usr/bin/awk -v targets=192.168.1.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/switch1.conf
+ (( i < count ))
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-configs--ips.list ]'
+ echo
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ ((  count == 0  ))
+ cat -n reports/192.168.1.11/fortinet/fg-campus-core.cfg
+ print 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ [[ -n Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1) ]]
+ echo -en 'Search Listing: [ 192.168.2.12, ... ,192.168.2.12 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ grep -v '^\s*$'
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
++ IFS=,
++ echo 192.168.2.12
++ grep -v '^#'
+ newline
++ sed -e '1s|^\(-\)\{1,\}||'
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-campus-core.cfg')
+ local count=1
+ declare -a execute
+ script_filename=network-extract.shell
+ (( i = 0 ))
+ (( i < count ))
+ echo
++ echo -e --platform=cisco
+ script_filename=network-extract
+ (( i++ ))
+ (( i < count ))
+ export network_extract__console=logs/console/network-extract.console
+ local 'extracted_configuration={
+ network_extract__console=logs/console/network-extract.console
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ touch logs/console/network-extract.console
+ [[ -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]]
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ cfg == \c\f\g ]]
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ final_output=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ extract_location=reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/203.0.113.25/misc
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ [[ ! -d reports/203.0.113.25/misc ]]
+ result=0
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgJRiJPTmO ]]
+ newline 2
+ [[ -n {
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.fgJRiJPTmO
  "vendor": "cisco",
  "model": "",
  "version": "",
+ result=0
  "domain": "",
+ exit 0
  "hostname": ""
}

+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mKGsJ8vydC ]]
object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.mKGsJ8vydC
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ which awk
+ message 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.100.100/fortinet/fg-campus-core.cfg ]'
+ newline
+ newline
+ local count=1
+ local count=1
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ [[ false == true ]]
+ (( i < count ))
+ [[ true == true ]]
++ dirname reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
+ cat -n reports/192.168.100.100/fortinet/fg-campus-core.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
++ command -v -- ./scripts/network-extract.shell
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
+ result=0
  "domain": "",
  "hostname": ""
}
+ [[ -n {

  "vendor": "cisco",
object-group network Wakanda-Core
  "model": "",
+ local first_search_entry=198.51.100.75
 description National Core Routing Zone
  "version": "",
 network-object host 192.168.1.10
+ local last_search_entry=198.51.100.75
 network-object host 10.0.2.3
  "domain": "",
 network-object 10.0.0.0 255.255.255.0'
  "hostname": ""
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
}

+ [[ logger =~ ^(config|c)$ ]]
interface Vlan20
+ [[ true == true ]]
 ip address 192.168.1.10 255.255.255.0 ]]
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0 ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Wakanda-Core
 description National Core Routing Zone
 network-object host 192.168.1.10
 network-object host 10.0.2.3
 network-object 10.0.0.0 255.255.255.0'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ [[ logger =~ ^(console|o)$ ]]
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ logger =~ ^(logger|l)$ ]]
+ newline
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ local count=1
+ [[ logger =~ ^(platform|p)$ ]]
+ (( i = 0 ))
+ (( i < count ))
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ echo
+ IFS==
+ (( i++ ))
+ read -r key value
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ (( i < count ))
+ [[ platform =~ ^(config|c)$ ]]
+ [[ -z .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -z fortinet ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ 6 -eq 0 ]]
+ [[ true == true ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/t/tmp.uadwfasopp/network-configs--ips.list =~ ^-*(h|help)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ main --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list --config=.cache/resources/misc/fw3.cfg --extract=reports/203.0.113.25/misc/fw3.cfg --platform=cisco --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console --verbose
+ local target_platform=cisco
+ local awk_bin=/usr/bin/awk
+ [[ platform =~ ^(search|s)$ ]]
+ newline
+ echo
+ [[ platform == \h\e\l\p ]]
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
+ [[ platform == \d\e\b\u\g ]]
+ (( i++ ))
+ print '{
+ (( i < count ))
+ [[ platform == \d\r\y\-\r\u\n ]]
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
+ oIFS=' 	
  "vendor": "cisco",
+ local count=1
  "model": "",
+ [[ platform == \v\e\r\b\o\s\e ]]
'
  "version": "",
+ for xitem in "${@}"
+ [[ false == true ]]
+ (( i = 0 ))
+ for xitem in "${@}"
  "domain": "",
+ IFS==
+ (( i < count ))
  "hostname": ""
+ IFS==
}
+ read -r key value
+ echo
+ read -r key value

+ (( i++ ))
+ [[ true == true ]]
interface Vlan20
+ (( i < count ))
 ip address 192.168.1.10 255.255.255.0'
+ message 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ [[ -n Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet ) ]]
+ local 'message=Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ echo -e 'Target Config: [ .cache/resources/fortinet/fg-branch-vpn-01.cfg ] ( fortinet )'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
+ [[ -n {
+ output_dir=reports/203.0.113.25/fortinet
  "vendor": "cisco",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console ]]
  "model": "",
++ dirname -- ./scripts/network-extract.shell
  "version": "",
  "domain": "",
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
  "hostname": ""
+ ls -al --color=auto .cache/resources/fortinet/fg-branch-vpn-01.cfg
}

interface Vlan20
 ip address 192.168.1.10 255.255.255.0 ]]
+ echo -en '{
+ [[ ! -d reports/203.0.113.25/fortinet ]]
  "vendor": "cisco",
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console ]]
  "model": "",
  "version": "",
  "domain": "",
+ case "${target_file}" in
  "hostname": ""
}

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
interface Vlan20
 ip address 192.168.1.10 255.255.255.0'
+ sed '1{/^[[:space:]]*$/d;}'
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'indent=            '
+ [[ true == true ]]
+ [[ false == true ]]
++ command -v -- ./scripts/network-extract.shell
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ [[ -n reports/192.168.2.12/misc/fw1.cfg ]]
++ echo -e --verbose
+ (( i++ ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console ]]
+ (( i < count ))
+ [[ cfg == \c\f\g ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ final_output=reports/192.168.2.12/misc/fw1.cfg
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ extract_location=reports/192.168.2.12/misc/fw1.cfg
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console ]]
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ case "${target_file}" in
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.puQhMHXFSq/network-extract--fg-branch-vpn-01.cfg.console
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-campus-core.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-campus-core.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-campus-core.cfg'
+ echo -e '                .cache/resources/fortinet/fg-campus-core.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ newline 2
++ sed -e '1s|^\(-\)\{1,\}||'
++ echo -e --search=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ [[ true == true ]]
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ message 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ dirname reports/192.168.2.12/misc/fw1.cfg
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.1.10/misc/fw3.cfg
++ dirname -- ./scripts/network-extract.shell
++ sed -e '1s|^\(-\)\{1,\}||'
++ sed -e '1s|^\(-\)\{1,\}||'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-campus-core.cfg
+ message 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ [[ -n Configuration File [ reports/192.168.1.10/misc/switch1.conf ] ]]
+ local 'message=Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ echo -e 'Configuration File [ reports/192.168.1.10/misc/switch1.conf ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ cat -n reports/192.168.1.10/misc/switch1.conf
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.jXV4TeVO3A/network-extract--fg-campus-core.cfg.console
++ which awk
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ [[ verbose == \h\e\l\p ]]
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ result=0
+ local verbose=true
+ exit 0
+ [[ -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]]
+ output_dir=reports/192.168.2.12/misc
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z8j0IreMWk ]]
+ IFS=' 	
+ local SCRIPT_DIR=./scripts
+ [[ cfg == \c\f\g ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.z8j0IreMWk
'
+ [[ ! -d reports/192.168.2.12/misc ]]
+ final_output=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ [[ -z '' ]]
+ local script_filename=fortinet-configs.awk
+ extract_location=reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
+ debug=false
+ [[ true == true ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ [[ -z '' ]]
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ dry_run=false
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ [[ -z true ]]
+ [[ -z '' ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console ]]
+ export console_output=false
+ [[ logger =~ ^(config|c)$ ]]
+ console_output=false
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console ]]
+ [[ logger =~ ^(console|o)$ ]]
+ [[ -z '' ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ script_helper=false
+ case "${target_file}" in
+ [[ logger =~ ^(logger|l)$ ]]
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.NI8DIKFSS3/network-extract--fg-campus-core.cfg.console
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ search =~ ^(config|c)$ ]]
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ search_terms=()
+ [[ search =~ ^(console|o)$ ]]
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ declare -a search_terms
+ [[ search =~ ^(extract|x)$ ]]
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]]
+ [[ search =~ ^(logger|l)$ ]]
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list != *,* ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ search =~ ^(platform|p)$ ]]
+ mapfile -t search_terms
+ [[ logger == \h\e\l\p ]]
+ [[ search =~ ^(search|s)$ ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ local search_pattern=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list
+ [[ logger == \v\e\r\b\o\s\e ]]
+ [[ search == \h\e\l\p ]]
+ [[ search == \d\e\b\u\g ]]
+ [[ search == \d\r\y\-\r\u\n ]]
+ for xitem in "${@}"
+ [[ search == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ IFS==
+ read -r key value
++ dirname reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ command -v -- ./scripts/network-extract.shell
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ which awk
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ result=0
+ newline
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JPNUPz4DZa ]]
+ local count=1
+ local 'extracted_configuration={
+ (( i = 0 ))
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.JPNUPz4DZa
+ (( i < count ))
  "vendor": "fortinet",
+ echo
  "model": "FortiGate-200F",
  "version": "",
+ (( i++ ))
  "domain": ""
+ (( i < count ))
  "hostname": "fg-campus-core"
}

++ IFS=,
++ tr -d '\r'
++ echo 203.0.113.25
#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ false == true ]]
+ [[ true == true ]]
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
  "hostname": "fg-campus-core"
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console ]]
}
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console ]]
++ echo -e --config=.cache/resources/misc/fw3.cfg
++ dirname -- ./scripts/network-extract.shell
#hostname="fg-campus-core"
+ case "${target_file}" in
#model="FortiGate-200F"

++ echo -e --verbose
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
config firewall address
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end ]]
+ declare -a execute
++ grep -v '^\s*$'
++ sed -e '1s|^\(-\)\{1,\}||'
+ output_dir=reports/198.51.100.75/fortinet
++ sed -e '1s|^\(-\)\{1,\}||'
+ [[ ! -d reports/198.51.100.75/fortinet ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uM5scrvKo7 ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uM5scrvKo7
++ grep -v '^#'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
++ which awk
  set comment "Vision’s quantum channel"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-200F",
  "version": "",
  "domain": ""
  "hostname": "fg-campus-core"
}

#hostname="fg-campus-core"
#model="FortiGate-200F"

config firewall address
 edit "Vision-Link"
  set subnet 192.168.2.12 255.255.255.255
  set comment "Vision’s quantum channel"
 next
end'
++ command -v -- ./scripts/network-extract.shell
+ sed '1{/^[[:space:]]*$/d;}'
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ true == true ]]
++ IFS=,
++ echo 203.0.113.25
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--fw3.cfg.console
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ declare -a execute
+ [[ config =~ ^(config|c)$ ]]
+ local target_config=.cache/resources/misc/fw3.cfg
+ [[ config =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(config|c)$ ]]
+ [[ config =~ ^(extract|x)$ ]]
+ [[ config =~ ^(logger|l)$ ]]
+ [[ config =~ ^(platform|p)$ ]]
+ [[ config =~ ^(search|s)$ ]]
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ config == \h\e\l\p ]]
+ [[ config == \d\e\b\u\g ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ [[ config == \d\r\y\-\r\u\n ]]
+ [[ config == \v\e\r\b\o\s\e ]]
+ [[ verbose =~ ^(logger|l)$ ]]
+ for xitem in "${@}"
+ [[ verbose =~ ^(platform|p)$ ]]
+ [[ verbose =~ ^(search|s)$ ]]
+ IFS==
+ [[ verbose == \h\e\l\p ]]
+ read -r key value
++ which awk
+ [[ verbose == \d\e\b\u\g ]]
+ [[ verbose == \d\r\y\-\r\u\n ]]
+ [[ verbose == \v\e\r\b\o\s\e ]]
+ local verbose=true
+ IFS=' 	
'
+ [[ -z '' ]]
+ debug=false
++ dirname -- ./scripts/network-extract.shell
+ [[ -z '' ]]
+ dry_run=false
+ [[ -z true ]]
+ [[ -z '' ]]
+ export console_output=false
+ console_output=false
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console ]]
+ local first_search_entry=10.10.10.10
+ local last_search_entry=10.10.10.10
+ [[ -z '' ]]
+ local 'target_search_range=10.10.10.10, ... ,10.10.10.10'
+ script_helper=false
+ [[ true == true ]]
+ [[ false == true ]]
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ [[ true == true ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]]
+ local awk_bin=/usr/bin/awk
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list != *,* ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ mapfile -t search_terms
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ which awk
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console ]]
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ case "${target_file}" in
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-configs--ips.list ]'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.sbHotf2C4E/network-extract--switch1.conf.console
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ [[ -n Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1) ]]
+ echo -en 'Search Listing: [ 10.10.10.10, ... ,10.10.10.10 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ message 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ [[ -n Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ] ]]
+ local 'message=Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ echo -e 'Configuration File [ reports/192.168.2.12/fortinet/fg-campus-core.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ local 'indent=            '
+ (( i < count ))
+ cat -n reports/192.168.2.12/fortinet/fg-campus-core.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
++ echo -e --extract=reports/203.0.113.25/misc/fw3.cfg
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ local SCRIPT_DIR=./scripts
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ local script_filename=fortinet-configs.awk
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local script_filepath=./scripts/extract/fortinet-configs.awk
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ [[ ! -f ./scripts/extract/fortinet-configs.awk ]]
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
++ tr -d '\r'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ local awk_bin=/usr/bin/awk
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local count=1
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ result=0
+ exit 0
++ grep -v '^\s*$'
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTdnLPdGdm ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.DTdnLPdGdm
++ IFS=,
++ echo 192.168.2.12
+ execute=('/usr/bin/awk' '-v' 'targets=192.168.2.12' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
++ which awk
++ grep -v '^#'
+ declare -a execute
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
++ printf '%*s' 12 ''
+ local 'indent=            '
+ result=0
+ exit 0
+ [[ true == true ]]
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.66EllUqzrL ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.66EllUqzrL
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
++ which awk
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ extract =~ ^(config|c)$ ]]
+ [[ false == true ]]
+ [[ extract =~ ^(console|o)$ ]]
+ [[ true == true ]]
+ [[ extract =~ ^(extract|x)$ ]]
+ local extract_location=reports/203.0.113.25/misc/fw3.cfg
+ [[ extract =~ ^(logger|l)$ ]]
+ [[ extract =~ ^(platform|p)$ ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
+ [[ extract =~ ^(search|s)$ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract == \h\e\l\p ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
+ [[ extract == \d\e\b\u\g ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console ]]
+ [[ extract == \d\r\y\-\r\u\n ]]
+ case "${target_file}" in
+ [[ extract == \v\e\r\b\o\s\e ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
+ for xitem in "${@}"
+ IFS==
+ read -r key value
+ [[ -n reports/10.10.10.10/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/10.10.10.10/misc/fw3.cfg
+ extract_location=reports/10.10.10.10/misc/fw3.cfg
+ local first_search_entry=198.51.100.75
+ local last_search_entry=198.51.100.75
+ local 'target_search_range=198.51.100.75, ... ,198.51.100.75'
+ [[ true == true ]]
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ] ]]
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-configs--ips.list ]'
+ local count=1
+ ((  count == 0  ))
+ print 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ [[ -n Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1) ]]
+ echo -en 'Search Listing: [ 198.51.100.75, ... ,198.51.100.75 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw1.cfg ]]
+ [[ -z cisco ]]
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ [[ -n Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco ) ]]
+ local 'message=Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw1.cfg ] ( cisco )'
+ ls -al --color=auto .cache/resources/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="192.168.2.12, ... ,192.168.2.12"'
++ IFS=,
+ local 'base_cmd=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12"'
++ echo 198.51.100.75
++ dirname reports/10.10.10.10/misc/fw3.cfg
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/fortinet-configs.awk' '.cache/resources/fortinet/fg-branch-vpn-01.cfg')
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
+ declare -a execute
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

++ echo -e --platform=cisco
object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access ]]
++ sed -e '1s|^\(-\)\{1,\}||'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
++ which awk
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ newline

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ local count=1
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ (( i = 0 ))

object network Krypton-Gateway
 host 203.0.113.25
 description Secure NAT boundary for cloud access'
+ (( i < count ))
+ [[ true == true ]]
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ -n {
  "vendor": "cisco",
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
  "model": "",
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
  "version": "",
  "domain": "",
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
  "hostname": ""
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
}

+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console ]]
object-group network Krypton-Cloud
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
 description Cloud-facing external nodes
+ case "${target_file}" in
 network-object host 198.51.100.75
 network-object host 203.0.113.25

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fg-campus-core.cfg.console
object network Krypton-Gateway
 host 203.0.113.25
+ message '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
 description Secure NAT boundary for cloud access ]]
+ [[ -n /usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \ ]]
+ local 'message=/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
+ echo -en '{
+ echo -e '/usr/bin/awk -v targets="192.168.2.12, ... ,192.168.2.12" \'
  "vendor": "cisco",
  "model": "",
+ output_dir=reports/10.10.10.10/misc
  "version": "",
+ [[ ! -d reports/10.10.10.10/misc ]]
+ sed '1{/^[[:space:]]*$/d;}'
  "domain": "",
  "hostname": ""
}
+ message '             -f ./scripts/extract/cisco-configs.awk \'

+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 198.51.100.75
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
 network-object host 203.0.113.25

object network Krypton-Gateway
 host 203.0.113.25
+ message '                .cache/resources/misc/fw1.cfg'
 description Secure NAT boundary for cloud access'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ result=0
+ [[ -n {
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ [[ platform =~ ^(config|c)$ ]]
+ [[ platform =~ ^(console|o)$ ]]
+ [[ platform =~ ^(extract|x)$ ]]
+ [[ platform =~ ^(logger|l)$ ]]
+ [[ platform =~ ^(platform|p)$ ]]
+ local target_platform=cisco
+ [[ platform =~ ^(search|s)$ ]]
+ [[ platform == \h\e\l\p ]]
+ [[ platform == \d\e\b\u\g ]]
+ [[ platform == \d\r\y\-\r\u\n ]]
+ [[ platform == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
++ command -v -- ./scripts/network-extract.shell
+ IFS==
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
++ /usr/bin/awk -v targets=192.168.2.12 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ [[ -n {
+ [[ -n reports/198.51.100.75/misc/fw1.cfg ]]
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ [[ cfg == \c\f\g ]]
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ final_output=reports/198.51.100.75/misc/fw1.cfg
}

+ extract_location=reports/198.51.100.75/misc/fw1.cfg
#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config firewall address
 edit "Public-Test"
  set subnet 203.0.113.25 255.255.255.255
  set comment "Public NAT exposure for Red Skull trap"
 next
end'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
++ dirname -- ./scripts/network-extract.shell
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aCIIlOOyq6 ]]
+ local count=2
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.aCIIlOOyq6
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
++ printf '%*s' 12 ''
+ message 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw1.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ echo -e --logger=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ (( i < count ))
++ dirname reports/198.51.100.75/misc/fw1.cfg
+ local 'indent=            '
+ cat -n reports/203.0.113.25/misc/fw1.cfg
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/fortinet-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/fortinet-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ message '             -f ./scripts/extract/fortinet-configs.awk \'
+ [[ -n              -f ./scripts/extract/fortinet-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/fortinet-configs.awk \'
+ echo -e '             -f ./scripts/extract/fortinet-configs.awk \'
+ message '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ [[ -n                 .cache/resources/fortinet/fg-branch-vpn-01.cfg ]]
+ local 'message=                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ echo -e '                .cache/resources/fortinet/fg-branch-vpn-01.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local script_filename=cisco-configs.awk
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/fortinet-configs.awk .cache/resources/fortinet/fg-branch-vpn-01.cfg
+ output_dir=reports/198.51.100.75/misc
+ newline 2
+ [[ ! -d reports/198.51.100.75/misc ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

++ which awk
object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ [[ logger =~ ^(config|c)$ ]]
+ newline
+ [[ logger =~ ^(console|o)$ ]]
+ [[ logger =~ ^(extract|x)$ ]]
+ local count=1
+ (( i = 0 ))
+ [[ logger =~ ^(logger|l)$ ]]
+ (( i < count ))
+ echo
+ (( i++ ))
+ local target_logfile=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ logger =~ ^(platform|p)$ ]]
+ [[ false == true ]]
+ [[ true == true ]]
+ [[ logger =~ ^(search|s)$ ]]
+ [[ logger == \h\e\l\p ]]
+ [[ logger == \d\e\b\u\g ]]
+ [[ logger == \d\r\y\-\r\u\n ]]
+ [[ logger == \v\e\r\b\o\s\e ]]
+ for xitem in "${@}"
+ IFS==
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ read -r key value
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12 ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Metropolis-Internal
 description Core internal LAN for application clusters
 network-object host 10.0.2.3
 network-object 192.168.2.0 255.255.255.0
 network-object host 192.168.2.12'
++ dirname -- ./scripts/network-extract.shell
++ echo -e --verbose
++ sed -e '1s|^\(-\)\{1,\}||'
+ (( i++ ))
++ IFS=,
+ (( i < count ))
+ echo
++ echo 10.10.10.10
+ (( i++ ))
+ (( i < count ))
+ local SCRIPT_DIR=./scripts
+ local 'extracted_configuration={
+ [[ true == true ]]
+ [[ true == true ]]
  "vendor": "fortinet",
+ local script_filename=cisco-configs.awk
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ local script_filepath=./scripts/extract/cisco-configs.awk
  "domain": ""
  "hostname": "fg-branch-vpn-01"
+ execute=('/usr/bin/awk' '-v' 'targets=10.10.10.10' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
}
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ declare -a execute
#config-version=FGT_60F-v7.2.5.F-build1517-230421
+ newline 2

+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
config system interface
+ message 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console ]]
 edit "wan1"
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ [[ -n Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ] ]]
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console ]]
  set ip 198.51.100.75 255.255.255.0
+ local 'message=Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ local count=2
  set alias "Branch ISP"
+ case "${target_file}" in
 next
+ (( i = 0 ))
end
+ (( i < count ))

+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw1.cfg.console
+ echo -e 'Configuration File [ reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg ]'
+ echo
config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
+ newline
+ (( i++ ))
  set comment "Branch NAT"
+ local count=1
+ (( i < count ))
+ (( i = 0 ))
 next
+ (( i < count ))
+ echo
end'
+ echo
+ (( i++ ))
+ (( i < count ))
+ result=0
+ [[ -n {
+ (( i++ ))
  "vendor": "fortinet",
+ (( i < count ))
  "model": "FortiGate-60F",
+ [[ true == true ]]
++ which awk
+ cat -n reports/203.0.113.25/fortinet/fg-branch-vpn-01.cfg
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
+ message 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
  set ip 198.51.100.75 255.255.255.0
++ which awk
+ [[ -n Configuration File [ reports/192.168.2.12/misc/fw1.cfg ] ]]
  set alias "Branch ISP"
+ local 'message=Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'
 next
end
+ echo -e 'Configuration File [ reports/192.168.2.12/misc/fw1.cfg ]'

+ newline
config firewall address
+ local count=1
 edit "Branch-Public"
+ (( i = 0 ))
  set subnet 198.51.100.75 255.255.255.255
+ (( i < count ))
  set comment "Branch NAT"
 next
+ echo
end ]]
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/192.168.2.12/misc/fw1.cfg
+ print '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
  set alias "Branch ISP"
 next
end

config firewall address
 edit "Branch-Public"
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
 next
+ [[ verbose =~ ^(config|c)$ ]]
end'
+ [[ verbose =~ ^(console|o)$ ]]
+ [[ verbose =~ ^(extract|x)$ ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ verbose =~ ^(logger|l)$ ]]
+ [[ -n {
  "vendor": "fortinet",
+ [[ verbose =~ ^(platform|p)$ ]]
  "model": "FortiGate-60F",
+ [[ verbose =~ ^(search|s)$ ]]
  "version": "v7.2.5.F",
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
+ [[ verbose == \h\e\l\p ]]
#config-version=FGT_60F-v7.2.5.F-build1517-230421

+ [[ verbose == \d\e\b\u\g ]]
config system interface
+ [[ verbose == \d\r\y\-\r\u\n ]]
 edit "wan1"
+ [[ verbose == \v\e\r\b\o\s\e ]]
  set ip 198.51.100.75 255.255.255.0
+ local verbose=true
  set alias "Branch ISP"
 next
+ IFS=' 	
'
end
+ [[ -z '' ]]

+ debug=false
config firewall address
 edit "Branch-Public"
+ [[ -z '' ]]
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ dry_run=false
 next
end ]]
+ [[ -z true ]]
+ [[ -z '' ]]
+ echo -en '{
  "vendor": "fortinet",
  "model": "FortiGate-60F",
  "version": "v7.2.5.F",
+ export console_output=false
  "domain": ""
  "hostname": "fg-branch-vpn-01"
}

#hostname="fg-branch-vpn-01"
#model="FortiGate-60F"
#config-version=FGT_60F-v7.2.5.F-build1517-230421

config system interface
 edit "wan1"
  set ip 198.51.100.75 255.255.255.0
+ console_output=false
  set alias "Branch ISP"
 next
end
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console ]]

config firewall address
+ [[ -z '' ]]
 edit "Branch-Public"
+ script_helper=false
  set subnet 198.51.100.75 255.255.255.255
  set comment "Branch NAT"
+ [[ false == true ]]
 next
end'
+ local 'prompt_message=Enter search pattern (IP address, CIDR, etc.): '
+ [[ -z /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ search_terms=()
+ declare -a search_terms
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]]
+ local awk_bin=/usr/bin/awk
+ [[ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list != *,* ]]
+ mapfile -t search_terms
+ local 'awk_args=-v targets="10.10.10.10, ... ,10.10.10.10"'
+ local 'base_cmd=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10"'
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e1K6KtXCDJ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.e1K6KtXCDJ
++ IFS=,
++ echo 198.51.100.75
++ printf '%*s' 12 ''
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ local 'indent=            '
+ execute=('/usr/bin/awk' '-v' 'targets=198.51.100.75' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw1.cfg')
+ [[ true == true ]]
+ declare -a execute
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ newline
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local count=1
+ case "${target_file}" in
+ (( i = 0 ))
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ newline
+ message '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ [[ -n /usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \ ]]
+ local 'message=/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ local count=1
++ tr -d '\r'
+ echo -e '/usr/bin/awk -v targets="10.10.10.10, ... ,10.10.10.10" \'
+ (( i = 0 ))
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ (( i < count ))
+ echo
+ message '                .cache/resources/misc/fw3.cfg'
+ (( i++ ))
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ (( i < count ))
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ newline 2
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ [[ false == true ]]
++ grep -v '^\s*$'
+ local count=1
+ [[ true == true ]]
+ local count=2
+ (( i = 0 ))
+ (( i = 0 ))
+ (( i < count ))
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ echo
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ echo
+ (( i < count ))
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ (( i++ ))
+ (( i < count ))
+ echo
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console ]]
+ (( i++ ))
+ case "${target_file}" in
+ (( i < count ))
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ [[ true == true ]]
++ which awk
++ grep -v '^#'
+ message 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ [[ -n Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/fortinet/fg-branch-vpn-01.cfg
++ /usr/bin/awk -v targets=10.10.10.10 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ [[ true == true ]]
+ local awk_bin=/usr/bin/awk
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'awk_args=-v targets="198.51.100.75, ... ,198.51.100.75"'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'base_cmd=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75"'
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fg-branch-vpn-01.cfg.console
+ local first_search_entry=203.0.113.25
+ local last_search_entry=203.0.113.25
+ local 'target_search_range=203.0.113.25, ... ,203.0.113.25'
+ [[ true == true ]]
+ [[ true == true ]]
+ message 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ [[ -n Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ] ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ local 'message=Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console ]]
+ echo -e 'Search Pattern: [ /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-configs--ips.list ]'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ local count=1
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console ]]
+ ((  count == 0  ))
+ case "${target_file}" in
+ print 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.nvYLoQj9IM/network-extract--fw1.cfg.console
+ [[ -n Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1) ]]
+ echo -en 'Search Listing: [ 203.0.113.25, ... ,203.0.113.25 ] (1)'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
++ printf '%*s' 12 ''
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'prompt_message=Enter configuration file to be parsed: '
+ [[ -z .cache/resources/misc/fw3.cfg ]]
+ [[ -z cisco ]]
+ local 'indent=            '
+ [[ true == true ]]
+ [[ true == true ]]
+ newline
+ newline
+ local count=1
+ (( i = 0 ))
+ local count=1
+ (( i < count ))
+ newline
+ echo
+ (( i = 0 ))
+ (( i++ ))
+ (( i < count ))
+ local count=1
+ echo
+ (( i = 0 ))
+ (( i < count ))
+ (( i < count ))
+ (( i++ ))
+ echo
+ message 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ (( i++ ))
+ (( i < count ))
+ [[ -n Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco ) ]]
+ (( i < count ))
+ local 'message=Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ echo -e 'Target Config: [ .cache/resources/misc/fw3.cfg ] ( cisco )'
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ false == true ]]
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ [[ true == true ]]
+ ls -al --color=auto .cache/resources/misc/fw3.cfg
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \ ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local 'message=/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ echo -e '/usr/bin/awk -v targets="198.51.100.75, ... ,198.51.100.75" \'
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw1.cfg'
+ [[ -n                 .cache/resources/misc/fw1.cfg ]]
+ local 'message=                .cache/resources/misc/fw1.cfg'
+ echo -e '                .cache/resources/misc/fw1.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
++ /usr/bin/awk -v targets=198.51.100.75 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw1.cfg
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hsFToqHskZ ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.hsFToqHskZ
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zes5mQZ2ot ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.zes5mQZ2ot
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT ]]
+ sed '1{/^[[:space:]]*$/d;}'
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object-group network Shield-WiFi
 description Shield-controlled wireless network
 network-object host 10.10.10.10
 network-object 192.168.100.0 255.255.255.0

object network Shield-WiFi-Alias
 host 10.10.10.10
 description Guest NAT'
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fg-branch-vpn-01.cfg.console
+ [[ -n reports/203.0.113.25/misc/fw3.cfg ]]
+ [[ cfg == \c\f\g ]]
+ final_output=reports/203.0.113.25/misc/fw3.cfg
+ extract_location=reports/203.0.113.25/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25
+ newline 2

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/10.10.10.10/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/10.10.10.10/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
++ dirname reports/203.0.113.25/misc/fw3.cfg
+ (( i < count ))
+ cat -n reports/10.10.10.10/misc/fw3.cfg
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ sed '1{/^[[:space:]]*$/d;}'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Krypton-Cloud
 description Cloud-facing external nodes
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge ]]
+ echo -en '{
+ result=0
  "vendor": "cisco",
+ exit 0
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELRhklINKB ]]

object-group network Krypton-Cloud
 description Cloud-facing external nodes
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.ELRhklINKB
 network-object host 198.51.100.75
 network-object host 203.0.113.25

object network External-Failover
 host 198.51.100.75
 description Secondary outbound route for edge'
+ output_dir=reports/203.0.113.25/misc
+ [[ ! -d reports/203.0.113.25/misc ]]
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ message 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ (( i < count ))
++ command -v -- ./scripts/network-extract.shell
+ [[ -n Configuration File [ reports/198.51.100.75/misc/fw1.cfg ] ]]
+ local 'message=Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ echo -e 'Configuration File [ reports/198.51.100.75/misc/fw1.cfg ]'
+ [[ false == true ]]
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/198.51.100.75/misc/fw1.cfg
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console ]]
+ local SCRIPT_PATH=./scripts/network-extract.shell
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
++ dirname -- ./scripts/network-extract.shell
+ newline
+ [[ true == true ]]
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ (( i++ ))
+ (( i < count ))
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ [[ false == true ]]
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.C0XqjDAH4s/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ local SCRIPT_DIR=./scripts
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console ]]
+ local script_filename=cisco-configs.awk
+ case "${target_file}" in
+ local script_filepath=./scripts/extract/cisco-configs.awk
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ [[ ! -f ./scripts/extract/cisco-configs.awk ]]
++ which awk
+ [[ true == true ]]
+ result=0
+ exit 0
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKcEqLBqkA ]]
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.PKcEqLBqkA
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.EMvosdFzJb/network-extract--fw1.cfg.console
++ IFS=,
++ echo 203.0.113.25
+ execute=('/usr/bin/awk' '-v' 'targets=203.0.113.25' '-f' './scripts/extract/cisco-configs.awk' '.cache/resources/misc/fw3.cfg')
+ declare -a execute
++ which awk
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlB7cwHCVY ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.RlB7cwHCVY
+ local awk_bin=/usr/bin/awk
+ local 'awk_args=-v targets="203.0.113.25, ... ,203.0.113.25"'
+ local 'base_cmd=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25"'
++ printf '%*s' 12 ''
+ local 'indent=            '
+ [[ true == true ]]
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ message 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ [[ -n Executing AWK script [ ./scripts/extract/cisco-configs.awk ] ]]
+ local 'message=Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ echo -e 'Executing AWK script [ ./scripts/extract/cisco-configs.awk ]'
+ message '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ [[ -n /usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \ ]]
+ local 'message=/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ echo -e '/usr/bin/awk -v targets="203.0.113.25, ... ,203.0.113.25" \'
+ message '             -f ./scripts/extract/cisco-configs.awk \'
+ [[ -n              -f ./scripts/extract/cisco-configs.awk \ ]]
+ local 'message=             -f ./scripts/extract/cisco-configs.awk \'
+ echo -e '             -f ./scripts/extract/cisco-configs.awk \'
+ message '                .cache/resources/misc/fw3.cfg'
+ [[ -n                 .cache/resources/misc/fw3.cfg ]]
+ local 'message=                .cache/resources/misc/fw3.cfg'
+ echo -e '                .cache/resources/misc/fw3.cfg'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
++ /usr/bin/awk -v targets=203.0.113.25 -f ./scripts/extract/cisco-configs.awk .cache/resources/misc/fw3.cfg
+ local 'extracted_configuration={
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ result=0
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ print '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ [[ -n {
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5 ]]
+ echo -en '{
  "vendor": "cisco",
  "model": "",
  "version": "",
  "domain": "",
  "hostname": ""
}

object-group network Panther-Edge
 description Internet-facing proxy systems
 network-object host 203.0.113.25
 network-object host 172.16.0.5'
+ sed '1{/^[[:space:]]*$/d;}'
+ newline 2
+ local count=2
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ true == true ]]
+ message 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ [[ -n Configuration File [ reports/203.0.113.25/misc/fw3.cfg ] ]]
+ local 'message=Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ echo -e 'Configuration File [ reports/203.0.113.25/misc/fw3.cfg ]'
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ cat -n reports/203.0.113.25/misc/fw3.cfg
+ newline
+ local count=1
+ (( i = 0 ))
+ (( i < count ))
+ echo
+ (( i++ ))
+ (( i < count ))
+ [[ false == true ]]
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ [[ true == true ]]
+ print_file /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ [[ -n /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console ]]
+ local target_file=/var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ [[ -f /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console ]]
+ case "${target_file}" in
+ cat /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.uADwFasOPp/network-extract--fw3.cfg.console
+ result=0
+ exit 0
+ [[ -d /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pxyNyQePZT ]]
+ rm -rf /var/folders/vp/4k9xy96d7zx8lhmgrr4khsj80000gn/T/tmp.pxyNyQePZT
